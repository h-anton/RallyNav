
STM32H735G-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b144  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000017bc  0801b414  0801b414  0002b414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000044a  0801cbd0  0801cbd0  0002cbd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0801d01c  0801d01c  0002d01c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000050  0801d034  0801d034  0002d034  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  0801d084  0801d084  00057700  2**0
                  CONTENTS
  7 .ARM          00000000  0801d084  0801d084  00057700  2**0
                  CONTENTS
  8 .preinit_array 00000000  0801d084  0801d084  00057700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0801d084  0801d084  0002d084  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0801d098  0801d098  0002d098  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000110  24000000  0801d0a0  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          000076d8  24000110  0801d1b0  00030110  2**2
                  ALLOC
 13 ._user_heap_stack 00002000  240077e8  0801d1b0  000377e8  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00057700  2**0
                  CONTENTS, READONLY
 15 ExtFlashSection 00017700  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .comment      000000c2  00000000  00000000  0005772e  2**0
                  CONTENTS, READONLY
 17 .debug_info   000baca3  00000000  00000000  000577f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00015991  00000000  00000000  00112493  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003088  00000000  00000000  00127e28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 000034bd  00000000  00000000  0012aeb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00043277  00000000  00000000  0012e36d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   0005f6cf  00000000  00000000  001715e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00184991  00000000  00000000  001d0cb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  00008fb8  00000000  00000000  00355644  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001b962  00000000  00000000  0035e5fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 00000063  00000000  00000000  00379f5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	24000110 	.word	0x24000110
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0801b3fc 	.word	0x0801b3fc

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	24000114 	.word	0x24000114
 800030c:	0801b3fc 	.word	0x0801b3fc

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80003b0:	4901      	ldr	r1, [pc, #4]	; (80003b8 <vApplicationIdleHook+0x8>)
 80003b2:	2000      	movs	r0, #0
 80003b4:	f009 b8b4 	b.w	8009520 <vTaskSetApplicationTaskTag>
 80003b8:	08001631 	.word	0x08001631

080003bc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80003bc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80003be:	2064      	movs	r0, #100	; 0x64
 80003c0:	f007 fc6b 	bl	8007c9a <osDelay>
  for(;;)
 80003c4:	e7fb      	b.n	80003be <StartDefaultTask+0x2>
	...

080003c8 <SystemClock_Config>:
{
 80003c8:	b510      	push	{r4, lr}
 80003ca:	b09c      	sub	sp, #112	; 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80003cc:	224c      	movs	r2, #76	; 0x4c
 80003ce:	2100      	movs	r1, #0
 80003d0:	a809      	add	r0, sp, #36	; 0x24
 80003d2:	f01a f9f0 	bl	801a7b6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80003d6:	2220      	movs	r2, #32
 80003d8:	2100      	movs	r1, #0
 80003da:	a801      	add	r0, sp, #4
 80003dc:	f01a f9eb 	bl	801a7b6 <memset>
  HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 80003e0:	2004      	movs	r0, #4
 80003e2:	f005 ff8d 	bl	8006300 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 80003e6:	2300      	movs	r3, #0
 80003e8:	9300      	str	r3, [sp, #0]
 80003ea:	4b1b      	ldr	r3, [pc, #108]	; (8000458 <SystemClock_Config+0x90>)
 80003ec:	699a      	ldr	r2, [r3, #24]
 80003ee:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80003f2:	619a      	str	r2, [r3, #24]
 80003f4:	699a      	ldr	r2, [r3, #24]
 80003f6:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 80003fa:	9200      	str	r2, [sp, #0]
 80003fc:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80003fe:	699a      	ldr	r2, [r3, #24]
 8000400:	0491      	lsls	r1, r2, #18
 8000402:	d5fc      	bpl.n	80003fe <SystemClock_Config+0x36>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000404:	2201      	movs	r2, #1
 8000406:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800040a:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 44;
 800040c:	212c      	movs	r1, #44	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800040e:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000410:	941b      	str	r4, [sp, #108]	; 0x6c
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000412:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000416:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000418:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLM = 2;
 800041c:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = 2;
 800041e:	e9cd 3317 	strd	r3, r3, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000422:	230c      	movs	r3, #12
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000424:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000428:	e9cd 3419 	strd	r3, r4, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800042c:	f005 ffa6 	bl	800637c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000430:	2103      	movs	r1, #3
 8000432:	233f      	movs	r3, #63	; 0x3f
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000434:	2208      	movs	r2, #8
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000436:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000438:	9403      	str	r4, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800043a:	e9cd 3101 	strd	r3, r1, [sp, #4]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 800043e:	2340      	movs	r3, #64	; 0x40
 8000440:	e9cd 2304 	strd	r2, r3, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000444:	f44f 6280 	mov.w	r2, #1024	; 0x400
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000448:	9306      	str	r3, [sp, #24]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 800044a:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 800044e:	f006 fab1 	bl	80069b4 <HAL_RCC_ClockConfig>
}
 8000452:	b01c      	add	sp, #112	; 0x70
 8000454:	bd10      	pop	{r4, pc}
 8000456:	bf00      	nop
 8000458:	58024800 	.word	0x58024800

0800045c <PeriphCommonClock_Config>:
{
 800045c:	b500      	push	{lr}
 800045e:	b0af      	sub	sp, #188	; 0xbc
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000460:	2100      	movs	r1, #0
 8000462:	2298      	movs	r2, #152	; 0x98
 8000464:	a808      	add	r0, sp, #32
 8000466:	f01a f9a6 	bl	801a7b6 <memset>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 800046a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800046e:	2300      	movs	r3, #0
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000470:	4668      	mov	r0, sp
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8000472:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 8000476:	2205      	movs	r2, #5
 8000478:	2350      	movs	r3, #80	; 0x50
 800047a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  PeriphClkInitStruct.PLL2.PLL2P = 2;
 800047e:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000480:	e9cd 3304 	strd	r3, r3, [sp, #16]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000484:	9306      	str	r3, [sp, #24]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_2;
 8000486:	2380      	movs	r3, #128	; 0x80
 8000488:	9307      	str	r3, [sp, #28]
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 800048a:	2320      	movs	r3, #32
 800048c:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800048e:	f006 fd17 	bl	8006ec0 <HAL_RCCEx_PeriphCLKConfig>
}
 8000492:	b02f      	add	sp, #188	; 0xbc
 8000494:	f85d fb04 	ldr.w	pc, [sp], #4

08000498 <main>:
{
 8000498:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800049c:	b0a1      	sub	sp, #132	; 0x84

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800049e:	2210      	movs	r2, #16
 80004a0:	2100      	movs	r1, #0
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x24000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 80004a2:	f04f 5410 	mov.w	r4, #603979776	; 0x24000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80004a6:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80004a8:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80004aa:	f01a f984 	bl	801a7b6 <memset>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x70000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 80004ae:	271c      	movs	r7, #28
  HAL_MPU_Disable();
 80004b0:	f004 f892 	bl	80045d8 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 80004b4:	4bd6      	ldr	r3, [pc, #856]	; (8000810 <main+0x378>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004b6:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80004b8:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 80004bc:	2603      	movs	r6, #3
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 80004be:	e9cd 4314 	strd	r4, r3, [sp, #80]	; 0x50
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80004c2:	4bd4      	ldr	r3, [pc, #848]	; (8000814 <main+0x37c>)
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80004c4:	2400      	movs	r4, #0
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80004c6:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004c8:	f004 f8a4 	bl	8004614 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x70000000;
 80004cc:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004d0:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80004d2:	f88d 4057 	strb.w	r4, [sp, #87]	; 0x57
  MPU_InitStruct.BaseAddress = 0x70000000;
 80004d6:	9314      	str	r3, [sp, #80]	; 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80004d8:	f8ad 405a 	strh.w	r4, [sp, #90]	; 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80004dc:	f88d 504d 	strb.w	r5, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 80004e0:	f88d 7054 	strb.w	r7, [sp, #84]	; 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004e4:	f004 f896 	bl	8004614 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 80004e8:	2302      	movs	r3, #2
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004ea:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 80004ec:	f88d 6057 	strb.w	r6, [sp, #87]	; 0x57
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 80004f0:	f88d 304d 	strb.w	r3, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
 80004f4:	2316      	movs	r3, #22
 80004f6:	f88d 3054 	strb.w	r3, [sp, #84]	; 0x54
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80004fa:	f240 1301 	movw	r3, #257	; 0x101
 80004fe:	f8ad 305a 	strh.w	r3, [sp, #90]	; 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000502:	f004 f887 	bl	8004614 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000506:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800050a:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 800050c:	f88d 4057 	strb.w	r4, [sp, #87]	; 0x57
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000510:	9314      	str	r3, [sp, #80]	; 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8000512:	f8ad 405a 	strh.w	r4, [sp, #90]	; 0x5a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8000516:	2404      	movs	r4, #4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 8000518:	f88d 604d 	strb.w	r6, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800051c:	f88d 7054 	strb.w	r7, [sp, #84]	; 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000520:	f004 f878 	bl	8004614 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 8000524:	2319      	movs	r3, #25
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000526:	a813      	add	r0, sp, #76	; 0x4c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8000528:	f88d 404d 	strb.w	r4, [sp, #77]	; 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 800052c:	f88d 3054 	strb.w	r3, [sp, #84]	; 0x54
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000530:	f88d 6057 	strb.w	r6, [sp, #87]	; 0x57
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000534:	f88d 505a 	strb.w	r5, [sp, #90]	; 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000538:	f004 f86c 	bl	8004614 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 800053c:	4620      	mov	r0, r4
 800053e:	f004 f859 	bl	80045f4 <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000542:	4bb5      	ldr	r3, [pc, #724]	; (8000818 <main+0x380>)
 8000544:	695a      	ldr	r2, [r3, #20]
 8000546:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 800054a:	d111      	bne.n	8000570 <main+0xd8>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800054c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000550:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000554:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000558:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800055c:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000560:	695a      	ldr	r2, [r3, #20]
 8000562:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000566:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000568:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800056c:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 8000570:	4aa9      	ldr	r2, [pc, #676]	; (8000818 <main+0x380>)
 8000572:	6953      	ldr	r3, [r2, #20]
 8000574:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8000578:	d123      	bne.n	80005c2 <main+0x12a>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800057a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800057e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8000582:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000586:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800058a:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800058e:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8000592:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000594:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000598:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800059a:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800059e:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80005a0:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 80005a4:	d2f9      	bcs.n	800059a <main+0x102>
    } while(sets-- != 0U);
 80005a6:	3b20      	subs	r3, #32
 80005a8:	f113 0f20 	cmn.w	r3, #32
 80005ac:	d1f2      	bne.n	8000594 <main+0xfc>
 80005ae:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 80005b2:	6953      	ldr	r3, [r2, #20]
 80005b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005b8:	6153      	str	r3, [r2, #20]
 80005ba:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80005be:	f3bf 8f6f 	isb	sy
  HAL_Init();
 80005c2:	f003 ff65 	bl	8004490 <HAL_Init>
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005c6:	2400      	movs	r4, #0
  SystemClock_Config();
 80005c8:	f7ff fefe 	bl	80003c8 <SystemClock_Config>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80005cc:	2601      	movs	r6, #1
  PeriphCommonClock_Config();
 80005ce:	f7ff ff45 	bl	800045c <PeriphCommonClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80005d2:	2214      	movs	r2, #20
 80005d4:	2100      	movs	r1, #0
 80005d6:	a813      	add	r0, sp, #76	; 0x4c
 80005d8:	f01a f8ed 	bl	801a7b6 <memset>
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80005dc:	4b8f      	ldr	r3, [pc, #572]	; (800081c <main+0x384>)
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80005de:	f248 0108 	movw	r1, #32776	; 0x8008
 80005e2:	488f      	ldr	r0, [pc, #572]	; (8000820 <main+0x388>)
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80005e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80005e8:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
 80005ec:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80005f0:	f44f 6780 	mov.w	r7, #1024	; 0x400
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80005f4:	f042 0202 	orr.w	r2, r2, #2
  hltdc.Instance = LTDC;
 80005f8:	4d8a      	ldr	r5, [pc, #552]	; (8000824 <main+0x38c>)
  pLayerCfg.FBStartAdress = 0x70000000;
 80005fa:	f04f 0a05 	mov.w	sl, #5
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 80005fe:	f04f 0b18 	mov.w	fp, #24
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000602:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000606:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800060a:	f002 0202 	and.w	r2, r2, #2
 800060e:	9200      	str	r2, [sp, #0]
 8000610:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000612:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000616:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800061a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800061e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000622:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000626:	9201      	str	r2, [sp, #4]
 8000628:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800062a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800062e:	f042 0208 	orr.w	r2, r2, #8
 8000632:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000636:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800063a:	f002 0208 	and.w	r2, r2, #8
 800063e:	9202      	str	r2, [sp, #8]
 8000640:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000642:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000646:	f042 0210 	orr.w	r2, r2, #16
 800064a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800064e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000652:	f002 0210 	and.w	r2, r2, #16
 8000656:	9203      	str	r2, [sp, #12]
 8000658:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800065a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800065e:	f042 0201 	orr.w	r2, r2, #1
 8000662:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000666:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800066a:	f002 0201 	and.w	r2, r2, #1
 800066e:	9204      	str	r2, [sp, #16]
 8000670:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000672:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000676:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800067a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800067e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000682:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000686:	9205      	str	r2, [sp, #20]
 8000688:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800068a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800068e:	f042 0204 	orr.w	r2, r2, #4
 8000692:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000696:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800069a:	f002 0204 	and.w	r2, r2, #4
 800069e:	9206      	str	r2, [sp, #24]
 80006a0:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80006a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80006a6:	f042 0220 	orr.w	r2, r2, #32
 80006aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80006ae:	2200      	movs	r2, #0
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80006b0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006b4:	f003 0320 	and.w	r3, r3, #32
 80006b8:	9307      	str	r3, [sp, #28]
 80006ba:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOG, LCD_BL_CTRL_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80006bc:	f004 fa84 	bl	8004bc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, MCU_ACTIVE_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80006c0:	2200      	movs	r2, #0
 80006c2:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 80006c6:	4858      	ldr	r0, [pc, #352]	; (8000828 <main+0x390>)
 80006c8:	f004 fa7e 	bl	8004bc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_RESET);
 80006cc:	2200      	movs	r2, #0
 80006ce:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006d2:	4856      	ldr	r0, [pc, #344]	; (800082c <main+0x394>)
 80006d4:	f004 fa78 	bl	8004bc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80006d8:	2200      	movs	r2, #0
 80006da:	2101      	movs	r1, #1
 80006dc:	4854      	ldr	r0, [pc, #336]	; (8000830 <main+0x398>)
 80006de:	f004 fa73 	bl	8004bc8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80006e6:	a913      	add	r1, sp, #76	; 0x4c
 80006e8:	484d      	ldr	r0, [pc, #308]	; (8000820 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006ea:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006ee:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80006f2:	f004 f8e5 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80006f6:	a913      	add	r1, sp, #76	; 0x4c
 80006f8:	4849      	ldr	r0, [pc, #292]	; (8000820 <main+0x388>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006fa:	9415      	str	r4, [sp, #84]	; 0x54
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80006fc:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000700:	e9cd 9613 	strd	r9, r6, [sp, #76]	; 0x4c
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8000704:	f004 f8dc 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin|FRAME_RATE_Pin;
 8000708:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800070c:	a913      	add	r1, sp, #76	; 0x4c
 800070e:	4846      	ldr	r0, [pc, #280]	; (8000828 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000710:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000714:	e9cd 4815 	strd	r4, r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000718:	f004 f8d2 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 800071c:	a913      	add	r1, sp, #76	; 0x4c
 800071e:	4843      	ldr	r0, [pc, #268]	; (800082c <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000720:	e9cd 7613 	strd	r7, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000724:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 8000728:	f004 f8ca 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800072c:	a913      	add	r1, sp, #76	; 0x4c
 800072e:	4840      	ldr	r0, [pc, #256]	; (8000830 <main+0x398>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000730:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000734:	e9cd 4815 	strd	r4, r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8000738:	f004 f8c2 	bl	80048c0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800073c:	483d      	ldr	r0, [pc, #244]	; (8000834 <main+0x39c>)
 800073e:	4b3e      	ldr	r3, [pc, #248]	; (8000838 <main+0x3a0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000740:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8000742:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000744:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000746:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800074a:	f003 ff8f 	bl	800466c <HAL_CRC_Init>
  hdma2d.Init.Mode = DMA2D_R2M;
 800074e:	f44f 3340 	mov.w	r3, #196608	; 0x30000
  hdma2d.Instance = DMA2D;
 8000752:	483a      	ldr	r0, [pc, #232]	; (800083c <main+0x3a4>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000754:	4a3a      	ldr	r2, [pc, #232]	; (8000840 <main+0x3a8>)
  hdma2d.Init.OutputOffset = 0;
 8000756:	e9c0 6402 	strd	r6, r4, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800075a:	e9c0 2300 	strd	r2, r3, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800075e:	f003 ffe5 	bl	800472c <HAL_DMA2D_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000762:	2234      	movs	r2, #52	; 0x34
 8000764:	4621      	mov	r1, r4
 8000766:	a813      	add	r0, sp, #76	; 0x4c
 8000768:	f01a f825 	bl	801a7b6 <memset>
  hltdc.Instance = LTDC;
 800076c:	4b35      	ldr	r3, [pc, #212]	; (8000844 <main+0x3ac>)
  hltdc.Init.VerticalSync = 9;
 800076e:	2128      	movs	r1, #40	; 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000770:	2035      	movs	r0, #53	; 0x35
  hltdc.Init.AccumulatedActiveH = 283;
 8000772:	f240 2c15 	movw	ip, #533	; 0x215
  hltdc.Init.TotalHeigh = 285;
 8000776:	f240 2e35 	movw	lr, #565	; 0x235
  hltdc.Init.Backcolor.Blue = 0;
 800077a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800077c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800077e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000782:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000786:	2309      	movs	r3, #9
 8000788:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 800078c:	230b      	movs	r3, #11
 800078e:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000792:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000796:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000798:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
 800079c:	f240 131d 	movw	r3, #285	; 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80007a0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 80007a4:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80007a8:	f004 fe3e 	bl	8005428 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80007ac:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowY1 = 272;
 80007ae:	f44f 7388 	mov.w	r3, #272	; 0x110
  pLayerCfg.WindowX1 = 480;
 80007b2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80007b6:	4628      	mov	r0, r5
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80007b8:	971a      	str	r7, [sp, #104]	; 0x68
  pLayerCfg.WindowX0 = 0;
 80007ba:	9413      	str	r4, [sp, #76]	; 0x4c
  hospi1.Init.ChipSelectHighTime = 2;
 80007bc:	2702      	movs	r7, #2
  pLayerCfg.Backcolor.Blue = 0;
 80007be:	f8ad 407c 	strh.w	r4, [sp, #124]	; 0x7c
  pLayerCfg.Backcolor.Red = 0;
 80007c2:	f88d 407e 	strb.w	r4, [sp, #126]	; 0x7e
  hospi1.Instance = OCTOSPI1;
 80007c6:	4d20      	ldr	r5, [pc, #128]	; (8000848 <main+0x3b0>)
  pLayerCfg.Alpha0 = 0;
 80007c8:	e9cd 1418 	strd	r1, r4, [sp, #96]	; 0x60
  pLayerCfg.FBStartAdress = 0x70000000;
 80007cc:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
  pLayerCfg.ImageHeight = 272;
 80007d0:	e9cd 231d 	strd	r2, r3, [sp, #116]	; 0x74
  pLayerCfg.FBStartAdress = 0x70000000;
 80007d4:	e9cd a11b 	strd	sl, r1, [sp, #108]	; 0x6c
  pLayerCfg.WindowY0 = 0;
 80007d8:	e9cd 2414 	strd	r2, r4, [sp, #80]	; 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80007dc:	a913      	add	r1, sp, #76	; 0x4c
 80007de:	4622      	mov	r2, r4
  hospi1.Init.FifoThreshold = 4;
 80007e0:	f04f 0a04 	mov.w	sl, #4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 80007e4:	e9cd 3616 	strd	r3, r6, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80007e8:	f004 fee9 	bl	80055be <HAL_LTDC_ConfigLayer>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 80007ec:	4621      	mov	r1, r4
 80007ee:	465a      	mov	r2, fp
 80007f0:	a813      	add	r0, sp, #76	; 0x4c
 80007f2:	f019 ffe0 	bl	801a7b6 <memset>
  hospi1.Init.FifoThreshold = 4;
 80007f6:	4b15      	ldr	r3, [pc, #84]	; (800084c <main+0x3b4>)
  hospi1.Init.DeviceSize = 32;
 80007f8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 80007fc:	4628      	mov	r0, r5
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 80007fe:	60ac      	str	r4, [r5, #8]
  hospi1.Init.Refresh = 0;
 8000800:	63ec      	str	r4, [r5, #60]	; 0x3c
  hospi1.Init.FifoThreshold = 4;
 8000802:	e9c5 3a00 	strd	r3, sl, [r5]
  hospi1.Init.DeviceSize = 32;
 8000806:	2320      	movs	r3, #32
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000808:	e9c5 7405 	strd	r7, r4, [r5, #20]
 800080c:	e020      	b.n	8000850 <main+0x3b8>
 800080e:	bf00      	nop
 8000810:	03000012 	.word	0x03000012
 8000814:	01010001 	.word	0x01010001
 8000818:	e000ed00 	.word	0xe000ed00
 800081c:	58024400 	.word	0x58024400
 8000820:	58021800 	.word	0x58021800
 8000824:	240001c0 	.word	0x240001c0
 8000828:	58020400 	.word	0x58020400
 800082c:	58020c00 	.word	0x58020c00
 8000830:	58020000 	.word	0x58020000
 8000834:	24000134 	.word	0x24000134
 8000838:	58024c00 	.word	0x58024c00
 800083c:	24000158 	.word	0x24000158
 8000840:	52001000 	.word	0x52001000
 8000844:	50001000 	.word	0x50001000
 8000848:	24000268 	.word	0x24000268
 800084c:	52005000 	.word	0x52005000
  hospi1.Init.DeviceSize = 32;
 8000850:	e9c5 2303 	strd	r2, r3, [r5, #12]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000854:	e9c5 4407 	strd	r4, r4, [r5, #28]
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000858:	e9c5 7409 	strd	r7, r4, [r5, #36]	; 0x24
  hospi1.Init.ChipSelectBoundary = 0;
 800085c:	e9c5 440b 	strd	r4, r4, [r5, #44]	; 0x2c
  hospi1.Init.MaxTran = 0;
 8000860:	e9c5 940d 	strd	r9, r4, [r5, #52]	; 0x34
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000864:	f005 f83a 	bl	80058dc <HAL_OSPI_Init>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000868:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800086c:	f241 3288 	movw	r2, #5000	; 0x1388
 8000870:	a913      	add	r1, sp, #76	; 0x4c
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000872:	9316      	str	r3, [sp, #88]	; 0x58
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000874:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000878:	4628      	mov	r0, r5
  sOspiManagerCfg.NCSPort = 1;
 800087a:	9615      	str	r6, [sp, #84]	; 0x54
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 800087c:	9317      	str	r3, [sp, #92]	; 0x5c
  sOspiManagerCfg.DQSPort = 1;
 800087e:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000882:	f005 fab3 	bl	8005dec <HAL_OSPIM_Config>
  HAL_OSPI_DeInit(&hospi1);
 8000886:	4628      	mov	r0, r5
 8000888:	f005 f89c 	bl	80059c4 <HAL_OSPI_DeInit>
  ospi_nor_int.InterfaceMode = BSP_OSPI_NOR_OPI_MODE;
 800088c:	f240 1301 	movw	r3, #257	; 0x101
  BSP_OSPI_NOR_DeInit(0);
 8000890:	4620      	mov	r0, r4
  hospi2.Instance = OCTOSPI2;
 8000892:	4d3e      	ldr	r5, [pc, #248]	; (800098c <main+0x4f4>)
  ospi_nor_int.InterfaceMode = BSP_OSPI_NOR_OPI_MODE;
 8000894:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  BSP_OSPI_NOR_DeInit(0);
 8000898:	f003 fa54 	bl	8003d44 <BSP_OSPI_NOR_DeInit>
  if(BSP_OSPI_NOR_Init(0, &ospi_nor_int) != BSP_ERROR_NONE)
 800089c:	a90e      	add	r1, sp, #56	; 0x38
 800089e:	4620      	mov	r0, r4
 80008a0:	f003 fb42 	bl	8003f28 <BSP_OSPI_NOR_Init>
  if(BSP_OSPI_NOR_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 80008a4:	4620      	mov	r0, r4
 80008a6:	f003 fa15 	bl	8003cd4 <BSP_OSPI_NOR_EnableMemoryMappedMode>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 80008aa:	465a      	mov	r2, fp
 80008ac:	4621      	mov	r1, r4
 80008ae:	a813      	add	r0, sp, #76	; 0x4c
 80008b0:	f019 ff81 	bl	801a7b6 <memset>
  OSPI_HyperbusCfgTypeDef sHyperBusCfg = {0};
 80008b4:	2210      	movs	r2, #16
 80008b6:	4621      	mov	r1, r4
 80008b8:	a80a      	add	r0, sp, #40	; 0x28
 80008ba:	f019 ff7c 	bl	801a7b6 <memset>
  OSPI_HyperbusCmdTypeDef sCommand = {0};
 80008be:	2214      	movs	r2, #20
 80008c0:	4621      	mov	r1, r4
 80008c2:	a80e      	add	r0, sp, #56	; 0x38
 80008c4:	f019 ff77 	bl	801a7b6 <memset>
  hospi2.Instance = OCTOSPI2;
 80008c8:	4b31      	ldr	r3, [pc, #196]	; (8000990 <main+0x4f8>)
  hospi2.Init.ChipSelectBoundary = 23;
 80008ca:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  if (HAL_OSPI_Init(&hospi2) != HAL_OK)
 80008ce:	4628      	mov	r0, r5
  hospi2.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 80008d0:	60ac      	str	r4, [r5, #8]
  hospi2.Init.FifoThreshold = 4;
 80008d2:	e9c5 3a00 	strd	r3, sl, [r5]
  hospi2.Init.MemoryType = HAL_OSPI_MEMTYPE_HYPERBUS;
 80008d6:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  hospi2.Init.DeviceSize = 24;
 80008da:	e9c5 3b03 	strd	r3, fp, [r5, #12]
  hospi2.Init.ChipSelectBoundary = 23;
 80008de:	2317      	movs	r3, #23
 80008e0:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hospi2.Init.Refresh = 400;
 80008e4:	f44f 73c8 	mov.w	r3, #400	; 0x190
  OSPI_MemoryMappedTypeDef sMemMappedCfg = {0};
 80008e8:	e9cd 4408 	strd	r4, r4, [sp, #32]
  hospi2.Init.Refresh = 400;
 80008ec:	63eb      	str	r3, [r5, #60]	; 0x3c
  hospi2.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 80008ee:	e9c5 a405 	strd	sl, r4, [r5, #20]
  hospi2.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 80008f2:	e9c5 4407 	strd	r4, r4, [r5, #28]
  hospi2.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 80008f6:	e9c5 7409 	strd	r7, r4, [r5, #36]	; 0x24
  hospi2.Init.MaxTran = 0;
 80008fa:	e9c5 440d 	strd	r4, r4, [r5, #52]	; 0x34
  if (HAL_OSPI_Init(&hospi2) != HAL_OK)
 80008fe:	f004 ffed 	bl	80058dc <HAL_OSPI_Init>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_2_LOW;
 8000902:	4b24      	ldr	r3, [pc, #144]	; (8000994 <main+0x4fc>)
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000904:	f241 3288 	movw	r2, #5000	; 0x1388
 8000908:	a913      	add	r1, sp, #76	; 0x4c
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_2_LOW;
 800090a:	9316      	str	r3, [sp, #88]	; 0x58
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_2_HIGH;
 800090c:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000910:	4628      	mov	r0, r5
  sOspiManagerCfg.NCSPort = 2;
 8000912:	9715      	str	r7, [sp, #84]	; 0x54
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_2_HIGH;
 8000914:	9317      	str	r3, [sp, #92]	; 0x5c
  sOspiManagerCfg.DQSPort = 2;
 8000916:	e9cd 7713 	strd	r7, r7, [sp, #76]	; 0x4c
  if (HAL_OSPIM_Config(&hospi2, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800091a:	f005 fa67 	bl	8005dec <HAL_OSPIM_Config>
  sHyperBusCfg.AccessTime = 6;
 800091e:	2306      	movs	r3, #6
  if (HAL_OSPI_HyperbusCfg(&hospi2, &sHyperBusCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000920:	f241 3288 	movw	r2, #5000	; 0x1388
 8000924:	a90a      	add	r1, sp, #40	; 0x28
 8000926:	4628      	mov	r0, r5
  sHyperBusCfg.RWRecoveryTime = 3;
 8000928:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
  sHyperBusCfg.LatencyMode = HAL_OSPI_FIXED_LATENCY;
 800092c:	960d      	str	r6, [sp, #52]	; 0x34
  sHyperBusCfg.WriteZeroLatency = HAL_OSPI_LATENCY_ON_WRITE;
 800092e:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
  if (HAL_OSPI_HyperbusCfg(&hospi2, &sHyperBusCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000932:	f005 f8a9 	bl	8005a88 <HAL_OSPI_HyperbusCfg>
  sCommand.AddressSize  = HAL_OSPI_ADDRESS_32_BITS;
 8000936:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800093a:	f241 3288 	movw	r2, #5000	; 0x1388
 800093e:	a90e      	add	r1, sp, #56	; 0x38
  sCommand.AddressSize  = HAL_OSPI_ADDRESS_32_BITS;
 8000940:	9310      	str	r3, [sp, #64]	; 0x40
  sCommand.DQSMode      = HAL_OSPI_DQS_ENABLE;
 8000942:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000946:	4628      	mov	r0, r5
  sCommand.AddressSpace = HAL_OSPI_MEMORY_ADDRESS_SPACE;
 8000948:	940e      	str	r4, [sp, #56]	; 0x38
  sCommand.DQSMode      = HAL_OSPI_DQS_ENABLE;
 800094a:	9312      	str	r3, [sp, #72]	; 0x48
  sCommand.Address      = 0;
 800094c:	940f      	str	r4, [sp, #60]	; 0x3c
  sCommand.NbData       = 1;
 800094e:	9611      	str	r6, [sp, #68]	; 0x44
  if (HAL_OSPI_HyperbusCmd(&hospi2, &sCommand, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000950:	f005 f8c0 	bl	8005ad4 <HAL_OSPI_HyperbusCmd>
  if (HAL_OSPI_MemoryMapped(&hospi2, &sMemMappedCfg) != HAL_OK)
 8000954:	a908      	add	r1, sp, #32
 8000956:	4628      	mov	r0, r5
  sMemMappedCfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 8000958:	9408      	str	r4, [sp, #32]
  if (HAL_OSPI_MemoryMapped(&hospi2, &sMemMappedCfg) != HAL_OK)
 800095a:	f005 f9d3 	bl	8005d04 <HAL_OSPI_MemoryMapped>
  MX_TouchGFX_Init();
 800095e:	f000 fc0d 	bl	800117c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000962:	f000 fc0a 	bl	800117a <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000966:	f007 f925 	bl	8007bb4 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800096a:	4a0b      	ldr	r2, [pc, #44]	; (8000998 <main+0x500>)
 800096c:	4621      	mov	r1, r4
 800096e:	480b      	ldr	r0, [pc, #44]	; (800099c <main+0x504>)
 8000970:	f007 f94c 	bl	8007c0c <osThreadNew>
 8000974:	4b0a      	ldr	r3, [pc, #40]	; (80009a0 <main+0x508>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000976:	4a0b      	ldr	r2, [pc, #44]	; (80009a4 <main+0x50c>)
 8000978:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800097a:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800097c:	480a      	ldr	r0, [pc, #40]	; (80009a8 <main+0x510>)
 800097e:	f007 f945 	bl	8007c0c <osThreadNew>
 8000982:	4b0a      	ldr	r3, [pc, #40]	; (80009ac <main+0x514>)
 8000984:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000986:	f007 f927 	bl	8007bd8 <osKernelStart>
  while (1)
 800098a:	e7fe      	b.n	800098a <main+0x4f2>
 800098c:	240002c4 	.word	0x240002c4
 8000990:	5200a000 	.word	0x5200a000
 8000994:	00010002 	.word	0x00010002
 8000998:	0801b494 	.word	0x0801b494
 800099c:	080003bd 	.word	0x080003bd
 80009a0:	24000130 	.word	0x24000130
 80009a4:	0801b470 	.word	0x0801b470
 80009a8:	0800118b 	.word	0x0800118b
 80009ac:	2400012c 	.word	0x2400012c

080009b0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80009b0:	6802      	ldr	r2, [r0, #0]
 80009b2:	4b03      	ldr	r3, [pc, #12]	; (80009c0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80009b4:	429a      	cmp	r2, r3
 80009b6:	d101      	bne.n	80009bc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80009b8:	f003 bd98 	b.w	80044ec <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80009bc:	4770      	bx	lr
 80009be:	bf00      	nop
 80009c0:	40001000 	.word	0x40001000

080009c4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80009c4:	4770      	bx	lr
	...

080009c8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009c8:	4b0a      	ldr	r3, [pc, #40]	; (80009f4 <HAL_MspInit+0x2c>)
{
 80009ca:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009cc:	210f      	movs	r1, #15
 80009ce:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009d2:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 80009d6:	f042 0202 	orr.w	r2, r2, #2
 80009da:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009de:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009e0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80009e4:	f003 0302 	and.w	r3, r3, #2
 80009e8:	9301      	str	r3, [sp, #4]
 80009ea:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80009ec:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009ee:	f003 bdb3 	b.w	8004558 <HAL_NVIC_SetPriority>
 80009f2:	bf00      	nop
 80009f4:	58024400 	.word	0x58024400

080009f8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80009f8:	6802      	ldr	r2, [r0, #0]
{
 80009fa:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80009fc:	4b09      	ldr	r3, [pc, #36]	; (8000a24 <HAL_CRC_MspInit+0x2c>)
 80009fe:	429a      	cmp	r2, r3
 8000a00:	d10d      	bne.n	8000a1e <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000a02:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8000a06:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000a0a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000a0e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000a12:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000a16:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000a1a:	9301      	str	r3, [sp, #4]
 8000a1c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000a1e:	b002      	add	sp, #8
 8000a20:	4770      	bx	lr
 8000a22:	bf00      	nop
 8000a24:	58024c00 	.word	0x58024c00

08000a28 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000a28:	4b0f      	ldr	r3, [pc, #60]	; (8000a68 <HAL_DMA2D_MspInit+0x40>)
{
 8000a2a:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000a2c:	6802      	ldr	r2, [r0, #0]
 8000a2e:	429a      	cmp	r2, r3
 8000a30:	d117      	bne.n	8000a62 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a32:	4b0e      	ldr	r3, [pc, #56]	; (8000a6c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000a34:	2105      	movs	r1, #5
 8000a36:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a38:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000a3c:	f042 0210 	orr.w	r2, r2, #16
 8000a40:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000a44:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a46:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000a4a:	f003 0310 	and.w	r3, r3, #16
 8000a4e:	9301      	str	r3, [sp, #4]
 8000a50:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000a52:	f003 fd81 	bl	8004558 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000a56:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000a58:	b003      	add	sp, #12
 8000a5a:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000a5e:	f003 bdad 	b.w	80045bc <HAL_NVIC_EnableIRQ>
}
 8000a62:	b003      	add	sp, #12
 8000a64:	f85d fb04 	ldr.w	pc, [sp], #4
 8000a68:	52001000 	.word	0x52001000
 8000a6c:	58024400 	.word	0x58024400

08000a70 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a74:	b0bc      	sub	sp, #240	; 0xf0
 8000a76:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a78:	2214      	movs	r2, #20
 8000a7a:	2100      	movs	r1, #0
 8000a7c:	a809      	add	r0, sp, #36	; 0x24
 8000a7e:	f019 fe9a 	bl	801a7b6 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000a82:	22b8      	movs	r2, #184	; 0xb8
 8000a84:	2100      	movs	r1, #0
 8000a86:	a80e      	add	r0, sp, #56	; 0x38
 8000a88:	f019 fe95 	bl	801a7b6 <memset>
  if(hltdc->Instance==LTDC)
 8000a8c:	6822      	ldr	r2, [r4, #0]
 8000a8e:	4b77      	ldr	r3, [pc, #476]	; (8000c6c <HAL_LTDC_MspInit+0x1fc>)
 8000a90:	429a      	cmp	r2, r3
 8000a92:	f040 80e7 	bne.w	8000c64 <HAL_LTDC_MspInit+0x1f4>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000a96:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000a9a:	2300      	movs	r3, #0
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 30;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_0;
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000a9c:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000a9e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLL3.PLL3N = 288;
 8000aa2:	f44f 7390 	mov.w	r3, #288	; 0x120
 8000aa6:	2219      	movs	r2, #25
 8000aa8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8000aac:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8000aae:	e9cd 331a 	strd	r3, r3, [sp, #104]	; 0x68
    PeriphClkInitStruct.PLL3.PLL3R = 30;
 8000ab2:	231e      	movs	r3, #30
 8000ab4:	931c      	str	r3, [sp, #112]	; 0x70
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 8000ab6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000aba:	931e      	str	r3, [sp, #120]	; 0x78
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000abc:	f006 fa00 	bl	8006ec0 <HAL_RCCEx_PeriphCLKConfig>
 8000ac0:	b108      	cbz	r0, 8000ac6 <HAL_LTDC_MspInit+0x56>
    {
      Error_Handler();
 8000ac2:	f7ff ff7f 	bl	80009c4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ac6:	4b6a      	ldr	r3, [pc, #424]	; (8000c70 <HAL_LTDC_MspInit+0x200>)
    PE11     ------> LTDC_G3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_1|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ac8:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000aca:	2602      	movs	r6, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000acc:	2503      	movs	r5, #3
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ace:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ad2:	270e      	movs	r7, #14
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ad4:	a909      	add	r1, sp, #36	; 0x24
 8000ad6:	4867      	ldr	r0, [pc, #412]	; (8000c74 <HAL_LTDC_MspInit+0x204>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ad8:	f042 0208 	orr.w	r2, r2, #8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6;
 8000adc:	f04f 0858 	mov.w	r8, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ae0:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8000ae4:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8000ae8:	f002 0208 	and.w	r2, r2, #8
 8000aec:	9201      	str	r2, [sp, #4]
 8000aee:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000af0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000af4:	f042 0202 	orr.w	r2, r2, #2
 8000af8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000afc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b00:	f002 0202 	and.w	r2, r2, #2
 8000b04:	9202      	str	r2, [sp, #8]
 8000b06:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b08:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b0c:	f042 0208 	orr.w	r2, r2, #8
 8000b10:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b14:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b18:	f002 0208 	and.w	r2, r2, #8
 8000b1c:	9203      	str	r2, [sp, #12]
 8000b1e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b20:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b24:	f042 0210 	orr.w	r2, r2, #16
 8000b28:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b2c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b30:	f002 0210 	and.w	r2, r2, #16
 8000b34:	9204      	str	r2, [sp, #16]
 8000b36:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b38:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b3c:	f042 0201 	orr.w	r2, r2, #1
 8000b40:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b44:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b48:	f002 0201 	and.w	r2, r2, #1
 8000b4c:	9205      	str	r2, [sp, #20]
 8000b4e:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000b50:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b54:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000b58:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b5c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b60:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000b64:	9206      	str	r2, [sp, #24]
 8000b66:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b68:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b6c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000b70:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b74:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b78:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000b7c:	9207      	str	r2, [sp, #28]
 8000b7e:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b80:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000b84:	f042 0204 	orr.w	r2, r2, #4
 8000b88:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000b8c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000b90:	970d      	str	r7, [sp, #52]	; 0x34
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b92:	f003 0304 	and.w	r3, r3, #4
 8000b96:	9308      	str	r3, [sp, #32]
 8000b98:	9b08      	ldr	r3, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b9a:	f240 3303 	movw	r3, #771	; 0x303
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b9e:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ba2:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ba6:	f003 fe8b 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_6;
 8000baa:	2349      	movs	r3, #73	; 0x49
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000bac:	a909      	add	r1, sp, #36	; 0x24
 8000bae:	4832      	ldr	r0, [pc, #200]	; (8000c78 <HAL_LTDC_MspInit+0x208>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000bb0:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bb2:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bb6:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000bba:	f003 fe81 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_13
 8000bbe:	f64b 0303 	movw	r3, #47107	; 0xb803
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000bc2:	a909      	add	r1, sp, #36	; 0x24
 8000bc4:	482d      	ldr	r0, [pc, #180]	; (8000c7c <HAL_LTDC_MspInit+0x20c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000bc6:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bc8:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bcc:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000bd0:	f003 fe76 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000bd4:	f44f 7380 	mov.w	r3, #256	; 0x100
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bd8:	a909      	add	r1, sp, #36	; 0x24
 8000bda:	4829      	ldr	r0, [pc, #164]	; (8000c80 <HAL_LTDC_MspInit+0x210>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bdc:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF13_LTDC;
 8000be0:	230d      	movs	r3, #13
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000be2:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF13_LTDC;
 8000be6:	930d      	str	r3, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000be8:	f003 fe6a 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_7;
 8000bec:	f44f 4381 	mov.w	r3, #16512	; 0x4080
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bf0:	a909      	add	r1, sp, #36	; 0x24
 8000bf2:	4824      	ldr	r0, [pc, #144]	; (8000c84 <HAL_LTDC_MspInit+0x214>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000bf4:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bf6:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bfa:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bfe:	f003 fe5f 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_11|GPIO_PIN_9|GPIO_PIN_8
 8000c02:	f648 7308 	movw	r3, #36616	; 0x8f08
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c06:	a909      	add	r1, sp, #36	; 0x24
 8000c08:	481f      	ldr	r0, [pc, #124]	; (8000c88 <HAL_LTDC_MspInit+0x218>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000c0a:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c0c:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c10:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c14:	f003 fe54 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 8000c18:	23c0      	movs	r3, #192	; 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c1a:	a909      	add	r1, sp, #36	; 0x24
 8000c1c:	481b      	ldr	r0, [pc, #108]	; (8000c8c <HAL_LTDC_MspInit+0x21c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000c1e:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c20:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c24:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c28:	f003 fe4a 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c2c:	a909      	add	r1, sp, #36	; 0x24
 8000c2e:	4814      	ldr	r0, [pc, #80]	; (8000c80 <HAL_LTDC_MspInit+0x210>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000c30:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c32:	e9cd 8609 	strd	r8, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c36:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c3a:	f003 fe41 	bl	80048c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000c3e:	2310      	movs	r3, #16
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c40:	a909      	add	r1, sp, #36	; 0x24
 8000c42:	4811      	ldr	r0, [pc, #68]	; (8000c88 <HAL_LTDC_MspInit+0x218>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c44:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000c48:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c4a:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000c4e:	930d      	str	r3, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c50:	f003 fe36 	bl	80048c0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000c54:	4640      	mov	r0, r8
 8000c56:	4622      	mov	r2, r4
 8000c58:	2105      	movs	r1, #5
 8000c5a:	f003 fc7d 	bl	8004558 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000c5e:	4640      	mov	r0, r8
 8000c60:	f003 fcac 	bl	80045bc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000c64:	b03c      	add	sp, #240	; 0xf0
 8000c66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c6a:	bf00      	nop
 8000c6c:	50001000 	.word	0x50001000
 8000c70:	58024400 	.word	0x58024400
 8000c74:	58020400 	.word	0x58020400
 8000c78:	58020c00 	.word	0x58020c00
 8000c7c:	58021000 	.word	0x58021000
 8000c80:	58020000 	.word	0x58020000
 8000c84:	58021800 	.word	0x58021800
 8000c88:	58021c00 	.word	0x58021c00
 8000c8c:	58020800 	.word	0x58020800

08000c90 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8000c90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c94:	b091      	sub	sp, #68	; 0x44
 8000c96:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c98:	2214      	movs	r2, #20
 8000c9a:	2100      	movs	r1, #0
 8000c9c:	a80b      	add	r0, sp, #44	; 0x2c
 8000c9e:	f019 fd8a 	bl	801a7b6 <memset>
  if(hospi->Instance==OCTOSPI1)
 8000ca2:	6823      	ldr	r3, [r4, #0]
 8000ca4:	4a88      	ldr	r2, [pc, #544]	; (8000ec8 <HAL_OSPI_MspInit+0x238>)
 8000ca6:	4293      	cmp	r3, r2
 8000ca8:	f040 80b0 	bne.w	8000e0c <HAL_OSPI_MspInit+0x17c>
  {
  /* USER CODE BEGIN OCTOSPI1_MspInit 0 */

  /* USER CODE END OCTOSPI1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 8000cac:	4a87      	ldr	r2, [pc, #540]	; (8000ecc <HAL_OSPI_MspInit+0x23c>)
 8000cae:	6813      	ldr	r3, [r2, #0]
 8000cb0:	3301      	adds	r3, #1
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8000cb2:	2b01      	cmp	r3, #1
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 8000cb4:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8000cb6:	d10c      	bne.n	8000cd2 <HAL_OSPI_MspInit+0x42>
      __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000cb8:	4b85      	ldr	r3, [pc, #532]	; (8000ed0 <HAL_OSPI_MspInit+0x240>)
 8000cba:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000cbe:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000cc2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8000cc6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000cca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000cce:	9300      	str	r3, [sp, #0]
 8000cd0:	9b00      	ldr	r3, [sp, #0]
    }
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8000cd2:	4b7f      	ldr	r3, [pc, #508]	; (8000ed0 <HAL_OSPI_MspInit+0x240>)
    PD12     ------> OCTOSPIM_P1_IO1
    PF10     ------> OCTOSPIM_P1_CLK
    PB2     ------> OCTOSPIM_P1_DQS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cd4:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000cd6:	2403      	movs	r4, #3
 8000cd8:	2709      	movs	r7, #9
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8000cda:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cde:	a90b      	add	r1, sp, #44	; 0x2c
 8000ce0:	487c      	ldr	r0, [pc, #496]	; (8000ed4 <HAL_OSPI_MspInit+0x244>)

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce2:	2600      	movs	r6, #0
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8000ce4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000ce8:	f04f 080a 	mov.w	r8, #10
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000cec:	f04f 0904 	mov.w	r9, #4
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8000cf0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8000cf4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000cf8:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000cfc:	9201      	str	r2, [sp, #4]
 8000cfe:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000d00:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d04:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000d08:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000d0c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d10:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000d14:	9202      	str	r2, [sp, #8]
 8000d16:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d18:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d1c:	f042 0208 	orr.w	r2, r2, #8
 8000d20:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000d24:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d28:	f002 0208 	and.w	r2, r2, #8
 8000d2c:	9203      	str	r2, [sp, #12]
 8000d2e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d30:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d34:	f042 0210 	orr.w	r2, r2, #16
 8000d38:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000d3c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d40:	f002 0210 	and.w	r2, r2, #16
 8000d44:	9204      	str	r2, [sp, #16]
 8000d46:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000d48:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d4c:	f042 0220 	orr.w	r2, r2, #32
 8000d50:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000d54:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d58:	f002 0220 	and.w	r2, r2, #32
 8000d5c:	9205      	str	r2, [sp, #20]
 8000d5e:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d60:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000d64:	f042 0202 	orr.w	r2, r2, #2
 8000d68:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000d6c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d70:	f003 0302 	and.w	r3, r3, #2
 8000d74:	9306      	str	r3, [sp, #24]
 8000d76:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d78:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000d7c:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000d80:	e9cd 470e 	strd	r4, r7, [sp, #56]	; 0x38
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d84:	f003 fd9c 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4;
 8000d88:	23b0      	movs	r3, #176	; 0xb0
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d8a:	a90b      	add	r1, sp, #44	; 0x2c
 8000d8c:	4852      	ldr	r0, [pc, #328]	; (8000ed8 <HAL_OSPI_MspInit+0x248>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000d8e:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d92:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d96:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d9a:	f003 fd91 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000d9e:	a90b      	add	r1, sp, #44	; 0x2c
 8000da0:	484e      	ldr	r0, [pc, #312]	; (8000edc <HAL_OSPI_MspInit+0x24c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000da2:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000da4:	e9cd 950b 	strd	r9, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000da8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000dac:	f003 fd88 	bl	80048c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000db0:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000db2:	a90b      	add	r1, sp, #44	; 0x2c
 8000db4:	4847      	ldr	r0, [pc, #284]	; (8000ed4 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000db6:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000dba:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dbe:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000dc2:	f003 fd7d 	bl	80048c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_11|GPIO_PIN_12;
 8000dc6:	f44f 5360 	mov.w	r3, #14336	; 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000dca:	a90b      	add	r1, sp, #44	; 0x2c
 8000dcc:	4842      	ldr	r0, [pc, #264]	; (8000ed8 <HAL_OSPI_MspInit+0x248>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000dce:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000dd0:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dd4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000dd8:	f003 fd72 	bl	80048c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000ddc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000de0:	a90b      	add	r1, sp, #44	; 0x2c
 8000de2:	483f      	ldr	r0, [pc, #252]	; (8000ee0 <HAL_OSPI_MspInit+0x250>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000de4:	970f      	str	r7, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000de6:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dea:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000dee:	f003 fd67 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000df2:	a90b      	add	r1, sp, #44	; 0x2c
 8000df4:	483b      	ldr	r0, [pc, #236]	; (8000ee4 <HAL_OSPI_MspInit+0x254>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000df6:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000dfa:	e9cd 950b 	strd	r9, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dfe:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
                          |GPIO_PIN_3|GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000e02:	f003 fd5d 	bl	80048c0 <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI2_MspInit 1 */

  /* USER CODE END OCTOSPI2_MspInit 1 */
  }

}
 8000e06:	b011      	add	sp, #68	; 0x44
 8000e08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if(hospi->Instance==OCTOSPI2)
 8000e0c:	4a36      	ldr	r2, [pc, #216]	; (8000ee8 <HAL_OSPI_MspInit+0x258>)
 8000e0e:	4293      	cmp	r3, r2
 8000e10:	d1f9      	bne.n	8000e06 <HAL_OSPI_MspInit+0x176>
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 8000e12:	4a2e      	ldr	r2, [pc, #184]	; (8000ecc <HAL_OSPI_MspInit+0x23c>)
 8000e14:	6813      	ldr	r3, [r2, #0]
 8000e16:	3301      	adds	r3, #1
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8000e18:	2b01      	cmp	r3, #1
    HAL_RCC_OCTOSPIM_CLK_ENABLED++;
 8000e1a:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==1){
 8000e1c:	d10c      	bne.n	8000e38 <HAL_OSPI_MspInit+0x1a8>
      __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000e1e:	4b2c      	ldr	r3, [pc, #176]	; (8000ed0 <HAL_OSPI_MspInit+0x240>)
 8000e20:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000e24:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000e28:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8000e2c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000e30:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000e34:	9307      	str	r3, [sp, #28]
 8000e36:	9b07      	ldr	r3, [sp, #28]
    __HAL_RCC_OSPI2_CLK_ENABLE();
 8000e38:	4b25      	ldr	r3, [pc, #148]	; (8000ed0 <HAL_OSPI_MspInit+0x240>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 8000e3a:	2403      	movs	r4, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e3c:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 8000e3e:	2609      	movs	r6, #9
    __HAL_RCC_OSPI2_CLK_ENABLE();
 8000e40:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e44:	a90b      	add	r1, sp, #44	; 0x2c
 8000e46:	4823      	ldr	r0, [pc, #140]	; (8000ed4 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e48:	2700      	movs	r7, #0
    __HAL_RCC_OSPI2_CLK_ENABLE();
 8000e4a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000e4e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8000e52:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000e56:	f402 2200 	and.w	r2, r2, #524288	; 0x80000
 8000e5a:	9208      	str	r2, [sp, #32]
 8000e5c:	9a08      	ldr	r2, [sp, #32]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e5e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000e62:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000e66:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000e6a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000e6e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000e72:	9209      	str	r2, [sp, #36]	; 0x24
 8000e74:	9a09      	ldr	r2, [sp, #36]	; 0x24
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000e76:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000e7a:	f042 0220 	orr.w	r2, r2, #32
 8000e7e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000e82:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e86:	f003 0320 	and.w	r3, r3, #32
 8000e8a:	930a      	str	r3, [sp, #40]	; 0x28
 8000e8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e8e:	f640 0303 	movw	r3, #2051	; 0x803
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 8000e92:	e9cd 460e 	strd	r4, r6, [sp, #56]	; 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e96:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e9a:	f003 fd11 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8000e9e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000ea2:	a90b      	add	r1, sp, #44	; 0x2c
 8000ea4:	480b      	ldr	r0, [pc, #44]	; (8000ed4 <HAL_OSPI_MspInit+0x244>)
    GPIO_InitStruct.Alternate = GPIO_AF3_OCTOSPIM_P2;
 8000ea6:	940f      	str	r4, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ea8:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000eac:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000eb0:	f003 fd06 	bl	80048c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8000eb4:	f241 031f 	movw	r3, #4127	; 0x101f
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000eb8:	a90b      	add	r1, sp, #44	; 0x2c
 8000eba:	4809      	ldr	r0, [pc, #36]	; (8000ee0 <HAL_OSPI_MspInit+0x250>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P2;
 8000ebc:	960f      	str	r6, [sp, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ebe:	e9cd 350b 	strd	r3, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ec2:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ec6:	e79c      	b.n	8000e02 <HAL_OSPI_MspInit+0x172>
 8000ec8:	52005000 	.word	0x52005000
 8000ecc:	24000320 	.word	0x24000320
 8000ed0:	58024400 	.word	0x58024400
 8000ed4:	58021800 	.word	0x58021800
 8000ed8:	58020c00 	.word	0x58020c00
 8000edc:	58021000 	.word	0x58021000
 8000ee0:	58021400 	.word	0x58021400
 8000ee4:	58020400 	.word	0x58020400
 8000ee8:	5200a000 	.word	0x5200a000

08000eec <HAL_OSPI_MspDeInit>:
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspDeInit(OSPI_HandleTypeDef* hospi)
{
  if(hospi->Instance==OCTOSPI1)
 8000eec:	4a27      	ldr	r2, [pc, #156]	; (8000f8c <HAL_OSPI_MspDeInit+0xa0>)
{
 8000eee:	b508      	push	{r3, lr}
  if(hospi->Instance==OCTOSPI1)
 8000ef0:	6803      	ldr	r3, [r0, #0]
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	d12a      	bne.n	8000f4c <HAL_OSPI_MspDeInit+0x60>
  {
  /* USER CODE BEGIN OCTOSPI1_MspDeInit 0 */

  /* USER CODE END OCTOSPI1_MspDeInit 0 */
    /* Peripheral clock disable */
    HAL_RCC_OCTOSPIM_CLK_ENABLED--;
 8000ef6:	4b26      	ldr	r3, [pc, #152]	; (8000f90 <HAL_OSPI_MspDeInit+0xa4>)
 8000ef8:	681a      	ldr	r2, [r3, #0]
 8000efa:	3a01      	subs	r2, #1
 8000efc:	601a      	str	r2, [r3, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==0){
 8000efe:	4b25      	ldr	r3, [pc, #148]	; (8000f94 <HAL_OSPI_MspDeInit+0xa8>)
 8000f00:	b92a      	cbnz	r2, 8000f0e <HAL_OSPI_MspDeInit+0x22>
      __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 8000f02:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000f06:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8000f0a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    }
    __HAL_RCC_OSPI1_CLK_DISABLE();
 8000f0e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    PD11     ------> OCTOSPIM_P1_IO0
    PD12     ------> OCTOSPIM_P1_IO1
    PF10     ------> OCTOSPIM_P1_CLK
    PB2     ------> OCTOSPIM_P1_DQS
    */
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_6);
 8000f12:	f44f 7110 	mov.w	r1, #576	; 0x240
 8000f16:	4820      	ldr	r0, [pc, #128]	; (8000f98 <HAL_OSPI_MspDeInit+0xac>)
    __HAL_RCC_OSPI1_CLK_DISABLE();
 8000f18:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8000f1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_6);
 8000f20:	f003 fdb2 	bl	8004a88 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_7|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_13
 8000f24:	f643 01b0 	movw	r1, #14512	; 0x38b0
 8000f28:	481c      	ldr	r0, [pc, #112]	; (8000f9c <HAL_OSPI_MspDeInit+0xb0>)
 8000f2a:	f003 fdad 	bl	8004a88 <HAL_GPIO_DeInit>
                          |GPIO_PIN_11|GPIO_PIN_12);

    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 8000f2e:	2104      	movs	r1, #4
 8000f30:	481b      	ldr	r0, [pc, #108]	; (8000fa0 <HAL_OSPI_MspDeInit+0xb4>)
 8000f32:	f003 fda9 	bl	8004a88 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_10);
 8000f36:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f3a:	481a      	ldr	r0, [pc, #104]	; (8000fa4 <HAL_OSPI_MspDeInit+0xb8>)
 8000f3c:	f003 fda4 	bl	8004a88 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8000f40:	2104      	movs	r1, #4
 8000f42:	4819      	ldr	r0, [pc, #100]	; (8000fa8 <HAL_OSPI_MspDeInit+0xbc>)
  /* USER CODE BEGIN OCTOSPI2_MspDeInit 1 */

  /* USER CODE END OCTOSPI2_MspDeInit 1 */
  }

}
 8000f44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8000f48:	f003 bd9e 	b.w	8004a88 <HAL_GPIO_DeInit>
  else if(hospi->Instance==OCTOSPI2)
 8000f4c:	4a17      	ldr	r2, [pc, #92]	; (8000fac <HAL_OSPI_MspDeInit+0xc0>)
 8000f4e:	4293      	cmp	r3, r2
 8000f50:	d11a      	bne.n	8000f88 <HAL_OSPI_MspDeInit+0x9c>
    HAL_RCC_OCTOSPIM_CLK_ENABLED--;
 8000f52:	4b0f      	ldr	r3, [pc, #60]	; (8000f90 <HAL_OSPI_MspDeInit+0xa4>)
 8000f54:	681a      	ldr	r2, [r3, #0]
 8000f56:	3a01      	subs	r2, #1
 8000f58:	601a      	str	r2, [r3, #0]
    if(HAL_RCC_OCTOSPIM_CLK_ENABLED==0){
 8000f5a:	4b0e      	ldr	r3, [pc, #56]	; (8000f94 <HAL_OSPI_MspDeInit+0xa8>)
 8000f5c:	b92a      	cbnz	r2, 8000f6a <HAL_OSPI_MspDeInit+0x7e>
      __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 8000f5e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000f62:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8000f66:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    __HAL_RCC_OSPI2_CLK_DISABLE();
 8000f6a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_1
 8000f6e:	f641 4103 	movw	r1, #7171	; 0x1c03
 8000f72:	4809      	ldr	r0, [pc, #36]	; (8000f98 <HAL_OSPI_MspDeInit+0xac>)
    __HAL_RCC_OSPI2_CLK_DISABLE();
 8000f74:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8000f78:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_12|GPIO_PIN_1
 8000f7c:	f003 fd84 	bl	8004a88 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8000f80:	f241 011f 	movw	r1, #4127	; 0x101f
 8000f84:	4807      	ldr	r0, [pc, #28]	; (8000fa4 <HAL_OSPI_MspDeInit+0xb8>)
 8000f86:	e7dd      	b.n	8000f44 <HAL_OSPI_MspDeInit+0x58>
}
 8000f88:	bd08      	pop	{r3, pc}
 8000f8a:	bf00      	nop
 8000f8c:	52005000 	.word	0x52005000
 8000f90:	24000320 	.word	0x24000320
 8000f94:	58024400 	.word	0x58024400
 8000f98:	58021800 	.word	0x58021800
 8000f9c:	58020c00 	.word	0x58020c00
 8000fa0:	58021000 	.word	0x58021000
 8000fa4:	58021400 	.word	0x58021400
 8000fa8:	58020400 	.word	0x58020400
 8000fac:	5200a000 	.word	0x5200a000

08000fb0 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000fb0:	280f      	cmp	r0, #15
{
 8000fb2:	b510      	push	{r4, lr}
 8000fb4:	4604      	mov	r4, r0
 8000fb6:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000fb8:	d902      	bls.n	8000fc0 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 8000fba:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 8000fbc:	b00a      	add	sp, #40	; 0x28
 8000fbe:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8000fc0:	4601      	mov	r1, r0
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	2036      	movs	r0, #54	; 0x36
 8000fc6:	f003 fac7 	bl	8004558 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8000fca:	2036      	movs	r0, #54	; 0x36
 8000fcc:	f003 faf6 	bl	80045bc <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8000fd0:	4b18      	ldr	r3, [pc, #96]	; (8001034 <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000fd2:	4669      	mov	r1, sp
 8000fd4:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 8000fd6:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000fd8:	4b17      	ldr	r3, [pc, #92]	; (8001038 <HAL_InitTick+0x88>)
 8000fda:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 8000fde:	f042 0210 	orr.w	r2, r2, #16
 8000fe2:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 8000fe6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8000fea:	f003 0310 	and.w	r3, r3, #16
 8000fee:	9301      	str	r3, [sp, #4]
 8000ff0:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000ff2:	f005 fe4b 	bl	8006c8c <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8000ff6:	9b07      	ldr	r3, [sp, #28]
 8000ff8:	b9c3      	cbnz	r3, 800102c <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000ffa:	f005 fe23 	bl	8006c44 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000ffe:	4c0f      	ldr	r4, [pc, #60]	; (800103c <HAL_InitTick+0x8c>)
 8001000:	4b0f      	ldr	r3, [pc, #60]	; (8001040 <HAL_InitTick+0x90>)
 8001002:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001004:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001008:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800100a:	4b0e      	ldr	r3, [pc, #56]	; (8001044 <HAL_InitTick+0x94>)
 800100c:	fbb0 f0f3 	udiv	r0, r0, r3
 8001010:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 8001012:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001014:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001016:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001018:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800101a:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 800101c:	f006 fd8a 	bl	8007b34 <HAL_TIM_Base_Init>
 8001020:	2800      	cmp	r0, #0
 8001022:	d1ca      	bne.n	8000fba <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 8001024:	4620      	mov	r0, r4
 8001026:	f006 fc1d 	bl	8007864 <HAL_TIM_Base_Start_IT>
 800102a:	e7c7      	b.n	8000fbc <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800102c:	f005 fe0a 	bl	8006c44 <HAL_RCC_GetPCLK1Freq>
 8001030:	0040      	lsls	r0, r0, #1
 8001032:	e7e4      	b.n	8000ffe <HAL_InitTick+0x4e>
 8001034:	24000048 	.word	0x24000048
 8001038:	58024400 	.word	0x58024400
 800103c:	24000324 	.word	0x24000324
 8001040:	40001000 	.word	0x40001000
 8001044:	000f4240 	.word	0x000f4240

08001048 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001048:	4770      	bx	lr

0800104a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800104a:	e7fe      	b.n	800104a <HardFault_Handler>

0800104c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800104c:	e7fe      	b.n	800104c <MemManage_Handler>

0800104e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800104e:	e7fe      	b.n	800104e <BusFault_Handler>

08001050 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001050:	e7fe      	b.n	8001050 <UsageFault_Handler>

08001052 <DebugMon_Handler>:
 8001052:	4770      	bx	lr

08001054 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001054:	4801      	ldr	r0, [pc, #4]	; (800105c <TIM6_DAC_IRQHandler+0x8>)
 8001056:	f006 bc4f 	b.w	80078f8 <HAL_TIM_IRQHandler>
 800105a:	bf00      	nop
 800105c:	24000324 	.word	0x24000324

08001060 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001060:	4801      	ldr	r0, [pc, #4]	; (8001068 <LTDC_IRQHandler+0x8>)
 8001062:	f004 ba4f 	b.w	8005504 <HAL_LTDC_IRQHandler>
 8001066:	bf00      	nop
 8001068:	240001c0 	.word	0x240001c0

0800106c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800106c:	4801      	ldr	r0, [pc, #4]	; (8001074 <DMA2D_IRQHandler+0x8>)
 800106e:	f003 bb9c 	b.w	80047aa <HAL_DMA2D_IRQHandler>
 8001072:	bf00      	nop
 8001074:	24000158 	.word	0x24000158

08001078 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001078:	2001      	movs	r0, #1
 800107a:	4770      	bx	lr

0800107c <_kill>:

int _kill(int pid, int sig)
{
 800107c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800107e:	f019 fc3d 	bl	801a8fc <__errno>
 8001082:	2316      	movs	r3, #22
 8001084:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001086:	f04f 30ff 	mov.w	r0, #4294967295
 800108a:	bd08      	pop	{r3, pc}

0800108c <_exit>:

void _exit (int status)
{
 800108c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800108e:	f019 fc35 	bl	801a8fc <__errno>
 8001092:	2316      	movs	r3, #22
 8001094:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001096:	e7fe      	b.n	8001096 <_exit+0xa>

08001098 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001098:	b570      	push	{r4, r5, r6, lr}
 800109a:	460d      	mov	r5, r1
 800109c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800109e:	460e      	mov	r6, r1
 80010a0:	1b73      	subs	r3, r6, r5
 80010a2:	429c      	cmp	r4, r3
 80010a4:	dc01      	bgt.n	80010aa <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80010a6:	4620      	mov	r0, r4
 80010a8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80010aa:	f3af 8000 	nop.w
 80010ae:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010b2:	e7f5      	b.n	80010a0 <_read+0x8>

080010b4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80010b4:	b570      	push	{r4, r5, r6, lr}
 80010b6:	460d      	mov	r5, r1
 80010b8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010ba:	460e      	mov	r6, r1
 80010bc:	1b73      	subs	r3, r6, r5
 80010be:	429c      	cmp	r4, r3
 80010c0:	dc01      	bgt.n	80010c6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80010c2:	4620      	mov	r0, r4
 80010c4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80010c6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80010ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010ce:	e7f5      	b.n	80010bc <_write+0x8>

080010d0 <_close>:

int _close(int file)
{
	return -1;
}
 80010d0:	f04f 30ff 	mov.w	r0, #4294967295
 80010d4:	4770      	bx	lr

080010d6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80010d6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 80010da:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 80010dc:	604b      	str	r3, [r1, #4]
}
 80010de:	4770      	bx	lr

080010e0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80010e4:	2000      	movs	r0, #0
 80010e6:	4770      	bx	lr

080010e8 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010e8:	4a0b      	ldr	r2, [pc, #44]	; (8001118 <_sbrk+0x30>)
{
 80010ea:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80010ec:	6811      	ldr	r1, [r2, #0]
{
 80010ee:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80010f0:	b909      	cbnz	r1, 80010f6 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80010f2:	490a      	ldr	r1, [pc, #40]	; (800111c <_sbrk+0x34>)
 80010f4:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80010f6:	6810      	ldr	r0, [r2, #0]
 80010f8:	4909      	ldr	r1, [pc, #36]	; (8001120 <_sbrk+0x38>)
 80010fa:	4c0a      	ldr	r4, [pc, #40]	; (8001124 <_sbrk+0x3c>)
 80010fc:	4403      	add	r3, r0
 80010fe:	1b09      	subs	r1, r1, r4
 8001100:	428b      	cmp	r3, r1
 8001102:	d906      	bls.n	8001112 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8001104:	f019 fbfa 	bl	801a8fc <__errno>
 8001108:	230c      	movs	r3, #12
 800110a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 800110c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001110:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8001112:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8001114:	e7fc      	b.n	8001110 <_sbrk+0x28>
 8001116:	bf00      	nop
 8001118:	24000370 	.word	0x24000370
 800111c:	240077e8 	.word	0x240077e8
 8001120:	24050000 	.word	0x24050000
 8001124:	00001000 	.word	0x00001000

08001128 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001128:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001160 <LoopFillZerobss+0x10>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800112c:	f003 f95a 	bl	80043e4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001130:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001132:	e003      	b.n	800113c <LoopCopyDataInit>

08001134 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001134:	4b0b      	ldr	r3, [pc, #44]	; (8001164 <LoopFillZerobss+0x14>)
  ldr  r3, [r3, r1]
 8001136:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001138:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800113a:	3104      	adds	r1, #4

0800113c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800113c:	480a      	ldr	r0, [pc, #40]	; (8001168 <LoopFillZerobss+0x18>)
  ldr  r3, =_edata
 800113e:	4b0b      	ldr	r3, [pc, #44]	; (800116c <LoopFillZerobss+0x1c>)
  adds  r2, r0, r1
 8001140:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001142:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001144:	d3f6      	bcc.n	8001134 <CopyDataInit>
  ldr  r2, =_sbss
 8001146:	4a0a      	ldr	r2, [pc, #40]	; (8001170 <LoopFillZerobss+0x20>)
  b  LoopFillZerobss
 8001148:	e002      	b.n	8001150 <LoopFillZerobss>

0800114a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800114a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800114c:	f842 3b04 	str.w	r3, [r2], #4

08001150 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001150:	4b08      	ldr	r3, [pc, #32]	; (8001174 <LoopFillZerobss+0x24>)
  cmp  r2, r3
 8001152:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001154:	d3f9      	bcc.n	800114a <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 8001156:	f019 fbd7 	bl	801a908 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800115a:	f7ff f99d 	bl	8000498 <main>
  bx  lr    
 800115e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001160:	24050000 	.word	0x24050000
  ldr  r3, =_sidata
 8001164:	0801d0a0 	.word	0x0801d0a0
  ldr  r0, =_sdata
 8001168:	24000000 	.word	0x24000000
  ldr  r3, =_edata
 800116c:	24000110 	.word	0x24000110
  ldr  r2, =_sbss
 8001170:	24000110 	.word	0x24000110
  ldr  r3, = _ebss
 8001174:	240077e8 	.word	0x240077e8

08001178 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001178:	e7fe      	b.n	8001178 <ADC3_IRQHandler>

0800117a <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800117a:	4770      	bx	lr

0800117c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800117c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800117e:	f000 fd53 	bl	8001c28 <touchgfx_components_init>
  touchgfx_init();
}
 8001182:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001186:	f000 bcdf 	b.w	8001b48 <touchgfx_init>

0800118a <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800118a:	f000 bd4f 	b.w	8001c2c <touchgfx_taskEntry>

0800118e <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800118e:	6840      	ldr	r0, [r0, #4]
    }
 8001190:	4770      	bx	lr

08001192 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001192:	6041      	str	r1, [r0, #4]
    }
 8001194:	4770      	bx	lr
	...

08001198 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001198:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800119c:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 80011a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80011a4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 80011a8:	4b05      	ldr	r3, [pc, #20]	; (80011c0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 80011aa:	4a06      	ldr	r2, [pc, #24]	; (80011c4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 80011ac:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
 80011b0:	430a      	orrs	r2, r1
 80011b2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 80011b6:	681a      	ldr	r2, [r3, #0]
 80011b8:	f042 0201 	orr.w	r2, r2, #1
 80011bc:	601a      	str	r2, [r3, #0]
}
 80011be:	4770      	bx	lr
 80011c0:	e0001000 	.word	0xe0001000
 80011c4:	c5acce55 	.word	0xc5acce55

080011c8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80011c8:	1a51      	subs	r1, r2, r1
 80011ca:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 80011ce:	fbb1 f0f3 	udiv	r0, r1, r3
 80011d2:	4770      	bx	lr

080011d4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 80011d4:	4b01      	ldr	r3, [pc, #4]	; (80011dc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 80011d6:	6858      	ldr	r0, [r3, #4]
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e0001000 	.word	0xe0001000

080011e0 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80011e0:	4770      	bx	lr

080011e2 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80011e2:	b510      	push	{r4, lr}
 80011e4:	4604      	mov	r4, r0
 80011e6:	210c      	movs	r1, #12
 80011e8:	f019 f8c4 	bl	801a374 <_ZdlPvj>
 80011ec:	4620      	mov	r0, r4
 80011ee:	bd10      	pop	{r4, pc}

080011f0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011f0:	6803      	ldr	r3, [r0, #0]
{
 80011f2:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011f4:	691b      	ldr	r3, [r3, #16]
{
 80011f6:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80011f8:	b131      	cbz	r1, 8001208 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011fa:	4798      	blx	r3
 80011fc:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80011fe:	6863      	ldr	r3, [r4, #4]
 8001200:	1a9b      	subs	r3, r3, r2
 8001202:	4418      	add	r0, r3
 8001204:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001206:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001208:	4798      	blx	r3
 800120a:	60a0      	str	r0, [r4, #8]
}
 800120c:	e7fb      	b.n	8001206 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800120e <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800120e:	4770      	bx	lr

08001210 <_ZN20STM32TouchController4initEv>:
#include <stm32h735g_discovery_ts.h>
#include <TouchGFXHAL.hpp>
#include <cmsis_os.h>

void STM32TouchController::init()
{
 8001210:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    TS_Init_t hTS;

    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
 8001212:	2308      	movs	r3, #8
 8001214:	2000      	movs	r0, #0
    hTS.Width = touchgfx::HAL::FRAME_BUFFER_WIDTH;
    hTS.Height = touchgfx::HAL::FRAME_BUFFER_HEIGHT;
    BSP_TS_Init(0, &hTS);
 8001216:	4669      	mov	r1, sp
    hTS.Accuracy = 0;
 8001218:	e9cd 3002 	strd	r3, r0, [sp, #8]
    hTS.Width = touchgfx::HAL::FRAME_BUFFER_WIDTH;
 800121c:	4b05      	ldr	r3, [pc, #20]	; (8001234 <_ZN20STM32TouchController4initEv+0x24>)
 800121e:	881b      	ldrh	r3, [r3, #0]
 8001220:	9300      	str	r3, [sp, #0]
    hTS.Height = touchgfx::HAL::FRAME_BUFFER_HEIGHT;
 8001222:	4b05      	ldr	r3, [pc, #20]	; (8001238 <_ZN20STM32TouchController4initEv+0x28>)
 8001224:	881b      	ldrh	r3, [r3, #0]
 8001226:	9301      	str	r3, [sp, #4]
    BSP_TS_Init(0, &hTS);
 8001228:	f002 fff8 	bl	800421c <BSP_TS_Init>
}
 800122c:	b005      	add	sp, #20
 800122e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001232:	bf00      	nop
 8001234:	24006bd2 	.word	0x24006bd2
 8001238:	24006bd4 	.word	0x24006bd4

0800123c <_ZN20STM32TouchControllerD0Ev>:
 800123c:	b510      	push	{r4, lr}
 800123e:	4604      	mov	r4, r0
 8001240:	2104      	movs	r1, #4
 8001242:	f019 f897 	bl	801a374 <_ZdlPvj>
 8001246:	4620      	mov	r0, r4
 8001248:	bd10      	pop	{r4, pc}

0800124a <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800124a:	b530      	push	{r4, r5, lr}
 800124c:	b085      	sub	sp, #20
    TS_State_t TS_State = { 0 };
 800124e:	2000      	movs	r0, #0
{
 8001250:	460d      	mov	r5, r1
 8001252:	4614      	mov	r4, r2

    /* This should never fail !! */
    if (BSP_TS_GetState(0, &TS_State) != BSP_ERROR_NONE)
 8001254:	a901      	add	r1, sp, #4
    TS_State_t TS_State = { 0 };
 8001256:	9003      	str	r0, [sp, #12]
 8001258:	e9cd 0001 	strd	r0, r0, [sp, #4]
    if (BSP_TS_GetState(0, &TS_State) != BSP_ERROR_NONE)
 800125c:	f003 f860 	bl	8004320 <BSP_TS_GetState>
 8001260:	b140      	cbz	r0, 8001274 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8001262:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001266:	f383 8811 	msr	BASEPRI, r3
 800126a:	f3bf 8f6f 	isb	sy
 800126e:	f3bf 8f4f 	dsb	sy
    {
        configASSERT(0);
 8001272:	e7fe      	b.n	8001272 <_ZN20STM32TouchController11sampleTouchERlS0_+0x28>
    }

    if (TS_State.TouchDetected)
 8001274:	9801      	ldr	r0, [sp, #4]
 8001276:	b120      	cbz	r0, 8001282 <_ZN20STM32TouchController11sampleTouchERlS0_+0x38>
    {
        x = TS_State.TouchX;
 8001278:	9b02      	ldr	r3, [sp, #8]
        y = TS_State.TouchY;

        return true;
 800127a:	2001      	movs	r0, #1
        x = TS_State.TouchX;
 800127c:	602b      	str	r3, [r5, #0]
        y = TS_State.TouchY;
 800127e:	9b03      	ldr	r3, [sp, #12]
 8001280:	6023      	str	r3, [r4, #0]
    }

    return false;
}
 8001282:	b005      	add	sp, #20
 8001284:	bd30      	pop	{r4, r5, pc}
	...

08001288 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001288:	2803      	cmp	r0, #3
 800128a:	d825      	bhi.n	80012d8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>
 800128c:	e8df f000 	tbb	[pc, r0]
 8001290:	1c130b02 	.word	0x1c130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001294:	4b11      	ldr	r3, [pc, #68]	; (80012dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001296:	2101      	movs	r1, #1
 8001298:	4811      	ldr	r0, [pc, #68]	; (80012e0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 800129a:	681a      	ldr	r2, [r3, #0]
 800129c:	fab2 f282 	clz	r2, r2
 80012a0:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80012a2:	f003 bc91 	b.w	8004bc8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80012a6:	4b0d      	ldr	r3, [pc, #52]	; (80012dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80012a8:	2108      	movs	r1, #8
 80012aa:	480e      	ldr	r0, [pc, #56]	; (80012e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 80012ac:	685a      	ldr	r2, [r3, #4]
 80012ae:	fab2 f282 	clz	r2, r2
 80012b2:	0952      	lsrs	r2, r2, #5
 80012b4:	e7f5      	b.n	80012a2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80012b6:	4b09      	ldr	r3, [pc, #36]	; (80012dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80012b8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80012bc:	689a      	ldr	r2, [r3, #8]
 80012be:	fab2 f282 	clz	r2, r2
 80012c2:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80012c4:	4808      	ldr	r0, [pc, #32]	; (80012e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
 80012c6:	e7ec      	b.n	80012a2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80012c8:	4b04      	ldr	r3, [pc, #16]	; (80012dc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80012ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80012ce:	68da      	ldr	r2, [r3, #12]
 80012d0:	fab2 f282 	clz	r2, r2
 80012d4:	0952      	lsrs	r2, r2, #5
 80012d6:	e7f5      	b.n	80012c4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
#endif
        break;
    }
}
 80012d8:	4770      	bx	lr
 80012da:	bf00      	nop
 80012dc:	24000374 	.word	0x24000374
 80012e0:	58020000 	.word	0x58020000
 80012e4:	58021800 	.word	0x58021800
 80012e8:	58020400 	.word	0x58020400

080012ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80012ec:	2803      	cmp	r0, #3
 80012ee:	d825      	bhi.n	800133c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>
 80012f0:	e8df f000 	tbb	[pc, r0]
 80012f4:	1c130b02 	.word	0x1c130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80012f8:	4b11      	ldr	r3, [pc, #68]	; (8001340 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80012fa:	2101      	movs	r1, #1
 80012fc:	4811      	ldr	r0, [pc, #68]	; (8001344 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 80012fe:	681a      	ldr	r2, [r3, #0]
 8001300:	3a00      	subs	r2, #0
 8001302:	bf18      	it	ne
 8001304:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001306:	f003 bc5f 	b.w	8004bc8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800130a:	4b0d      	ldr	r3, [pc, #52]	; (8001340 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800130c:	2108      	movs	r1, #8
 800130e:	480e      	ldr	r0, [pc, #56]	; (8001348 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 8001310:	685a      	ldr	r2, [r3, #4]
 8001312:	3a00      	subs	r2, #0
 8001314:	bf18      	it	ne
 8001316:	2201      	movne	r2, #1
 8001318:	e7f5      	b.n	8001306 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800131a:	4b09      	ldr	r3, [pc, #36]	; (8001340 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800131c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001320:	689a      	ldr	r2, [r3, #8]
 8001322:	3a00      	subs	r2, #0
 8001324:	bf18      	it	ne
 8001326:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001328:	4808      	ldr	r0, [pc, #32]	; (800134c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
 800132a:	e7ec      	b.n	8001306 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800132c:	4b04      	ldr	r3, [pc, #16]	; (8001340 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800132e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001332:	68da      	ldr	r2, [r3, #12]
 8001334:	3a00      	subs	r2, #0
 8001336:	bf18      	it	ne
 8001338:	2201      	movne	r2, #1
 800133a:	e7f5      	b.n	8001328 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
#endif
        break;
    }
}
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	24000374 	.word	0x24000374
 8001344:	58020000 	.word	0x58020000
 8001348:	58021800 	.word	0x58021800
 800134c:	58020400 	.word	0x58020400

08001350 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001350:	2803      	cmp	r0, #3
 8001352:	d811      	bhi.n	8001378 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>
 8001354:	e8df f000 	tbb	[pc, r0]
 8001358:	0d090602 	.word	0x0d090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800135c:	2101      	movs	r1, #1
 800135e:	4807      	ldr	r0, [pc, #28]	; (800137c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001360:	f003 bc37 	b.w	8004bd2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001364:	2108      	movs	r1, #8
 8001366:	4806      	ldr	r0, [pc, #24]	; (8001380 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8001368:	e7fa      	b.n	8001360 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800136a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800136e:	4805      	ldr	r0, [pc, #20]	; (8001384 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
 8001370:	e7f6      	b.n	8001360 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001372:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001376:	e7fa      	b.n	800136e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
#endif
        break;
    }
}
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	58020000 	.word	0x58020000
 8001380:	58021800 	.word	0x58021800
 8001384:	58020400 	.word	0x58020400

08001388 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001388:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800138a:	2803      	cmp	r0, #3
 800138c:	d815      	bhi.n	80013ba <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x32>
 800138e:	e8df f000 	tbb	[pc, r0]
 8001392:	0a02      	.short	0x0a02
 8001394:	110d      	.short	0x110d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001396:	2101      	movs	r1, #1
 8001398:	4809      	ldr	r0, [pc, #36]	; (80013c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800139a:	f003 fc0f 	bl	8004bbc <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800139e:	1e43      	subs	r3, r0, #1
 80013a0:	4258      	negs	r0, r3
 80013a2:	4158      	adcs	r0, r3
 80013a4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80013a6:	2108      	movs	r1, #8
 80013a8:	4806      	ldr	r0, [pc, #24]	; (80013c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80013aa:	e7f6      	b.n	800139a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80013ac:	f44f 4180 	mov.w	r1, #16384	; 0x4000
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80013b0:	4805      	ldr	r0, [pc, #20]	; (80013c8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x40>)
 80013b2:	e7f2      	b.n	800139a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80013b4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013b8:	e7fa      	b.n	80013b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    switch (id)
 80013ba:	2000      	movs	r0, #0
 80013bc:	e7ef      	b.n	800139e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80013be:	bf00      	nop
 80013c0:	58020000 	.word	0x58020000
 80013c4:	58021800 	.word	0x58021800
 80013c8:	58020400 	.word	0x58020400

080013cc <_ZN8touchgfx4GPIO4initEv>:
{
 80013cc:	b570      	push	{r4, r5, r6, lr}
 80013ce:	4d08      	ldr	r5, [pc, #32]	; (80013f0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80013d0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80013d2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80013d4:	b2e0      	uxtb	r0, r4
 80013d6:	f7ff ffd7 	bl	8001388 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80013da:	b118      	cbz	r0, 80013e4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80013dc:	682b      	ldr	r3, [r5, #0]
 80013de:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80013e0:	bf18      	it	ne
 80013e2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80013e4:	3401      	adds	r4, #1
 80013e6:	3504      	adds	r5, #4
 80013e8:	2c05      	cmp	r4, #5
 80013ea:	d1f3      	bne.n	80013d4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80013ec:	bd70      	pop	{r4, r5, r6, pc}
 80013ee:	bf00      	nop
 80013f0:	24000374 	.word	0x24000374

080013f4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80013f4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80013f6:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80013fa:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80013fe:	4770      	bx	lr

08001400 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001400:	2000      	movs	r0, #0
 8001402:	4770      	bx	lr

08001404 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001404:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001406:	3900      	subs	r1, #0
 8001408:	4b02      	ldr	r3, [pc, #8]	; (8001414 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800140a:	bf18      	it	ne
 800140c:	2101      	movne	r1, #1
 800140e:	7019      	strb	r1, [r3, #0]
    }
 8001410:	4770      	bx	lr
 8001412:	bf00      	nop
 8001414:	24006bd7 	.word	0x24006bd7

08001418 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001418:	2000      	movs	r0, #0
 800141a:	4770      	bx	lr

0800141c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800141c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800141e:	b10b      	cbz	r3, 8001424 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001420:	4608      	mov	r0, r1
 8001422:	4718      	bx	r3
        }
    }
 8001424:	4770      	bx	lr

08001426 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001426:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800142a:	4770      	bx	lr

0800142c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800142c:	6840      	ldr	r0, [r0, #4]
 800142e:	6803      	ldr	r3, [r0, #0]
 8001430:	699b      	ldr	r3, [r3, #24]
 8001432:	4718      	bx	r3

08001434 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001434:	4770      	bx	lr
	...

08001438 <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800143c:	f000 fccc 	bl	8001dd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0x700C0000);
 8001440:	4a0a      	ldr	r2, [pc, #40]	; (800146c <_ZN11TouchGFXHAL10initializeEv+0x34>)
 8001442:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8001446:	6823      	ldr	r3, [r4, #0]
 8001448:	4620      	mov	r0, r4
 800144a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800144e:	4b08      	ldr	r3, [pc, #32]	; (8001470 <_ZN11TouchGFXHAL10initializeEv+0x38>)
 8001450:	47a8      	blx	r5

    GPIO::init();
    instrumentation.init();
 8001452:	f104 057c 	add.w	r5, r4, #124	; 0x7c
    GPIO::init();
 8001456:	f7ff ffb9 	bl	80013cc <_ZN8touchgfx4GPIO4initEv>
    instrumentation.init();
 800145a:	4628      	mov	r0, r5
 800145c:	f7ff fe9c 	bl	8001198 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001460:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001462:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001464:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 8001468:	bd38      	pop	{r3, r4, r5, pc}
 800146a:	bf00      	nop
 800146c:	70060000 	.word	0x70060000
 8001470:	700c0000 	.word	0x700c0000

08001474 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001474:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001476:	6803      	ldr	r3, [r0, #0]
{
 8001478:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800147a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800147e:	4798      	blx	r3
    enableInterrupts();
 8001480:	6823      	ldr	r3, [r4, #0]
 8001482:	4620      	mov	r0, r4
 8001484:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001486:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001488:	f000 f92a 	bl	80016e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800148c:	6823      	ldr	r3, [r4, #0]
 800148e:	4620      	mov	r0, r4
 8001490:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001492:	4798      	blx	r3

    /* Assert display enable LCD_DISP_CTRL pin */
    HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8001494:	2201      	movs	r2, #1
 8001496:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800149a:	4808      	ldr	r0, [pc, #32]	; (80014bc <_ZN11TouchGFXHAL9taskEntryEv+0x48>)
 800149c:	f003 fb94 	bl	8004bc8 <HAL_GPIO_WritePin>
    /* Assert back light LCD_BL_CTRL pin */
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80014a0:	2201      	movs	r2, #1
 80014a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80014a6:	4806      	ldr	r0, [pc, #24]	; (80014c0 <_ZN11TouchGFXHAL9taskEntryEv+0x4c>)
 80014a8:	f003 fb8e 	bl	8004bc8 <HAL_GPIO_WritePin>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80014ac:	f000 f918 	bl	80016e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80014b0:	6823      	ldr	r3, [r4, #0]
 80014b2:	4620      	mov	r0, r4
 80014b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80014b6:	4798      	blx	r3
    for (;;)
 80014b8:	e7f8      	b.n	80014ac <_ZN11TouchGFXHAL9taskEntryEv+0x38>
 80014ba:	bf00      	nop
 80014bc:	58020c00 	.word	0x58020c00
 80014c0:	58021800 	.word	0x58021800

080014c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80014c4:	b510      	push	{r4, lr}
 80014c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80014c8:	f00a fb40 	bl	800bb4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80014cc:	6823      	ldr	r3, [r4, #0]
 80014ce:	4620      	mov	r0, r4
 80014d0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80014d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80014d8:	4718      	bx	r3

080014da <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80014da:	f000 bc6f 	b.w	8001dbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080014de <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80014de:	f000 bc73 	b.w	8001dc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
	...

080014e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80014e4:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80014e6:	f000 fc95 	bl	8001e14 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80014ea:	4910      	ldr	r1, [pc, #64]	; (800152c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 80014ec:	2300      	movs	r3, #0
 80014ee:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80014f2:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80014f6:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80014fa:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80014fe:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001502:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001506:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001508:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800150c:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800150e:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8001512:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001514:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8001518:	d2f9      	bcs.n	800150e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 800151a:	3b20      	subs	r3, #32
 800151c:	f113 0f20 	cmn.w	r3, #32
 8001520:	d1f2      	bne.n	8001508 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 8001522:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001526:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 800152a:	bd70      	pop	{r4, r5, r6, pc}
 800152c:	e000ed00 	.word	0xe000ed00

08001530 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001530:	f000 bc20 	b.w	8001d74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001534 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001534:	f000 bcb6 	b.w	8001ea4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001538 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001538:	f000 bca0 	b.w	8001e7c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800153c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800153c:	f000 bc24 	b.w	8001d88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001540 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001540:	f009 bd70 	b.w	800b024 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001544 <_ZN11TouchGFXHALD0Ev>:
 8001544:	b510      	push	{r4, lr}
 8001546:	4604      	mov	r4, r0
 8001548:	2188      	movs	r1, #136	; 0x88
 800154a:	f018 ff13 	bl	801a374 <_ZdlPvj>
 800154e:	4620      	mov	r0, r4
 8001550:	bd10      	pop	{r4, pc}

08001552 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001552:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001556:	b11b      	cbz	r3, 8001560 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001558:	6840      	ldr	r0, [r0, #4]
 800155a:	6803      	ldr	r3, [r0, #0]
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	4718      	bx	r3
    }
 8001560:	4618      	mov	r0, r3
 8001562:	4770      	bx	lr

08001564 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001564:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001568:	4b0d      	ldr	r3, [pc, #52]	; (80015a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800156a:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800156c:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001570:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001572:	428c      	cmp	r4, r1
 8001574:	d009      	beq.n	800158a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001576:	b93a      	cbnz	r2, 8001588 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001578:	490a      	ldr	r1, [pc, #40]	; (80015a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800157a:	4a0b      	ldr	r2, [pc, #44]	; (80015a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800157c:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800157e:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001580:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001582:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001584:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001586:	701a      	strb	r2, [r3, #0]
        }
    }
 8001588:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800158a:	2a00      	cmp	r2, #0
 800158c:	d0fc      	beq.n	8001588 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800158e:	4a06      	ldr	r2, [pc, #24]	; (80015a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001590:	4904      	ldr	r1, [pc, #16]	; (80015a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001592:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001594:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001596:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001598:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800159a:	2200      	movs	r2, #0
 800159c:	e7f3      	b.n	8001586 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800159e:	bf00      	nop
 80015a0:	24006bd0 	.word	0x24006bd0
 80015a4:	24006bce 	.word	0x24006bce
 80015a8:	24006bcc 	.word	0x24006bcc

080015ac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80015ac:	b570      	push	{r4, r5, r6, lr}
 80015ae:	460d      	mov	r5, r1
 80015b0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80015b2:	b935      	cbnz	r5, 80015c2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80015b4:	4b09      	ldr	r3, [pc, #36]	; (80015dc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80015b6:	f240 21d2 	movw	r1, #722	; 0x2d2
 80015ba:	4a09      	ldr	r2, [pc, #36]	; (80015e0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80015bc:	4809      	ldr	r0, [pc, #36]	; (80015e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80015be:	f018 ff07 	bl	801a3d0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80015c2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80015c6:	3a00      	subs	r2, #0
 80015c8:	4b07      	ldr	r3, [pc, #28]	; (80015e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80015ca:	bf18      	it	ne
 80015cc:	2201      	movne	r2, #1
 80015ce:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80015d0:	6803      	ldr	r3, [r0, #0]
    }
 80015d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80015d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80015da:	4718      	bx	r3
 80015dc:	0801b4f8 	.word	0x0801b4f8
 80015e0:	0801b530 	.word	0x0801b530
 80015e4:	0801b57e 	.word	0x0801b57e
 80015e8:	24006bd6 	.word	0x24006bd6

080015ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80015ec:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80015ee:	4b09      	ldr	r3, [pc, #36]	; (8001614 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80015f0:	881b      	ldrh	r3, [r3, #0]
 80015f2:	428b      	cmp	r3, r1
 80015f4:	d803      	bhi.n	80015fe <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80015f6:	4b08      	ldr	r3, [pc, #32]	; (8001618 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80015f8:	881b      	ldrh	r3, [r3, #0]
 80015fa:	4293      	cmp	r3, r2
 80015fc:	d905      	bls.n	800160a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80015fe:	4b07      	ldr	r3, [pc, #28]	; (800161c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001600:	219e      	movs	r1, #158	; 0x9e
 8001602:	4a07      	ldr	r2, [pc, #28]	; (8001620 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001604:	4807      	ldr	r0, [pc, #28]	; (8001624 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001606:	f018 fee3 	bl	801a3d0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800160a:	4b07      	ldr	r3, [pc, #28]	; (8001628 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800160c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800160e:	4b07      	ldr	r3, [pc, #28]	; (800162c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001610:	801a      	strh	r2, [r3, #0]
    }
 8001612:	bd08      	pop	{r3, pc}
 8001614:	24006bcc 	.word	0x24006bcc
 8001618:	24006bce 	.word	0x24006bce
 800161c:	0801b5c3 	.word	0x0801b5c3
 8001620:	0801b626 	.word	0x0801b626
 8001624:	0801b57e 	.word	0x0801b57e
 8001628:	24006bd2 	.word	0x24006bd2
 800162c:	24006bd4 	.word	0x24006bd4

08001630 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001630:	4601      	mov	r1, r0
 8001632:	b508      	push	{r3, lr}
        return instance;
 8001634:	4b03      	ldr	r3, [pc, #12]	; (8001644 <IdleTaskHook+0x14>)
 8001636:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001638:	b101      	cbz	r1, 800163c <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800163a:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 800163c:	f00a faa0 	bl	800bb80 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001640:	2001      	movs	r0, #1
 8001642:	bd08      	pop	{r3, pc}
 8001644:	24006bd8 	.word	0x24006bd8

08001648 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001648:	2101      	movs	r1, #1
 800164a:	2200      	movs	r2, #0
{
 800164c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800164e:	4608      	mov	r0, r1
 8001650:	f006 fb2f 	bl	8007cb2 <osSemaphoreNew>
 8001654:	4b0a      	ldr	r3, [pc, #40]	; (8001680 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001656:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001658:	b928      	cbnz	r0, 8001666 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800165a:	4b0a      	ldr	r3, [pc, #40]	; (8001684 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800165c:	2128      	movs	r1, #40	; 0x28
 800165e:	4a0a      	ldr	r2, [pc, #40]	; (8001688 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001660:	480a      	ldr	r0, [pc, #40]	; (800168c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001662:	f018 feb5 	bl	801a3d0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001666:	2200      	movs	r2, #0
 8001668:	2104      	movs	r1, #4
 800166a:	2001      	movs	r0, #1
 800166c:	f006 fbbe 	bl	8007dec <osMessageQueueNew>
 8001670:	4b07      	ldr	r3, [pc, #28]	; (8001690 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001672:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001674:	b918      	cbnz	r0, 800167e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001676:	4b07      	ldr	r3, [pc, #28]	; (8001694 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001678:	212c      	movs	r1, #44	; 0x2c
 800167a:	4a03      	ldr	r2, [pc, #12]	; (8001688 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800167c:	e7f0      	b.n	8001660 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800167e:	bd08      	pop	{r3, pc}
 8001680:	24000388 	.word	0x24000388
 8001684:	0801b744 	.word	0x0801b744
 8001688:	0801b78d 	.word	0x0801b78d
 800168c:	0801b7bc 	.word	0x0801b7bc
 8001690:	24000384 	.word	0x24000384
 8001694:	0801b801 	.word	0x0801b801

08001698 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001698:	4b02      	ldr	r3, [pc, #8]	; (80016a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800169a:	f04f 31ff 	mov.w	r1, #4294967295
 800169e:	6818      	ldr	r0, [r3, #0]
 80016a0:	f006 bb51 	b.w	8007d46 <osSemaphoreAcquire>
 80016a4:	24000388 	.word	0x24000388

080016a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80016a8:	4b01      	ldr	r3, [pc, #4]	; (80016b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80016aa:	6818      	ldr	r0, [r3, #0]
 80016ac:	f006 bb76 	b.w	8007d9c <osSemaphoreRelease>
 80016b0:	24000388 	.word	0x24000388

080016b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80016b4:	4b02      	ldr	r3, [pc, #8]	; (80016c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80016b6:	2100      	movs	r1, #0
 80016b8:	6818      	ldr	r0, [r3, #0]
 80016ba:	f006 bb44 	b.w	8007d46 <osSemaphoreAcquire>
 80016be:	bf00      	nop
 80016c0:	24000388 	.word	0x24000388

080016c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80016c4:	f7ff bff0 	b.w	80016a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080016c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80016c8:	2300      	movs	r3, #0
 80016ca:	4803      	ldr	r0, [pc, #12]	; (80016d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80016cc:	4903      	ldr	r1, [pc, #12]	; (80016dc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80016ce:	461a      	mov	r2, r3
 80016d0:	6800      	ldr	r0, [r0, #0]
 80016d2:	f006 bbc6 	b.w	8007e62 <osMessageQueuePut>
 80016d6:	bf00      	nop
 80016d8:	24000384 	.word	0x24000384
 80016dc:	24000004 	.word	0x24000004

080016e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80016e0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80016e2:	2300      	movs	r3, #0
 80016e4:	4c07      	ldr	r4, [pc, #28]	; (8001704 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80016e6:	a901      	add	r1, sp, #4
 80016e8:	461a      	mov	r2, r3
 80016ea:	6820      	ldr	r0, [r4, #0]
 80016ec:	f006 fbe9 	bl	8007ec2 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80016f0:	f04f 33ff 	mov.w	r3, #4294967295
 80016f4:	2200      	movs	r2, #0
 80016f6:	a901      	add	r1, sp, #4
 80016f8:	6820      	ldr	r0, [r4, #0]
 80016fa:	f006 fbe2 	bl	8007ec2 <osMessageQueueGet>
}
 80016fe:	b002      	add	sp, #8
 8001700:	bd10      	pop	{r4, pc}
 8001702:	bf00      	nop
 8001704:	24000384 	.word	0x24000384

08001708 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001708:	6803      	ldr	r3, [r0, #0]
 800170a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800170c:	4718      	bx	r3

0800170e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800170e:	2001      	movs	r0, #1
 8001710:	4770      	bx	lr

08001712 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001712:	6803      	ldr	r3, [r0, #0]
 8001714:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001716:	4718      	bx	r3

08001718 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001718:	f240 30ef 	movw	r0, #1007	; 0x3ef
 800171c:	4770      	bx	lr
	...

08001720 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001720:	4b05      	ldr	r3, [pc, #20]	; (8001738 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001722:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001726:	6003      	str	r3, [r0, #0]
 8001728:	4b04      	ldr	r3, [pc, #16]	; (800173c <_ZN8STM32DMAD1Ev+0x1c>)
 800172a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800172e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001732:	f3bf 8f6f 	isb	sy
}
 8001736:	4770      	bx	lr
 8001738:	0801b998 	.word	0x0801b998
 800173c:	e000e100 	.word	0xe000e100

08001740 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001740:	b510      	push	{r4, lr}
 8001742:	4604      	mov	r4, r0
}
 8001744:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001748:	f7ff ffea 	bl	8001720 <_ZN8STM32DMAD1Ev>
 800174c:	4620      	mov	r0, r4
 800174e:	f018 fe11 	bl	801a374 <_ZdlPvj>
 8001752:	4620      	mov	r0, r4
 8001754:	bd10      	pop	{r4, pc}
	...

08001758 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001758:	4b0f      	ldr	r3, [pc, #60]	; (8001798 <_ZN8STM32DMA10initializeEv+0x40>)
{
 800175a:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800175c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001760:	f042 0210 	orr.w	r2, r2, #16
 8001764:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001768:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 800176c:	f002 0210 	and.w	r2, r2, #16
 8001770:	9201      	str	r2, [sp, #4]
 8001772:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001774:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001776:	f042 0210 	orr.w	r2, r2, #16
 800177a:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800177c:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800177e:	f022 0210 	bic.w	r2, r2, #16
 8001782:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001784:	4b05      	ldr	r3, [pc, #20]	; (800179c <_ZN8STM32DMA10initializeEv+0x44>)
 8001786:	4a06      	ldr	r2, [pc, #24]	; (80017a0 <_ZN8STM32DMA10initializeEv+0x48>)
 8001788:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800178a:	4b06      	ldr	r3, [pc, #24]	; (80017a4 <_ZN8STM32DMA10initializeEv+0x4c>)
 800178c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001790:	609a      	str	r2, [r3, #8]
}
 8001792:	b002      	add	sp, #8
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop
 8001798:	58024400 	.word	0x58024400
 800179c:	24000158 	.word	0x24000158
 80017a0:	080017a9 	.word	0x080017a9
 80017a4:	e000e100 	.word	0xe000e100

080017a8 <DMA2D_XferCpltCallback>:
 80017a8:	4b02      	ldr	r3, [pc, #8]	; (80017b4 <DMA2D_XferCpltCallback+0xc>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80017ae:	6803      	ldr	r3, [r0, #0]
 80017b0:	695b      	ldr	r3, [r3, #20]
 80017b2:	4718      	bx	r3
 80017b4:	24006bd8 	.word	0x24006bd8

080017b8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80017b8:	b570      	push	{r4, r5, r6, lr}
 80017ba:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80017bc:	4b0a      	ldr	r3, [pc, #40]	; (80017e8 <_ZN8STM32DMAC1Ev+0x30>)
 80017be:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80017c0:	2600      	movs	r6, #0
 80017c2:	4625      	mov	r5, r4
 80017c4:	2260      	movs	r2, #96	; 0x60
 80017c6:	6060      	str	r0, [r4, #4]
 80017c8:	7226      	strb	r6, [r4, #8]
 80017ca:	7266      	strb	r6, [r4, #9]
 80017cc:	f845 3b20 	str.w	r3, [r5], #32
 80017d0:	4629      	mov	r1, r5
 80017d2:	f00a fb11 	bl	800bdf8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80017d6:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80017da:	60ee      	str	r6, [r5, #12]
 80017dc:	3524      	adds	r5, #36	; 0x24
 80017de:	42ab      	cmp	r3, r5
 80017e0:	d1fb      	bne.n	80017da <_ZN8STM32DMAC1Ev+0x22>
}
 80017e2:	4620      	mov	r0, r4
 80017e4:	bd70      	pop	{r4, r5, r6, pc}
 80017e6:	bf00      	nop
 80017e8:	0801b998 	.word	0x0801b998

080017ec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80017ec:	b508      	push	{r3, lr}
    switch (format)
 80017ee:	290b      	cmp	r1, #11
 80017f0:	d80b      	bhi.n	800180a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80017f2:	e8df f001 	tbb	[pc, r1]
 80017f6:	0612      	.short	0x0612
 80017f8:	0a0a0a10 	.word	0x0a0a0a10
 80017fc:	0808080a 	.word	0x0808080a
 8001800:	0808      	.short	0x0808
 8001802:	2001      	movs	r0, #1
}
 8001804:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001806:	2005      	movs	r0, #5
        break;
 8001808:	e7fc      	b.n	8001804 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800180a:	4b05      	ldr	r3, [pc, #20]	; (8001820 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800180c:	2165      	movs	r1, #101	; 0x65
 800180e:	4a05      	ldr	r2, [pc, #20]	; (8001824 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001810:	4805      	ldr	r0, [pc, #20]	; (8001828 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001812:	f018 fddd 	bl	801a3d0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001816:	2000      	movs	r0, #0
 8001818:	e7f4      	b.n	8001804 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800181a:	2002      	movs	r0, #2
    return dma2dColorMode;
 800181c:	e7f2      	b.n	8001804 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800181e:	bf00      	nop
 8001820:	0801b843 	.word	0x0801b843
 8001824:	0801b85e 	.word	0x0801b85e
 8001828:	0801b8a8 	.word	0x0801b8a8

0800182c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 800182c:	b508      	push	{r3, lr}
    switch (format)
 800182e:	290a      	cmp	r1, #10
 8001830:	d809      	bhi.n	8001846 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001832:	e8df f001 	tbb	[pc, r1]
 8001836:	0610      	.short	0x0610
 8001838:	0808080e 	.word	0x0808080e
 800183c:	06060608 	.word	0x06060608
 8001840:	06          	.byte	0x06
 8001841:	00          	.byte	0x00
 8001842:	2001      	movs	r0, #1
}
 8001844:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001846:	4b05      	ldr	r3, [pc, #20]	; (800185c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001848:	2186      	movs	r1, #134	; 0x86
 800184a:	4a05      	ldr	r2, [pc, #20]	; (8001860 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800184c:	4805      	ldr	r0, [pc, #20]	; (8001864 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800184e:	f018 fdbf 	bl	801a3d0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001852:	2000      	movs	r0, #0
 8001854:	e7f6      	b.n	8001844 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001856:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001858:	e7f4      	b.n	8001844 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800185a:	bf00      	nop
 800185c:	0801b843 	.word	0x0801b843
 8001860:	0801b8eb 	.word	0x0801b8eb
 8001864:	0801b8a8 	.word	0x0801b8a8

08001868 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001868:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800186c:	7f4f      	ldrb	r7, [r1, #29]
{
 800186e:	460c      	mov	r4, r1
 8001870:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001872:	4639      	mov	r1, r7
 8001874:	f7ff ffba 	bl	80017ec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001878:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800187c:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800187e:	4648      	mov	r0, r9
 8001880:	4641      	mov	r1, r8
 8001882:	f7ff ffb3 	bl	80017ec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001886:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001888:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800188a:	4648      	mov	r0, r9
 800188c:	f7ff ffce 	bl	800182c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001890:	8aa1      	ldrh	r1, [r4, #20]
 8001892:	8b62      	ldrh	r2, [r4, #26]
 8001894:	4b42      	ldr	r3, [pc, #264]	; (80019a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001896:	1a52      	subs	r2, r2, r1
 8001898:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800189a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800189c:	8b22      	ldrh	r2, [r4, #24]
 800189e:	1a52      	subs	r2, r2, r1
 80018a0:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80018a2:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80018a4:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80018a6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018aa:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80018ac:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80018ae:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018b0:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80018b2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80018b4:	6820      	ldr	r0, [r4, #0]
 80018b6:	7f22      	ldrb	r2, [r4, #28]
 80018b8:	2880      	cmp	r0, #128	; 0x80
 80018ba:	d021      	beq.n	8001900 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x98>
 80018bc:	d80f      	bhi.n	80018de <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x76>
 80018be:	2820      	cmp	r0, #32
 80018c0:	d064      	beq.n	800198c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80018c2:	2840      	cmp	r0, #64	; 0x40
 80018c4:	d062      	beq.n	800198c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80018c6:	2804      	cmp	r0, #4
 80018c8:	d05a      	beq.n	8001980 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x118>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018ca:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80018ce:	4b34      	ldr	r3, [pc, #208]	; (80019a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80018d0:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018d2:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 80018d6:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80018d8:	d05e      	beq.n	8001998 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80018da:	4a32      	ldr	r2, [pc, #200]	; (80019a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80018dc:	e03d      	b.n	800195a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
    switch (blitOp.operation)
 80018de:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80018e2:	d004      	beq.n	80018ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 80018e4:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80018e8:	d1ef      	bne.n	80018ca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x62>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018ea:	482f      	ldr	r0, [pc, #188]	; (80019a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80018ec:	e000      	b.n	80018f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018ee:	482f      	ldr	r0, [pc, #188]	; (80019ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018f0:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 80018f4:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80018f6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80018f8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018fa:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018fc:	6159      	str	r1, [r3, #20]
 80018fe:	e02b      	b.n	8001958 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001900:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001904:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001906:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 800190a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800190c:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800190e:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001910:	1d01      	adds	r1, r0, #4
 8001912:	62d9      	str	r1, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 8001914:	7801      	ldrb	r1, [r0, #0]
 8001916:	b141      	cbz	r1, 800192a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
 8001918:	2901      	cmp	r1, #1
 800191a:	d021      	beq.n	8001960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
                assert(0 && "Unsupported format");
 800191c:	4b24      	ldr	r3, [pc, #144]	; (80019b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800191e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001922:	4a24      	ldr	r2, [pc, #144]	; (80019b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001924:	4824      	ldr	r0, [pc, #144]	; (80019b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8001926:	f018 fd53 	bl	801a3d0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800192a:	69da      	ldr	r2, [r3, #28]
 800192c:	8841      	ldrh	r1, [r0, #2]
 800192e:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001932:	3901      	subs	r1, #1
 8001934:	f022 0210 	bic.w	r2, r2, #16
 8001938:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800193c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 800193e:	2201      	movs	r2, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001940:	4b17      	ldr	r3, [pc, #92]	; (80019a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001942:	69d9      	ldr	r1, [r3, #28]
 8001944:	f041 0120 	orr.w	r1, r1, #32
 8001948:	61d9      	str	r1, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800194a:	69d9      	ldr	r1, [r3, #28]
 800194c:	0689      	lsls	r1, r1, #26
 800194e:	d4fc      	bmi.n	800194a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001950:	2110      	movs	r1, #16
 8001952:	6099      	str	r1, [r3, #8]
            if (blend)
 8001954:	2a00      	cmp	r2, #0
 8001956:	d0c0      	beq.n	80018da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001958:	4a18      	ldr	r2, [pc, #96]	; (80019bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800195a:	601a      	str	r2, [r3, #0]
        }

        break;
    }
}
 800195c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001960:	69d9      	ldr	r1, [r3, #28]
                if (blitOp.alpha == 255)
 8001962:	3aff      	subs	r2, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001964:	8840      	ldrh	r0, [r0, #2]
 8001966:	f421 417f 	bic.w	r1, r1, #65280	; 0xff00
                if (blitOp.alpha == 255)
 800196a:	bf18      	it	ne
 800196c:	2201      	movne	r2, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800196e:	3801      	subs	r0, #1
 8001970:	f021 0110 	bic.w	r1, r1, #16
 8001974:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8001978:	f041 0110 	orr.w	r1, r1, #16
 800197c:	61d9      	str	r1, [r3, #28]
                break;
 800197e:	e7df      	b.n	8001940 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001980:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001984:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001988:	61da      	str	r2, [r3, #28]
 800198a:	e7b6      	b.n	80018fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
 800198c:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001990:	4b03      	ldr	r3, [pc, #12]	; (80019a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001992:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001996:	e7f7      	b.n	8001988 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001998:	f240 2201 	movw	r2, #513	; 0x201
 800199c:	e7dd      	b.n	800195a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
 800199e:	bf00      	nop
 80019a0:	52001000 	.word	0x52001000
 80019a4:	00010201 	.word	0x00010201
 80019a8:	00020009 	.word	0x00020009
 80019ac:	0002000a 	.word	0x0002000a
 80019b0:	0801b936 	.word	0x0801b936
 80019b4:	0801b950 	.word	0x0801b950
 80019b8:	0801b8a8 	.word	0x0801b8a8
 80019bc:	00020201 	.word	0x00020201

080019c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80019c0:	b538      	push	{r3, r4, r5, lr}
 80019c2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80019c4:	7f89      	ldrb	r1, [r1, #30]
 80019c6:	f7ff ff31 	bl	800182c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019ca:	4b12      	ldr	r3, [pc, #72]	; (8001a14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x54>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019cc:	8aa5      	ldrh	r5, [r4, #20]
 80019ce:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80019d0:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019d2:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019d6:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80019d8:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019da:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019dc:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019de:	1b52      	subs	r2, r2, r5
 80019e0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80019e2:	6825      	ldr	r5, [r4, #0]
 80019e4:	2d08      	cmp	r5, #8
 80019e6:	d10e      	bne.n	8001a06 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019e8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019ea:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80019ec:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80019ee:	4a0a      	ldr	r2, [pc, #40]	; (8001a18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>)
 80019f0:	7f20      	ldrb	r0, [r4, #28]
 80019f2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80019f6:	61da      	str	r2, [r3, #28]
 80019f8:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80019fa:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80019fc:	4a07      	ldr	r2, [pc, #28]	; (8001a1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019fe:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a00:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a02:	601a      	str	r2, [r3, #0]
    }
}
 8001a04:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001a06:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001a08:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001a0a:	611a      	str	r2, [r3, #16]
 8001a0c:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8001a0e:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001a10:	4a03      	ldr	r2, [pc, #12]	; (8001a20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>)
 8001a12:	e7f6      	b.n	8001a02 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001a14:	52001000 	.word	0x52001000
 8001a18:	00010009 	.word	0x00010009
 8001a1c:	00020201 	.word	0x00020201
 8001a20:	00030201 	.word	0x00030201

08001a24 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001a24:	2001      	movs	r0, #1
 8001a26:	4770      	bx	lr

08001a28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001a28:	2040      	movs	r0, #64	; 0x40
 8001a2a:	4770      	bx	lr

08001a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001a2c:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001a30:	3008      	adds	r0, #8
 8001a32:	4770      	bx	lr

08001a34 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001a34:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001a38:	3008      	adds	r0, #8
 8001a3a:	4770      	bx	lr

08001a3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a3c:	2001      	movs	r0, #1
 8001a3e:	4770      	bx	lr

08001a40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a40:	f44f 702b 	mov.w	r0, #684	; 0x2ac
 8001a44:	4770      	bx	lr

08001a46 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a46:	f44f 732b 	mov.w	r3, #684	; 0x2ac
 8001a4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a4e:	3008      	adds	r0, #8
 8001a50:	4770      	bx	lr

08001a52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a52:	f44f 732b 	mov.w	r3, #684	; 0x2ac
 8001a56:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a5a:	3008      	adds	r0, #8
 8001a5c:	4770      	bx	lr

08001a5e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a5e:	2001      	movs	r0, #1
 8001a60:	4770      	bx	lr

08001a62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a62:	2010      	movs	r0, #16
 8001a64:	4770      	bx	lr

08001a66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a66:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a6a:	3008      	adds	r0, #8
 8001a6c:	4770      	bx	lr

08001a6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a6e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a72:	3008      	adds	r0, #8
 8001a74:	4770      	bx	lr

08001a76 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenScreenNoTransition();
 8001a76:	4608      	mov	r0, r1
 8001a78:	f000 bd34 	b.w	80024e4 <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>

08001a7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001a7c:	4b03      	ldr	r3, [pc, #12]	; (8001a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001a7e:	b510      	push	{r4, lr}
 8001a80:	4604      	mov	r4, r0
 8001a82:	6003      	str	r3, [r0, #0]
 8001a84:	f008 f9c3 	bl	8009e0e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a88:	4620      	mov	r0, r4
 8001a8a:	bd10      	pop	{r4, pc}
 8001a8c:	0801ba50 	.word	0x0801ba50

08001a90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001a90:	b510      	push	{r4, lr}
 8001a92:	4604      	mov	r4, r0
 8001a94:	f7ff fff2 	bl	8001a7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001a98:	2148      	movs	r1, #72	; 0x48
 8001a9a:	4620      	mov	r0, r4
 8001a9c:	f018 fc6a 	bl	801a374 <_ZdlPvj>
 8001aa0:	4620      	mov	r0, r4
 8001aa2:	bd10      	pop	{r4, pc}

08001aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001aa4:	4b03      	ldr	r3, [pc, #12]	; (8001ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001aa6:	b510      	push	{r4, lr}
 8001aa8:	4604      	mov	r4, r0
 8001aaa:	6003      	str	r3, [r0, #0]
 8001aac:	f008 f9af 	bl	8009e0e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001ab0:	4620      	mov	r0, r4
 8001ab2:	bd10      	pop	{r4, pc}
 8001ab4:	0801ba1c 	.word	0x0801ba1c

08001ab8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ab8:	b510      	push	{r4, lr}
 8001aba:	4604      	mov	r4, r0
 8001abc:	f7ff fff2 	bl	8001aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ac0:	f44f 712d 	mov.w	r1, #692	; 0x2b4
 8001ac4:	4620      	mov	r0, r4
 8001ac6:	f018 fc55 	bl	801a374 <_ZdlPvj>
 8001aca:	4620      	mov	r0, r4
 8001acc:	bd10      	pop	{r4, pc}
	...

08001ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001ad0:	4b03      	ldr	r3, [pc, #12]	; (8001ae0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001ad2:	b510      	push	{r4, lr}
 8001ad4:	4604      	mov	r4, r0
 8001ad6:	6003      	str	r3, [r0, #0]
 8001ad8:	f008 f999 	bl	8009e0e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001adc:	4620      	mov	r0, r4
 8001ade:	bd10      	pop	{r4, pc}
 8001ae0:	0801b9e8 	.word	0x0801b9e8

08001ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ae4:	b510      	push	{r4, lr}
 8001ae6:	4604      	mov	r4, r0
 8001ae8:	f7ff fff2 	bl	8001ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001aec:	2118      	movs	r1, #24
 8001aee:	4620      	mov	r0, r4
 8001af0:	f018 fc40 	bl	801a374 <_ZdlPvj>
 8001af4:	4620      	mov	r0, r4
 8001af6:	bd10      	pop	{r4, pc}

08001af8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001af8:	4b08      	ldr	r3, [pc, #32]	; (8001b1c <_ZN12FrontendHeapD1Ev+0x24>)
 8001afa:	b510      	push	{r4, lr}
 8001afc:	4604      	mov	r4, r0
 8001afe:	6003      	str	r3, [r0, #0]
 8001b00:	f500 7038 	add.w	r0, r0, #736	; 0x2e0
 8001b04:	f7ff ffba 	bl	8001a7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001b08:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001b0c:	f7ff ffca 	bl	8001aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001b10:	f104 0014 	add.w	r0, r4, #20
 8001b14:	f7ff ffdc 	bl	8001ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18MapScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001b18:	4620      	mov	r0, r4
 8001b1a:	bd10      	pop	{r4, pc}
 8001b1c:	0801ba84 	.word	0x0801ba84

08001b20 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001b20:	b508      	push	{r3, lr}
 8001b22:	4802      	ldr	r0, [pc, #8]	; (8001b2c <__tcf_0+0xc>)
 8001b24:	f7ff ffe8 	bl	8001af8 <_ZN12FrontendHeapD1Ev>
 8001b28:	bd08      	pop	{r3, pc}
 8001b2a:	bf00      	nop
 8001b2c:	24000390 	.word	0x24000390

08001b30 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001b30:	b510      	push	{r4, lr}
 8001b32:	4604      	mov	r4, r0
 8001b34:	f7ff ffe0 	bl	8001af8 <_ZN12FrontendHeapD1Ev>
 8001b38:	f44f 6191 	mov.w	r1, #1160	; 0x488
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	f018 fc19 	bl	801a374 <_ZdlPvj>
 8001b42:	4620      	mov	r0, r4
 8001b44:	bd10      	pop	{r4, pc}
	...

08001b48 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001b48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001b4c:	f000 fa02 	bl	8001f54 <_ZN14BitmapDatabase11getInstanceEv>
 8001b50:	2400      	movs	r4, #0
 8001b52:	4605      	mov	r5, r0
 8001b54:	f000 fa02 	bl	8001f5c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001b58:	4623      	mov	r3, r4
 8001b5a:	4601      	mov	r1, r0
 8001b5c:	4622      	mov	r2, r4
 8001b5e:	4628      	mov	r0, r5
 8001b60:	9400      	str	r4, [sp, #0]
 8001b62:	f00f f975 	bl	8010e50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001b66:	4b25      	ldr	r3, [pc, #148]	; (8001bfc <touchgfx_init+0xb4>)
 8001b68:	4a25      	ldr	r2, [pc, #148]	; (8001c00 <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001b6a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001b6c:	4d25      	ldr	r5, [pc, #148]	; (8001c04 <touchgfx_init+0xbc>)
 8001b6e:	601a      	str	r2, [r3, #0]
 8001b70:	f001 f8a4 	bl	8002cbc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001b74:	4824      	ldr	r0, [pc, #144]	; (8001c08 <touchgfx_init+0xc0>)
 8001b76:	f00f f823 	bl	8010bc0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001b7a:	682b      	ldr	r3, [r5, #0]
 8001b7c:	f3bf 8f5b 	dmb	ish
 8001b80:	07db      	lsls	r3, r3, #31
 8001b82:	d435      	bmi.n	8001bf0 <touchgfx_init+0xa8>
 8001b84:	4628      	mov	r0, r5
 8001b86:	f018 fbf7 	bl	801a378 <__cxa_guard_acquire>
 8001b8a:	b388      	cbz	r0, 8001bf0 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001b8c:	4c1f      	ldr	r4, [pc, #124]	; (8001c0c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001b8e:	4b20      	ldr	r3, [pc, #128]	; (8001c10 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001b90:	f504 764b 	add.w	r6, r4, #812	; 0x32c
        : presenterStorage(pres),
 8001b94:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001b98:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
 8001b9c:	f504 7738 	add.w	r7, r4, #736	; 0x2e0
 8001ba0:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001ba2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001ba4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001ba8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001baa:	6126      	str	r6, [r4, #16]
 8001bac:	f008 f930 	bl	8009e10 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001bb0:	4b18      	ldr	r3, [pc, #96]	; (8001c14 <touchgfx_init+0xcc>)
 8001bb2:	4640      	mov	r0, r8
 8001bb4:	6163      	str	r3, [r4, #20]
 8001bb6:	f008 f92b 	bl	8009e10 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001bba:	4b17      	ldr	r3, [pc, #92]	; (8001c18 <touchgfx_init+0xd0>)
 8001bbc:	4638      	mov	r0, r7
 8001bbe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001bc0:	f008 f926 	bl	8009e10 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001bc4:	4b15      	ldr	r3, [pc, #84]	; (8001c1c <touchgfx_init+0xd4>)
 8001bc6:	f504 704a 	add.w	r0, r4, #808	; 0x328
 8001bca:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8001bce:	f001 f9a7 	bl	8002f20 <_ZN5ModelC1Ev>
 8001bd2:	4622      	mov	r2, r4
 8001bd4:	f504 714a 	add.w	r1, r4, #808	; 0x328
 8001bd8:	4630      	mov	r0, r6
 8001bda:	f001 f8e1 	bl	8002da0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001bde:	4630      	mov	r0, r6
 8001be0:	f000 fc80 	bl	80024e4 <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001be4:	480e      	ldr	r0, [pc, #56]	; (8001c20 <touchgfx_init+0xd8>)
 8001be6:	f018 fc11 	bl	801a40c <atexit>
 8001bea:	4628      	mov	r0, r5
 8001bec:	f018 fbd0 	bl	801a390 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001bf0:	480c      	ldr	r0, [pc, #48]	; (8001c24 <touchgfx_init+0xdc>)
}
 8001bf2:	b002      	add	sp, #8
 8001bf4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001bf8:	f7ff bc1e 	b.w	8001438 <_ZN11TouchGFXHAL10initializeEv>
 8001bfc:	24006c34 	.word	0x24006c34
 8001c00:	24001644 	.word	0x24001644
 8001c04:	2400038c 	.word	0x2400038c
 8001c08:	24000008 	.word	0x24000008
 8001c0c:	24000390 	.word	0x24000390
 8001c10:	0801ba84 	.word	0x0801ba84
 8001c14:	0801b9e8 	.word	0x0801b9e8
 8001c18:	0801ba1c 	.word	0x0801ba1c
 8001c1c:	0801ba50 	.word	0x0801ba50
 8001c20:	08001b21 	.word	0x08001b21
 8001c24:	240015bc 	.word	0x240015bc

08001c28 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001c28:	4770      	bx	lr
	...

08001c2c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001c2c:	4801      	ldr	r0, [pc, #4]	; (8001c34 <touchgfx_taskEntry+0x8>)
 8001c2e:	f7ff bc21 	b.w	8001474 <_ZN11TouchGFXHAL9taskEntryEv>
 8001c32:	bf00      	nop
 8001c34:	240015bc 	.word	0x240015bc

08001c38 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001c38:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001c3a:	4e25      	ldr	r6, [pc, #148]	; (8001cd0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
{
public:

    STM32TouchController() {}
 8001c3c:	4b25      	ldr	r3, [pc, #148]	; (8001cd4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001c3e:	4c26      	ldr	r4, [pc, #152]	; (8001cd8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8001c40:	4630      	mov	r0, r6
static LCD24bpp display;
 8001c42:	4d26      	ldr	r5, [pc, #152]	; (8001cdc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001c44:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001c46:	f7ff fdb7 	bl	80017b8 <_ZN8STM32DMAC1Ev>
static LCD24bpp display;
 8001c4a:	4628      	mov	r0, r5
 8001c4c:	f012 f9ae 	bl	8013fac <_ZN8touchgfx8LCD24bppC1Ev>
        : dma(dmaInterface),
 8001c50:	4b23      	ldr	r3, [pc, #140]	; (8001ce0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
 8001c52:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001c54:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c58:	4822      	ldr	r0, [pc, #136]	; (8001ce4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001c5a:	861a      	strh	r2, [r3, #48]	; 0x30
          useAuxiliaryLCD(false),
 8001c5c:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
 8001c60:	665a      	str	r2, [r3, #100]	; 0x64
          updateMCULoad(0),
 8001c62:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          touchController(touchCtrl),
 8001c66:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001c68:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8001c6c:	491e      	ldr	r1, [pc, #120]	; (8001ce8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          vSyncCompensationEnabled(false),
 8001c6e:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
        instance = this;
 8001c72:	491e      	ldr	r1, [pc, #120]	; (8001cec <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001c74:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c76:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001c7a:	8001      	strh	r1, [r0, #0]
 8001c7c:	481c      	ldr	r0, [pc, #112]	; (8001cf0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001c7e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c80:	f44f 7188 	mov.w	r1, #272	; 0x110
 8001c84:	481b      	ldr	r0, [pc, #108]	; (8001cf4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001c86:	8001      	strh	r1, [r0, #0]
 8001c88:	481b      	ldr	r0, [pc, #108]	; (8001cf8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001c8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c8c:	491b      	ldr	r1, [pc, #108]	; (8001cfc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          buttonController(0),
 8001c8e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001c92:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001c96:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001c9a:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8001c9e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8001ca2:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001ca6:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8001caa:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          lcdRef(display),
 8001cae:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_ROTATION = rotate0;
 8001cb2:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001cb4:	4912      	ldr	r1, [pc, #72]	; (8001d00 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        : cc_consumed(0),
 8001cb6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001cba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001cbe:	6019      	str	r1, [r3, #0]
          cc_begin(0),
 8001cc0:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001cc2:	4910      	ldr	r1, [pc, #64]	; (8001d04 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          cc_in(0)
 8001cc4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8001cc8:	4a0f      	ldr	r2, [pc, #60]	; (8001d08 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001cca:	6799      	str	r1, [r3, #120]	; 0x78
 8001ccc:	67da      	str	r2, [r3, #124]	; 0x7c
}
 8001cce:	bd70      	pop	{r4, r5, r6, pc}
 8001cd0:	2400081c 	.word	0x2400081c
 8001cd4:	0801b4e8 	.word	0x0801b4e8
 8001cd8:	24000818 	.word	0x24000818
 8001cdc:	24001648 	.word	0x24001648
 8001ce0:	240015bc 	.word	0x240015bc
 8001ce4:	24006bcc 	.word	0x24006bcc
 8001ce8:	01000001 	.word	0x01000001
 8001cec:	24006bd8 	.word	0x24006bd8
 8001cf0:	24006bd2 	.word	0x24006bd2
 8001cf4:	24006bce 	.word	0x24006bce
 8001cf8:	24006bd4 	.word	0x24006bd4
 8001cfc:	24006bd0 	.word	0x24006bd0
 8001d00:	0801b674 	.word	0x0801b674
 8001d04:	01010000 	.word	0x01010000
 8001d08:	0801b4c0 	.word	0x0801b4c0

08001d0c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001d0c:	4801      	ldr	r0, [pc, #4]	; (8001d14 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001d0e:	f7ff bd07 	b.w	8001720 <_ZN8STM32DMAD1Ev>
 8001d12:	bf00      	nop
 8001d14:	2400081c 	.word	0x2400081c

08001d18 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001d18:	2000      	movs	r0, #0
 8001d1a:	4770      	bx	lr

08001d1c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001d1c:	8081      	strh	r1, [r0, #4]
    }
 8001d1e:	4770      	bx	lr

08001d20 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001d20:	80c1      	strh	r1, [r0, #6]
    }
 8001d22:	4770      	bx	lr

08001d24 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001d24:	8101      	strh	r1, [r0, #8]
    }
 8001d26:	4770      	bx	lr

08001d28 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001d28:	8141      	strh	r1, [r0, #10]
    }
 8001d2a:	4770      	bx	lr

08001d2c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001d2c:	4770      	bx	lr

08001d2e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001d2e:	4770      	bx	lr

08001d30 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001d30:	4770      	bx	lr

08001d32 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001d32:	4770      	bx	lr

08001d34 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001d34:	4770      	bx	lr

08001d36 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001d36:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001d38:	88c4      	ldrh	r4, [r0, #6]
 8001d3a:	6803      	ldr	r3, [r0, #0]
 8001d3c:	1b12      	subs	r2, r2, r4
 8001d3e:	8884      	ldrh	r4, [r0, #4]
 8001d40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d42:	1b09      	subs	r1, r1, r4
 8001d44:	b212      	sxth	r2, r2
    }
 8001d46:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001d4a:	b209      	sxth	r1, r1
 8001d4c:	4718      	bx	r3

08001d4e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001d4e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001d52:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001d54:	f04f 33ff 	mov.w	r3, #4294967295
 8001d58:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001d5a:	6813      	ldr	r3, [r2, #0]
 8001d5c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001d5e:	6010      	str	r0, [r2, #0]
    }
 8001d60:	4770      	bx	lr

08001d62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001d62:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001d66:	b11a      	cbz	r2, 8001d70 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001d68:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001d6c:	b102      	cbz	r2, 8001d70 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001d6e:	6018      	str	r0, [r3, #0]
        }
    }
 8001d70:	4770      	bx	lr
	...

08001d74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d74:	4b03      	ldr	r3, [pc, #12]	; (8001d84 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001d76:	2290      	movs	r2, #144	; 0x90
 8001d78:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001d7c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001d80:	4770      	bx	lr
 8001d82:	bf00      	nop
 8001d84:	e000e100 	.word	0xe000e100

08001d88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d88:	4a09      	ldr	r2, [pc, #36]	; (8001db0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001d8a:	490a      	ldr	r1, [pc, #40]	; (8001db4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001d8c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d8e:	480a      	ldr	r0, [pc, #40]	; (8001db8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d90:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001d94:	3b01      	subs	r3, #1
 8001d96:	b29b      	uxth	r3, r3
 8001d98:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d9a:	6911      	ldr	r1, [r2, #16]
 8001d9c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001da0:	3901      	subs	r1, #1
 8001da2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001da4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001da6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001da8:	f043 0301 	orr.w	r3, r3, #1
 8001dac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001dae:	4770      	bx	lr
 8001db0:	50001000 	.word	0x50001000
 8001db4:	240016ae 	.word	0x240016ae
 8001db8:	240016ac 	.word	0x240016ac

08001dbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001dbc:	4b01      	ldr	r3, [pc, #4]	; (8001dc4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001dbe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8001dc2:	4770      	bx	lr
 8001dc4:	50001000 	.word	0x50001000

08001dc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001dc8:	4b02      	ldr	r3, [pc, #8]	; (8001dd4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001dca:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001dcc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001dd0:	625a      	str	r2, [r3, #36]	; 0x24
}
 8001dd2:	4770      	bx	lr
 8001dd4:	50001000 	.word	0x50001000

08001dd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001dd8:	b570      	push	{r4, r5, r6, lr}
 8001dda:	4604      	mov	r4, r0
    HAL::initialize();
 8001ddc:	f009 f977 	bl	800b0ce <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001de0:	6823      	ldr	r3, [r4, #0]
 8001de2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001de4:	f00c fa4a 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 8001de8:	4601      	mov	r1, r0
 8001dea:	4620      	mov	r0, r4
 8001dec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0);
 8001dee:	6823      	ldr	r3, [r4, #0]
 8001df0:	4620      	mov	r0, r4
 8001df2:	4a05      	ldr	r2, [pc, #20]	; (8001e08 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001df4:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001df8:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	46ac      	mov	ip, r5
}
 8001e00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0x70000000, (void*)0x70060000, (void*)0);
 8001e04:	4760      	bx	ip
 8001e06:	bf00      	nop
 8001e08:	70060000 	.word	0x70060000

08001e0c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001e0c:	f009 b946 	b.w	800b09c <_ZN8touchgfx3HAL10beginFrameEv>

08001e10 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001e10:	f009 b950 	b.w	800b0b4 <_ZN8touchgfx3HAL8endFrameEv>

08001e14 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001e14:	f009 b90c 	b.w	800b030 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001e18 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001e18:	f009 ba6d 	b.w	800b2f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001e1c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001e20:	b112      	cbz	r2, 8001e28 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001e22:	6803      	ldr	r3, [r0, #0]
 8001e24:	695b      	ldr	r3, [r3, #20]
 8001e26:	4718      	bx	r3
    }
 8001e28:	4770      	bx	lr
	...

08001e2c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001e2c:	4a12      	ldr	r2, [pc, #72]	; (8001e78 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 8001e2e:	6953      	ldr	r3, [r2, #20]
 8001e30:	03db      	lsls	r3, r3, #15
{
 8001e32:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001e34:	d51e      	bpl.n	8001e74 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8001e36:	2300      	movs	r3, #0
 8001e38:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001e3c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001e40:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001e44:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001e48:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001e4c:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001e50:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001e52:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001e56:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001e58:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8001e5c:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001e5e:	f8c2 5274 	str.w	r5, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 8001e62:	d2f9      	bcs.n	8001e58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8001e64:	3b20      	subs	r3, #32
 8001e66:	f113 0f20 	cmn.w	r3, #32
 8001e6a:	d1f2      	bne.n	8001e52 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8001e6c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e70:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8001e74:	bd70      	pop	{r4, r5, r6, pc}
 8001e76:	bf00      	nop
 8001e78:	e000ed00 	.word	0xe000ed00

08001e7c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e7c:	4b08      	ldr	r3, [pc, #32]	; (8001ea0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001e7e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e82:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e86:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e8a:	f3bf 8f6f 	isb	sy
 8001e8e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001e92:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e96:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e9a:	f3bf 8f6f 	isb	sy
}
 8001e9e:	4770      	bx	lr
 8001ea0:	e000e100 	.word	0xe000e100

08001ea4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ea4:	4b03      	ldr	r3, [pc, #12]	; (8001eb4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001ea6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001eaa:	609a      	str	r2, [r3, #8]
 8001eac:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001eb0:	609a      	str	r2, [r3, #8]
}
 8001eb2:	4770      	bx	lr
 8001eb4:	e000e100 	.word	0xe000e100

08001eb8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001eb8:	b510      	push	{r4, lr}
        return instance;
 8001eba:	4c14      	ldr	r4, [pc, #80]	; (8001f0c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001ebc:	6823      	ldr	r3, [r4, #0]
 8001ebe:	b323      	cbz	r3, 8001f0a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001ec0:	4b13      	ldr	r3, [pc, #76]	; (8001f10 <HAL_LTDC_LineEventCallback+0x58>)
 8001ec2:	4a14      	ldr	r2, [pc, #80]	; (8001f14 <HAL_LTDC_LineEventCallback+0x5c>)
 8001ec4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec6:	8811      	ldrh	r1, [r2, #0]
 8001ec8:	428b      	cmp	r3, r1
 8001eca:	d113      	bne.n	8001ef4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001ecc:	4b12      	ldr	r3, [pc, #72]	; (8001f18 <HAL_LTDC_LineEventCallback+0x60>)
 8001ece:	8819      	ldrh	r1, [r3, #0]
 8001ed0:	f003 fba2 	bl	8005618 <HAL_LTDC_ProgramLineEvent>
 8001ed4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001ed6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001eda:	3301      	adds	r3, #1
 8001edc:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001ee0:	f7ff fbf2 	bl	80016c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001ee4:	6820      	ldr	r0, [r4, #0]
 8001ee6:	f009 fe31 	bl	800bb4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001eea:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001eec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001ef0:	f7ff b9ca 	b.w	8001288 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001ef4:	f003 fb90 	bl	8005618 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001ef8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001efa:	6803      	ldr	r3, [r0, #0]
 8001efc:	6a1b      	ldr	r3, [r3, #32]
 8001efe:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001f00:	2000      	movs	r0, #0
    }
 8001f02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001f06:	f7ff b9f1 	b.w	80012ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001f0a:	bd10      	pop	{r4, pc}
 8001f0c:	24006bd8 	.word	0x24006bd8
 8001f10:	50001000 	.word	0x50001000
 8001f14:	240016ae 	.word	0x240016ae
 8001f18:	240016ac 	.word	0x240016ac

08001f1c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f1c:	4770      	bx	lr

08001f1e <_ZN23ApplicationFontProviderD0Ev>:
 8001f1e:	b510      	push	{r4, lr}
 8001f20:	4604      	mov	r4, r0
 8001f22:	2104      	movs	r1, #4
 8001f24:	f018 fa26 	bl	801a374 <_ZdlPvj>
 8001f28:	4620      	mov	r0, r4
 8001f2a:	bd10      	pop	{r4, pc}

08001f2c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f2c:	2901      	cmp	r1, #1
{
 8001f2e:	b508      	push	{r3, lr}
    switch (typography)
 8001f30:	d006      	beq.n	8001f40 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f32:	2902      	cmp	r1, #2
 8001f34:	d008      	beq.n	8001f48 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001f36:	b959      	cbnz	r1, 8001f50 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001f38:	f000 ff0c 	bl	8002d54 <_ZN17TypedTextDatabase8getFontsEv>
 8001f3c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001f3e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001f40:	f000 ff08 	bl	8002d54 <_ZN17TypedTextDatabase8getFontsEv>
 8001f44:	6840      	ldr	r0, [r0, #4]
 8001f46:	e7fa      	b.n	8001f3e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001f48:	f000 ff04 	bl	8002d54 <_ZN17TypedTextDatabase8getFontsEv>
 8001f4c:	6880      	ldr	r0, [r0, #8]
 8001f4e:	e7f6      	b.n	8001f3e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001f50:	2000      	movs	r0, #0
 8001f52:	e7f4      	b.n	8001f3e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001f54 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001f54:	4800      	ldr	r0, [pc, #0]	; (8001f58 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001f56:	4770      	bx	lr
 8001f58:	0801baa4 	.word	0x0801baa4

08001f5c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001f5c:	2002      	movs	r0, #2
 8001f5e:	4770      	bx	lr

08001f60 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001f60:	b513      	push	{r0, r1, r4, lr}
 8001f62:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001f64:	b151      	cbz	r1, 8001f7c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f66:	6803      	ldr	r3, [r0, #0]
 8001f68:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8001f6a:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001f6c:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f70:	689c      	ldr	r4, [r3, #8]
 8001f72:	f10d 0303 	add.w	r3, sp, #3
 8001f76:	47a0      	blx	r4
        return glyph;
    }
 8001f78:	b002      	add	sp, #8
 8001f7a:	bd10      	pop	{r4, pc}
            return 0;
 8001f7c:	4608      	mov	r0, r1
 8001f7e:	e7fb      	b.n	8001f78 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001f80 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001f80:	89c0      	ldrh	r0, [r0, #14]
 8001f82:	4770      	bx	lr

08001f84 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f84:	8a00      	ldrh	r0, [r0, #16]
 8001f86:	4770      	bx	lr

08001f88 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001f88:	88c0      	ldrh	r0, [r0, #6]
 8001f8a:	4770      	bx	lr

08001f8c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001f8c:	8880      	ldrh	r0, [r0, #4]
 8001f8e:	4770      	bx	lr

08001f90 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f90:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f92:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f96:	4770      	bx	lr

08001f98 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f98:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f9a:	09c0      	lsrs	r0, r0, #7
 8001f9c:	4770      	bx	lr

08001f9e <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001f9e:	4770      	bx	lr

08001fa0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001fa0:	b510      	push	{r4, lr}
 8001fa2:	4604      	mov	r4, r0
    }
 8001fa4:	2108      	movs	r1, #8
 8001fa6:	f018 f9e5 	bl	801a374 <_ZdlPvj>
 8001faa:	4620      	mov	r0, r4
 8001fac:	bd10      	pop	{r4, pc}

08001fae <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001fae:	4770      	bx	lr

08001fb0 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001fb0:	4770      	bx	lr

08001fb2 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001fb2:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8001fb6:	6808      	ldr	r0, [r1, #0]
 8001fb8:	6849      	ldr	r1, [r1, #4]
 8001fba:	c303      	stmia	r3!, {r0, r1}
    }
 8001fbc:	4770      	bx	lr

08001fbe <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001fbe:	4770      	bx	lr

08001fc0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001fc0:	4770      	bx	lr

08001fc2 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001fc2:	6041      	str	r1, [r0, #4]
    }
 8001fc4:	4770      	bx	lr

08001fc6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001fc6:	4770      	bx	lr

08001fc8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001fc8:	4b06      	ldr	r3, [pc, #24]	; (8001fe4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8001fca:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8001fce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8001fd2:	2300      	movs	r3, #0
 8001fd4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001fd8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8001fdc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenScreenNoTransition();
    }
 8001fe0:	4770      	bx	lr
 8001fe2:	bf00      	nop
 8001fe4:	08002169 	.word	0x08002169

08001fe8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001fe8:	2301      	movs	r3, #1
 8001fea:	7203      	strb	r3, [r0, #8]
    }
 8001fec:	4770      	bx	lr

08001fee <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8001fee:	4770      	bx	lr

08001ff0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001ff0:	4770      	bx	lr

08001ff2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8001ff2:	4770      	bx	lr

08001ff4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001ff4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8001ff6:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8001ff8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8001ffa:	68c2      	ldr	r2, [r0, #12]
 8001ffc:	689b      	ldr	r3, [r3, #8]
 8001ffe:	1054      	asrs	r4, r2, #1
 8002000:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002004:	07d2      	lsls	r2, r2, #31
 8002006:	bf48      	it	mi
 8002008:	590a      	ldrmi	r2, [r1, r4]
    }
 800200a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800200e:	bf48      	it	mi
 8002010:	58d3      	ldrmi	r3, [r2, r3]
 8002012:	4718      	bx	r3

08002014 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002014:	6843      	ldr	r3, [r0, #4]
 8002016:	b12b      	cbz	r3, 8002024 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002018:	6883      	ldr	r3, [r0, #8]
 800201a:	b92b      	cbnz	r3, 8002028 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800201c:	68c0      	ldr	r0, [r0, #12]
 800201e:	f000 0001 	and.w	r0, r0, #1
 8002022:	4770      	bx	lr
 8002024:	4618      	mov	r0, r3
 8002026:	4770      	bx	lr
 8002028:	2001      	movs	r0, #1
    }
 800202a:	4770      	bx	lr

0800202c <_ZN8touchgfx12NoTransitionD0Ev>:
 800202c:	b510      	push	{r4, lr}
 800202e:	4604      	mov	r4, r0
 8002030:	210c      	movs	r1, #12
 8002032:	f018 f99f 	bl	801a374 <_ZdlPvj>
 8002036:	4620      	mov	r0, r4
 8002038:	bd10      	pop	{r4, pc}

0800203a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800203a:	b510      	push	{r4, lr}
 800203c:	4604      	mov	r4, r0
 800203e:	2110      	movs	r1, #16
 8002040:	f018 f998 	bl	801a374 <_ZdlPvj>
 8002044:	4620      	mov	r0, r4
 8002046:	bd10      	pop	{r4, pc}

08002048 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002048:	b510      	push	{r4, lr}
 800204a:	4604      	mov	r4, r0
 800204c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002050:	f018 f990 	bl	801a374 <_ZdlPvj>
 8002054:	4620      	mov	r0, r4
 8002056:	bd10      	pop	{r4, pc}

08002058 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED0Ev>:
 8002058:	b510      	push	{r4, lr}
 800205a:	4604      	mov	r4, r0
 800205c:	2140      	movs	r1, #64	; 0x40
 800205e:	f018 f989 	bl	801a374 <_ZdlPvj>
 8002062:	4620      	mov	r0, r4
 8002064:	bd10      	pop	{r4, pc}

08002066 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002066:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002068:	f00c f908 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800206c:	6803      	ldr	r3, [r0, #0]
    }
 800206e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002072:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002074:	4718      	bx	r3
	...

08002078 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002078:	4b05      	ldr	r3, [pc, #20]	; (8002090 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x18>)
    virtual void tearDown()
 800207a:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800207c:	781b      	ldrb	r3, [r3, #0]
 800207e:	b12b      	cbz	r3, 800208c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
 8002080:	6840      	ldr	r0, [r0, #4]
 8002082:	b118      	cbz	r0, 800208c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 8002084:	6803      	ldr	r3, [r0, #0]
 8002086:	310c      	adds	r1, #12
 8002088:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800208a:	4718      	bx	r3
        }
    }
 800208c:	4770      	bx	lr
 800208e:	bf00      	nop
 8002090:	24006bd7 	.word	0x24006bd7

08002094 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8002094:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8002096:	b570      	push	{r4, r5, r6, lr}
 8002098:	4605      	mov	r5, r0
        if (done)
 800209a:	b9bb      	cbnz	r3, 80020cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800209c:	6840      	ldr	r0, [r0, #4]
 800209e:	6803      	ldr	r3, [r0, #0]
 80020a0:	69db      	ldr	r3, [r3, #28]
 80020a2:	4798      	blx	r3
 80020a4:	4604      	mov	r4, r0
        while (d)
 80020a6:	b93c      	cbnz	r4, 80020b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x24>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 80020a8:	6868      	ldr	r0, [r5, #4]
 80020aa:	f105 010c 	add.w	r1, r5, #12
 80020ae:	6803      	ldr	r3, [r0, #0]
    }
 80020b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80020b4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80020b6:	4718      	bx	r3
                d->setY(d->getY() - targetValue);
 80020b8:	88e1      	ldrh	r1, [r4, #6]
 80020ba:	4620      	mov	r0, r4
 80020bc:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 80020be:	1ac9      	subs	r1, r1, r3
 80020c0:	6823      	ldr	r3, [r4, #0]
 80020c2:	b209      	sxth	r1, r1
 80020c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80020c6:	4798      	blx	r3
        return nextSibling;
 80020c8:	69a4      	ldr	r4, [r4, #24]
 80020ca:	e7ec      	b.n	80020a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x12>
    }
 80020cc:	bd70      	pop	{r4, r5, r6, pc}

080020ce <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80020ce:	b570      	push	{r4, r5, r6, lr}
 80020d0:	4604      	mov	r4, r0
        animationCounter++;
 80020d2:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
 80020d6:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
 80020d8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 80020dc:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80020de:	4298      	cmp	r0, r3
        animationCounter++;
 80020e0:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 80020e4:	d905      	bls.n	80020f2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x24>
            done = true;
 80020e6:	2301      	movs	r3, #1
 80020e8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80020ea:	2300      	movs	r3, #0
 80020ec:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 80020f0:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80020f2:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 80020f6:	2100      	movs	r1, #0
 80020f8:	f00d fdc8 	bl	800fc8c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80020fc:	f010 0201 	ands.w	r2, r0, #1
 8002100:	b283      	uxth	r3, r0
 8002102:	d006      	beq.n	8002112 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002104:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002108:	2800      	cmp	r0, #0
 800210a:	bfd8      	it	le
 800210c:	460a      	movle	r2, r1
 800210e:	4413      	add	r3, r2
 8002110:	b218      	sxth	r0, r3
            relativeValue = calculatedValue - snapshot.getY();
 8002112:	8a63      	ldrh	r3, [r4, #18]
 8002114:	1ac0      	subs	r0, r0, r3
 8002116:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8002118:	6860      	ldr	r0, [r4, #4]
 800211a:	6803      	ldr	r3, [r0, #0]
 800211c:	69db      	ldr	r3, [r3, #28]
 800211e:	4798      	blx	r3
 8002120:	4605      	mov	r5, r0
        while (d)
 8002122:	b92d      	cbnz	r5, 8002130 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x62>
        screenContainer->invalidate();
 8002124:	6860      	ldr	r0, [r4, #4]
 8002126:	6803      	ldr	r3, [r0, #0]
    }
 8002128:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 800212c:	695b      	ldr	r3, [r3, #20]
 800212e:	4718      	bx	r3
                d->setY(d->getY() + relativeValue);
 8002130:	88e9      	ldrh	r1, [r5, #6]
 8002132:	4628      	mov	r0, r5
 8002134:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8002136:	4419      	add	r1, r3
 8002138:	682b      	ldr	r3, [r5, #0]
 800213a:	b209      	sxth	r1, r1
 800213c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800213e:	4798      	blx	r3
 8002140:	69ad      	ldr	r5, [r5, #24]
 8002142:	e7ee      	b.n	8002122 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x54>

08002144 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002144:	b510      	push	{r4, lr}
 8002146:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002148:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800214c:	b158      	cbz	r0, 8002166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800214e:	6803      	ldr	r3, [r0, #0]
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	4798      	blx	r3
 8002154:	b138      	cbz	r0, 8002166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002156:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800215a:	6803      	ldr	r3, [r0, #0]
 800215c:	689b      	ldr	r3, [r3, #8]
 800215e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002160:	2300      	movs	r3, #0
 8002162:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002166:	bd10      	pop	{r4, pc}

08002168 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()
{
 8002168:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800216c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002170:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002172:	68a8      	ldr	r0, [r5, #8]
 8002174:	6803      	ldr	r3, [r0, #0]
 8002176:	6a1b      	ldr	r3, [r3, #32]
 8002178:	4798      	blx	r3
 800217a:	f5b0 7f2b 	cmp.w	r0, #684	; 0x2ac
 800217e:	d205      	bcs.n	800218c <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x24>
 8002180:	4b45      	ldr	r3, [pc, #276]	; (8002298 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x130>)
 8002182:	21a3      	movs	r1, #163	; 0xa3
 8002184:	4a45      	ldr	r2, [pc, #276]	; (800229c <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x134>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002186:	4846      	ldr	r0, [pc, #280]	; (80022a0 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x138>)
 8002188:	f018 f922 	bl	801a3d0 <__assert_func>
 800218c:	6868      	ldr	r0, [r5, #4]
 800218e:	6803      	ldr	r3, [r0, #0]
 8002190:	6a1b      	ldr	r3, [r3, #32]
 8002192:	4798      	blx	r3
 8002194:	280f      	cmp	r0, #15
 8002196:	d803      	bhi.n	80021a0 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x38>
 8002198:	4b42      	ldr	r3, [pc, #264]	; (80022a4 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x13c>)
 800219a:	21a4      	movs	r1, #164	; 0xa4
 800219c:	4a3f      	ldr	r2, [pc, #252]	; (800229c <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x134>)
 800219e:	e7f2      	b.n	8002186 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021a0:	68e8      	ldr	r0, [r5, #12]
 80021a2:	6803      	ldr	r3, [r0, #0]
 80021a4:	6a1b      	ldr	r3, [r3, #32]
 80021a6:	4798      	blx	r3
 80021a8:	280b      	cmp	r0, #11
 80021aa:	d803      	bhi.n	80021b4 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x4c>
 80021ac:	4b3e      	ldr	r3, [pc, #248]	; (80022a8 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x140>)
 80021ae:	21a5      	movs	r1, #165	; 0xa5
 80021b0:	4a3a      	ldr	r2, [pc, #232]	; (800229c <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x134>)
 80021b2:	e7e8      	b.n	8002186 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80021b4:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80022b0 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80021b8:	f00c f860 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80021bc:	3004      	adds	r0, #4
 80021be:	f00c f89b 	bl	800e2f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80021c2:	f8d9 0000 	ldr.w	r0, [r9]
 80021c6:	b110      	cbz	r0, 80021ce <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80021c8:	6803      	ldr	r3, [r0, #0]
 80021ca:	68db      	ldr	r3, [r3, #12]
 80021cc:	4798      	blx	r3
    if (*currentTrans)
 80021ce:	f8d9 0000 	ldr.w	r0, [r9]
 80021d2:	b110      	cbz	r0, 80021da <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80021d4:	6803      	ldr	r3, [r0, #0]
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	4798      	blx	r3
    if (*currentScreen)
 80021da:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80022b4 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x14c>
 80021de:	f8d8 0000 	ldr.w	r0, [r8]
 80021e2:	b110      	cbz	r0, 80021ea <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80021e4:	6803      	ldr	r3, [r0, #0]
 80021e6:	695b      	ldr	r3, [r3, #20]
 80021e8:	4798      	blx	r3
    if (*currentPresenter)
 80021ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80021ee:	b110      	cbz	r0, 80021f6 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80021f0:	6803      	ldr	r3, [r0, #0]
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	4798      	blx	r3
    if (*currentScreen)
 80021f6:	f8d8 0000 	ldr.w	r0, [r8]
 80021fa:	b110      	cbz	r0, 8002202 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80021fc:	6803      	ldr	r3, [r0, #0]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4798      	blx	r3
    if (*currentPresenter)
 8002202:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002206:	b110      	cbz	r0, 800220e <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002208:	6803      	ldr	r3, [r0, #0]
 800220a:	689b      	ldr	r3, [r3, #8]
 800220c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800220e:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002210:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 8002212:	f04f 0b00 	mov.w	fp, #0
 8002216:	6803      	ldr	r3, [r0, #0]
 8002218:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800221a:	4798      	blx	r3
 800221c:	4b23      	ldr	r3, [pc, #140]	; (80022ac <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x144>)
 800221e:	4604      	mov	r4, r0
 8002220:	f8c0 b004 	str.w	fp, [r0, #4]
 8002224:	6003      	str	r3, [r0, #0]
 8002226:	4659      	mov	r1, fp
 8002228:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800222c:	68a8      	ldr	r0, [r5, #8]
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002232:	4798      	blx	r3
 8002234:	4606      	mov	r6, r0
 8002236:	f000 fdf1 	bl	8002e1c <_ZN14MainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800223a:	6868      	ldr	r0, [r5, #4]
 800223c:	4659      	mov	r1, fp
 800223e:	6803      	ldr	r3, [r0, #0]
 8002240:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002242:	4798      	blx	r3
 8002244:	4605      	mov	r5, r0
 8002246:	4631      	mov	r1, r6
 8002248:	f000 fdc2 	bl	8002dd0 <_ZN19MainScreenPresenterC1ER14MainScreenView>
    *currentTrans = newTransition;
 800224c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002250:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002254:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002258:	b1e5      	cbz	r5, 8002294 <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0x12c>
 800225a:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800225c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002260:	4630      	mov	r0, r6
 8002262:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002264:	f8c5 a008 	str.w	sl, [r5, #8]
 8002268:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800226a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800226c:	4798      	blx	r3
    newPresenter->activate();
 800226e:	682b      	ldr	r3, [r5, #0]
 8002270:	4628      	mov	r0, r5
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002276:	4621      	mov	r1, r4
 8002278:	4630      	mov	r0, r6
 800227a:	f00d fd01 	bl	800fc80 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800227e:	6823      	ldr	r3, [r4, #0]
 8002280:	4620      	mov	r0, r4
 8002282:	691b      	ldr	r3, [r3, #16]
 8002284:	4798      	blx	r3
    newTransition->invalidate();
 8002286:	6823      	ldr	r3, [r4, #0]
 8002288:	4620      	mov	r0, r4
 800228a:	695b      	ldr	r3, [r3, #20]
}
 800228c:	b001      	add	sp, #4
 800228e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002292:	4718      	bx	r3
    model->bind(newPresenter);
 8002294:	462b      	mov	r3, r5
 8002296:	e7e1      	b.n	800225c <_ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv+0xf4>
 8002298:	0801badc 	.word	0x0801badc
 800229c:	0801bb6a 	.word	0x0801bb6a
 80022a0:	0801bc74 	.word	0x0801bc74
 80022a4:	0801bcbb 	.word	0x0801bcbb
 80022a8:	0801bd5e 	.word	0x0801bd5e
 80022ac:	0801bf94 	.word	0x0801bf94
 80022b0:	24006c18 	.word	0x24006c18
 80022b4:	24006c14 	.word	0x24006c14

080022b8 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMapScreenScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMapScreenScreenSlideTransitionNorthImpl()
{
 80022b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MapScreenView, MapScreenPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022bc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80022c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022c2:	68a8      	ldr	r0, [r5, #8]
 80022c4:	6803      	ldr	r3, [r0, #0]
 80022c6:	6a1b      	ldr	r3, [r3, #32]
 80022c8:	4798      	blx	r3
 80022ca:	28bf      	cmp	r0, #191	; 0xbf
 80022cc:	d805      	bhi.n	80022da <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x22>
 80022ce:	4b5c      	ldr	r3, [pc, #368]	; (8002440 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x188>)
 80022d0:	21a3      	movs	r1, #163	; 0xa3
 80022d2:	4a5c      	ldr	r2, [pc, #368]	; (8002444 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x18c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022d4:	485c      	ldr	r0, [pc, #368]	; (8002448 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x190>)
 80022d6:	f018 f87b 	bl	801a3d0 <__assert_func>
 80022da:	6868      	ldr	r0, [r5, #4]
 80022dc:	6803      	ldr	r3, [r0, #0]
 80022de:	6a1b      	ldr	r3, [r3, #32]
 80022e0:	4798      	blx	r3
 80022e2:	280f      	cmp	r0, #15
 80022e4:	d803      	bhi.n	80022ee <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x36>
 80022e6:	4b59      	ldr	r3, [pc, #356]	; (800244c <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x194>)
 80022e8:	21a4      	movs	r1, #164	; 0xa4
 80022ea:	4a56      	ldr	r2, [pc, #344]	; (8002444 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x18c>)
 80022ec:	e7f2      	b.n	80022d4 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022ee:	68e8      	ldr	r0, [r5, #12]
 80022f0:	6803      	ldr	r3, [r0, #0]
 80022f2:	6a1b      	ldr	r3, [r3, #32]
 80022f4:	4798      	blx	r3
 80022f6:	283f      	cmp	r0, #63	; 0x3f
 80022f8:	d803      	bhi.n	8002302 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x4a>
 80022fa:	4b55      	ldr	r3, [pc, #340]	; (8002450 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x198>)
 80022fc:	21a5      	movs	r1, #165	; 0xa5
 80022fe:	4a51      	ldr	r2, [pc, #324]	; (8002444 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x18c>)
 8002300:	e7e8      	b.n	80022d4 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1c>
    if (*currentTrans)
 8002302:	f8df 9160 	ldr.w	r9, [pc, #352]	; 8002464 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1ac>
    Application::getInstance()->clearAllTimerWidgets();
 8002306:	f00b ffb9 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800230a:	3004      	adds	r0, #4
 800230c:	f00b fff4 	bl	800e2f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002310:	f8d9 0000 	ldr.w	r0, [r9]
 8002314:	b110      	cbz	r0, 800231c <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8002316:	6803      	ldr	r3, [r0, #0]
 8002318:	68db      	ldr	r3, [r3, #12]
 800231a:	4798      	blx	r3
    if (*currentTrans)
 800231c:	f8d9 0000 	ldr.w	r0, [r9]
 8002320:	b110      	cbz	r0, 8002328 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8002322:	6803      	ldr	r3, [r0, #0]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	4798      	blx	r3
    if (*currentScreen)
 8002328:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002468 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1b0>
 800232c:	f8d8 0000 	ldr.w	r0, [r8]
 8002330:	b110      	cbz	r0, 8002338 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002332:	6803      	ldr	r3, [r0, #0]
 8002334:	695b      	ldr	r3, [r3, #20]
 8002336:	4798      	blx	r3
    if (*currentPresenter)
 8002338:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800233c:	b110      	cbz	r0, 8002344 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800233e:	6803      	ldr	r3, [r0, #0]
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	4798      	blx	r3
    if (*currentScreen)
 8002344:	f8d8 0000 	ldr.w	r0, [r8]
 8002348:	b110      	cbz	r0, 8002350 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 800234a:	6803      	ldr	r3, [r0, #0]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	4798      	blx	r3
    if (*currentPresenter)
 8002350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002354:	b110      	cbz	r0, 800235c <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002356:	6803      	ldr	r3, [r0, #0]
 8002358:	689b      	ldr	r3, [r3, #8]
 800235a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800235c:	68e8      	ldr	r0, [r5, #12]
 800235e:	2100      	movs	r1, #0
 8002360:	f04f 0b00 	mov.w	fp, #0
 8002364:	6803      	ldr	r3, [r0, #0]
 8002366:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002368:	4798      	blx	r3
          relativeValue(0)
 800236a:	4b3a      	ldr	r3, [pc, #232]	; (8002454 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x19c>)
 800236c:	4606      	mov	r6, r0
 800236e:	4604      	mov	r4, r0
 8002370:	f8c0 b004 	str.w	fp, [r0, #4]
 8002374:	f880 b008 	strb.w	fp, [r0, #8]
 8002378:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
 800237c:	4630      	mov	r0, r6
 800237e:	f009 fdd7 	bl	800bf30 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 8002382:	2314      	movs	r3, #20
          relativeValue(0)
 8002384:	f8a4 b03c 	strh.w	fp, [r4, #60]	; 0x3c
          animationSteps(transitionSteps),
 8002388:	8723      	strh	r3, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 800238a:	4b33      	ldr	r3, [pc, #204]	; (8002458 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1a0>)
 800238c:	781b      	ldrb	r3, [r3, #0]
 800238e:	2b00      	cmp	r3, #0
 8002390:	d137      	bne.n	8002402 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x14a>
            done = true;
 8002392:	2301      	movs	r3, #1
 8002394:	7223      	strb	r3, [r4, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002396:	68a8      	ldr	r0, [r5, #8]
 8002398:	2100      	movs	r1, #0
 800239a:	6803      	ldr	r3, [r0, #0]
 800239c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800239e:	4798      	blx	r3
 80023a0:	4606      	mov	r6, r0
 80023a2:	f000 fd79 	bl	8002e98 <_ZN13MapScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80023a6:	6868      	ldr	r0, [r5, #4]
 80023a8:	2100      	movs	r1, #0
 80023aa:	6803      	ldr	r3, [r0, #0]
 80023ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023ae:	4798      	blx	r3
 80023b0:	4605      	mov	r5, r0
 80023b2:	4631      	mov	r1, r6
 80023b4:	f000 fd4c 	bl	8002e50 <_ZN18MapScreenPresenterC1ER13MapScreenView>
    *currentTrans = newTransition;
 80023b8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80023bc:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80023c0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80023c4:	2d00      	cmp	r5, #0
 80023c6:	d038      	beq.n	800243a <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x182>
 80023c8:	1d2b      	adds	r3, r5, #4
 80023ca:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80023ce:	4630      	mov	r0, r6
 80023d0:	6833      	ldr	r3, [r6, #0]
 80023d2:	f8c5 a008 	str.w	sl, [r5, #8]
 80023d6:	68db      	ldr	r3, [r3, #12]
 80023d8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80023da:	4798      	blx	r3
    newPresenter->activate();
 80023dc:	682b      	ldr	r3, [r5, #0]
 80023de:	4628      	mov	r0, r5
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023e4:	4621      	mov	r1, r4
 80023e6:	4630      	mov	r0, r6
 80023e8:	f00d fc4a 	bl	800fc80 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023ec:	6823      	ldr	r3, [r4, #0]
 80023ee:	4620      	mov	r0, r4
 80023f0:	691b      	ldr	r3, [r3, #16]
 80023f2:	4798      	blx	r3
    newTransition->invalidate();
 80023f4:	6823      	ldr	r3, [r4, #0]
 80023f6:	4620      	mov	r0, r4
 80023f8:	695b      	ldr	r3, [r3, #20]
}
 80023fa:	b003      	add	sp, #12
 80023fc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002400:	4718      	bx	r3
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002402:	4b16      	ldr	r3, [pc, #88]	; (800245c <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1a4>)
        setWidth(width);
 8002404:	4630      	mov	r0, r6
        setX(x);
 8002406:	68e1      	ldr	r1, [r4, #12]
 8002408:	f9b3 2000 	ldrsh.w	r2, [r3]
        rect.x = x;
 800240c:	f8c4 b010 	str.w	fp, [r4, #16]
        setWidth(width);
 8002410:	f8d1 b038 	ldr.w	fp, [r1, #56]	; 0x38
 8002414:	4912      	ldr	r1, [pc, #72]	; (8002460 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1a8>)
 8002416:	9201      	str	r2, [sp, #4]
 8002418:	f9b1 1000 	ldrsh.w	r1, [r1]
 800241c:	47d8      	blx	fp
        setHeight(height);
 800241e:	68e1      	ldr	r1, [r4, #12]
 8002420:	9a01      	ldr	r2, [sp, #4]
 8002422:	4630      	mov	r0, r6
 8002424:	f8d1 b03c 	ldr.w	fp, [r1, #60]	; 0x3c
 8002428:	4611      	mov	r1, r2
 800242a:	47d8      	blx	fp
        snapshot.makeSnapshot();
 800242c:	4630      	mov	r0, r6
 800242e:	f009 fcfa 	bl	800be26 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_HEIGHT;
 8002432:	4b0a      	ldr	r3, [pc, #40]	; (800245c <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x1a4>)
 8002434:	881b      	ldrh	r3, [r3, #0]
 8002436:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8002438:	e7ad      	b.n	8002396 <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0xde>
    model->bind(newPresenter);
 800243a:	462b      	mov	r3, r5
 800243c:	e7c5      	b.n	80023ca <_ZN23FrontendApplicationBase43gotoMapScreenScreenSlideTransitionNorthImplEv+0x112>
 800243e:	bf00      	nop
 8002440:	0801badc 	.word	0x0801badc
 8002444:	0801be01 	.word	0x0801be01
 8002448:	0801bc74 	.word	0x0801bc74
 800244c:	0801bcbb 	.word	0x0801bcbb
 8002450:	0801bd5e 	.word	0x0801bd5e
 8002454:	0801bfb8 	.word	0x0801bfb8
 8002458:	24006bd7 	.word	0x24006bd7
 800245c:	24006bce 	.word	0x24006bce
 8002460:	24006bcc 	.word	0x24006bcc
 8002464:	24006c18 	.word	0x24006c18
 8002468:	24006c14 	.word	0x24006c14

0800246c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800246c:	4b04      	ldr	r3, [pc, #16]	; (8002480 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002474:	b10a      	cbz	r2, 800247a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002476:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002478:	b900      	cbnz	r0, 800247c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800247a:	6898      	ldr	r0, [r3, #8]
    }
 800247c:	4770      	bx	lr
 800247e:	bf00      	nop
 8002480:	24006bd8 	.word	0x24006bd8

08002484 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002486:	4604      	mov	r4, r0
 8002488:	4617      	mov	r7, r2
 800248a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800248c:	f00c f806 	bl	800e49c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002490:	4b10      	ldr	r3, [pc, #64]	; (80024d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002492:	2500      	movs	r5, #0
        instance = this;
 8002494:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002496:	4629      	mov	r1, r5
      model(m)
 8002498:	4b0f      	ldr	r3, [pc, #60]	; (80024d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800249a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800249c:	4b0f      	ldr	r3, [pc, #60]	; (80024dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800249e:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80024a2:	4b0f      	ldr	r3, [pc, #60]	; (80024e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80024a4:	6818      	ldr	r0, [r3, #0]
 80024a6:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024aa:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80024ac:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 80024b0:	689b      	ldr	r3, [r3, #8]
      model(m)
 80024b2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024b6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80024b8:	4628      	mov	r0, r5
 80024ba:	f000 fbff 	bl	8002cbc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80024be:	f7ff ffd5 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 80024c2:	f012 fe58 	bl	8015176 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80024c6:	f7ff ffd1 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 80024ca:	f012 fecb 	bl	8015264 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_AllEv>
}
 80024ce:	4620      	mov	r0, r4
 80024d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024d2:	bf00      	nop
 80024d4:	24006c24 	.word	0x24006c24
 80024d8:	0801bf40 	.word	0x0801bf40
 80024dc:	0801bf28 	.word	0x0801bf28
 80024e0:	24006bd8 	.word	0x24006bd8

080024e4 <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024e4:	4b06      	ldr	r3, [pc, #24]	; (8002500 <_ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv+0x1c>)
 80024e6:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80024ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80024ee:	2300      	movs	r3, #0
 80024f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80024f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80024f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80024fc:	4770      	bx	lr
 80024fe:	bf00      	nop
 8002500:	08002169 	.word	0x08002169

08002504 <_ZN23FrontendApplicationBase39gotoMapScreenScreenSlideTransitionNorthEv>:
 8002504:	4b06      	ldr	r3, [pc, #24]	; (8002520 <_ZN23FrontendApplicationBase39gotoMapScreenScreenSlideTransitionNorthEv+0x1c>)
 8002506:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800250a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800250e:	2300      	movs	r3, #0
 8002510:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002514:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002518:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800251c:	4770      	bx	lr
 800251e:	bf00      	nop
 8002520:	080022b9 	.word	0x080022b9

08002524 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002524:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002526:	4770      	bx	lr

08002528 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002528:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800252a:	4770      	bx	lr

0800252c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800252c:	4770      	bx	lr

0800252e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800252e:	888b      	ldrh	r3, [r1, #4]
 8002530:	69c0      	ldr	r0, [r0, #28]
 8002532:	0adb      	lsrs	r3, r3, #11
 8002534:	680a      	ldr	r2, [r1, #0]
 8002536:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800253a:	4410      	add	r0, r2
 800253c:	4770      	bx	lr

0800253e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800253e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002540:	b1c2      	cbz	r2, 8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002542:	7b13      	ldrb	r3, [r2, #12]
 8002544:	b1b3      	cbz	r3, 8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002546:	7b54      	ldrb	r4, [r2, #13]
 8002548:	7ad2      	ldrb	r2, [r2, #11]
 800254a:	0224      	lsls	r4, r4, #8
 800254c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002550:	4314      	orrs	r4, r2
 8002552:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002554:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002556:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800255a:	8813      	ldrh	r3, [r2, #0]
 800255c:	428b      	cmp	r3, r1
 800255e:	d102      	bne.n	8002566 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002560:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002564:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002566:	d805      	bhi.n	8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002568:	3801      	subs	r0, #1
 800256a:	3204      	adds	r2, #4
 800256c:	b280      	uxth	r0, r0
 800256e:	2800      	cmp	r0, #0
 8002570:	d1f3      	bne.n	800255a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002572:	e7f7      	b.n	8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002574:	2000      	movs	r0, #0
 8002576:	e7f5      	b.n	8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002578 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002578:	b510      	push	{r4, lr}
 800257a:	4604      	mov	r4, r0
 800257c:	212c      	movs	r1, #44	; 0x2c
 800257e:	f017 fef9 	bl	801a374 <_ZdlPvj>
 8002582:	4620      	mov	r0, r4
 8002584:	bd10      	pop	{r4, pc}
	...

08002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002588:	b530      	push	{r4, r5, lr}
 800258a:	b08b      	sub	sp, #44	; 0x2c
 800258c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800258e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002592:	9508      	str	r5, [sp, #32]
 8002594:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8002598:	9507      	str	r5, [sp, #28]
 800259a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800259e:	9506      	str	r5, [sp, #24]
 80025a0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80025a4:	9505      	str	r5, [sp, #20]
 80025a6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80025aa:	9504      	str	r5, [sp, #16]
 80025ac:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80025b0:	9503      	str	r5, [sp, #12]
 80025b2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80025b6:	9502      	str	r5, [sp, #8]
 80025b8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80025bc:	9501      	str	r5, [sp, #4]
 80025be:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80025c2:	9500      	str	r5, [sp, #0]
 80025c4:	f00c ffca 	bl	800f55c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80025c8:	4b06      	ldr	r3, [pc, #24]	; (80025e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 80025ca:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80025cc:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80025ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80025d0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80025d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80025d4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80025d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80025d8:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80025da:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80025dc:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80025de:	b00b      	add	sp, #44	; 0x2c
 80025e0:	bd30      	pop	{r4, r5, pc}
 80025e2:	bf00      	nop
 80025e4:	0801bfdc 	.word	0x0801bfdc

080025e8 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80025e8:	4770      	bx	lr

080025ea <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80025ea:	4770      	bx	lr

080025ec <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80025ec:	4770      	bx	lr

080025ee <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80025ee:	4770      	bx	lr

080025f0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80025f0:	4770      	bx	lr

080025f2 <_ZN18MainScreenViewBaseD1Ev>:
}

MainScreenViewBase::~MainScreenViewBase()
{

}
 80025f2:	4770      	bx	lr

080025f4 <_ZN18MainScreenViewBase11setupScreenEv>:

void MainScreenViewBase::setupScreen()
{

}
 80025f4:	4770      	bx	lr

080025f6 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80025f6:	4770      	bx	lr

080025f8 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80025f8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80025fa:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 80025fc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80025fe:	68c2      	ldr	r2, [r0, #12]
 8002600:	689b      	ldr	r3, [r3, #8]
 8002602:	1055      	asrs	r5, r2, #1
 8002604:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002608:	07d2      	lsls	r2, r2, #31
 800260a:	bf48      	it	mi
 800260c:	5962      	ldrmi	r2, [r4, r5]
    }
 800260e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002610:	bf48      	it	mi
 8002612:	58d3      	ldrmi	r3, [r2, r3]
 8002614:	4718      	bx	r3

08002616 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002616:	6843      	ldr	r3, [r0, #4]
 8002618:	b12b      	cbz	r3, 8002626 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800261a:	6883      	ldr	r3, [r0, #8]
 800261c:	b92b      	cbnz	r3, 800262a <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800261e:	68c0      	ldr	r0, [r0, #12]
 8002620:	f000 0001 	and.w	r0, r0, #1
 8002624:	4770      	bx	lr
 8002626:	4618      	mov	r0, r3
 8002628:	4770      	bx	lr
 800262a:	2001      	movs	r0, #1
    }
 800262c:	4770      	bx	lr

0800262e <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800262e:	b510      	push	{r4, lr}
 8002630:	4604      	mov	r4, r0
 8002632:	2110      	movs	r1, #16
 8002634:	f017 fe9e 	bl	801a374 <_ZdlPvj>
 8002638:	4620      	mov	r0, r4
 800263a:	bd10      	pop	{r4, pc}

0800263c <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
 800263c:	b510      	push	{r4, lr}
 800263e:	4604      	mov	r4, r0
}
 8002640:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8002644:	f017 fe96 	bl	801a374 <_ZdlPvj>
 8002648:	4620      	mov	r0, r4
 800264a:	bd10      	pop	{r4, pc}

0800264c <_ZN18MainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 800264c:	f500 7094 	add.w	r0, r0, #296	; 0x128
 8002650:	4288      	cmp	r0, r1
{
 8002652:	b508      	push	{r3, lr}
    if (&src == &button1)
 8002654:	d105      	bne.n	8002662 <_ZN18MainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002656:	f00b fe11 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
        //OpenMapScreen
        //When button1 clicked change screen to MapScreen
        //Go to MapScreen with screen transition towards North
        application().gotoMapScreenScreenSlideTransitionNorth();
    }
}
 800265a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMapScreenScreenSlideTransitionNorth();
 800265e:	f7ff bf51 	b.w	8002504 <_ZN23FrontendApplicationBase39gotoMapScreenScreenSlideTransitionNorthEv>
}
 8002662:	bd08      	pop	{r3, pc}

08002664 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002664:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002666:	b570      	push	{r4, r5, r6, lr}
 8002668:	4604      	mov	r4, r0
        setX(x);
 800266a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800266c:	4615      	mov	r5, r2
        setX(x);
 800266e:	4798      	blx	r3
        setY(y);
 8002670:	6823      	ldr	r3, [r4, #0]
 8002672:	4620      	mov	r0, r4
 8002674:	4629      	mov	r1, r5
 8002676:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002678:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800267c:	4718      	bx	r3

0800267e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800267e:	b570      	push	{r4, r5, r6, lr}
 8002680:	4604      	mov	r4, r0
 8002682:	461d      	mov	r5, r3
 8002684:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002688:	f7ff ffec 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800268c:	6823      	ldr	r3, [r4, #0]
 800268e:	4629      	mov	r1, r5
 8002690:	4620      	mov	r0, r4
 8002692:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002694:	4798      	blx	r3
        setHeight(height);
 8002696:	6823      	ldr	r3, [r4, #0]
 8002698:	4631      	mov	r1, r6
 800269a:	4620      	mov	r0, r4
 800269c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800269e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80026a2:	4718      	bx	r3

080026a4 <_ZN8touchgfx6WidgetC1Ev>:
 80026a4:	2200      	movs	r2, #0
 80026a6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026aa:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80026ae:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80026b2:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80026b6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026ba:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80026bc:	4a01      	ldr	r2, [pc, #4]	; (80026c4 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80026be:	6002      	str	r2, [r0, #0]
 80026c0:	4770      	bx	lr
 80026c2:	bf00      	nop
 80026c4:	0801c03c 	.word	0x0801c03c

080026c8 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 80026c8:	b510      	push	{r4, lr}
 80026ca:	4604      	mov	r4, r0
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80026cc:	2226      	movs	r2, #38	; 0x26
 80026ce:	2100      	movs	r1, #0
 80026d0:	f018 f871 	bl	801a7b6 <memset>
 80026d4:	4620      	mov	r0, r4
 80026d6:	f7ff ffe5 	bl	80026a4 <_ZN8touchgfx6WidgetC1Ev>
 80026da:	2300      	movs	r3, #0
        : AbstractButton(), up(), down(), alpha(255)
    {
    }
 80026dc:	4620      	mov	r0, r4
 80026de:	62a3      	str	r3, [r4, #40]	; 0x28
 80026e0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80026e4:	2301      	movs	r3, #1
 80026e6:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButton(), up(), down(), alpha(255)
 80026ea:	4b04      	ldr	r3, [pc, #16]	; (80026fc <_ZN8touchgfx6ButtonC1Ev+0x34>)
 80026ec:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80026ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026f2:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80026f4:	8623      	strh	r3, [r4, #48]	; 0x30
 80026f6:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
    }
 80026fa:	bd10      	pop	{r4, pc}
 80026fc:	0801c7c4 	.word	0x0801c7c4

08002700 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002700:	b510      	push	{r4, lr}
 8002702:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002704:	2226      	movs	r2, #38	; 0x26
 8002706:	2100      	movs	r1, #0
 8002708:	f018 f855 	bl	801a7b6 <memset>
 800270c:	4620      	mov	r0, r4
 800270e:	f7ff ffc9 	bl	80026a4 <_ZN8touchgfx6WidgetC1Ev>
 8002712:	4b0a      	ldr	r3, [pc, #40]	; (800273c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002714:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
    {
    }
 8002718:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800271a:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800271c:	4b08      	ldr	r3, [pc, #32]	; (8002740 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800271e:	62a3      	str	r3, [r4, #40]	; 0x28
 8002720:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002724:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002726:	2300      	movs	r3, #0
 8002728:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800272c:	f04f 32ff 	mov.w	r2, #4294967295
 8002730:	8723      	strh	r3, [r4, #56]	; 0x38
 8002732:	63e3      	str	r3, [r4, #60]	; 0x3c
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002734:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
    }
 8002738:	bd10      	pop	{r4, pc}
 800273a:	bf00      	nop
 800273c:	0801c6cc 	.word	0x0801c6cc
 8002740:	0801bad4 	.word	0x0801bad4

08002744 <_ZN18MainScreenViewBaseC1Ev>:
MainScreenViewBase::MainScreenViewBase() :
 8002744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002748:	4604      	mov	r4, r0
        : presenter(0)
 800274a:	2500      	movs	r5, #0
 800274c:	ed2d 8b04 	vpush	{d8-d9}
 8002750:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
 8002752:	4627      	mov	r7, r4
 8002754:	f00d f8e8 	bl	800f928 <_ZN8touchgfx6ScreenC1Ev>
 8002758:	4b8d      	ldr	r3, [pc, #564]	; (8002990 <_ZN18MainScreenViewBaseC1Ev+0x24c>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800275a:	4629      	mov	r1, r5
 800275c:	2226      	movs	r2, #38	; 0x26
 800275e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002760:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002764:	f847 3b40 	str.w	r3, [r7], #64
 8002768:	4638      	mov	r0, r7
 800276a:	f018 f824 	bl	801a7b6 <memset>
 800276e:	4638      	mov	r0, r7
 8002770:	f7ff ff98 	bl	80026a4 <_ZN8touchgfx6WidgetC1Ev>
 8002774:	4b87      	ldr	r3, [pc, #540]	; (8002994 <_ZN18MainScreenViewBaseC1Ev+0x250>)
 8002776:	f504 7a94 	add.w	sl, r4, #296	; 0x128
 800277a:	4630      	mov	r0, r6
 800277c:	6423      	str	r3, [r4, #64]	; 0x40
 800277e:	f04f 33ff 	mov.w	r3, #4294967295
        : color(col)
 8002782:	66a5      	str	r5, [r4, #104]	; 0x68
 8002784:	f504 79e2 	add.w	r9, r4, #452	; 0x1c4
 8002788:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800278c:	f504 7803 	add.w	r8, r4, #524	; 0x20c
 8002790:	f008 f91a 	bl	800a9c8 <_ZN8touchgfx19ScrollableContainerC1Ev>
 8002794:	4650      	mov	r0, sl
 8002796:	f7ff ff97 	bl	80026c8 <_ZN8touchgfx6ButtonC1Ev>
 800279a:	f504 73ae 	add.w	r3, r4, #348	; 0x15c
 800279e:	f504 7b15 	add.w	fp, r4, #596	; 0x254
 80027a2:	4618      	mov	r0, r3
 80027a4:	ee08 3a10 	vmov	s16, r3
 80027a8:	f7ff ff8e 	bl	80026c8 <_ZN8touchgfx6ButtonC1Ev>
 80027ac:	f504 73c8 	add.w	r3, r4, #400	; 0x190
 80027b0:	4618      	mov	r0, r3
 80027b2:	ee08 3a90 	vmov	s17, r3
 80027b6:	f7ff ff87 	bl	80026c8 <_ZN8touchgfx6ButtonC1Ev>
 80027ba:	4648      	mov	r0, r9
 80027bc:	f7ff ffa0 	bl	8002700 <_ZN8touchgfx8TextAreaC1Ev>
 80027c0:	4640      	mov	r0, r8
 80027c2:	f7ff ff9d 	bl	8002700 <_ZN8touchgfx8TextAreaC1Ev>
 80027c6:	4658      	mov	r0, fp
 80027c8:	f7ff ff9a 	bl	8002700 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80027cc:	4b72      	ldr	r3, [pc, #456]	; (8002998 <_ZN18MainScreenViewBaseC1Ev+0x254>)
    __background.setPosition(0, 0, 480, 272);
 80027ce:	462a      	mov	r2, r5
 80027d0:	4629      	mov	r1, r5
 80027d2:	4638      	mov	r0, r7
 80027d4:	e9c4 34a7 	strd	r3, r4, [r4, #668]	; 0x29c
 80027d8:	4b70      	ldr	r3, [pc, #448]	; (800299c <_ZN18MainScreenViewBaseC1Ev+0x258>)
 80027da:	e9c4 35a9 	strd	r3, r5, [r4, #676]	; 0x2a4
 80027de:	f44f 7388 	mov.w	r3, #272	; 0x110
 80027e2:	9300      	str	r3, [sp, #0]
 80027e4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80027e8:	f7ff ff49 	bl	800267e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80027ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80027f0:	4639      	mov	r1, r7
 80027f2:	f04f 0701 	mov.w	r7, #1
 80027f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80027f8:	1d23      	adds	r3, r4, #4
 80027fa:	4618      	mov	r0, r3
 80027fc:	ee09 3a10 	vmov	s18, r3
 8002800:	f007 fb1a 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scrollableContainer1.setPosition(230, 0, 250, 272);
 8002804:	f44f 7388 	mov.w	r3, #272	; 0x110
 8002808:	462a      	mov	r2, r5
 800280a:	4630      	mov	r0, r6
 800280c:	9300      	str	r3, [sp, #0]
 800280e:	21e6      	movs	r1, #230	; 0xe6
 8002810:	23fa      	movs	r3, #250	; 0xfa
 8002812:	f7ff ff34 	bl	800267e <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8002816:	4630      	mov	r0, r6
 8002818:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800281c:	f008 fbeb 	bl	800aff6 <_ZN8touchgfx19ScrollableContainer18setScrollbarsColorENS_9colortypeE>
    scrollableContainer1.setScrollbarsAlpha(255);
 8002820:	4630      	mov	r0, r6
 8002822:	21ff      	movs	r1, #255	; 0xff
 8002824:	f008 fbec 	bl	800b000 <_ZN8touchgfx19ScrollableContainer18setScrollbarsAlphaEh>
    button1.setXY(5, 10);
 8002828:	4650      	mov	r0, sl
 800282a:	220a      	movs	r2, #10
 800282c:	2105      	movs	r1, #5
 800282e:	f7ff ff19 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8002832:	aa08      	add	r2, sp, #32
 8002834:	a907      	add	r1, sp, #28
 8002836:	4650      	mov	r0, sl
 8002838:	f8ad 7020 	strh.w	r7, [sp, #32]
 800283c:	f8ad 501c 	strh.w	r5, [sp, #28]
 8002840:	f009 ffc8 	bl	800c7d4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8002844:	f504 7327 	add.w	r3, r4, #668	; 0x29c
    scrollableContainer1.add(button1);
 8002848:	4651      	mov	r1, sl
 800284a:	4630      	mov	r0, r6
 800284c:	f8df a150 	ldr.w	sl, [pc, #336]	; 80029a0 <_ZN18MainScreenViewBaseC1Ev+0x25c>
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002850:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8002854:	f007 fdc7 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    button2.setXY(5, 69);
 8002858:	ee18 0a10 	vmov	r0, s16
 800285c:	2245      	movs	r2, #69	; 0x45
 800285e:	2105      	movs	r1, #5
 8002860:	f7ff ff00 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8002864:	aa08      	add	r2, sp, #32
 8002866:	a907      	add	r1, sp, #28
 8002868:	ee18 0a10 	vmov	r0, s16
 800286c:	f8ad 7020 	strh.w	r7, [sp, #32]
 8002870:	f8ad 501c 	strh.w	r5, [sp, #28]
 8002874:	f009 ffae 	bl	800c7d4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    scrollableContainer1.add(button2);
 8002878:	ee18 1a10 	vmov	r1, s16
 800287c:	4630      	mov	r0, r6
 800287e:	f007 fdb2 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    button3.setXY(5, 126);
 8002882:	ee18 0a90 	vmov	r0, s17
 8002886:	227e      	movs	r2, #126	; 0x7e
 8002888:	2105      	movs	r1, #5
 800288a:	f7ff feeb 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 800288e:	aa08      	add	r2, sp, #32
 8002890:	a907      	add	r1, sp, #28
 8002892:	ee18 0a90 	vmov	r0, s17
 8002896:	f8ad 7020 	strh.w	r7, [sp, #32]
        boundingArea = calculateBoundingArea();
 800289a:	af02      	add	r7, sp, #8
 800289c:	f8ad 501c 	strh.w	r5, [sp, #28]
 80028a0:	f009 ff98 	bl	800c7d4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    scrollableContainer1.add(button3);
 80028a4:	ee18 1a90 	vmov	r1, s17
 80028a8:	4630      	mov	r0, r6
 80028aa:	f007 fd9c 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    button1_text.setXY(79, 25);
 80028ae:	2219      	movs	r2, #25
 80028b0:	4648      	mov	r0, r9
 80028b2:	214f      	movs	r1, #79	; 0x4f
 80028b4:	f7ff fed6 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80028b8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80028bc:	4649      	mov	r1, r9
 80028be:	4638      	mov	r0, r7
        color = newColor;
 80028c0:	f8c4 31f4 	str.w	r3, [r4, #500]	; 0x1f4
        linespace = space;
 80028c4:	f8a4 51f8 	strh.w	r5, [r4, #504]	; 0x1f8
        boundingArea = calculateBoundingArea();
 80028c8:	f009 fc8c 	bl	800c1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028cc:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80028d0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80028d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    button1_text.setTypedText(touchgfx::TypedText(T_BUTTON1));
 80028d8:	a908      	add	r1, sp, #32
 80028da:	4648      	mov	r0, r9
 80028dc:	f8cd a020 	str.w	sl, [sp, #32]
 80028e0:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80028e4:	f009 ff18 	bl	800c718 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(button1_text);
 80028e8:	4649      	mov	r1, r9
 80028ea:	4630      	mov	r0, r6
 80028ec:	f007 fd7b 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    button2_test.setXY(81, 84);
 80028f0:	2254      	movs	r2, #84	; 0x54
 80028f2:	4640      	mov	r0, r8
 80028f4:	2151      	movs	r1, #81	; 0x51
 80028f6:	f7ff feb5 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80028fa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80028fe:	4641      	mov	r1, r8
 8002900:	4638      	mov	r0, r7
        color = newColor;
 8002902:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
        linespace = space;
 8002906:	f8a4 5240 	strh.w	r5, [r4, #576]	; 0x240
        boundingArea = calculateBoundingArea();
 800290a:	f009 fc6b 	bl	800c1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800290e:	f504 7312 	add.w	r3, r4, #584	; 0x248
 8002912:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800291a:	f04f 0301 	mov.w	r3, #1
    button2_test.setTypedText(touchgfx::TypedText(T_BUTTON2));
 800291e:	a908      	add	r1, sp, #32
 8002920:	4640      	mov	r0, r8
 8002922:	f8cd a020 	str.w	sl, [sp, #32]
 8002926:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800292a:	f009 fef5 	bl	800c718 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(button2_test);
 800292e:	4641      	mov	r1, r8
 8002930:	4630      	mov	r0, r6
 8002932:	f007 fd58 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    button3_text.setXY(81, 141);
 8002936:	228d      	movs	r2, #141	; 0x8d
 8002938:	4658      	mov	r0, fp
 800293a:	2151      	movs	r1, #81	; 0x51
 800293c:	f7ff fe92 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002940:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8002944:	4659      	mov	r1, fp
 8002946:	4638      	mov	r0, r7
        color = newColor;
 8002948:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
        linespace = space;
 800294c:	f8a4 5288 	strh.w	r5, [r4, #648]	; 0x288
        boundingArea = calculateBoundingArea();
 8002950:	f009 fc48 	bl	800c1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002954:	f504 7324 	add.w	r3, r4, #656	; 0x290
 8002958:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800295c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002960:	2302      	movs	r3, #2
    button3_text.setTypedText(touchgfx::TypedText(T_BUTTON3));
 8002962:	a908      	add	r1, sp, #32
 8002964:	4658      	mov	r0, fp
 8002966:	f8cd a020 	str.w	sl, [sp, #32]
 800296a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800296e:	f009 fed3 	bl	800c718 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(button3_text);
 8002972:	4659      	mov	r1, fp
 8002974:	4630      	mov	r0, r6
 8002976:	f007 fd36 	bl	800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
 800297a:	ee19 0a10 	vmov	r0, s18
 800297e:	4631      	mov	r1, r6
 8002980:	f007 fa5a 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002984:	4620      	mov	r0, r4
 8002986:	b00b      	add	sp, #44	; 0x2c
 8002988:	ecbd 8b04 	vpop	{d8-d9}
 800298c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002990:	0801c0bc 	.word	0x0801c0bc
 8002994:	0801c75c 	.word	0x0801c75c
 8002998:	0801c0a4 	.word	0x0801c0a4
 800299c:	0800264d 	.word	0x0800264d
 80029a0:	0801bad4 	.word	0x0801bad4

080029a4 <_ZN17MapScreenViewBaseD1Ev>:
}

MapScreenViewBase::~MapScreenViewBase()
{

}
 80029a4:	4770      	bx	lr

080029a6 <_ZN17MapScreenViewBase11setupScreenEv>:

void MapScreenViewBase::setupScreen()
{

}
 80029a6:	4770      	bx	lr

080029a8 <_ZN17MapScreenViewBaseD0Ev>:
MapScreenViewBase::~MapScreenViewBase()
 80029a8:	b510      	push	{r4, lr}
 80029aa:	4604      	mov	r4, r0
}
 80029ac:	2198      	movs	r1, #152	; 0x98
 80029ae:	f017 fce1 	bl	801a374 <_ZdlPvj>
 80029b2:	4620      	mov	r0, r4
 80029b4:	bd10      	pop	{r4, pc}
	...

080029b8 <_ZN17MapScreenViewBaseC1Ev>:
MapScreenViewBase::MapScreenViewBase()
 80029b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80029bc:	4604      	mov	r4, r0
 80029be:	2500      	movs	r5, #0
 80029c0:	f00c ffb2 	bl	800f928 <_ZN8touchgfx6ScreenC1Ev>
 80029c4:	4b25      	ldr	r3, [pc, #148]	; (8002a5c <_ZN17MapScreenViewBaseC1Ev+0xa4>)
 80029c6:	4626      	mov	r6, r4
 80029c8:	63e5      	str	r5, [r4, #60]	; 0x3c
    __background.setPosition(0, 0, 480, 272);
 80029ca:	f44f 7988 	mov.w	r9, #272	; 0x110
        : Widget(), alpha(255), color(0)
 80029ce:	22ff      	movs	r2, #255	; 0xff
MapScreenViewBase::MapScreenViewBase()
 80029d0:	f846 3b40 	str.w	r3, [r6], #64
    __background.setPosition(0, 0, 480, 272);
 80029d4:	4629      	mov	r1, r5
 80029d6:	4b22      	ldr	r3, [pc, #136]	; (8002a60 <_ZN17MapScreenViewBaseC1Ev+0xa8>)
 80029d8:	4630      	mov	r0, r6
 80029da:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
 80029de:	462a      	mov	r2, r5
          cachedAbsX(0),
 80029e0:	6625      	str	r5, [r4, #96]	; 0x60
 80029e2:	1d27      	adds	r7, r4, #4
 80029e4:	66a5      	str	r5, [r4, #104]	; 0x68
MapScreenViewBase::MapScreenViewBase()
 80029e6:	f104 086c 	add.w	r8, r4, #108	; 0x6c
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 80029ea:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
    __background.setPosition(0, 0, 480, 272);
 80029ee:	f8cd 9000 	str.w	r9, [sp]
        : x(0), y(0), width(0), height(0)
 80029f2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80029f6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80029fa:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80029fe:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
 8002a02:	4b18      	ldr	r3, [pc, #96]	; (8002a64 <_ZN17MapScreenViewBaseC1Ev+0xac>)
 8002a04:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002a08:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002a0a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
          parent(0),
 8002a0e:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8002a12:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8002a16:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8002a1a:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8002a1e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8002a22:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 8002a26:	f7ff fe2a 	bl	800267e <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002a2a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002a2e:	4631      	mov	r1, r6
 8002a30:	4638      	mov	r0, r7
 8002a32:	66a3      	str	r3, [r4, #104]	; 0x68
 8002a34:	f007 fa00 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    map.setPosition(0, 0, 480, 272);
 8002a38:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002a3c:	462a      	mov	r2, r5
 8002a3e:	4629      	mov	r1, r5
 8002a40:	4640      	mov	r0, r8
 8002a42:	f8cd 9000 	str.w	r9, [sp]
 8002a46:	f7ff fe1a 	bl	800267e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002a4a:	4638      	mov	r0, r7
 8002a4c:	4641      	mov	r1, r8
 8002a4e:	f007 f9f3 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a52:	4620      	mov	r0, r4
 8002a54:	b003      	add	sp, #12
 8002a56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002a5a:	bf00      	nop
 8002a5c:	0801c0f0 	.word	0x0801c0f0
 8002a60:	0801c75c 	.word	0x0801c75c
 8002a64:	0801c4d8 	.word	0x0801c4d8

08002a68 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a68:	4770      	bx	lr
	...

08002a6c <_Z23getFont_verdana_10_4bppv>:
{
 8002a6c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a6e:	4d16      	ldr	r5, [pc, #88]	; (8002ac8 <_Z23getFont_verdana_10_4bppv+0x5c>)
{
 8002a70:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a72:	682c      	ldr	r4, [r5, #0]
 8002a74:	f3bf 8f5b 	dmb	ish
 8002a78:	f014 0401 	ands.w	r4, r4, #1
 8002a7c:	d120      	bne.n	8002ac0 <_Z23getFont_verdana_10_4bppv+0x54>
 8002a7e:	4628      	mov	r0, r5
 8002a80:	f017 fc7a 	bl	801a378 <__cxa_guard_acquire>
 8002a84:	b1e0      	cbz	r0, 8002ac0 <_Z23getFont_verdana_10_4bppv+0x54>
 8002a86:	233f      	movs	r3, #63	; 0x3f
 8002a88:	2201      	movs	r2, #1
 8002a8a:	4910      	ldr	r1, [pc, #64]	; (8002acc <_Z23getFont_verdana_10_4bppv+0x60>)
 8002a8c:	9309      	str	r3, [sp, #36]	; 0x24
 8002a8e:	4b10      	ldr	r3, [pc, #64]	; (8002ad0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002a90:	4810      	ldr	r0, [pc, #64]	; (8002ad4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a92:	9308      	str	r3, [sp, #32]
 8002a94:	4b10      	ldr	r3, [pc, #64]	; (8002ad8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a96:	940a      	str	r4, [sp, #40]	; 0x28
 8002a98:	9405      	str	r4, [sp, #20]
 8002a9a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002a9e:	2304      	movs	r3, #4
 8002aa0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002aa4:	230a      	movs	r3, #10
 8002aa6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002aaa:	9300      	str	r3, [sp, #0]
 8002aac:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002ab0:	f7ff fd6a 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002ab4:	4809      	ldr	r0, [pc, #36]	; (8002adc <_Z23getFont_verdana_10_4bppv+0x70>)
 8002ab6:	f017 fca9 	bl	801a40c <atexit>
 8002aba:	4628      	mov	r0, r5
 8002abc:	f017 fc68 	bl	801a390 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002ac0:	4804      	ldr	r0, [pc, #16]	; (8002ad4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002ac2:	b00f      	add	sp, #60	; 0x3c
 8002ac4:	bd30      	pop	{r4, r5, pc}
 8002ac6:	bf00      	nop
 8002ac8:	240016b0 	.word	0x240016b0
 8002acc:	0801cf70 	.word	0x0801cf70
 8002ad0:	0801d01c 	.word	0x0801d01c
 8002ad4:	240016b4 	.word	0x240016b4
 8002ad8:	0801d028 	.word	0x0801d028
 8002adc:	08002a69 	.word	0x08002a69

08002ae0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 10, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ae0:	4770      	bx	lr
	...

08002ae4 <_Z23getFont_verdana_20_4bppv>:
{
 8002ae4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 10, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ae6:	4d16      	ldr	r5, [pc, #88]	; (8002b40 <_Z23getFont_verdana_20_4bppv+0x5c>)
{
 8002ae8:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 10, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002aea:	682c      	ldr	r4, [r5, #0]
 8002aec:	f3bf 8f5b 	dmb	ish
 8002af0:	f014 0401 	ands.w	r4, r4, #1
 8002af4:	d121      	bne.n	8002b3a <_Z23getFont_verdana_20_4bppv+0x56>
 8002af6:	4628      	mov	r0, r5
 8002af8:	f017 fc3e 	bl	801a378 <__cxa_guard_acquire>
 8002afc:	b1e8      	cbz	r0, 8002b3a <_Z23getFont_verdana_20_4bppv+0x56>
 8002afe:	233f      	movs	r3, #63	; 0x3f
 8002b00:	2201      	movs	r2, #1
 8002b02:	4910      	ldr	r1, [pc, #64]	; (8002b44 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002b04:	9309      	str	r3, [sp, #36]	; 0x24
 8002b06:	4b10      	ldr	r3, [pc, #64]	; (8002b48 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002b08:	4810      	ldr	r0, [pc, #64]	; (8002b4c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002b0a:	9308      	str	r3, [sp, #32]
 8002b0c:	4b10      	ldr	r3, [pc, #64]	; (8002b50 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002b0e:	940a      	str	r4, [sp, #40]	; 0x28
 8002b10:	9405      	str	r4, [sp, #20]
 8002b12:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002b16:	2304      	movs	r3, #4
 8002b18:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002b1c:	2314      	movs	r3, #20
 8002b1e:	220a      	movs	r2, #10
 8002b20:	9300      	str	r3, [sp, #0]
 8002b22:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002b26:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002b2a:	f7ff fd2d 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002b2e:	4809      	ldr	r0, [pc, #36]	; (8002b54 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002b30:	f017 fc6c 	bl	801a40c <atexit>
 8002b34:	4628      	mov	r0, r5
 8002b36:	f017 fc2b 	bl	801a390 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002b3a:	4804      	ldr	r0, [pc, #16]	; (8002b4c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002b3c:	b00f      	add	sp, #60	; 0x3c
 8002b3e:	bd30      	pop	{r4, r5, pc}
 8002b40:	240016e0 	.word	0x240016e0
 8002b44:	0801cf80 	.word	0x0801cf80
 8002b48:	0801d020 	.word	0x0801d020
 8002b4c:	240016e4 	.word	0x240016e4
 8002b50:	0801d02c 	.word	0x0801d02c
 8002b54:	08002ae1 	.word	0x08002ae1

08002b58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b58:	4770      	bx	lr
	...

08002b5c <_Z23getFont_verdana_40_4bppv>:
{
 8002b5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b5e:	4d16      	ldr	r5, [pc, #88]	; (8002bb8 <_Z23getFont_verdana_40_4bppv+0x5c>)
{
 8002b60:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b62:	682c      	ldr	r4, [r5, #0]
 8002b64:	f3bf 8f5b 	dmb	ish
 8002b68:	f014 0401 	ands.w	r4, r4, #1
 8002b6c:	d120      	bne.n	8002bb0 <_Z23getFont_verdana_40_4bppv+0x54>
 8002b6e:	4628      	mov	r0, r5
 8002b70:	f017 fc02 	bl	801a378 <__cxa_guard_acquire>
 8002b74:	b1e0      	cbz	r0, 8002bb0 <_Z23getFont_verdana_40_4bppv+0x54>
 8002b76:	233f      	movs	r3, #63	; 0x3f
 8002b78:	2201      	movs	r2, #1
 8002b7a:	4910      	ldr	r1, [pc, #64]	; (8002bbc <_Z23getFont_verdana_40_4bppv+0x60>)
 8002b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8002b7e:	4b10      	ldr	r3, [pc, #64]	; (8002bc0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002b80:	4810      	ldr	r0, [pc, #64]	; (8002bc4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b82:	9308      	str	r3, [sp, #32]
 8002b84:	4b10      	ldr	r3, [pc, #64]	; (8002bc8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002b86:	940a      	str	r4, [sp, #40]	; 0x28
 8002b88:	9405      	str	r4, [sp, #20]
 8002b8a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002b8e:	2304      	movs	r3, #4
 8002b90:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002b94:	2328      	movs	r3, #40	; 0x28
 8002b96:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002b9a:	9300      	str	r3, [sp, #0]
 8002b9c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002ba0:	f7ff fcf2 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002ba4:	4809      	ldr	r0, [pc, #36]	; (8002bcc <_Z23getFont_verdana_40_4bppv+0x70>)
 8002ba6:	f017 fc31 	bl	801a40c <atexit>
 8002baa:	4628      	mov	r0, r5
 8002bac:	f017 fbf0 	bl	801a390 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002bb0:	4804      	ldr	r0, [pc, #16]	; (8002bc4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002bb2:	b00f      	add	sp, #60	; 0x3c
 8002bb4:	bd30      	pop	{r4, r5, pc}
 8002bb6:	bf00      	nop
 8002bb8:	24001710 	.word	0x24001710
 8002bbc:	0801d00c 	.word	0x0801d00c
 8002bc0:	0801d024 	.word	0x0801d024
 8002bc4:	24001714 	.word	0x24001714
 8002bc8:	0801d030 	.word	0x0801d030
 8002bcc:	08002b59 	.word	0x08002b59

08002bd0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002bd0:	2000      	movs	r0, #0
 8002bd2:	4770      	bx	lr

08002bd4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002bd4:	2000      	movs	r0, #0
 8002bd6:	4770      	bx	lr

08002bd8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002bd8:	b40e      	push	{r1, r2, r3}
 8002bda:	b503      	push	{r0, r1, lr}
 8002bdc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002bde:	2100      	movs	r1, #0
{
 8002be0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002be4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002be6:	f00c fae1 	bl	800f1ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002bea:	b002      	add	sp, #8
 8002bec:	f85d eb04 	ldr.w	lr, [sp], #4
 8002bf0:	b003      	add	sp, #12
 8002bf2:	4770      	bx	lr

08002bf4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002bf4:	b40c      	push	{r2, r3}
 8002bf6:	b507      	push	{r0, r1, r2, lr}
 8002bf8:	ab04      	add	r3, sp, #16
 8002bfa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002bfe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002c00:	f00c fad4 	bl	800f1ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002c04:	b003      	add	sp, #12
 8002c06:	f85d eb04 	ldr.w	lr, [sp], #4
 8002c0a:	b002      	add	sp, #8
 8002c0c:	4770      	bx	lr
	...

08002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002c10:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002c12:	b510      	push	{r4, lr}
 8002c14:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002c16:	b373      	cbz	r3, 8002c76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002c18:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002c1a:	b92b      	cbnz	r3, 8002c28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002c1c:	4b18      	ldr	r3, [pc, #96]	; (8002c80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002c1e:	21c5      	movs	r1, #197	; 0xc5
 8002c20:	4a18      	ldr	r2, [pc, #96]	; (8002c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002c22:	4819      	ldr	r0, [pc, #100]	; (8002c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002c24:	f017 fbd4 	bl	801a3d0 <__assert_func>
            return buffer[pos];
 8002c28:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002c2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002c2e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002c30:	b30b      	cbz	r3, 8002c76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002c32:	f00d fd89 	bl	8010748 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002c36:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002c38:	2b01      	cmp	r3, #1
 8002c3a:	d803      	bhi.n	8002c44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002c3c:	4b13      	ldr	r3, [pc, #76]	; (8002c8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002c3e:	21cb      	movs	r1, #203	; 0xcb
 8002c40:	4a13      	ldr	r2, [pc, #76]	; (8002c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002c42:	e7ee      	b.n	8002c22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002c44:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002c46:	f640 103f 	movw	r0, #2367	; 0x93f
 8002c4a:	1c53      	adds	r3, r2, #1
 8002c4c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002c4e:	2b09      	cmp	r3, #9
 8002c50:	4619      	mov	r1, r3
 8002c52:	bf88      	it	hi
 8002c54:	f1a3 010a 	subhi.w	r1, r3, #10
 8002c58:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8002c5c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002c5e:	4281      	cmp	r1, r0
 8002c60:	d109      	bne.n	8002c76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002c62:	2b0a      	cmp	r3, #10
 8002c64:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002c68:	bf28      	it	cs
 8002c6a:	2300      	movcs	r3, #0
            return buffer[pos];
 8002c6c:	8c50      	ldrh	r0, [r2, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002c6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8002c72:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002c74:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002c76:	4620      	mov	r0, r4
}
 8002c78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002c7c:	f00d bc66 	b.w	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002c80:	0801c11c 	.word	0x0801c11c
 8002c84:	0801c125 	.word	0x0801c125
 8002c88:	0801c1d0 	.word	0x0801c1d0
 8002c8c:	0801c21a 	.word	0x0801c21a
 8002c90:	0801c228 	.word	0x0801c228

08002c94 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002c94:	f00d bc23 	b.w	80104de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002c98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002c98:	b510      	push	{r4, lr}
 8002c9a:	b086      	sub	sp, #24
 8002c9c:	ac02      	add	r4, sp, #8
 8002c9e:	e884 0006 	stmia.w	r4, {r1, r2}
 8002ca2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002ca4:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002ca6:	4621      	mov	r1, r4
    va_start(pArg, format);
 8002ca8:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002caa:	9301      	str	r3, [sp, #4]
 8002cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002cae:	9300      	str	r3, [sp, #0]
 8002cb0:	9b08      	ldr	r3, [sp, #32]
 8002cb2:	f00a fec7 	bl	800da44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002cb6:	b006      	add	sp, #24
 8002cb8:	bd10      	pop	{r4, pc}
	...

08002cbc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002cbc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002cbe:	bb18      	cbnz	r0, 8002d08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002cc0:	4b12      	ldr	r3, [pc, #72]	; (8002d0c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002cc2:	4813      	ldr	r0, [pc, #76]	; (8002d10 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002cc4:	681c      	ldr	r4, [r3, #0]
 8002cc6:	4913      	ldr	r1, [pc, #76]	; (8002d14 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002cc8:	b1b4      	cbz	r4, 8002cf8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002cca:	6822      	ldr	r2, [r4, #0]
 8002ccc:	4422      	add	r2, r4
 8002cce:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002cd0:	6862      	ldr	r2, [r4, #4]
 8002cd2:	4422      	add	r2, r4
 8002cd4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002cd6:	68a2      	ldr	r2, [r4, #8]
 8002cd8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002cda:	4b0f      	ldr	r3, [pc, #60]	; (8002d18 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002cdc:	2200      	movs	r2, #0
 8002cde:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002ce0:	f000 f838 	bl	8002d54 <_ZN17TypedTextDatabase8getFontsEv>
 8002ce4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002ce6:	f000 f833 	bl	8002d50 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002cea:	4b0c      	ldr	r3, [pc, #48]	; (8002d1c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002cec:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002cee:	4b0c      	ldr	r3, [pc, #48]	; (8002d20 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002cf0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002cf2:	4b0c      	ldr	r3, [pc, #48]	; (8002d24 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002cf4:	8018      	strh	r0, [r3, #0]
    }
}
 8002cf6:	e007      	b.n	8002d08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002cf8:	4b0b      	ldr	r3, [pc, #44]	; (8002d28 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002cfa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002cfc:	4b0b      	ldr	r3, [pc, #44]	; (8002d2c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002cfe:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002d00:	4b0b      	ldr	r3, [pc, #44]	; (8002d30 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002d02:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002d04:	2c00      	cmp	r4, #0
 8002d06:	d1e8      	bne.n	8002cda <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002d08:	bd38      	pop	{r3, r4, r5, pc}
 8002d0a:	bf00      	nop
 8002d0c:	24001740 	.word	0x24001740
 8002d10:	24001744 	.word	0x24001744
 8002d14:	24001748 	.word	0x24001748
 8002d18:	2400174c 	.word	0x2400174c
 8002d1c:	24006c28 	.word	0x24006c28
 8002d20:	24006c30 	.word	0x24006c30
 8002d24:	24006c2c 	.word	0x24006c2c
 8002d28:	0801d040 	.word	0x0801d040
 8002d2c:	0801d034 	.word	0x0801d034
 8002d30:	0801d080 	.word	0x0801d080

08002d34 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002d34:	4b04      	ldr	r3, [pc, #16]	; (8002d48 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002d3c:	4b03      	ldr	r3, [pc, #12]	; (8002d4c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002d3e:	681b      	ldr	r3, [r3, #0]
}
 8002d40:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002d44:	4770      	bx	lr
 8002d46:	bf00      	nop
 8002d48:	24001748 	.word	0x24001748
 8002d4c:	24001744 	.word	0x24001744

08002d50 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002d50:	2003      	movs	r0, #3
 8002d52:	4770      	bx	lr

08002d54 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002d54:	4800      	ldr	r0, [pc, #0]	; (8002d58 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002d56:	4770      	bx	lr
 8002d58:	24001750 	.word	0x24001750

08002d5c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002d5c:	b510      	push	{r4, lr}
};
 8002d5e:	4c05      	ldr	r4, [pc, #20]	; (8002d74 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
 8002d60:	f7ff fec0 	bl	8002ae4 <_Z23getFont_verdana_20_4bppv>
};
 8002d64:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002d66:	f7ff fef9 	bl	8002b5c <_Z23getFont_verdana_40_4bppv>
};
 8002d6a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002d6c:	f7ff fe7e 	bl	8002a6c <_Z23getFont_verdana_10_4bppv>
};
 8002d70:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002d72:	bd10      	pop	{r4, pc}
 8002d74:	24001750 	.word	0x24001750

08002d78 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002d78:	4770      	bx	lr

08002d7a <_ZN19FrontendApplicationD0Ev>:
 8002d7a:	b510      	push	{r4, lr}
 8002d7c:	4604      	mov	r4, r0
 8002d7e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002d82:	f017 faf7 	bl	801a374 <_ZdlPvj>
 8002d86:	4620      	mov	r0, r4
 8002d88:	bd10      	pop	{r4, pc}

08002d8a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002d8a:	b510      	push	{r4, lr}
 8002d8c:	4604      	mov	r4, r0
    {
        model.tick();
 8002d8e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8002d92:	f000 f8c8 	bl	8002f26 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002d96:	4620      	mov	r0, r4
    }
 8002d98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002d9c:	f00b bb0a 	b.w	800e3b4 <_ZN8touchgfx11Application15handleTickEventEv>

08002da0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002da0:	b510      	push	{r4, lr}
 8002da2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002da4:	f7ff fb6e 	bl	8002484 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002da8:	4b01      	ldr	r3, [pc, #4]	; (8002db0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8002daa:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8002dac:	6023      	str	r3, [r4, #0]
}
 8002dae:	bd10      	pop	{r4, pc}
 8002db0:	0801c304 	.word	0x0801c304

08002db4 <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {}
 8002db4:	4770      	bx	lr

08002db6 <_ZThn4_N19MainScreenPresenterD1Ev>:
 8002db6:	3804      	subs	r0, #4
 8002db8:	4770      	bx	lr

08002dba <_ZN19MainScreenPresenter10deactivateEv>:
}

void MainScreenPresenter::activate()
{

}
 8002dba:	4770      	bx	lr

08002dbc <_ZN19MainScreenPresenterD0Ev>:
 8002dbc:	b510      	push	{r4, lr}
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	2110      	movs	r1, #16
 8002dc2:	f017 fad7 	bl	801a374 <_ZdlPvj>
 8002dc6:	4620      	mov	r0, r4
 8002dc8:	bd10      	pop	{r4, pc}

08002dca <_ZThn4_N19MainScreenPresenterD0Ev>:
 8002dca:	f1a0 0004 	sub.w	r0, r0, #4
 8002dce:	e7f5      	b.n	8002dbc <_ZN19MainScreenPresenterD0Ev>

08002dd0 <_ZN19MainScreenPresenterC1ER14MainScreenView>:
    ModelListener() : model(0) {}
 8002dd0:	2200      	movs	r2, #0
    : view(v)
 8002dd2:	60c1      	str	r1, [r0, #12]
 8002dd4:	6082      	str	r2, [r0, #8]
 8002dd6:	4a04      	ldr	r2, [pc, #16]	; (8002de8 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x18>)
MainScreenPresenter::MainScreenPresenter(MainScreenView& v)
 8002dd8:	b510      	push	{r4, lr}
    : view(v)
 8002dda:	f102 0408 	add.w	r4, r2, #8
 8002dde:	3220      	adds	r2, #32
 8002de0:	6004      	str	r4, [r0, #0]
 8002de2:	6042      	str	r2, [r0, #4]
}
 8002de4:	bd10      	pop	{r4, pc}
 8002de6:	bf00      	nop
 8002de8:	0801c350 	.word	0x0801c350

08002dec <_ZN14MainScreenView14tearDownScreenEv>:
}

void MainScreenView::tearDownScreen()
{
    MainScreenViewBase::tearDownScreen();
}
 8002dec:	4770      	bx	lr
	...

08002df0 <_ZN14MainScreenViewD1Ev>:

class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
 8002df0:	4b03      	ldr	r3, [pc, #12]	; (8002e00 <_ZN14MainScreenViewD1Ev+0x10>)
 8002df2:	b510      	push	{r4, lr}
 8002df4:	4604      	mov	r4, r0
 8002df6:	6003      	str	r3, [r0, #0]
 8002df8:	f7ff fbfb 	bl	80025f2 <_ZN18MainScreenViewBaseD1Ev>
 8002dfc:	4620      	mov	r0, r4
 8002dfe:	bd10      	pop	{r4, pc}
 8002e00:	0801c380 	.word	0x0801c380

08002e04 <_ZN14MainScreenViewD0Ev>:
 8002e04:	b510      	push	{r4, lr}
 8002e06:	4604      	mov	r4, r0
 8002e08:	f7ff fff2 	bl	8002df0 <_ZN14MainScreenViewD1Ev>
 8002e0c:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8002e10:	4620      	mov	r0, r4
 8002e12:	f017 faaf 	bl	801a374 <_ZdlPvj>
 8002e16:	4620      	mov	r0, r4
 8002e18:	bd10      	pop	{r4, pc}
	...

08002e1c <_ZN14MainScreenViewC1Ev>:
MainScreenView::MainScreenView()
 8002e1c:	b510      	push	{r4, lr}
 8002e1e:	4604      	mov	r4, r0
 8002e20:	f7ff fc90 	bl	8002744 <_ZN18MainScreenViewBaseC1Ev>
 8002e24:	4b01      	ldr	r3, [pc, #4]	; (8002e2c <_ZN14MainScreenViewC1Ev+0x10>)
}
 8002e26:	4620      	mov	r0, r4
MainScreenView::MainScreenView()
 8002e28:	6023      	str	r3, [r4, #0]
}
 8002e2a:	bd10      	pop	{r4, pc}
 8002e2c:	0801c380 	.word	0x0801c380

08002e30 <_ZN14MainScreenView11setupScreenEv>:
    MainScreenViewBase::setupScreen();
 8002e30:	f7ff bbe0 	b.w	80025f4 <_ZN18MainScreenViewBase11setupScreenEv>

08002e34 <_ZN18MapScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MapScreenPresenter() {}
 8002e34:	4770      	bx	lr

08002e36 <_ZThn4_N18MapScreenPresenterD1Ev>:
 8002e36:	3804      	subs	r0, #4
 8002e38:	4770      	bx	lr

08002e3a <_ZN18MapScreenPresenter10deactivateEv>:
}

void MapScreenPresenter::activate()
{

}
 8002e3a:	4770      	bx	lr

08002e3c <_ZN18MapScreenPresenterD0Ev>:
 8002e3c:	b510      	push	{r4, lr}
 8002e3e:	4604      	mov	r4, r0
 8002e40:	2110      	movs	r1, #16
 8002e42:	f017 fa97 	bl	801a374 <_ZdlPvj>
 8002e46:	4620      	mov	r0, r4
 8002e48:	bd10      	pop	{r4, pc}

08002e4a <_ZThn4_N18MapScreenPresenterD0Ev>:
 8002e4a:	f1a0 0004 	sub.w	r0, r0, #4
 8002e4e:	e7f5      	b.n	8002e3c <_ZN18MapScreenPresenterD0Ev>

08002e50 <_ZN18MapScreenPresenterC1ER13MapScreenView>:
 8002e50:	2200      	movs	r2, #0
    : view(v)
 8002e52:	60c1      	str	r1, [r0, #12]
 8002e54:	6082      	str	r2, [r0, #8]
 8002e56:	4a04      	ldr	r2, [pc, #16]	; (8002e68 <_ZN18MapScreenPresenterC1ER13MapScreenView+0x18>)
MapScreenPresenter::MapScreenPresenter(MapScreenView& v)
 8002e58:	b510      	push	{r4, lr}
    : view(v)
 8002e5a:	f102 0408 	add.w	r4, r2, #8
 8002e5e:	3220      	adds	r2, #32
 8002e60:	6004      	str	r4, [r0, #0]
 8002e62:	6042      	str	r2, [r0, #4]
}
 8002e64:	bd10      	pop	{r4, pc}
 8002e66:	bf00      	nop
 8002e68:	0801c3ac 	.word	0x0801c3ac

08002e6c <_ZN13MapScreenView14tearDownScreenEv>:
}

void MapScreenView::tearDownScreen()
{
    MapScreenViewBase::tearDownScreen();
}
 8002e6c:	4770      	bx	lr
	...

08002e70 <_ZN13MapScreenViewD1Ev>:

class MapScreenView : public MapScreenViewBase
{
public:
    MapScreenView();
    virtual ~MapScreenView() {}
 8002e70:	4b03      	ldr	r3, [pc, #12]	; (8002e80 <_ZN13MapScreenViewD1Ev+0x10>)
 8002e72:	b510      	push	{r4, lr}
 8002e74:	4604      	mov	r4, r0
 8002e76:	6003      	str	r3, [r0, #0]
 8002e78:	f7ff fd94 	bl	80029a4 <_ZN17MapScreenViewBaseD1Ev>
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	bd10      	pop	{r4, pc}
 8002e80:	0801c3dc 	.word	0x0801c3dc

08002e84 <_ZN13MapScreenViewD0Ev>:
 8002e84:	b510      	push	{r4, lr}
 8002e86:	4604      	mov	r4, r0
 8002e88:	f7ff fff2 	bl	8002e70 <_ZN13MapScreenViewD1Ev>
 8002e8c:	21c0      	movs	r1, #192	; 0xc0
 8002e8e:	4620      	mov	r0, r4
 8002e90:	f017 fa70 	bl	801a374 <_ZdlPvj>
 8002e94:	4620      	mov	r0, r4
 8002e96:	bd10      	pop	{r4, pc}

08002e98 <_ZN13MapScreenViewC1Ev>:
MapScreenView::MapScreenView()
 8002e98:	b510      	push	{r4, lr}
 8002e9a:	4604      	mov	r4, r0
 8002e9c:	f7ff fd8c 	bl	80029b8 <_ZN17MapScreenViewBaseC1Ev>
          touchable(false),
 8002ea0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ea4:	4b0f      	ldr	r3, [pc, #60]	; (8002ee4 <_ZN13MapScreenViewC1Ev+0x4c>)
 8002ea6:	1d20      	adds	r0, r4, #4
 8002ea8:	f104 0198 	add.w	r1, r4, #152	; 0x98
 8002eac:	f8a4 20bc 	strh.w	r2, [r4, #188]	; 0xbc
#ifndef APPLICATION_USER_GUI_WIDGETS_MAPWIDGET_HPP_
#define APPLICATION_USER_GUI_WIDGETS_MAPWIDGET_HPP_

#include <touchgfx/widgets/Widget.hpp>

class MapWidget : public touchgfx::Widget {
 8002eb0:	4a0d      	ldr	r2, [pc, #52]	; (8002ee8 <_ZN13MapScreenViewC1Ev+0x50>)
 8002eb2:	6023      	str	r3, [r4, #0]
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	f8c4 2098 	str.w	r2, [r4, #152]	; 0x98
        return HAL::DISPLAY_WIDTH;
 8002eba:	4a0c      	ldr	r2, [pc, #48]	; (8002eec <_ZN13MapScreenViewC1Ev+0x54>)
        rect.x = x;
 8002ebc:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        rect.width = width;
 8002ec0:	8812      	ldrh	r2, [r2, #0]
 8002ec2:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
        return HAL::DISPLAY_HEIGHT;
 8002ec6:	4a0a      	ldr	r2, [pc, #40]	; (8002ef0 <_ZN13MapScreenViewC1Ev+0x58>)
        rect.height = height;
 8002ec8:	8812      	ldrh	r2, [r2, #0]
 8002eca:	e9c4 3329 	strd	r3, r3, [r4, #164]	; 0xa4
          nextSibling(0),
 8002ece:	e9c4 332b 	strd	r3, r3, [r4, #172]	; 0xac
          cachedAbsX(0),
 8002ed2:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
        rect.height = height;
 8002ed6:	f8a4 20a2 	strh.w	r2, [r4, #162]	; 0xa2
        container.add(d);
 8002eda:	f006 ffad 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002ede:	4620      	mov	r0, r4
 8002ee0:	bd10      	pop	{r4, pc}
 8002ee2:	bf00      	nop
 8002ee4:	0801c3dc 	.word	0x0801c3dc
 8002ee8:	0801c410 	.word	0x0801c410
 8002eec:	24006bcc 	.word	0x24006bcc
 8002ef0:	24006bce 	.word	0x24006bce

08002ef4 <_ZN13MapScreenView11setupScreenEv>:
    MapScreenViewBase::setupScreen();
 8002ef4:	f7ff bd57 	b.w	80029a6 <_ZN17MapScreenViewBase11setupScreenEv>

08002ef8 <_ZNK9MapWidget4drawERKN8touchgfx4RectE>:

#include "gui/widgets/MapWidget.hpp"

void MapWidget::draw(const touchgfx::Rect& invalidatedArea) const
{
}
 8002ef8:	4770      	bx	lr

08002efa <_ZNK9MapWidget12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002efa:	2200      	movs	r2, #0

touchgfx::Rect MapWidget::getSolidRect() const
{
 8002efc:	b510      	push	{r4, lr}
        return rect.width;
 8002efe:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002f02:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002f06:	8002      	strh	r2, [r0, #0]
 8002f08:	8042      	strh	r2, [r0, #2]
 8002f0a:	8084      	strh	r4, [r0, #4]
 8002f0c:	80c1      	strh	r1, [r0, #6]
    return touchgfx::Rect(0, 0, getWidth(), getHeight());
}
 8002f0e:	bd10      	pop	{r4, pc}

08002f10 <_ZN9MapWidgetD1Ev>:
 8002f10:	4770      	bx	lr

08002f12 <_ZN9MapWidgetD0Ev>:
 8002f12:	b510      	push	{r4, lr}
 8002f14:	4604      	mov	r4, r0
 8002f16:	2128      	movs	r1, #40	; 0x28
 8002f18:	f017 fa2c 	bl	801a374 <_ZdlPvj>
 8002f1c:	4620      	mov	r0, r4
 8002f1e:	bd10      	pop	{r4, pc}

08002f20 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002f20:	2200      	movs	r2, #0
 8002f22:	6002      	str	r2, [r0, #0]
{

}
 8002f24:	4770      	bx	lr

08002f26 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002f26:	4770      	bx	lr

08002f28 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 8002f28:	f240 1301 	movw	r3, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 8002f2c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0

  return FT5336_OK;
}
 8002f30:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
 8002f32:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
 8002f34:	2305      	movs	r3, #5
 8002f36:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 8002f38:	f44f 7388 	mov.w	r3, #272	; 0x110
 8002f3c:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
 8002f40:	4770      	bx	lr

08002f42 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
 8002f42:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002f46:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 8002f48:	bf04      	itt	eq
 8002f4a:	2300      	moveq	r3, #0
 8002f4c:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
 8002f50:	2000      	movs	r0, #0
 8002f52:	4770      	bx	lr

08002f54 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
 8002f54:	2000      	movs	r0, #0
 8002f56:	4770      	bx	lr

08002f58 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8002f58:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8002f5a:	6904      	ldr	r4, [r0, #16]
 8002f5c:	8900      	ldrh	r0, [r0, #8]
 8002f5e:	46a4      	mov	ip, r4
}
 8002f60:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8002f64:	4760      	bx	ip

08002f66 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8002f66:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8002f68:	68c4      	ldr	r4, [r0, #12]
 8002f6a:	8900      	ldrh	r0, [r0, #8]
 8002f6c:	46a4      	mov	ip, r4
}
 8002f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8002f72:	4760      	bx	ip

08002f74 <FT5336_GestureConfig>:
{
 8002f74:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8002f76:	f100 0518 	add.w	r5, r0, #24
{
 8002f7a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8002f7c:	7809      	ldrb	r1, [r1, #0]
 8002f7e:	4628      	mov	r0, r5
 8002f80:	f000 f8f4 	bl	800316c <ft5336_radian_value>
 8002f84:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
 8002f86:	7931      	ldrb	r1, [r6, #4]
 8002f88:	4628      	mov	r0, r5
 8002f8a:	f000 f8fb 	bl	8003184 <ft5336_offset_left_right>
 8002f8e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
 8002f90:	7a31      	ldrb	r1, [r6, #8]
 8002f92:	4628      	mov	r0, r5
 8002f94:	f000 f902 	bl	800319c <ft5336_offset_up_down>
 8002f98:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
 8002f9a:	7b31      	ldrb	r1, [r6, #12]
 8002f9c:	4628      	mov	r0, r5
 8002f9e:	f000 f909 	bl	80031b4 <ft5336_disatnce_left_right>
 8002fa2:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
 8002fa4:	7c31      	ldrb	r1, [r6, #16]
 8002fa6:	4628      	mov	r0, r5
 8002fa8:	f000 f910 	bl	80031cc <ft5336_distance_up_down>
 8002fac:	4404      	add	r4, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
 8002fae:	7d31      	ldrb	r1, [r6, #20]
 8002fb0:	4628      	mov	r0, r5
 8002fb2:	f000 f917 	bl	80031e4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
 8002fb6:	42c4      	cmn	r4, r0
}
 8002fb8:	bf14      	ite	ne
 8002fba:	f04f 30ff 	movne.w	r0, #4294967295
 8002fbe:	2000      	moveq	r0, #0
 8002fc0:	bd70      	pop	{r4, r5, r6, pc}

08002fc2 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
 8002fc2:	3018      	adds	r0, #24
 8002fc4:	f000 b926 	b.w	8003214 <ft5336_chip_id>

08002fc8 <FT5336_GetState>:
{
 8002fc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002fca:	f100 0518 	add.w	r5, r0, #24
{
 8002fce:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002fd0:	a901      	add	r1, sp, #4
 8002fd2:	4628      	mov	r0, r5
 8002fd4:	f000 f8bd 	bl	8003152 <ft5336_td_status>
 8002fd8:	bb08      	cbnz	r0, 800301e <FT5336_GetState+0x56>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 8002fda:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8002fde:	2b05      	cmp	r3, #5
 8002fe0:	bf98      	it	ls
 8002fe2:	4618      	movls	r0, r3
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8002fe4:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 8002fe6:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8002fe8:	2103      	movs	r1, #3
 8002fea:	4628      	mov	r0, r5
 8002fec:	eb0d 0203 	add.w	r2, sp, r3
 8002ff0:	f000 f89c 	bl	800312c <ft5336_read_reg>
 8002ff4:	b9b0      	cbnz	r0, 8003024 <FT5336_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 8002ff6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002ffa:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002ffe:	021b      	lsls	r3, r3, #8
 8003000:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003004:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 8003006:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 800300a:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 800300c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003010:	021b      	lsls	r3, r3, #8
 8003012:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003016:	4313      	orrs	r3, r2
 8003018:	60a3      	str	r3, [r4, #8]
}
 800301a:	b003      	add	sp, #12
 800301c:	bd30      	pop	{r4, r5, pc}
    ret = FT5336_ERROR;
 800301e:	f04f 30ff 	mov.w	r0, #4294967295
 8003022:	e7df      	b.n	8002fe4 <FT5336_GetState+0x1c>
    ret = FT5336_ERROR;
 8003024:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003028:	e7f7      	b.n	800301a <FT5336_GetState+0x52>

0800302a <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
 800302a:	3018      	adds	r0, #24
 800302c:	f000 b88c 	b.w	8003148 <ft5336_gest_id>

08003030 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
 8003030:	2101      	movs	r1, #1
 8003032:	3018      	adds	r0, #24
 8003034:	f000 b8e2 	b.w	80031fc <ft5336_g_mode>

08003038 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
 8003038:	2100      	movs	r1, #0
 800303a:	3018      	adds	r0, #24
 800303c:	f000 b8de 	b.w	80031fc <ft5336_g_mode>

08003040 <FT5336_Init>:
{
 8003040:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 8003042:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8003046:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 8003048:	b96b      	cbnz	r3, 8003066 <FT5336_Init+0x26>
    pObj->IO.Init();
 800304a:	6803      	ldr	r3, [r0, #0]
 800304c:	4798      	blx	r3
    ret += FT5336_DisableIT(pObj);
 800304e:	4620      	mov	r0, r4
 8003050:	f7ff fff2 	bl	8003038 <FT5336_DisableIT>
  if(ret != FT5336_OK)
 8003054:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
 8003056:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
 800305a:	bf18      	it	ne
 800305c:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
 800305e:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
 8003062:	4240      	negs	r0, r0
}
 8003064:	bd10      	pop	{r4, pc}
  int32_t ret = FT5336_OK;
 8003066:	2000      	movs	r0, #0
  return ret;
 8003068:	e7fc      	b.n	8003064 <FT5336_Init+0x24>

0800306a <FT5336_ClearIT>:
 800306a:	2000      	movs	r0, #0
 800306c:	4770      	bx	lr

0800306e <FT5336_GetMultiTouchState>:
{
 800306e:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8003070:	f100 0518 	add.w	r5, r0, #24
{
 8003074:	b088      	sub	sp, #32
 8003076:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8003078:	4628      	mov	r0, r5
 800307a:	4669      	mov	r1, sp
 800307c:	f000 f869 	bl	8003152 <ft5336_td_status>
 8003080:	bb90      	cbnz	r0, 80030e8 <FT5336_GetMultiTouchState+0x7a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 8003082:	f89d 3000 	ldrb.w	r3, [sp]
      ret = (int32_t)nb_touch;
 8003086:	2b05      	cmp	r3, #5
 8003088:	bf98      	it	ls
 800308a:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 800308c:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 800308e:	231e      	movs	r3, #30
 8003090:	466a      	mov	r2, sp
 8003092:	2103      	movs	r1, #3
 8003094:	4628      	mov	r0, r5
 8003096:	f000 f849 	bl	800312c <ft5336_read_reg>
 800309a:	bb40      	cbnz	r0, 80030ee <FT5336_GetMultiTouchState+0x80>
 800309c:	4621      	mov	r1, r4
 800309e:	466d      	mov	r5, sp
 80030a0:	3414      	adds	r4, #20
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 80030a2:	782a      	ldrb	r2, [r5, #0]
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 80030a4:	3506      	adds	r5, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 80030a6:	f815 6c05 	ldrb.w	r6, [r5, #-5]
 80030aa:	0213      	lsls	r3, r2, #8
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 80030ac:	0992      	lsrs	r2, r2, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 80030ae:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80030b2:	4333      	orrs	r3, r6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 80030b4:	f815 6c03 	ldrb.w	r6, [r5, #-3]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 80030b8:	f841 3f04 	str.w	r3, [r1, #4]!
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 80030bc:	428c      	cmp	r4, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 80030be:	f815 3c04 	ldrb.w	r3, [r5, #-4]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 80030c2:	63ca      	str	r2, [r1, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 80030c4:	ea4f 2303 	mov.w	r3, r3, lsl #8
 80030c8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80030cc:	ea43 0306 	orr.w	r3, r3, r6
 80030d0:	614b      	str	r3, [r1, #20]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
 80030d2:	f815 3c02 	ldrb.w	r3, [r5, #-2]
 80030d6:	628b      	str	r3, [r1, #40]	; 0x28
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
 80030d8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80030dc:	ea4f 1313 	mov.w	r3, r3, lsr #4
 80030e0:	650b      	str	r3, [r1, #80]	; 0x50
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 80030e2:	d1de      	bne.n	80030a2 <FT5336_GetMultiTouchState+0x34>
}
 80030e4:	b008      	add	sp, #32
 80030e6:	bd70      	pop	{r4, r5, r6, pc}
    ret = FT5336_ERROR;
 80030e8:	f04f 30ff 	mov.w	r0, #4294967295
 80030ec:	e7ce      	b.n	800308c <FT5336_GetMultiTouchState+0x1e>
    ret = FT5336_ERROR;
 80030ee:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80030f2:	e7f7      	b.n	80030e4 <FT5336_GetMultiTouchState+0x76>

080030f4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
 80030f4:	b190      	cbz	r0, 800311c <FT5336_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 80030f6:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 80030f8:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 80030fa:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 80030fc:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 80030fe:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8003100:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8003102:	68ca      	ldr	r2, [r1, #12]
 8003104:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8003106:	690a      	ldr	r2, [r1, #16]
 8003108:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 800310a:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 800310c:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 800310e:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8003110:	4a04      	ldr	r2, [pc, #16]	; (8003124 <FT5336_RegisterBusIO+0x30>)
 8003112:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 8003114:	4a04      	ldr	r2, [pc, #16]	; (8003128 <FT5336_RegisterBusIO+0x34>)
 8003116:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8003118:	b103      	cbz	r3, 800311c <FT5336_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 800311a:	4718      	bx	r3
}
 800311c:	f04f 30ff 	mov.w	r0, #4294967295
 8003120:	4770      	bx	lr
 8003122:	bf00      	nop
 8003124:	08002f59 	.word	0x08002f59
 8003128:	08002f67 	.word	0x08002f67

0800312c <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 800312c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 800312e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 8003132:	46a4      	mov	ip, r4
}
 8003134:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003138:	4760      	bx	ip

0800313a <ft5336_write_reg>:
  * @param  pdata pointer to data to be written
  * @param  length Length of data to write   
  * @retval Component status
  */
int32_t ft5336_write_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 800313a:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 800313c:	6804      	ldr	r4, [r0, #0]
 800313e:	6880      	ldr	r0, [r0, #8]
 8003140:	46a4      	mov	ip, r4
}
 8003142:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8003146:	4760      	bx	ip

08003148 <ft5336_gest_id>:
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 8003148:	2301      	movs	r3, #1
{
 800314a:	460a      	mov	r2, r1
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 800314c:	4619      	mov	r1, r3
 800314e:	f7ff bfed 	b.w	800312c <ft5336_read_reg>

08003152 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
 8003152:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 8003154:	460a      	mov	r2, r1
{
 8003156:	460c      	mov	r4, r1
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 8003158:	2301      	movs	r3, #1
 800315a:	2102      	movs	r1, #2
 800315c:	f7ff ffe6 	bl	800312c <ft5336_read_reg>
  
  if(ret == 0)
 8003160:	b918      	cbnz	r0, 800316a <ft5336_td_status+0x18>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
 8003162:	7823      	ldrb	r3, [r4, #0]
 8003164:	f003 030f 	and.w	r3, r3, #15
 8003168:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
 800316a:	bd10      	pop	{r4, pc}

0800316c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
 800316c:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 800316e:	2301      	movs	r3, #1
{
 8003170:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 8003174:	f10d 0207 	add.w	r2, sp, #7
 8003178:	2191      	movs	r1, #145	; 0x91
 800317a:	f7ff ffde 	bl	800313a <ft5336_write_reg>
}
 800317e:	b003      	add	sp, #12
 8003180:	f85d fb04 	ldr.w	pc, [sp], #4

08003184 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 8003184:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 8003186:	2301      	movs	r3, #1
{
 8003188:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 800318c:	f10d 0207 	add.w	r2, sp, #7
 8003190:	2192      	movs	r1, #146	; 0x92
 8003192:	f7ff ffd2 	bl	800313a <ft5336_write_reg>
}
 8003196:	b003      	add	sp, #12
 8003198:	f85d fb04 	ldr.w	pc, [sp], #4

0800319c <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 800319c:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 800319e:	2301      	movs	r3, #1
{
 80031a0:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 80031a4:	f10d 0207 	add.w	r2, sp, #7
 80031a8:	2193      	movs	r1, #147	; 0x93
 80031aa:	f7ff ffc6 	bl	800313a <ft5336_write_reg>
}
 80031ae:	b003      	add	sp, #12
 80031b0:	f85d fb04 	ldr.w	pc, [sp], #4

080031b4 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 80031b4:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 80031b6:	2301      	movs	r3, #1
{
 80031b8:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 80031bc:	f10d 0207 	add.w	r2, sp, #7
 80031c0:	2194      	movs	r1, #148	; 0x94
 80031c2:	f7ff ffba 	bl	800313a <ft5336_write_reg>
}
 80031c6:	b003      	add	sp, #12
 80031c8:	f85d fb04 	ldr.w	pc, [sp], #4

080031cc <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 80031cc:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 80031ce:	2301      	movs	r3, #1
{
 80031d0:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 80031d4:	f10d 0207 	add.w	r2, sp, #7
 80031d8:	2195      	movs	r1, #149	; 0x95
 80031da:	f7ff ffae 	bl	800313a <ft5336_write_reg>
}
 80031de:	b003      	add	sp, #12
 80031e0:	f85d fb04 	ldr.w	pc, [sp], #4

080031e4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
 80031e4:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 80031e6:	2301      	movs	r3, #1
{
 80031e8:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 80031ec:	f10d 0207 	add.w	r2, sp, #7
 80031f0:	2196      	movs	r1, #150	; 0x96
 80031f2:	f7ff ffa2 	bl	800313a <ft5336_write_reg>
}
 80031f6:	b003      	add	sp, #12
 80031f8:	f85d fb04 	ldr.w	pc, [sp], #4

080031fc <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
 80031fc:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 80031fe:	2301      	movs	r3, #1
{
 8003200:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 8003204:	f10d 0207 	add.w	r2, sp, #7
 8003208:	21a4      	movs	r1, #164	; 0xa4
 800320a:	f7ff ff96 	bl	800313a <ft5336_write_reg>
}
 800320e:	b003      	add	sp, #12
 8003210:	f85d fb04 	ldr.w	pc, [sp], #4

08003214 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
 8003214:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_CHIP_ID_REG, (uint8_t *)value, 1);
 8003216:	2301      	movs	r3, #1
 8003218:	21a8      	movs	r1, #168	; 0xa8
 800321a:	f7ff bf87 	b.w	800312c <ft5336_read_reg>

0800321e <MX25LM51245G_GetFlashInfo>:
  */
int32_t MX25LM51245G_GetFlashInfo(MX25LM51245G_Info_t *pInfo)
{
  /* Configure the structure with the memory configuration */
  pInfo->FlashSize              = MX25LM51245G_FLASH_SIZE;
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 800321e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8003222:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->ProgPageSize           = MX25LM51245G_PAGE_SIZE;
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 8003226:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 800322a:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
 800322e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003232:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003236:	e9c0 3202 	strd	r3, r2, [r0, #8]
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 800323a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
 800323e:	e9c0 3204 	strd	r3, r2, [r0, #16]
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 8003242:	6183      	str	r3, [r0, #24]
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 8003244:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8003248:	e9c0 1307 	strd	r1, r3, [r0, #28]

  return MX25LM51245G_OK;
};
 800324c:	2000      	movs	r0, #0
 800324e:	4770      	bx	lr

08003250 <MX25LM51245G_AutoPollingMemReady>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate
  * @retval error status
  */
int32_t MX25LM51245G_AutoPollingMemReady(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003250:	b570      	push	{r4, r5, r6, lr}
 8003252:	b09a      	sub	sp, #104	; 0x68
 8003254:	460e      	mov	r6, r1
 8003256:	4605      	mov	r5, r0
  OSPI_RegularCmdTypeDef  s_command = {0};
 8003258:	2100      	movs	r1, #0
{
 800325a:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef  s_command = {0};
 800325c:	a806      	add	r0, sp, #24
 800325e:	2250      	movs	r2, #80	; 0x50
 8003260:	f017 faa9 	bl	801a7b6 <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 8003264:	2214      	movs	r2, #20
 8003266:	2100      	movs	r1, #0
 8003268:	a801      	add	r0, sp, #4
 800326a:	f017 faa4 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 800326e:	b92e      	cbnz	r6, 800327c <MX25LM51245G_AutoPollingMemReady+0x2c>
 8003270:	2c01      	cmp	r4, #1
 8003272:	d150      	bne.n	8003316 <MX25LM51245G_AutoPollingMemReady+0xc6>
  {
    return MX25LM51245G_ERROR;
 8003274:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003278:	b01a      	add	sp, #104	; 0x68
 800327a:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800327c:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800327e:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003280:	9309      	str	r3, [sp, #36]	; 0x24
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003282:	2010      	movs	r0, #16
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003284:	4253      	negs	r3, r2
 8003286:	4153      	adcs	r3, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003288:	2e00      	cmp	r6, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800328a:	ea4f 02c3 	mov.w	r2, r3, lsl #3
 800328e:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003290:	bf14      	ite	ne
 8003292:	2201      	movne	r2, #1
 8003294:	2200      	moveq	r2, #0
 8003296:	ea4f 1102 	mov.w	r1, r2, lsl #4
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 800329a:	ea4f 2282 	mov.w	r2, r2, lsl #10
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800329e:	910a      	str	r1, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80032a0:	f240 51fa 	movw	r1, #1530	; 0x5fa
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 80032a4:	920d      	str	r2, [sp, #52]	; 0x34
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80032a6:	ea4f 22c3 	mov.w	r2, r3, lsl #11
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80032aa:	bf08      	it	eq
 80032ac:	2105      	moveq	r1, #5
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80032ae:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80032b0:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80032b4:	9108      	str	r1, [sp, #32]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032b6:	a906      	add	r1, sp, #24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80032b8:	920e      	str	r2, [sp, #56]	; 0x38
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80032ba:	bf0c      	ite	eq
 80032bc:	f04f 7280 	moveq.w	r2, #16777216	; 0x1000000
 80032c0:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 80032c4:	9214      	str	r2, [sp, #80]	; 0x50
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80032c6:	ea4f 62c3 	mov.w	r2, r3, lsl #27
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80032ca:	ea4f 7343 	mov.w	r3, r3, lsl #29
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80032ce:	9216      	str	r2, [sp, #88]	; 0x58
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80032d0:	bf0c      	ite	eq
 80032d2:	2200      	moveq	r2, #0
 80032d4:	2205      	movne	r2, #5
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80032d6:	9318      	str	r3, [sp, #96]	; 0x60
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80032d8:	2c01      	cmp	r4, #1
  s_config.Mask          = MX25LM51245G_SR_WIP;
 80032da:	f04f 0301 	mov.w	r3, #1
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80032de:	9217      	str	r2, [sp, #92]	; 0x5c
  s_config.Mask          = MX25LM51245G_SR_WIP;
 80032e0:	9302      	str	r3, [sp, #8]
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80032e2:	bf0c      	ite	eq
 80032e4:	2202      	moveq	r2, #2
 80032e6:	2201      	movne	r2, #1
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 80032e8:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80032ec:	9215      	str	r2, [sp, #84]	; 0x54
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032ee:	f241 3288 	movw	r2, #5000	; 0x1388
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 80032f2:	e9cd 3004 	strd	r3, r0, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032f6:	4628      	mov	r0, r5
 80032f8:	f002 fb77 	bl	80059ea <HAL_OSPI_Command>
 80032fc:	2800      	cmp	r0, #0
 80032fe:	d1b9      	bne.n	8003274 <MX25LM51245G_AutoPollingMemReady+0x24>
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003300:	f241 3288 	movw	r2, #5000	; 0x1388
 8003304:	a901      	add	r1, sp, #4
 8003306:	4628      	mov	r0, r5
 8003308:	f002 fcac 	bl	8005c64 <HAL_OSPI_AutoPolling>
 800330c:	3800      	subs	r0, #0
 800330e:	bf18      	it	ne
 8003310:	2001      	movne	r0, #1
 8003312:	4240      	negs	r0, r0
 8003314:	e7b0      	b.n	8003278 <MX25LM51245G_AutoPollingMemReady+0x28>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003316:	2301      	movs	r3, #1
 8003318:	e7b1      	b.n	800327e <MX25LM51245G_AutoPollingMemReady+0x2e>

0800331a <MX25LM51245G_EnableSTRMemoryMappedMode>:
  * @param  Mode Interface mode
  * @param  AddressSize Address size
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableSTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize)
{
 800331a:	b570      	push	{r4, r5, r6, lr}
 800331c:	b096      	sub	sp, #88	; 0x58
 800331e:	460c      	mov	r4, r1
 8003320:	4606      	mov	r6, r0
 8003322:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef      s_command = {0};
 8003324:	2100      	movs	r1, #0
 8003326:	2250      	movs	r2, #80	; 0x50
 8003328:	a802      	add	r0, sp, #8
 800332a:	f017 fa44 	bl	801a7b6 <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800332e:	2300      	movs	r3, #0

  /* OPI mode and 3-bytes address size not supported by memory */
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 8003330:	2c01      	cmp	r4, #1
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003332:	e9cd 3300 	strd	r3, r3, [sp]
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 8003336:	d104      	bne.n	8003342 <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
 8003338:	b91d      	cbnz	r5, 8003342 <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
  {
    return MX25LM51245G_ERROR;
 800333a:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800333e:	b016      	add	sp, #88	; 0x58
 8003340:	bd70      	pop	{r4, r5, r6, pc}
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 8003342:	2301      	movs	r3, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003344:	2c00      	cmp	r4, #0
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 8003346:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003348:	bf18      	it	ne
 800334a:	2304      	movne	r3, #4
 800334c:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800334e:	bf14      	ite	ne
 8003350:	2301      	movne	r3, #1
 8003352:	2300      	moveq	r3, #0
 8003354:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003358:	9306      	str	r3, [sp, #24]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 800335a:	d140      	bne.n	80033de <MX25LM51245G_EnableSTRMemoryMappedMode+0xc4>
 800335c:	2d00      	cmp	r5, #0
 800335e:	bf0c      	ite	eq
 8003360:	230b      	moveq	r3, #11
 8003362:	230c      	movne	r3, #12
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003364:	2c00      	cmp	r4, #0
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 8003366:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003368:	f241 3288 	movw	r2, #5000	; 0x1388
 800336c:	a902      	add	r1, sp, #8
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 800336e:	bf0c      	ite	eq
 8003370:	f44f 7380 	moveq.w	r3, #256	; 0x100
 8003374:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 8003378:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800337a:	4630      	mov	r0, r6
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 800337c:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 800337e:	bf0c      	ite	eq
 8003380:	f44f 5300 	moveq.w	r3, #8192	; 0x2000
 8003384:	f44f 5340 	movne.w	r3, #12288	; 0x3000
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003388:	2c00      	cmp	r4, #0
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 800338a:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800338c:	bf0c      	ite	eq
 800338e:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003392:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8003396:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? DUMMY_CYCLES_READ : DUMMY_CYCLES_READ_OCTAL;
 8003398:	bf0c      	ite	eq
 800339a:	2308      	moveq	r3, #8
 800339c:	2306      	movne	r3, #6
 800339e:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033a0:	f002 fb23 	bl	80059ea <HAL_OSPI_Command>
 80033a4:	2800      	cmp	r0, #0
 80033a6:	d1c8      	bne.n	800333a <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_command.OperationType      = HAL_OSPI_OPTYPE_WRITE_CFG;
 80033a8:	2302      	movs	r3, #2
 80033aa:	9302      	str	r3, [sp, #8]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 80033ac:	b9d4      	cbnz	r4, 80033e4 <MX25LM51245G_EnableSTRMemoryMappedMode+0xca>
 80033ae:	2d00      	cmp	r5, #0
 80033b0:	bf18      	it	ne
 80033b2:	2312      	movne	r3, #18
 80033b4:	9304      	str	r3, [sp, #16]
  s_command.DummyCycles        = 0U;
 80033b6:	2300      	movs	r3, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80033bc:	a902      	add	r1, sp, #8
 80033be:	4630      	mov	r0, r6
  s_command.DummyCycles        = 0U;
 80033c0:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033c2:	f002 fb12 	bl	80059ea <HAL_OSPI_Command>
 80033c6:	2800      	cmp	r0, #0
 80033c8:	d1b7      	bne.n	800333a <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 80033ca:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 80033cc:	4669      	mov	r1, sp
 80033ce:	4630      	mov	r0, r6
 80033d0:	f002 fc98 	bl	8005d04 <HAL_OSPI_MemoryMapped>
 80033d4:	3800      	subs	r0, #0
 80033d6:	bf18      	it	ne
 80033d8:	2001      	movne	r0, #1
 80033da:	4240      	negs	r0, r0
 80033dc:	e7af      	b.n	800333e <MX25LM51245G_EnableSTRMemoryMappedMode+0x24>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 80033de:	f64e 4313 	movw	r3, #60435	; 0xec13
 80033e2:	e7bf      	b.n	8003364 <MX25LM51245G_EnableSTRMemoryMappedMode+0x4a>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 80033e4:	f241 23ed 	movw	r3, #4845	; 0x12ed
 80033e8:	e7e4      	b.n	80033b4 <MX25LM51245G_EnableSTRMemoryMappedMode+0x9a>

080033ea <MX25LM51245G_EnableDTRMemoryMappedMode>:
  * @param  AddressSize Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableDTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode)
{
 80033ea:	b510      	push	{r4, lr}
 80033ec:	b096      	sub	sp, #88	; 0x58
 80033ee:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  OSPI_RegularCmdTypeDef      s_command = {0};
 80033f0:	224c      	movs	r2, #76	; 0x4c
 80033f2:	2100      	movs	r1, #0
 80033f4:	a803      	add	r0, sp, #12
 80033f6:	f017 f9de 	bl	801a7b6 <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80033fa:	2300      	movs	r3, #0
  /* Initialize the read command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 80033fc:	f04f 0c08 	mov.w	ip, #8
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003400:	f44f 6100 	mov.w	r1, #2048	; 0x800
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003404:	f241 3288 	movw	r2, #5000	; 0x1388
 8003408:	4620      	mov	r0, r4
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800340a:	e9cd 3300 	strd	r3, r3, [sp]
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 800340e:	2301      	movs	r3, #1
 8003410:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
 8003412:	2304      	movs	r3, #4
 8003414:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 8003416:	2310      	movs	r3, #16
 8003418:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 800341c:	f64e 6311 	movw	r3, #60945	; 0xee11
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003420:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 8003424:	9304      	str	r3, [sp, #16]
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
 8003426:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800342a:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 800342c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003430:	e9cd 310a 	strd	r3, r1, [sp, #40]	; 0x28
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 8003434:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003438:	a902      	add	r1, sp, #8
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 800343a:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 800343c:	2306      	movs	r3, #6
 800343e:	e9cd c312 	strd	ip, r3, [sp, #72]	; 0x48
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
 8003442:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003446:	9314      	str	r3, [sp, #80]	; 0x50
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003448:	f002 facf 	bl	80059ea <HAL_OSPI_Command>
 800344c:	b118      	cbz	r0, 8003456 <MX25LM51245G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX25LM51245G_ERROR;
 800344e:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003452:	b016      	add	sp, #88	; 0x58
 8003454:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 8003456:	2302      	movs	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003458:	f241 3288 	movw	r2, #5000	; 0x1388
 800345c:	a902      	add	r1, sp, #8
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 800345e:	9302      	str	r3, [sp, #8]
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 8003460:	f241 23ed 	movw	r3, #4845	; 0x12ed
  s_command.DQSMode       = HAL_OSPI_DQS_DISABLE;
 8003464:	e9cd 0013 	strd	r0, r0, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003468:	4620      	mov	r0, r4
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 800346a:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800346c:	f002 fabd 	bl	80059ea <HAL_OSPI_Command>
 8003470:	2800      	cmp	r0, #0
 8003472:	d1ec      	bne.n	800344e <MX25LM51245G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 8003474:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 8003476:	4669      	mov	r1, sp
 8003478:	4620      	mov	r0, r4
 800347a:	f002 fc43 	bl	8005d04 <HAL_OSPI_MemoryMapped>
 800347e:	3800      	subs	r0, #0
 8003480:	bf18      	it	ne
 8003482:	2001      	movne	r0, #1
 8003484:	4240      	negs	r0, r0
 8003486:	e7e4      	b.n	8003452 <MX25LM51245G_EnableDTRMemoryMappedMode+0x68>

08003488 <MX25LM51245G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_WriteEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800348c:	b09a      	sub	sp, #104	; 0x68
 800348e:	460f      	mov	r7, r1
 8003490:	4605      	mov	r5, r0
  OSPI_RegularCmdTypeDef     s_command = {0};
 8003492:	2100      	movs	r1, #0
{
 8003494:	4616      	mov	r6, r2
  OSPI_RegularCmdTypeDef     s_command = {0};
 8003496:	a806      	add	r0, sp, #24
 8003498:	2250      	movs	r2, #80	; 0x50
 800349a:	f017 f98c 	bl	801a7b6 <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 800349e:	2214      	movs	r2, #20
 80034a0:	2100      	movs	r1, #0
 80034a2:	a801      	add	r0, sp, #4
 80034a4:	f017 f987 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 80034a8:	b937      	cbnz	r7, 80034b8 <MX25LM51245G_WriteEnable+0x30>
 80034aa:	2e01      	cmp	r6, #1
 80034ac:	d163      	bne.n	8003576 <MX25LM51245G_WriteEnable+0xee>
  {
    return MX25LM51245G_ERROR;
 80034ae:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80034b2:	b01a      	add	sp, #104	; 0x68
 80034b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80034b8:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034ba:	1e71      	subs	r1, r6, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80034bc:	9309      	str	r3, [sp, #36]	; 0x24
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034be:	f241 3288 	movw	r2, #5000	; 0x1388
 80034c2:	4628      	mov	r0, r5
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034c4:	424c      	negs	r4, r1
 80034c6:	414c      	adcs	r4, r1
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80034c8:	2f00      	cmp	r7, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034ca:	a906      	add	r1, sp, #24
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034cc:	ea4f 03c4 	mov.w	r3, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80034d0:	bf14      	ite	ne
 80034d2:	f04f 0801 	movne.w	r8, #1
 80034d6:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034da:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80034dc:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80034e0:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_ENABLE_CMD : MX25LM51245G_OCTA_WRITE_ENABLE_CMD;
 80034e2:	f240 63f9 	movw	r3, #1785	; 0x6f9
 80034e6:	bf08      	it	eq
 80034e8:	2306      	moveq	r3, #6
 80034ea:	9308      	str	r3, [sp, #32]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034ec:	f002 fa7d 	bl	80059ea <HAL_OSPI_Command>
 80034f0:	2800      	cmp	r0, #0
 80034f2:	d1dc      	bne.n	80034ae <MX25LM51245G_WriteEnable+0x26>
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80034f4:	2f00      	cmp	r7, #0
 80034f6:	f240 53fa 	movw	r3, #1530	; 0x5fa
  s_command.Address        = 0U;
 80034fa:	900c      	str	r0, [sp, #48]	; 0x30
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034fc:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003500:	bf08      	it	eq
 8003502:	2305      	moveq	r3, #5
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003504:	a906      	add	r1, sp, #24
 8003506:	4628      	mov	r0, r5
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003508:	9308      	str	r3, [sp, #32]
  s_command.AddressMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 800350a:	ea4f 2388 	mov.w	r3, r8, lsl #10
 800350e:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003510:	ea4f 23c4 	mov.w	r3, r4, lsl #11
 8003514:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.AddressSize    = HAL_OSPI_ADDRESS_32_BITS;
 8003516:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800351a:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800351c:	bf0c      	ite	eq
 800351e:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003522:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8003526:	9314      	str	r3, [sp, #80]	; 0x50
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003528:	ea4f 63c4 	mov.w	r3, r4, lsl #27
  s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 800352c:	ea4f 7444 	mov.w	r4, r4, lsl #29
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003530:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003532:	bf0c      	ite	eq
 8003534:	2300      	moveq	r3, #0
 8003536:	2305      	movne	r3, #5
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003538:	2e01      	cmp	r6, #1
  s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 800353a:	9418      	str	r4, [sp, #96]	; 0x60
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 800353c:	9317      	str	r3, [sp, #92]	; 0x5c
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 800353e:	bf0c      	ite	eq
 8003540:	2302      	moveq	r3, #2
 8003542:	2301      	movne	r3, #1
 8003544:	9315      	str	r3, [sp, #84]	; 0x54
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003546:	f002 fa50 	bl	80059ea <HAL_OSPI_Command>
 800354a:	2800      	cmp	r0, #0
 800354c:	d1af      	bne.n	80034ae <MX25LM51245G_WriteEnable+0x26>
  s_config.Match           = 2U;
 800354e:	2302      	movs	r3, #2
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003550:	2210      	movs	r2, #16
  s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
 8003552:	9003      	str	r0, [sp, #12]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003554:	a901      	add	r1, sp, #4
 8003556:	4628      	mov	r0, r5
  s_config.Mask            = 2U;
 8003558:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 800355c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003560:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003564:	f241 3288 	movw	r2, #5000	; 0x1388
 8003568:	f002 fb7c 	bl	8005c64 <HAL_OSPI_AutoPolling>
 800356c:	3800      	subs	r0, #0
 800356e:	bf18      	it	ne
 8003570:	2001      	movne	r0, #1
 8003572:	4240      	negs	r0, r0
 8003574:	e79d      	b.n	80034b2 <MX25LM51245G_WriteEnable+0x2a>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003576:	2301      	movs	r3, #1
 8003578:	e79f      	b.n	80034ba <MX25LM51245G_WriteEnable+0x32>

0800357a <MX25LM51245G_WriteCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX25LM51245G_WriteCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 800357a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800357c:	b095      	sub	sp, #84	; 0x54
 800357e:	460e      	mov	r6, r1
 8003580:	4605      	mov	r5, r0
 8003582:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003584:	2100      	movs	r1, #0
 8003586:	2250      	movs	r2, #80	; 0x50
 8003588:	4668      	mov	r0, sp
{
 800358a:	461f      	mov	r7, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 800358c:	f017 f913 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003590:	b92e      	cbnz	r6, 800359e <MX25LM51245G_WriteCfg2Register+0x24>
 8003592:	2c01      	cmp	r4, #1
 8003594:	d146      	bne.n	8003624 <MX25LM51245G_WriteCfg2Register+0xaa>
  {
    return MX25LM51245G_ERROR;
 8003596:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800359a:	b015      	add	sp, #84	; 0x54
 800359c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800359e:	2304      	movs	r3, #4
 80035a0:	9303      	str	r3, [sp, #12]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80035a2:	1e63      	subs	r3, r4, #1
  s_command.Address            = WriteAddr;
 80035a4:	9706      	str	r7, [sp, #24]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80035a6:	425a      	negs	r2, r3
 80035a8:	415a      	adcs	r2, r3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80035aa:	2e00      	cmp	r6, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80035ac:	ea4f 03c2 	mov.w	r3, r2, lsl #3
 80035b0:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80035b2:	bf14      	ite	ne
 80035b4:	2301      	movne	r3, #1
 80035b6:	2300      	moveq	r3, #0
 80035b8:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80035bc:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_CFG_REG2_CMD : MX25LM51245G_OCTA_WRITE_CFG_REG2_CMD;
 80035be:	f247 238d 	movw	r3, #29325	; 0x728d
 80035c2:	bf08      	it	eq
 80035c4:	2372      	moveq	r3, #114	; 0x72
 80035c6:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 80035c8:	bf0c      	ite	eq
 80035ca:	f44f 7380 	moveq.w	r3, #256	; 0x100
 80035ce:	f44f 6380 	movne.w	r3, #1024	; 0x400
 80035d2:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80035d4:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80035d8:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80035dc:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80035de:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80035e2:	9210      	str	r2, [sp, #64]	; 0x40
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80035e4:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80035e6:	bf14      	ite	ne
 80035e8:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80035ec:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 80035f0:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 80035f2:	d019      	beq.n	8003628 <MX25LM51245G_WriteCfg2Register+0xae>
 80035f4:	2c01      	cmp	r4, #1
 80035f6:	bf14      	ite	ne
 80035f8:	2301      	movne	r3, #1
 80035fa:	2302      	moveq	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035fc:	f241 3288 	movw	r2, #5000	; 0x1388
 8003600:	4669      	mov	r1, sp
 8003602:	4628      	mov	r0, r5
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003604:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003606:	f002 f9f0 	bl	80059ea <HAL_OSPI_Command>
 800360a:	2800      	cmp	r0, #0
 800360c:	d1c3      	bne.n	8003596 <MX25LM51245G_WriteCfg2Register+0x1c>
  if (HAL_OSPI_Transmit(Ctx, &Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800360e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003612:	a91a      	add	r1, sp, #104	; 0x68
 8003614:	4628      	mov	r0, r5
 8003616:	f002 fa93 	bl	8005b40 <HAL_OSPI_Transmit>
 800361a:	3800      	subs	r0, #0
 800361c:	bf18      	it	ne
 800361e:	2001      	movne	r0, #1
 8003620:	4240      	negs	r0, r0
 8003622:	e7ba      	b.n	800359a <MX25LM51245G_WriteCfg2Register+0x20>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003624:	2301      	movs	r3, #1
 8003626:	e7bb      	b.n	80035a0 <MX25LM51245G_WriteCfg2Register+0x26>
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003628:	2301      	movs	r3, #1
 800362a:	e7e7      	b.n	80035fc <MX25LM51245G_WriteCfg2Register+0x82>

0800362c <MX25LM51245G_ReadCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value configuration register 2 value pointer
  * @retval error status
  */
int32_t MX25LM51245G_ReadCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t ReadAddr, uint8_t *Value)
{
 800362c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003630:	b094      	sub	sp, #80	; 0x50
 8003632:	460f      	mov	r7, r1
 8003634:	4606      	mov	r6, r0
 8003636:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003638:	2100      	movs	r1, #0
 800363a:	2250      	movs	r2, #80	; 0x50
 800363c:	4668      	mov	r0, sp
{
 800363e:	4698      	mov	r8, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 8003640:	f017 f8b9 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003644:	b937      	cbnz	r7, 8003654 <MX25LM51245G_ReadCfg2Register+0x28>
 8003646:	2d01      	cmp	r5, #1
 8003648:	d14e      	bne.n	80036e8 <MX25LM51245G_ReadCfg2Register+0xbc>
  {
    return MX25LM51245G_ERROR;
 800364a:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800364e:	b014      	add	sp, #80	; 0x50
 8003650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003654:	2304      	movs	r3, #4
 8003656:	9303      	str	r3, [sp, #12]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003658:	1e6b      	subs	r3, r5, #1
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800365a:	f241 3288 	movw	r2, #5000	; 0x1388
 800365e:	4669      	mov	r1, sp
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003660:	425c      	negs	r4, r3
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003662:	4630      	mov	r0, r6
  s_command.Address            = ReadAddr;
 8003664:	f8cd 8018 	str.w	r8, [sp, #24]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003668:	415c      	adcs	r4, r3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800366a:	2f00      	cmp	r7, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800366c:	ea4f 03c4 	mov.w	r3, r4, lsl #3
 8003670:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003672:	bf14      	ite	ne
 8003674:	2301      	movne	r3, #1
 8003676:	2300      	moveq	r3, #0
 8003678:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800367c:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_CFG_REG2_CMD : MX25LM51245G_OCTA_READ_CFG_REG2_CMD;
 800367e:	f247 138e 	movw	r3, #29070	; 0x718e
 8003682:	bf08      	it	eq
 8003684:	2371      	moveq	r3, #113	; 0x71
 8003686:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003688:	bf0c      	ite	eq
 800368a:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800368e:	f44f 6380 	movne.w	r3, #1024	; 0x400
 8003692:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003694:	ea4f 23c4 	mov.w	r3, r4, lsl #11
 8003698:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 800369a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800369e:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80036a0:	bf0c      	ite	eq
 80036a2:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 80036a6:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80036aa:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80036ac:	ea4f 63c4 	mov.w	r3, r4, lsl #27
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80036b0:	ea4f 7444 	mov.w	r4, r4, lsl #29
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80036b4:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80036b6:	bf0c      	ite	eq
 80036b8:	2300      	moveq	r3, #0
 80036ba:	2305      	movne	r3, #5
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80036bc:	2d01      	cmp	r5, #1
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80036be:	9412      	str	r4, [sp, #72]	; 0x48
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80036c0:	9311      	str	r3, [sp, #68]	; 0x44
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80036c2:	bf0c      	ite	eq
 80036c4:	2302      	moveq	r3, #2
 80036c6:	2301      	movne	r3, #1
 80036c8:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036ca:	f002 f98e 	bl	80059ea <HAL_OSPI_Command>
 80036ce:	2800      	cmp	r0, #0
 80036d0:	d1bb      	bne.n	800364a <MX25LM51245G_ReadCfg2Register+0x1e>
  if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80036d6:	991a      	ldr	r1, [sp, #104]	; 0x68
 80036d8:	4630      	mov	r0, r6
 80036da:	f002 fa71 	bl	8005bc0 <HAL_OSPI_Receive>
 80036de:	3800      	subs	r0, #0
 80036e0:	bf18      	it	ne
 80036e2:	2001      	movne	r0, #1
 80036e4:	4240      	negs	r0, r0
 80036e6:	e7b2      	b.n	800364e <MX25LM51245G_ReadCfg2Register+0x22>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80036e8:	2301      	movs	r3, #1
 80036ea:	e7b4      	b.n	8003656 <MX25LM51245G_ReadCfg2Register+0x2a>

080036ec <MX25LM51245G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 80036ec:	b570      	push	{r4, r5, r6, lr}
 80036ee:	b094      	sub	sp, #80	; 0x50
 80036f0:	460d      	mov	r5, r1
 80036f2:	4606      	mov	r6, r0
 80036f4:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 80036f6:	2100      	movs	r1, #0
 80036f8:	2250      	movs	r2, #80	; 0x50
 80036fa:	4668      	mov	r0, sp
 80036fc:	f017 f85b 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003700:	bb0d      	cbnz	r5, 8003746 <MX25LM51245G_ResetEnable+0x5a>
 8003702:	2c01      	cmp	r4, #1
 8003704:	d021      	beq.n	800374a <MX25LM51245G_ResetEnable+0x5e>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003706:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003708:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800370a:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800370c:	4669      	mov	r1, sp
 800370e:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003710:	4254      	negs	r4, r2
 8003712:	4154      	adcs	r4, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003714:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003716:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800371a:	bf14      	ite	ne
 800371c:	2301      	movne	r3, #1
 800371e:	2300      	moveq	r3, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003720:	ea4f 04c4 	mov.w	r4, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003724:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003728:	9405      	str	r4, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800372a:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_ENABLE_CMD : MX25LM51245G_OCTA_RESET_ENABLE_CMD;
 800372c:	f246 6399 	movw	r3, #26265	; 0x6699
 8003730:	bf08      	it	eq
 8003732:	2366      	moveq	r3, #102	; 0x66
 8003734:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003736:	f002 f958 	bl	80059ea <HAL_OSPI_Command>
 800373a:	3800      	subs	r0, #0
 800373c:	bf18      	it	ne
 800373e:	2001      	movne	r0, #1
 8003740:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003742:	b014      	add	sp, #80	; 0x50
 8003744:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003746:	2304      	movs	r3, #4
 8003748:	e7de      	b.n	8003708 <MX25LM51245G_ResetEnable+0x1c>
    return MX25LM51245G_ERROR;
 800374a:	f04f 30ff 	mov.w	r0, #4294967295
 800374e:	e7f8      	b.n	8003742 <MX25LM51245G_ResetEnable+0x56>

08003750 <MX25LM51245G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetMemory(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003750:	b570      	push	{r4, r5, r6, lr}
 8003752:	b094      	sub	sp, #80	; 0x50
 8003754:	460d      	mov	r5, r1
 8003756:	4606      	mov	r6, r0
 8003758:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 800375a:	2100      	movs	r1, #0
 800375c:	2250      	movs	r2, #80	; 0x50
 800375e:	4668      	mov	r0, sp
 8003760:	f017 f829 	bl	801a7b6 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003764:	bb0d      	cbnz	r5, 80037aa <MX25LM51245G_ResetMemory+0x5a>
 8003766:	2c01      	cmp	r4, #1
 8003768:	d021      	beq.n	80037ae <MX25LM51245G_ResetMemory+0x5e>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800376a:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800376c:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800376e:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003770:	4669      	mov	r1, sp
 8003772:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003774:	4254      	negs	r4, r2
 8003776:	4154      	adcs	r4, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003778:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800377a:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800377e:	bf14      	ite	ne
 8003780:	2301      	movne	r3, #1
 8003782:	2300      	moveq	r3, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003784:	ea4f 04c4 	mov.w	r4, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003788:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800378c:	9405      	str	r4, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800378e:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_MEMORY_CMD : MX25LM51245G_OCTA_RESET_MEMORY_CMD;
 8003790:	f649 1366 	movw	r3, #39270	; 0x9966
 8003794:	bf08      	it	eq
 8003796:	2399      	moveq	r3, #153	; 0x99
 8003798:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800379a:	f002 f926 	bl	80059ea <HAL_OSPI_Command>
 800379e:	3800      	subs	r0, #0
 80037a0:	bf18      	it	ne
 80037a2:	2001      	movne	r0, #1
 80037a4:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80037a6:	b014      	add	sp, #80	; 0x50
 80037a8:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80037aa:	2304      	movs	r3, #4
 80037ac:	e7de      	b.n	800376c <MX25LM51245G_ResetMemory+0x1c>
    return MX25LM51245G_ERROR;
 80037ae:	f04f 30ff 	mov.w	r0, #4294967295
 80037b2:	e7f8      	b.n	80037a6 <MX25LM51245G_ResetMemory+0x56>

080037b4 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  if (I2c4InitCounter > 0U)
 80037b4:	4a11      	ldr	r2, [pc, #68]	; (80037fc <BSP_I2C4_DeInit+0x48>)
{
 80037b6:	b508      	push	{r3, lr}
  if (I2c4InitCounter > 0U)
 80037b8:	6813      	ldr	r3, [r2, #0]
 80037ba:	b90b      	cbnz	r3, 80037c0 <BSP_I2C4_DeInit+0xc>
  int32_t ret  = BSP_ERROR_NONE;
 80037bc:	2000      	movs	r0, #0
      }
    }
  }

  return ret;
}
 80037be:	bd08      	pop	{r3, pc}
    if (--I2c4InitCounter == 0U)
 80037c0:	3b01      	subs	r3, #1
 80037c2:	6013      	str	r3, [r2, #0]
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d1f9      	bne.n	80037bc <BSP_I2C4_DeInit+0x8>
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
 80037c8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80037cc:	480c      	ldr	r0, [pc, #48]	; (8003800 <BSP_I2C4_DeInit+0x4c>)
 80037ce:	f001 f95b 	bl	8004a88 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
 80037d2:	480b      	ldr	r0, [pc, #44]	; (8003800 <BSP_I2C4_DeInit+0x4c>)
 80037d4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80037d8:	f001 f956 	bl	8004a88 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
 80037dc:	4a09      	ldr	r2, [pc, #36]	; (8003804 <BSP_I2C4_DeInit+0x50>)
      if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 80037de:	480a      	ldr	r0, [pc, #40]	; (8003808 <BSP_I2C4_DeInit+0x54>)
  BUS_I2C4_CLK_DISABLE();
 80037e0:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
 80037e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80037e8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
      if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 80037ec:	f001 fb78 	bl	8004ee0 <HAL_I2C_DeInit>
 80037f0:	2800      	cmp	r0, #0
 80037f2:	d0e3      	beq.n	80037bc <BSP_I2C4_DeInit+0x8>
        ret = BSP_ERROR_BUS_FAILURE;
 80037f4:	f06f 0007 	mvn.w	r0, #7
  return ret;
 80037f8:	e7e1      	b.n	80037be <BSP_I2C4_DeInit+0xa>
 80037fa:	bf00      	nop
 80037fc:	2400175c 	.word	0x2400175c
 8003800:	58021400 	.word	0x58021400
 8003804:	58024400 	.word	0x58024400
 8003808:	24002164 	.word	0x24002164

0800380c <MX_I2C4_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 800380c:	2300      	movs	r3, #0
 800380e:	2201      	movs	r2, #1
{
 8003810:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 8003812:	6041      	str	r1, [r0, #4]
{
 8003814:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8003816:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8003818:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 800381c:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8003820:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 8003824:	f001 fb0a 	bl	8004e3c <HAL_I2C_Init>
 8003828:	4601      	mov	r1, r0
 800382a:	b108      	cbz	r0, 8003830 <MX_I2C4_Init+0x24>
    status = HAL_ERROR;
 800382c:	2001      	movs	r0, #1
}
 800382e:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8003830:	4620      	mov	r0, r4
 8003832:	f001 fd2c 	bl	800528e <HAL_I2CEx_ConfigAnalogFilter>
 8003836:	4601      	mov	r1, r0
 8003838:	2800      	cmp	r0, #0
 800383a:	d1f7      	bne.n	800382c <MX_I2C4_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 800383c:	4620      	mov	r0, r4
 800383e:	f001 fd4c 	bl	80052da <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8003842:	3800      	subs	r0, #0
 8003844:	bf18      	it	ne
 8003846:	2001      	movne	r0, #1
 8003848:	e7f1      	b.n	800382e <MX_I2C4_Init+0x22>
	...

0800384c <BSP_I2C4_Init>:
  hbus_i2c4.Instance = BUS_I2C4;
 800384c:	4ba0      	ldr	r3, [pc, #640]	; (8003ad0 <BSP_I2C4_Init+0x284>)
 800384e:	48a1      	ldr	r0, [pc, #644]	; (8003ad4 <BSP_I2C4_Init+0x288>)
{
 8003850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c4.Instance = BUS_I2C4;
 8003854:	6003      	str	r3, [r0, #0]
{
 8003856:	b093      	sub	sp, #76	; 0x4c
  if (I2c4InitCounter++ == 0U)
 8003858:	4b9f      	ldr	r3, [pc, #636]	; (8003ad8 <BSP_I2C4_Init+0x28c>)
 800385a:	681a      	ldr	r2, [r3, #0]
 800385c:	9200      	str	r2, [sp, #0]
 800385e:	3201      	adds	r2, #1
 8003860:	601a      	str	r2, [r3, #0]
 8003862:	9b00      	ldr	r3, [sp, #0]
 8003864:	2b00      	cmp	r3, #0
 8003866:	f040 80c2 	bne.w	80039ee <BSP_I2C4_Init+0x1a2>
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
 800386a:	f001 fd0b 	bl	8005284 <HAL_I2C_GetState>
 800386e:	2800      	cmp	r0, #0
 8003870:	f040 80bd 	bne.w	80039ee <BSP_I2C4_Init+0x1a2>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8003874:	4d99      	ldr	r5, [pc, #612]	; (8003adc <BSP_I2C4_Init+0x290>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8003876:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  gpio_init_structure.Speed 	= GPIO_SPEED_FREQ_HIGH;
 800387a:	2101      	movs	r1, #1
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 800387c:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 800387e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8003882:	4897      	ldr	r0, [pc, #604]	; (8003ae0 <BSP_I2C4_Init+0x294>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8003884:	f043 0320 	orr.w	r3, r3, #32
 8003888:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 800388c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8003890:	f003 0320 	and.w	r3, r3, #32
 8003894:	930a      	str	r3, [sp, #40]	; 0x28
 8003896:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 8003898:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 800389c:	f043 0320 	orr.w	r3, r3, #32
 80038a0:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 80038a4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 80038a8:	9611      	str	r6, [sp, #68]	; 0x44
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 80038aa:	f003 0320 	and.w	r3, r3, #32
 80038ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80038b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 80038b2:	2312      	movs	r3, #18
 80038b4:	e9cd 230d 	strd	r2, r3, [sp, #52]	; 0x34
  gpio_init_structure.Speed 	= GPIO_SPEED_FREQ_HIGH;
 80038b8:	2302      	movs	r3, #2
 80038ba:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 80038be:	a90d      	add	r1, sp, #52	; 0x34
 80038c0:	f000 fffe 	bl	80048c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 80038c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 80038c8:	a90d      	add	r1, sp, #52	; 0x34
 80038ca:	4885      	ldr	r0, [pc, #532]	; (8003ae0 <BSP_I2C4_Init+0x294>)
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 80038cc:	930d      	str	r3, [sp, #52]	; 0x34
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
 80038ce:	9611      	str	r6, [sp, #68]	; 0x44
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 80038d0:	f000 fff6 	bl	80048c0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
 80038d4:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 80038d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038dc:	f8c5 30f4 	str.w	r3, [r5, #244]	; 0xf4
 80038e0:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 80038e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80038e8:	930c      	str	r3, [sp, #48]	; 0x30
 80038ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_FORCE_RESET();
 80038ec:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 80038f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038f4:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
 80038f8:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 80038fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003900:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8003904:	f003 f9b0 	bl	8006c68 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 8003908:	2800      	cmp	r0, #0
 800390a:	d06a      	beq.n	80039e2 <BSP_I2C4_Init+0x196>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800390c:	4b75      	ldr	r3, [pc, #468]	; (8003ae4 <BSP_I2C4_Init+0x298>)
  uint32_t prev_presc = I2C_PRESC_MAX;
 800390e:	f04f 0a10 	mov.w	sl, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003912:	9a00      	ldr	r2, [sp, #0]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8003914:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003918:	f8df b1d0 	ldr.w	fp, [pc, #464]	; 8003aec <BSP_I2C4_Init+0x2a0>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800391c:	4691      	mov	r9, r2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800391e:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8003922:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 8003926:	4b70      	ldr	r3, [pc, #448]	; (8003ae8 <BSP_I2C4_Init+0x29c>)
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
 8003928:	0086      	lsls	r6, r0, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800392a:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 800392c:	f1c5 0532 	rsb	r5, r5, #50	; 0x32
 8003930:	681b      	ldr	r3, [r3, #0]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8003932:	f5c6 76c3 	rsb	r6, r6, #390	; 0x186
 8003936:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
  if (tsdadel_max <= 0)
 800393a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
{
 800393e:	4688      	mov	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003940:	f04f 0c00 	mov.w	ip, #0
      if (tscldel >= (uint32_t)tscldel_min)
 8003944:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
 8003948:	f8cd c004 	str.w	ip, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 800394c:	f10c 0c01 	add.w	ip, ip, #1
      if (tscldel >= (uint32_t)tscldel_min)
 8003950:	d35a      	bcc.n	8003a08 <BSP_I2C4_Init+0x1bc>
 8003952:	2700      	movs	r7, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8003954:	46be      	mov	lr, r7
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 8003956:	42bd      	cmp	r5, r7
 8003958:	d850      	bhi.n	80039fc <BSP_I2C4_Init+0x1b0>
 800395a:	42be      	cmp	r6, r7
 800395c:	d34e      	bcc.n	80039fc <BSP_I2C4_Init+0x1b0>
            if(presc != prev_presc)
 800395e:	4592      	cmp	sl, r2
 8003960:	d04c      	beq.n	80039fc <BSP_I2C4_Init+0x1b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003962:	2414      	movs	r4, #20
 8003964:	fb04 fa03 	mul.w	sl, r4, r3
              I2c_valid_timing_nbr ++;
 8003968:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 800396a:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800396c:	eb0b 090a 	add.w	r9, fp, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8003970:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003972:	f84b 200a 	str.w	r2, [fp, sl]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 8003976:	e9c9 4e01 	strd	r4, lr, [r9, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 800397a:	d93c      	bls.n	80039f6 <BSP_I2C4_Init+0x1aa>
 800397c:	4a5a      	ldr	r2, [pc, #360]	; (8003ae8 <BSP_I2C4_Init+0x29c>)
 800397e:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003980:	4b59      	ldr	r3, [pc, #356]	; (8003ae8 <BSP_I2C4_Init+0x29c>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003982:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8003986:	4959      	ldr	r1, [pc, #356]	; (8003aec <BSP_I2C4_Init+0x2a0>)
 8003988:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800398a:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 800398c:	9202      	str	r2, [sp, #8]
 800398e:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003992:	9304      	str	r3, [sp, #16]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003994:	0043      	lsls	r3, r0, #1
 8003996:	f5c3 6b80 	rsb	fp, r3, #1024	; 0x400
 800399a:	f103 0432 	add.w	r4, r3, #50	; 0x32
 800399e:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
 80039a2:	f10b 0b01 	add.w	fp, fp, #1
 80039a6:	9408      	str	r4, [sp, #32]
 80039a8:	9309      	str	r3, [sp, #36]	; 0x24
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80039aa:	9b04      	ldr	r3, [sp, #16]
 80039ac:	429f      	cmp	r7, r3
 80039ae:	d137      	bne.n	8003a20 <BSP_I2C4_Init+0x1d4>
        if (idx < I2C_VALID_TIMING_NBR)
 80039b0:	2a7f      	cmp	r2, #127	; 0x7f
 80039b2:	d816      	bhi.n	80039e2 <BSP_I2C4_Init+0x196>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80039b4:	2114      	movs	r1, #20
 80039b6:	4b4d      	ldr	r3, [pc, #308]	; (8003aec <BSP_I2C4_Init+0x2a0>)
 80039b8:	434a      	muls	r2, r1
 80039ba:	1899      	adds	r1, r3, r2
 80039bc:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 80039be:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80039c0:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 80039c4:	684b      	ldr	r3, [r1, #4]
 80039c6:	051b      	lsls	r3, r3, #20
 80039c8:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80039cc:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 80039ce:	688b      	ldr	r3, [r1, #8]
 80039d0:	041b      	lsls	r3, r3, #16
 80039d2:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80039d6:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 80039d8:	68cb      	ldr	r3, [r1, #12]
 80039da:	021b      	lsls	r3, r3, #8
 80039dc:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80039de:	4323      	orrs	r3, r4
 80039e0:	9300      	str	r3, [sp, #0]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 80039e2:	9900      	ldr	r1, [sp, #0]
 80039e4:	483b      	ldr	r0, [pc, #236]	; (8003ad4 <BSP_I2C4_Init+0x288>)
 80039e6:	f7ff ff11 	bl	800380c <MX_I2C4_Init>
 80039ea:	2800      	cmp	r0, #0
 80039ec:	d16c      	bne.n	8003ac8 <BSP_I2C4_Init+0x27c>
  int32_t ret = BSP_ERROR_NONE;
 80039ee:	2000      	movs	r0, #0
}
 80039f0:	b013      	add	sp, #76	; 0x4c
 80039f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039f6:	4692      	mov	sl, r2
 80039f8:	f04f 0901 	mov.w	r9, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 80039fc:	f10e 0e01 	add.w	lr, lr, #1
 8003a00:	440f      	add	r7, r1
 8003a02:	f1be 0f10 	cmp.w	lr, #16
 8003a06:	d1a6      	bne.n	8003956 <BSP_I2C4_Init+0x10a>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003a08:	f1bc 0f10 	cmp.w	ip, #16
 8003a0c:	4488      	add	r8, r1
 8003a0e:	d199      	bne.n	8003944 <BSP_I2C4_Init+0xf8>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8003a10:	3201      	adds	r2, #1
 8003a12:	4401      	add	r1, r0
 8003a14:	2a10      	cmp	r2, #16
 8003a16:	d192      	bne.n	800393e <BSP_I2C4_Init+0xf2>
 8003a18:	f1b9 0f00 	cmp.w	r9, #0
 8003a1c:	d1ae      	bne.n	800397c <BSP_I2C4_Init+0x130>
 8003a1e:	e7af      	b.n	8003980 <BSP_I2C4_Init+0x134>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003a20:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003a22:	f04f 0c00 	mov.w	ip, #0
 8003a26:	9c08      	ldr	r4, [sp, #32]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003a28:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003a2c:	441c      	add	r4, r3
 8003a2e:	ebab 0503 	sub.w	r5, fp, r3
 8003a32:	9403      	str	r4, [sp, #12]
 8003a34:	006c      	lsls	r4, r5, #1
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003a36:	9d03      	ldr	r5, [sp, #12]
 8003a38:	9401      	str	r4, [sp, #4]
 8003a3a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8003a3c:	441c      	add	r4, r3
 8003a3e:	9407      	str	r4, [sp, #28]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003a40:	f240 5414 	movw	r4, #1300	; 0x514
 8003a44:	f8cd c014 	str.w	ip, [sp, #20]
 8003a48:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8003a4c:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003a50:	42a5      	cmp	r5, r4
 8003a52:	d92e      	bls.n	8003ab2 <BSP_I2C4_Init+0x266>
 8003a54:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 8003a58:	d22b      	bcs.n	8003ab2 <BSP_I2C4_Init+0x266>
 8003a5a:	9c07      	ldr	r4, [sp, #28]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8003a5c:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8003a60:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003a64:	1966      	adds	r6, r4, r5
 8003a66:	f8dd 9004 	ldr.w	r9, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8003a6a:	f206 1aa1 	addw	sl, r6, #417	; 0x1a1
 8003a6e:	f240 4412 	movw	r4, #1042	; 0x412
 8003a72:	f8cd e018 	str.w	lr, [sp, #24]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 8003a76:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8003a7a:	45a2      	cmp	sl, r4
 8003a7c:	d812      	bhi.n	8003aa4 <BSP_I2C4_Init+0x258>
 8003a7e:	f5b8 7f16 	cmp.w	r8, #600	; 0x258
 8003a82:	d30f      	bcc.n	8003aa4 <BSP_I2C4_Init+0x258>
 8003a84:	4540      	cmp	r0, r8
 8003a86:	d20d      	bcs.n	8003aa4 <BSP_I2C4_Init+0x258>
              error = -error;
 8003a88:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 8003a8c:	bf28      	it	cs
 8003a8e:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 8003a90:	9c02      	ldr	r4, [sp, #8]
 8003a92:	45a2      	cmp	sl, r4
 8003a94:	d206      	bcs.n	8003aa4 <BSP_I2C4_Init+0x258>
              I2c_valid_timing[count].scll = scll;
 8003a96:	9a05      	ldr	r2, [sp, #20]
              I2c_valid_timing[count].sclh = sclh;
 8003a98:	f8cd a008 	str.w	sl, [sp, #8]
              I2c_valid_timing[count].scll = scll;
 8003a9c:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 8003a9e:	9a06      	ldr	r2, [sp, #24]
 8003aa0:	60ca      	str	r2, [r1, #12]
 8003aa2:	463a      	mov	r2, r7
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8003aa4:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 8003aa8:	441e      	add	r6, r3
 8003aaa:	eba9 0903 	sub.w	r9, r9, r3
 8003aae:	4498      	add	r8, r3
 8003ab0:	d1db      	bne.n	8003a6a <BSP_I2C4_Init+0x21e>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003ab2:	9c01      	ldr	r4, [sp, #4]
 8003ab4:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8003ab8:	441d      	add	r5, r3
 8003aba:	eba4 0403 	sub.w	r4, r4, r3
 8003abe:	9401      	str	r4, [sp, #4]
 8003ac0:	d1be      	bne.n	8003a40 <BSP_I2C4_Init+0x1f4>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8003ac2:	3701      	adds	r7, #1
 8003ac4:	3114      	adds	r1, #20
 8003ac6:	e770      	b.n	80039aa <BSP_I2C4_Init+0x15e>
          ret = BSP_ERROR_BUS_FAILURE;
 8003ac8:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8003acc:	e790      	b.n	80039f0 <BSP_I2C4_Init+0x1a4>
 8003ace:	bf00      	nop
 8003ad0:	58001c00 	.word	0x58001c00
 8003ad4:	24002164 	.word	0x24002164
 8003ad8:	2400175c 	.word	0x2400175c
 8003adc:	58024400 	.word	0x58024400
 8003ae0:	58021400 	.word	0x58021400
 8003ae4:	3b9aca00 	.word	0x3b9aca00
 8003ae8:	24002160 	.word	0x24002160
 8003aec:	24001760 	.word	0x24001760

08003af0 <BSP_I2C4_WriteReg>:
{
 8003af0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8003af2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003af6:	9200      	str	r2, [sp, #0]
 8003af8:	460a      	mov	r2, r1
 8003afa:	4601      	mov	r1, r0
 8003afc:	4808      	ldr	r0, [pc, #32]	; (8003b20 <BSP_I2C4_WriteReg+0x30>)
 8003afe:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003b02:	2301      	movs	r3, #1
 8003b04:	f001 fa06 	bl	8004f14 <HAL_I2C_Mem_Write>
 8003b08:	b140      	cbz	r0, 8003b1c <BSP_I2C4_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8003b0a:	4805      	ldr	r0, [pc, #20]	; (8003b20 <BSP_I2C4_WriteReg+0x30>)
 8003b0c:	f001 fbbd 	bl	800528a <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003b10:	2804      	cmp	r0, #4
 8003b12:	bf0c      	ite	eq
 8003b14:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003b18:	f06f 0003 	mvnne.w	r0, #3
}
 8003b1c:	b004      	add	sp, #16
 8003b1e:	bd10      	pop	{r4, pc}
 8003b20:	24002164 	.word	0x24002164

08003b24 <BSP_I2C4_ReadReg>:
{
 8003b24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Reg        The target register address to read
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8003b26:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003b2a:	9200      	str	r2, [sp, #0]
 8003b2c:	460a      	mov	r2, r1
 8003b2e:	4601      	mov	r1, r0
 8003b30:	4808      	ldr	r0, [pc, #32]	; (8003b54 <BSP_I2C4_ReadReg+0x30>)
 8003b32:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003b36:	2301      	movs	r3, #1
 8003b38:	f001 fac6 	bl	80050c8 <HAL_I2C_Mem_Read>
 8003b3c:	b140      	cbz	r0, 8003b50 <BSP_I2C4_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8003b3e:	4805      	ldr	r0, [pc, #20]	; (8003b54 <BSP_I2C4_ReadReg+0x30>)
 8003b40:	f001 fba3 	bl	800528a <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003b44:	2804      	cmp	r0, #4
 8003b46:	bf0c      	ite	eq
 8003b48:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003b4c:	f06f 0003 	mvnne.w	r0, #3
}
 8003b50:	b004      	add	sp, #16
 8003b52:	bd10      	pop	{r4, pc}
 8003b54:	24002164 	.word	0x24002164

08003b58 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8003b58:	f000 bcd4 	b.w	8004504 <HAL_GetTick>

08003b5c <OSPI_NOR_EnterSOPIMode.constprop.0>:
/**
  * @brief  This function enables the octal STR mode of the memory.
  * @param  Instance  OSPI instance
  * @retval BSP status
  */
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 8003b5c:	b530      	push	{r4, r5, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  /* Enable write operations */
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b5e:	4c21      	ldr	r4, [pc, #132]	; (8003be4 <OSPI_NOR_EnterSOPIMode.constprop.0+0x88>)
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 8003b60:	b085      	sub	sp, #20
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b62:	4821      	ldr	r0, [pc, #132]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003b64:	78a2      	ldrb	r2, [r4, #2]
 8003b66:	7861      	ldrb	r1, [r4, #1]
 8003b68:	f7ff fc8e 	bl	8003488 <MX25LM51245G_WriteEnable>
 8003b6c:	b118      	cbz	r0, 8003b76 <OSPI_NOR_EnterSOPIMode.constprop.0+0x1a>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
 8003b6e:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8003b72:	b005      	add	sp, #20
 8003b74:	bd30      	pop	{r4, r5, pc}
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, CONF_OSPI_DUMMY_CYCLES) != MX25LM51245G_OK)
 8003b76:	2303      	movs	r3, #3
 8003b78:	481b      	ldr	r0, [pc, #108]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003b7a:	9300      	str	r3, [sp, #0]
 8003b7c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003b80:	78a2      	ldrb	r2, [r4, #2]
 8003b82:	7861      	ldrb	r1, [r4, #1]
 8003b84:	f7ff fcf9 	bl	800357a <MX25LM51245G_WriteCfg2Register>
 8003b88:	2800      	cmp	r0, #0
 8003b8a:	d1f0      	bne.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b8c:	78a2      	ldrb	r2, [r4, #2]
 8003b8e:	7861      	ldrb	r1, [r4, #1]
 8003b90:	4815      	ldr	r0, [pc, #84]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003b92:	f7ff fc79 	bl	8003488 <MX25LM51245G_WriteEnable>
 8003b96:	4603      	mov	r3, r0
 8003b98:	2800      	cmp	r0, #0
 8003b9a:	d1e8      	bne.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_SOPI) != MX25LM51245G_OK)
 8003b9c:	2501      	movs	r5, #1
 8003b9e:	4812      	ldr	r0, [pc, #72]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003ba0:	9500      	str	r5, [sp, #0]
 8003ba2:	78a2      	ldrb	r2, [r4, #2]
 8003ba4:	7861      	ldrb	r1, [r4, #1]
 8003ba6:	f7ff fce8 	bl	800357a <MX25LM51245G_WriteCfg2Register>
 8003baa:	4604      	mov	r4, r0
 8003bac:	2800      	cmp	r0, #0
 8003bae:	d1de      	bne.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003bb0:	2028      	movs	r0, #40	; 0x28
 8003bb2:	f000 fcad 	bl	8004510 <HAL_Delay>
    if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8003bb6:	4622      	mov	r2, r4
 8003bb8:	4629      	mov	r1, r5
 8003bba:	480b      	ldr	r0, [pc, #44]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003bbc:	f7ff fb48 	bl	8003250 <MX25LM51245G_AutoPollingMemReady>
 8003bc0:	4603      	mov	r3, r0
 8003bc2:	2800      	cmp	r0, #0
 8003bc4:	d1d3      	bne.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003bc6:	aa03      	add	r2, sp, #12
 8003bc8:	4629      	mov	r1, r5
 8003bca:	9200      	str	r2, [sp, #0]
 8003bcc:	4602      	mov	r2, r0
 8003bce:	4806      	ldr	r0, [pc, #24]	; (8003be8 <OSPI_NOR_EnterSOPIMode.constprop.0+0x8c>)
 8003bd0:	f7ff fd2c 	bl	800362c <MX25LM51245G_ReadCfg2Register>
 8003bd4:	2800      	cmp	r0, #0
 8003bd6:	d1ca      	bne.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
    else if (reg[0] != MX25LM51245G_CR2_SOPI)
 8003bd8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003bdc:	42ab      	cmp	r3, r5
 8003bde:	d0c8      	beq.n	8003b72 <OSPI_NOR_EnterSOPIMode.constprop.0+0x16>
 8003be0:	e7c5      	b.n	8003b6e <OSPI_NOR_EnterSOPIMode.constprop.0+0x12>
 8003be2:	bf00      	nop
 8003be4:	240021b8 	.word	0x240021b8
 8003be8:	240021c0 	.word	0x240021c0

08003bec <OSPI_NOR_EnterDOPIMode.constprop.0>:
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 8003bec:	b530      	push	{r4, r5, lr}
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003bee:	4d27      	ldr	r5, [pc, #156]	; (8003c8c <OSPI_NOR_EnterDOPIMode.constprop.0+0xa0>)
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 8003bf0:	b085      	sub	sp, #20
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003bf2:	4c27      	ldr	r4, [pc, #156]	; (8003c90 <OSPI_NOR_EnterDOPIMode.constprop.0+0xa4>)
 8003bf4:	78aa      	ldrb	r2, [r5, #2]
 8003bf6:	7869      	ldrb	r1, [r5, #1]
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	f7ff fc45 	bl	8003488 <MX25LM51245G_WriteEnable>
 8003bfe:	b118      	cbz	r0, 8003c08 <OSPI_NOR_EnterDOPIMode.constprop.0+0x1c>
    ret = BSP_ERROR_COMPONENT_FAILURE;
 8003c00:	f06f 0004 	mvn.w	r0, #4
}
 8003c04:	b005      	add	sp, #20
 8003c06:	bd30      	pop	{r4, r5, pc}
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, CONF_OSPI_DUMMY_CYCLES) != MX25LM51245G_OK)
 8003c08:	2303      	movs	r3, #3
 8003c0a:	78aa      	ldrb	r2, [r5, #2]
 8003c0c:	7869      	ldrb	r1, [r5, #1]
 8003c0e:	4620      	mov	r0, r4
 8003c10:	9300      	str	r3, [sp, #0]
 8003c12:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003c16:	f7ff fcb0 	bl	800357a <MX25LM51245G_WriteCfg2Register>
 8003c1a:	2800      	cmp	r0, #0
 8003c1c:	d1f0      	bne.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003c1e:	78aa      	ldrb	r2, [r5, #2]
 8003c20:	4620      	mov	r0, r4
 8003c22:	7869      	ldrb	r1, [r5, #1]
 8003c24:	f7ff fc30 	bl	8003488 <MX25LM51245G_WriteEnable>
 8003c28:	4603      	mov	r3, r0
 8003c2a:	2800      	cmp	r0, #0
 8003c2c:	d1e8      	bne.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_DOPI) != MX25LM51245G_OK)
 8003c2e:	2202      	movs	r2, #2
 8003c30:	7869      	ldrb	r1, [r5, #1]
 8003c32:	4620      	mov	r0, r4
 8003c34:	9200      	str	r2, [sp, #0]
 8003c36:	78aa      	ldrb	r2, [r5, #2]
 8003c38:	f7ff fc9f 	bl	800357a <MX25LM51245G_WriteCfg2Register>
 8003c3c:	2800      	cmp	r0, #0
 8003c3e:	d1df      	bne.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003c40:	2028      	movs	r0, #40	; 0x28
 8003c42:	f000 fc65 	bl	8004510 <HAL_Delay>
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003c46:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003c4a:	4620      	mov	r0, r4
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003c4c:	60e3      	str	r3, [r4, #12]
    hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8003c4e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8003c52:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003c54:	f001 fe42 	bl	80058dc <HAL_OSPI_Init>
 8003c58:	b9a8      	cbnz	r0, 8003c86 <OSPI_NOR_EnterDOPIMode.constprop.0+0x9a>
    else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 8003c5a:	2201      	movs	r2, #1
 8003c5c:	4620      	mov	r0, r4
 8003c5e:	4611      	mov	r1, r2
 8003c60:	f7ff faf6 	bl	8003250 <MX25LM51245G_AutoPollingMemReady>
 8003c64:	4603      	mov	r3, r0
 8003c66:	2800      	cmp	r0, #0
 8003c68:	d1ca      	bne.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003c6a:	aa03      	add	r2, sp, #12
 8003c6c:	4620      	mov	r0, r4
 8003c6e:	9200      	str	r2, [sp, #0]
 8003c70:	2201      	movs	r2, #1
 8003c72:	4611      	mov	r1, r2
 8003c74:	f7ff fcda 	bl	800362c <MX25LM51245G_ReadCfg2Register>
 8003c78:	2800      	cmp	r0, #0
 8003c7a:	d1c1      	bne.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
    else if (reg[0] != MX25LM51245G_CR2_DOPI)
 8003c7c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003c80:	2b02      	cmp	r3, #2
 8003c82:	d0bf      	beq.n	8003c04 <OSPI_NOR_EnterDOPIMode.constprop.0+0x18>
 8003c84:	e7bc      	b.n	8003c00 <OSPI_NOR_EnterDOPIMode.constprop.0+0x14>
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003c86:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8003c8a:	e7bb      	b.n	8003c04 <OSPI_NOR_EnterDOPIMode.constprop.0+0x18>
 8003c8c:	240021b8 	.word	0x240021b8
 8003c90:	240021c0 	.word	0x240021c0

08003c94 <MX_OSPI_NOR_Init>:
  hospi->Init.FifoThreshold      = 4;
 8003c94:	4a0e      	ldr	r2, [pc, #56]	; (8003cd0 <MX_OSPI_NOR_Init+0x3c>)
 8003c96:	2304      	movs	r3, #4
 8003c98:	e9c0 2300 	strd	r2, r3, [r0]
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 8003c9c:	680a      	ldr	r2, [r1, #0]
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 8003c9e:	2300      	movs	r3, #0
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 8003ca0:	6102      	str	r2, [r0, #16]
  hospi->Init.ChipSelectHighTime = 2;
 8003ca2:	2202      	movs	r2, #2
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 8003ca4:	6083      	str	r3, [r0, #8]
  hospi->Init.FreeRunningClock   = HAL_OSPI_FREERUNCLK_DISABLE;
 8003ca6:	e9c0 2305 	strd	r2, r3, [r0, #20]
  hospi->Init.ClockPrescaler     = Config->ClockPrescaler;
 8003caa:	684a      	ldr	r2, [r1, #4]
 8003cac:	6242      	str	r2, [r0, #36]	; 0x24
  hospi->Init.SampleShifting     = Config->SampleShifting;
 8003cae:	688a      	ldr	r2, [r1, #8]
  hospi->Init.ChipSelectBoundary = 0;
 8003cb0:	6303      	str	r3, [r0, #48]	; 0x30
  hospi->Init.SampleShifting     = Config->SampleShifting;
 8003cb2:	6282      	str	r2, [r0, #40]	; 0x28
  if (Config->TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 8003cb4:	68ca      	ldr	r2, [r1, #12]
 8003cb6:	2a01      	cmp	r2, #1
  hospi->Init.WrapSize           = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8003cb8:	e9c0 3307 	strd	r3, r3, [r0, #28]
  if (Config->TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 8003cbc:	bf06      	itte	eq
 8003cbe:	f04f 5280 	moveq.w	r2, #268435456	; 0x10000000
 8003cc2:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003cc6:	461a      	movne	r2, r3
    hospi->Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003cc8:	60c3      	str	r3, [r0, #12]
    hospi->Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8003cca:	62c2      	str	r2, [r0, #44]	; 0x2c
  return HAL_OSPI_Init(hospi);
 8003ccc:	f001 be06 	b.w	80058dc <HAL_OSPI_Init>
 8003cd0:	52005000 	.word	0x52005000

08003cd4 <BSP_OSPI_NOR_EnableMemoryMappedMode>:
{
 8003cd4:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003cd6:	b998      	cbnz	r0, 8003d00 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x2c>
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003cd8:	4c0b      	ldr	r4, [pc, #44]	; (8003d08 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x34>)
    if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003cda:	78a3      	ldrb	r3, [r4, #2]
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003cdc:	7861      	ldrb	r1, [r4, #1]
    if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003cde:	b95b      	cbnz	r3, 8003cf8 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x24>
      if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003ce0:	2201      	movs	r2, #1
 8003ce2:	480a      	ldr	r0, [pc, #40]	; (8003d0c <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 8003ce4:	f7ff fb19 	bl	800331a <MX25LM51245G_EnableSTRMemoryMappedMode>
 8003ce8:	b110      	cbz	r0, 8003cf0 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1c>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8003cea:	f06f 0004 	mvn.w	r0, #4
}
 8003cee:	bd10      	pop	{r4, pc}
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 8003cf0:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8003cf2:	2000      	movs	r0, #0
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 8003cf4:	7023      	strb	r3, [r4, #0]
 8003cf6:	e7fa      	b.n	8003cee <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
      if(MX25LM51245G_EnableMemoryMappedModeDTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode) != MX25LM51245G_OK)
 8003cf8:	4804      	ldr	r0, [pc, #16]	; (8003d0c <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 8003cfa:	f7ff fb76 	bl	80033ea <MX25LM51245G_EnableDTRMemoryMappedMode>
 8003cfe:	e7f3      	b.n	8003ce8 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x14>
    ret = BSP_ERROR_WRONG_PARAM;
 8003d00:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8003d04:	e7f3      	b.n	8003cee <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
 8003d06:	bf00      	nop
 8003d08:	240021b8 	.word	0x240021b8
 8003d0c:	240021c0 	.word	0x240021c0

08003d10 <BSP_OSPI_NOR_DisableMemoryMappedMode>:
{
 8003d10:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003d12:	b950      	cbnz	r0, 8003d2a <BSP_OSPI_NOR_DisableMemoryMappedMode+0x1a>
    if(Ospi_Nor_Ctx[Instance].IsInitialized != OSPI_ACCESS_MMP)
 8003d14:	4c09      	ldr	r4, [pc, #36]	; (8003d3c <BSP_OSPI_NOR_DisableMemoryMappedMode+0x2c>)
 8003d16:	7823      	ldrb	r3, [r4, #0]
 8003d18:	2b02      	cmp	r3, #2
 8003d1a:	d109      	bne.n	8003d30 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x20>
    else if(HAL_OSPI_Abort(&hospi_nor[Instance]) != HAL_OK)
 8003d1c:	4808      	ldr	r0, [pc, #32]	; (8003d40 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x30>)
 8003d1e:	f002 f820 	bl	8005d62 <HAL_OSPI_Abort>
 8003d22:	b940      	cbnz	r0, 8003d36 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x26>
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003d24:	2301      	movs	r3, #1
 8003d26:	7023      	strb	r3, [r4, #0]
}
 8003d28:	bd10      	pop	{r4, pc}
    ret = BSP_ERROR_WRONG_PARAM;
 8003d2a:	f06f 0001 	mvn.w	r0, #1
 8003d2e:	e7fb      	b.n	8003d28 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
      ret = BSP_ERROR_OSPI_MMP_UNLOCK_FAILURE;
 8003d30:	f06f 001a 	mvn.w	r0, #26
 8003d34:	e7f8      	b.n	8003d28 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003d36:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8003d3a:	e7f5      	b.n	8003d28 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
 8003d3c:	240021b8 	.word	0x240021b8
 8003d40:	240021c0 	.word	0x240021c0

08003d44 <BSP_OSPI_NOR_DeInit>:
{
 8003d44:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003d46:	2800      	cmp	r0, #0
 8003d48:	d156      	bne.n	8003df8 <BSP_OSPI_NOR_DeInit+0xb4>
    if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 8003d4a:	4c2d      	ldr	r4, [pc, #180]	; (8003e00 <BSP_OSPI_NOR_DeInit+0xbc>)
 8003d4c:	7823      	ldrb	r3, [r4, #0]
 8003d4e:	2b02      	cmp	r3, #2
 8003d50:	d04b      	beq.n	8003dea <BSP_OSPI_NOR_DeInit+0xa6>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 8003d52:	2300      	movs	r3, #0
  HAL_GPIO_DeInit(OSPI_NOR_CLK_GPIO_PORT, OSPI_NOR_CLK_PIN);
 8003d54:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003d58:	482a      	ldr	r0, [pc, #168]	; (8003e04 <BSP_OSPI_NOR_DeInit+0xc0>)
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 8003d5a:	8023      	strh	r3, [r4, #0]
    Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;
 8003d5c:	70a3      	strb	r3, [r4, #2]
  HAL_GPIO_DeInit(OSPI_NOR_CLK_GPIO_PORT, OSPI_NOR_CLK_PIN);
 8003d5e:	f000 fe93 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_DQS_GPIO_PORT, OSPI_NOR_DQS_PIN);
 8003d62:	2104      	movs	r1, #4
 8003d64:	4828      	ldr	r0, [pc, #160]	; (8003e08 <BSP_OSPI_NOR_DeInit+0xc4>)
 8003d66:	f000 fe8f 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_CS_GPIO_PORT, OSPI_NOR_CS_PIN);
 8003d6a:	2140      	movs	r1, #64	; 0x40
 8003d6c:	4827      	ldr	r0, [pc, #156]	; (8003e0c <BSP_OSPI_NOR_DeInit+0xc8>)
 8003d6e:	f000 fe8b 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D0_GPIO_PORT, OSPI_NOR_D0_PIN);
 8003d72:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003d76:	4826      	ldr	r0, [pc, #152]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003d78:	f000 fe86 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D1_GPIO_PORT, OSPI_NOR_D1_PIN);
 8003d7c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003d80:	4823      	ldr	r0, [pc, #140]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003d82:	f000 fe81 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D2_GPIO_PORT, OSPI_NOR_D2_PIN);
 8003d86:	2104      	movs	r1, #4
 8003d88:	4822      	ldr	r0, [pc, #136]	; (8003e14 <BSP_OSPI_NOR_DeInit+0xd0>)
 8003d8a:	f000 fe7d 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D3_GPIO_PORT, OSPI_NOR_D3_PIN);
 8003d8e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003d92:	481f      	ldr	r0, [pc, #124]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003d94:	f000 fe78 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D4_GPIO_PORT, OSPI_NOR_D4_PIN);
 8003d98:	2110      	movs	r1, #16
 8003d9a:	481d      	ldr	r0, [pc, #116]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003d9c:	f000 fe74 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D5_GPIO_PORT, OSPI_NOR_D5_PIN);
 8003da0:	2120      	movs	r1, #32
 8003da2:	481b      	ldr	r0, [pc, #108]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003da4:	f000 fe70 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D6_GPIO_PORT, OSPI_NOR_D6_PIN);
 8003da8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003dac:	4817      	ldr	r0, [pc, #92]	; (8003e0c <BSP_OSPI_NOR_DeInit+0xc8>)
 8003dae:	f000 fe6b 	bl	8004a88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_NOR_D7_GPIO_PORT, OSPI_NOR_D7_PIN);
 8003db2:	2180      	movs	r1, #128	; 0x80
 8003db4:	4816      	ldr	r0, [pc, #88]	; (8003e10 <BSP_OSPI_NOR_DeInit+0xcc>)
 8003db6:	f000 fe67 	bl	8004a88 <HAL_GPIO_DeInit>
  OSPI_NOR_FORCE_RESET();
 8003dba:	4b17      	ldr	r3, [pc, #92]	; (8003e18 <BSP_OSPI_NOR_DeInit+0xd4>)
    if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8003dbc:	4817      	ldr	r0, [pc, #92]	; (8003e1c <BSP_OSPI_NOR_DeInit+0xd8>)
  OSPI_NOR_FORCE_RESET();
 8003dbe:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003dc0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003dc4:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_RELEASE_RESET();
 8003dc6:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003dc8:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003dcc:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_CLK_DISABLE();
 8003dce:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8003dd2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003dd6:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8003dda:	f001 fdf3 	bl	80059c4 <HAL_OSPI_DeInit>
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003dde:	2800      	cmp	r0, #0
 8003de0:	bf0c      	ite	eq
 8003de2:	2000      	moveq	r0, #0
 8003de4:	f06f 0003 	mvnne.w	r0, #3
}
 8003de8:	bd10      	pop	{r4, pc}
      if(BSP_OSPI_NOR_DisableMemoryMappedMode(Instance) != BSP_ERROR_NONE)
 8003dea:	f7ff ff91 	bl	8003d10 <BSP_OSPI_NOR_DisableMemoryMappedMode>
 8003dee:	2800      	cmp	r0, #0
 8003df0:	d0af      	beq.n	8003d52 <BSP_OSPI_NOR_DeInit+0xe>
        return BSP_ERROR_COMPONENT_FAILURE;
 8003df2:	f06f 0004 	mvn.w	r0, #4
 8003df6:	e7f7      	b.n	8003de8 <BSP_OSPI_NOR_DeInit+0xa4>
    ret = BSP_ERROR_WRONG_PARAM;
 8003df8:	f06f 0001 	mvn.w	r0, #1
 8003dfc:	e7f4      	b.n	8003de8 <BSP_OSPI_NOR_DeInit+0xa4>
 8003dfe:	bf00      	nop
 8003e00:	240021b8 	.word	0x240021b8
 8003e04:	58021400 	.word	0x58021400
 8003e08:	58020400 	.word	0x58020400
 8003e0c:	58021800 	.word	0x58021800
 8003e10:	58020c00 	.word	0x58020c00
 8003e14:	58021000 	.word	0x58021000
 8003e18:	58024400 	.word	0x58024400
 8003e1c:	240021c0 	.word	0x240021c0

08003e20 <BSP_OSPI_NOR_ConfigFlash>:
{
 8003e20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003e24:	460d      	mov	r5, r1
 8003e26:	4616      	mov	r6, r2
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003e28:	2800      	cmp	r0, #0
 8003e2a:	d156      	bne.n	8003eda <BSP_OSPI_NOR_ConfigFlash+0xba>
    if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 8003e2c:	4c2e      	ldr	r4, [pc, #184]	; (8003ee8 <BSP_OSPI_NOR_ConfigFlash+0xc8>)
 8003e2e:	7823      	ldrb	r3, [r4, #0]
 8003e30:	2b02      	cmp	r3, #2
 8003e32:	d055      	beq.n	8003ee0 <BSP_OSPI_NOR_ConfigFlash+0xc0>
      switch(Ospi_Nor_Ctx[Instance].InterfaceMode)
 8003e34:	7863      	ldrb	r3, [r4, #1]
 8003e36:	2b01      	cmp	r3, #1
 8003e38:	d146      	bne.n	8003ec8 <BSP_OSPI_NOR_ConfigFlash+0xa8>
        if((Mode != BSP_OSPI_NOR_OPI_MODE) || (Rate != Ospi_Nor_Ctx[Instance].TransferRate))
 8003e3a:	2901      	cmp	r1, #1
 8003e3c:	78a2      	ldrb	r2, [r4, #2]
 8003e3e:	d109      	bne.n	8003e54 <BSP_OSPI_NOR_ConfigFlash+0x34>
 8003e40:	4296      	cmp	r6, r2
 8003e42:	d107      	bne.n	8003e54 <BSP_OSPI_NOR_ConfigFlash+0x34>
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003e44:	2301      	movs	r3, #1
        Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 8003e46:	2000      	movs	r0, #0
        Ospi_Nor_Ctx[Instance].InterfaceMode = Mode;
 8003e48:	7065      	strb	r5, [r4, #1]
        Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003e4a:	7023      	strb	r3, [r4, #0]
        Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 8003e4c:	70a6      	strb	r6, [r4, #2]
}
 8003e4e:	b004      	add	sp, #16
 8003e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  /* Enable write operations */
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003e54:	4f25      	ldr	r7, [pc, #148]	; (8003eec <BSP_OSPI_NOR_ConfigFlash+0xcc>)
 8003e56:	2101      	movs	r1, #1
 8003e58:	4638      	mov	r0, r7
 8003e5a:	f7ff fb15 	bl	8003488 <MX25LM51245G_WriteEnable>
 8003e5e:	4603      	mov	r3, r0
 8003e60:	bb78      	cbnz	r0, 8003ec2 <BSP_OSPI_NOR_ConfigFlash+0xa2>
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    /* Write Configuration register 2 (with SPI protocol) */
    reg[0] = 0;
 8003e62:	f8ad 000c 	strh.w	r0, [sp, #12]
    reg[1] = 0;
    if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, reg[0]) != MX25LM51245G_OK)
 8003e66:	9000      	str	r0, [sp, #0]
 8003e68:	4638      	mov	r0, r7
 8003e6a:	78a2      	ldrb	r2, [r4, #2]
 8003e6c:	7861      	ldrb	r1, [r4, #1]
 8003e6e:	f7ff fb84 	bl	800357a <MX25LM51245G_WriteCfg2Register>
 8003e72:	4680      	mov	r8, r0
 8003e74:	bb28      	cbnz	r0, 8003ec2 <BSP_OSPI_NOR_ConfigFlash+0xa2>
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    else
    {
      /* Wait that the configuration is effective and check that memory is ready */
      HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003e76:	2028      	movs	r0, #40	; 0x28
 8003e78:	f000 fb4a 	bl	8004510 <HAL_Delay>

      if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 8003e7c:	78a3      	ldrb	r3, [r4, #2]
 8003e7e:	2b01      	cmp	r3, #1
 8003e80:	d106      	bne.n	8003e90 <BSP_OSPI_NOR_ConfigFlash+0x70>
      {
        /* Reconfigure the memory type of the peripheral */
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003e82:	4638      	mov	r0, r7
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
 8003e84:	f8c7 800c 	str.w	r8, [r7, #12]
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8003e88:	f8c7 802c 	str.w	r8, [r7, #44]	; 0x2c
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003e8c:	f001 fd26 	bl	80058dc <HAL_OSPI_Init>
          ret = BSP_ERROR_PERIPH_FAILURE;
        }
      }

      /* Check Flash busy ? */
      if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8003e90:	2200      	movs	r2, #0
 8003e92:	4816      	ldr	r0, [pc, #88]	; (8003eec <BSP_OSPI_NOR_ConfigFlash+0xcc>)
 8003e94:	4611      	mov	r1, r2
 8003e96:	f7ff f9db 	bl	8003250 <MX25LM51245G_AutoPollingMemReady>
 8003e9a:	4603      	mov	r3, r0
 8003e9c:	b988      	cbnz	r0, 8003ec2 <BSP_OSPI_NOR_ConfigFlash+0xa2>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      /* Check the configuration has been correctly done */
      else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003e9e:	aa03      	add	r2, sp, #12
 8003ea0:	4601      	mov	r1, r0
 8003ea2:	9200      	str	r2, [sp, #0]
 8003ea4:	4602      	mov	r2, r0
 8003ea6:	4811      	ldr	r0, [pc, #68]	; (8003eec <BSP_OSPI_NOR_ConfigFlash+0xcc>)
 8003ea8:	f7ff fbc0 	bl	800362c <MX25LM51245G_ReadCfg2Register>
 8003eac:	b948      	cbnz	r0, 8003ec2 <BSP_OSPI_NOR_ConfigFlash+0xa2>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      else if (reg[0] != 0)
 8003eae:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003eb2:	b933      	cbnz	r3, 8003ec2 <BSP_OSPI_NOR_ConfigFlash+0xa2>
          if ((ret == BSP_ERROR_NONE) && (Mode == BSP_OSPI_NOR_OPI_MODE))
 8003eb4:	2d01      	cmp	r5, #1
 8003eb6:	d1c5      	bne.n	8003e44 <BSP_OSPI_NOR_ConfigFlash+0x24>
            if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003eb8:	78a3      	ldrb	r3, [r4, #2]
 8003eba:	b94b      	cbnz	r3, 8003ed0 <BSP_OSPI_NOR_ConfigFlash+0xb0>
            ret = OSPI_NOR_EnterDOPIMode(Instance);
 8003ebc:	f7ff fe96 	bl	8003bec <OSPI_NOR_EnterDOPIMode.constprop.0>
 8003ec0:	e008      	b.n	8003ed4 <BSP_OSPI_NOR_ConfigFlash+0xb4>
          if ((ret == BSP_ERROR_NONE) && (Mode == BSP_OSPI_NOR_OPI_MODE))
 8003ec2:	f06f 0004 	mvn.w	r0, #4
 8003ec6:	e7c2      	b.n	8003e4e <BSP_OSPI_NOR_ConfigFlash+0x2e>
        if(Mode == BSP_OSPI_NOR_OPI_MODE)
 8003ec8:	2901      	cmp	r1, #1
 8003eca:	d1bb      	bne.n	8003e44 <BSP_OSPI_NOR_ConfigFlash+0x24>
          if(Rate == BSP_OSPI_NOR_STR_TRANSFER)
 8003ecc:	2a00      	cmp	r2, #0
 8003ece:	d1f5      	bne.n	8003ebc <BSP_OSPI_NOR_ConfigFlash+0x9c>
            ret = OSPI_NOR_EnterSOPIMode(Instance);
 8003ed0:	f7ff fe44 	bl	8003b5c <OSPI_NOR_EnterSOPIMode.constprop.0>
      if(ret == BSP_ERROR_NONE)
 8003ed4:	2800      	cmp	r0, #0
 8003ed6:	d1ba      	bne.n	8003e4e <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8003ed8:	e7b4      	b.n	8003e44 <BSP_OSPI_NOR_ConfigFlash+0x24>
    ret = BSP_ERROR_WRONG_PARAM;
 8003eda:	f06f 0001 	mvn.w	r0, #1
 8003ede:	e7b6      	b.n	8003e4e <BSP_OSPI_NOR_ConfigFlash+0x2e>
      ret = BSP_ERROR_OSPI_MMP_LOCK_FAILURE;
 8003ee0:	f06f 0019 	mvn.w	r0, #25
  return ret;
 8003ee4:	e7b3      	b.n	8003e4e <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8003ee6:	bf00      	nop
 8003ee8:	240021b8 	.word	0x240021b8
 8003eec:	240021c0 	.word	0x240021c0

08003ef0 <MX_OSPI_ClockConfig>:
{
 8003ef0:	b500      	push	{lr}
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 8003ef2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
{
 8003ef6:	b0af      	sub	sp, #188	; 0xbc
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 8003ef8:	2300      	movs	r3, #0
  return HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 8003efa:	4668      	mov	r0, sp
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI ;
 8003efc:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 8003f00:	2320      	movs	r3, #32
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 8003f02:	2250      	movs	r2, #80	; 0x50
  PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL2;
 8003f04:	9313      	str	r3, [sp, #76]	; 0x4c
  PeriphClkInitStruct.PLL2.PLL2N = 80;
 8003f06:	2305      	movs	r3, #5
 8003f08:	e9cd 3202 	strd	r3, r2, [sp, #8]
  PeriphClkInitStruct.PLL2.PLL2P = 5;
 8003f0c:	9304      	str	r3, [sp, #16]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8003f0e:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 8003f10:	e9cd 3305 	strd	r3, r3, [sp, #20]
  PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8003f14:	2300      	movs	r3, #0
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8003f16:	e9cd 3308 	strd	r3, r3, [sp, #32]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_0;
 8003f1a:	9307      	str	r3, [sp, #28]
  return HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 8003f1c:	f002 ffd0 	bl	8006ec0 <HAL_RCCEx_PeriphCLKConfig>
}
 8003f20:	b02f      	add	sp, #188	; 0xbc
 8003f22:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08003f28 <BSP_OSPI_NOR_Init>:
{
 8003f28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003f2c:	460d      	mov	r5, r1
 8003f2e:	b09b      	sub	sp, #108	; 0x6c
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003f30:	2800      	cmp	r0, #0
 8003f32:	f040 8160 	bne.w	80041f6 <BSP_OSPI_NOR_Init+0x2ce>
    if (Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_NONE)
 8003f36:	4eb1      	ldr	r6, [pc, #708]	; (80041fc <BSP_OSPI_NOR_Init+0x2d4>)
 8003f38:	7834      	ldrb	r4, [r6, #0]
 8003f3a:	2c00      	cmp	r4, #0
 8003f3c:	f040 8159 	bne.w	80041f2 <BSP_OSPI_NOR_Init+0x2ca>
  OSPI_NOR_CLK_ENABLE();
 8003f40:	4baf      	ldr	r3, [pc, #700]	; (8004200 <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003f42:	f04f 0902 	mov.w	r9, #2
  GPIO_InitStruct.Alternate = OSPI_NOR_CS_PIN_AF;
 8003f46:	f04f 080a 	mov.w	r8, #10
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f4a:	a911      	add	r1, sp, #68	; 0x44
  OSPI_NOR_CLK_ENABLE();
 8003f4c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin       = OSPI_NOR_DQS_PIN;
 8003f50:	2704      	movs	r7, #4
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f52:	48ac      	ldr	r0, [pc, #688]	; (8004204 <BSP_OSPI_NOR_Init+0x2dc>)
  OSPI_NOR_CLK_ENABLE();
 8003f54:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003f58:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8003f5c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8003f60:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003f64:	9201      	str	r2, [sp, #4]
 8003f66:	9a01      	ldr	r2, [sp, #4]
  OSPI_NOR_FORCE_RESET();
 8003f68:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003f6a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003f6e:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_RELEASE_RESET();
 8003f70:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003f72:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003f76:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_NOR_CLK_GPIO_CLK_ENABLE();
 8003f78:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003f7c:	f042 0220 	orr.w	r2, r2, #32
 8003f80:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003f84:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003f88:	f002 0220 	and.w	r2, r2, #32
 8003f8c:	9202      	str	r2, [sp, #8]
 8003f8e:	9a02      	ldr	r2, [sp, #8]
  OSPI_NOR_DQS_GPIO_CLK_ENABLE();
 8003f90:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003f94:	f042 0202 	orr.w	r2, r2, #2
 8003f98:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003f9c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fa0:	f002 0202 	and.w	r2, r2, #2
 8003fa4:	9203      	str	r2, [sp, #12]
 8003fa6:	9a03      	ldr	r2, [sp, #12]
  OSPI_NOR_CS_GPIO_CLK_ENABLE();
 8003fa8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fac:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003fb0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003fb4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fb8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003fbc:	9204      	str	r2, [sp, #16]
 8003fbe:	9a04      	ldr	r2, [sp, #16]
  OSPI_NOR_D0_GPIO_CLK_ENABLE();
 8003fc0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fc4:	f042 0208 	orr.w	r2, r2, #8
 8003fc8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003fcc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fd0:	f002 0208 	and.w	r2, r2, #8
 8003fd4:	9205      	str	r2, [sp, #20]
 8003fd6:	9a05      	ldr	r2, [sp, #20]
  OSPI_NOR_D1_GPIO_CLK_ENABLE();
 8003fd8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fdc:	f042 0208 	orr.w	r2, r2, #8
 8003fe0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003fe4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003fe8:	f002 0208 	and.w	r2, r2, #8
 8003fec:	9206      	str	r2, [sp, #24]
 8003fee:	9a06      	ldr	r2, [sp, #24]
  OSPI_NOR_D2_GPIO_CLK_ENABLE();
 8003ff0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8003ff4:	f042 0210 	orr.w	r2, r2, #16
 8003ff8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8003ffc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004000:	f002 0210 	and.w	r2, r2, #16
 8004004:	9207      	str	r2, [sp, #28]
 8004006:	9a07      	ldr	r2, [sp, #28]
  OSPI_NOR_D3_GPIO_CLK_ENABLE();
 8004008:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800400c:	f042 0208 	orr.w	r2, r2, #8
 8004010:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004014:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004018:	f002 0208 	and.w	r2, r2, #8
 800401c:	9208      	str	r2, [sp, #32]
 800401e:	9a08      	ldr	r2, [sp, #32]
  OSPI_NOR_D4_GPIO_CLK_ENABLE();
 8004020:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004024:	f042 0208 	orr.w	r2, r2, #8
 8004028:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800402c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004030:	f002 0208 	and.w	r2, r2, #8
 8004034:	9209      	str	r2, [sp, #36]	; 0x24
 8004036:	9a09      	ldr	r2, [sp, #36]	; 0x24
  OSPI_NOR_D5_GPIO_CLK_ENABLE();
 8004038:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800403c:	f042 0208 	orr.w	r2, r2, #8
 8004040:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004044:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004048:	f002 0208 	and.w	r2, r2, #8
 800404c:	920a      	str	r2, [sp, #40]	; 0x28
 800404e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  OSPI_NOR_D6_GPIO_CLK_ENABLE();
 8004050:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004054:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004058:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800405c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004060:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004064:	920b      	str	r2, [sp, #44]	; 0x2c
 8004066:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  OSPI_NOR_D7_GPIO_CLK_ENABLE();
 8004068:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800406c:	f042 0208 	orr.w	r2, r2, #8
 8004070:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004074:	2201      	movs	r2, #1
  OSPI_NOR_D7_GPIO_CLK_ENABLE();
 8004076:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800407a:	f003 0308 	and.w	r3, r3, #8
 800407e:	930c      	str	r3, [sp, #48]	; 0x30
 8004080:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8004082:	2340      	movs	r3, #64	; 0x40
 8004084:	e9cd 3911 	strd	r3, r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004088:	2303      	movs	r3, #3
  GPIO_InitStruct.Alternate = OSPI_NOR_CS_PIN_AF;
 800408a:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 800408e:	e9cd 2313 	strd	r2, r3, [sp, #76]	; 0x4c
  HAL_GPIO_Init(OSPI_NOR_CS_GPIO_PORT, &GPIO_InitStruct);
 8004092:	f000 fc15 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_DQS_GPIO_PORT, &GPIO_InitStruct);
 8004096:	a911      	add	r1, sp, #68	; 0x44
 8004098:	485b      	ldr	r0, [pc, #364]	; (8004208 <BSP_OSPI_NOR_Init+0x2e0>)
  GPIO_InitStruct.Pin       = OSPI_NOR_DQS_PIN;
 800409a:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 800409c:	9413      	str	r4, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_NOR_DQS_PIN_AF;
 800409e:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_DQS_GPIO_PORT, &GPIO_InitStruct);
 80040a2:	f000 fc0d 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_CLK_PIN;
 80040a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 80040aa:	9413      	str	r4, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_NOR_CLK_PIN_AF;
 80040ac:	2409      	movs	r4, #9
  HAL_GPIO_Init(OSPI_NOR_CLK_GPIO_PORT, &GPIO_InitStruct);
 80040ae:	a911      	add	r1, sp, #68	; 0x44
 80040b0:	4856      	ldr	r0, [pc, #344]	; (800420c <BSP_OSPI_NOR_Init+0x2e4>)
  GPIO_InitStruct.Pin       = OSPI_NOR_CLK_PIN;
 80040b2:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_CLK_PIN_AF;
 80040b4:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_CLK_GPIO_PORT, &GPIO_InitStruct);
 80040b6:	f000 fc03 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D0_PIN;
 80040ba:	f44f 6300 	mov.w	r3, #2048	; 0x800
  HAL_GPIO_Init(OSPI_NOR_D0_GPIO_PORT, &GPIO_InitStruct);
 80040be:	a911      	add	r1, sp, #68	; 0x44
 80040c0:	4853      	ldr	r0, [pc, #332]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D0_PIN;
 80040c2:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D0_PIN_AF;
 80040c4:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D0_GPIO_PORT, &GPIO_InitStruct);
 80040c6:	f000 fbfb 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D1_PIN;
 80040ca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(OSPI_NOR_D1_GPIO_PORT, &GPIO_InitStruct);
 80040ce:	a911      	add	r1, sp, #68	; 0x44
 80040d0:	484f      	ldr	r0, [pc, #316]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D1_PIN;
 80040d2:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D1_PIN_AF;
 80040d4:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D1_GPIO_PORT, &GPIO_InitStruct);
 80040d6:	f000 fbf3 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_D2_GPIO_PORT, &GPIO_InitStruct);
 80040da:	a911      	add	r1, sp, #68	; 0x44
 80040dc:	484d      	ldr	r0, [pc, #308]	; (8004214 <BSP_OSPI_NOR_Init+0x2ec>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D2_PIN;
 80040de:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pin       = OSPI_NOR_D5_PIN;
 80040e0:	2720      	movs	r7, #32
  GPIO_InitStruct.Alternate = OSPI_NOR_D2_PIN_AF;
 80040e2:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D2_GPIO_PORT, &GPIO_InitStruct);
 80040e4:	f000 fbec 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D3_PIN;
 80040e8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(OSPI_NOR_D3_GPIO_PORT, &GPIO_InitStruct);
 80040ec:	a911      	add	r1, sp, #68	; 0x44
 80040ee:	4848      	ldr	r0, [pc, #288]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D3_PIN;
 80040f0:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D3_PIN_AF;
 80040f2:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D3_GPIO_PORT, &GPIO_InitStruct);
 80040f4:	f000 fbe4 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D4_PIN;
 80040f8:	2310      	movs	r3, #16
  HAL_GPIO_Init(OSPI_NOR_D4_GPIO_PORT, &GPIO_InitStruct);
 80040fa:	a911      	add	r1, sp, #68	; 0x44
 80040fc:	4844      	ldr	r0, [pc, #272]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D4_PIN;
 80040fe:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D4_PIN_AF;
 8004100:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D4_GPIO_PORT, &GPIO_InitStruct);
 8004104:	f000 fbdc 	bl	80048c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_NOR_D5_GPIO_PORT, &GPIO_InitStruct);
 8004108:	a911      	add	r1, sp, #68	; 0x44
 800410a:	4841      	ldr	r0, [pc, #260]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D5_PIN;
 800410c:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D5_PIN_AF;
 800410e:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D5_GPIO_PORT, &GPIO_InitStruct);
 8004112:	f000 fbd5 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D6_PIN;
 8004116:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(OSPI_NOR_D6_GPIO_PORT, &GPIO_InitStruct);
 800411a:	a911      	add	r1, sp, #68	; 0x44
 800411c:	4839      	ldr	r0, [pc, #228]	; (8004204 <BSP_OSPI_NOR_Init+0x2dc>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D6_PIN;
 800411e:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D6_PIN_AF;
 8004120:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D6_GPIO_PORT, &GPIO_InitStruct);
 8004122:	f000 fbcd 	bl	80048c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_NOR_D7_PIN;
 8004126:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(OSPI_NOR_D7_GPIO_PORT, &GPIO_InitStruct);
 8004128:	a911      	add	r1, sp, #68	; 0x44
 800412a:	4839      	ldr	r0, [pc, #228]	; (8004210 <BSP_OSPI_NOR_Init+0x2e8>)
  GPIO_InitStruct.Pin       = OSPI_NOR_D7_PIN;
 800412c:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_NOR_D7_PIN_AF;
 800412e:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_NOR_D7_GPIO_PORT, &GPIO_InitStruct);
 8004132:	f000 fbc5 	bl	80048c0 <HAL_GPIO_Init>
      (void)MX25LM51245G_GetFlashInfo(&pInfo);
 8004136:	a811      	add	r0, sp, #68	; 0x44
 8004138:	f7ff f871 	bl	800321e <MX25LM51245G_GetFlashInfo>
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800413c:	9b11      	ldr	r3, [sp, #68]	; 0x44
      ospi_config.ClockPrescaler = 2U;
 800413e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8004142:	fa93 f3a3 	rbit	r3, r3
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8004146:	b10b      	cbz	r3, 800414c <BSP_OSPI_NOR_Init+0x224>
  {
    return 32U;
  }
  return __builtin_clz(value);
 8004148:	fab3 f783 	clz	r7, r3
      ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 800414c:	2300      	movs	r3, #0
      if (MX_OSPI_ClockConfig(&hospi_nor[Instance]) != HAL_OK)
 800414e:	4832      	ldr	r0, [pc, #200]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
      ospi_config.MemorySize     = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize);
 8004150:	970d      	str	r7, [sp, #52]	; 0x34
      ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8004152:	930f      	str	r3, [sp, #60]	; 0x3c
      ospi_config.TransferRate   = Init->TransferRate;
 8004154:	786b      	ldrb	r3, [r5, #1]
 8004156:	9310      	str	r3, [sp, #64]	; 0x40
      if (MX_OSPI_ClockConfig(&hospi_nor[Instance]) != HAL_OK)
 8004158:	f7ff feca 	bl	8003ef0 <MX_OSPI_ClockConfig>
 800415c:	b120      	cbz	r0, 8004168 <BSP_OSPI_NOR_Init+0x240>
        ret = BSP_ERROR_PERIPH_FAILURE;
 800415e:	f06f 0003 	mvn.w	r0, #3
}
 8004162:	b01b      	add	sp, #108	; 0x6c
 8004164:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      else if (MX_OSPI_NOR_Init(&hospi_nor[Instance], &ospi_config) != HAL_OK)
 8004168:	a90d      	add	r1, sp, #52	; 0x34
 800416a:	482b      	ldr	r0, [pc, #172]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 800416c:	f7ff fd92 	bl	8003c94 <MX_OSPI_NOR_Init>
 8004170:	4602      	mov	r2, r0
 8004172:	2800      	cmp	r0, #0
 8004174:	d1f3      	bne.n	800415e <BSP_OSPI_NOR_Init+0x236>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004176:	4601      	mov	r1, r0
 8004178:	4827      	ldr	r0, [pc, #156]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 800417a:	f7ff fab7 	bl	80036ec <MX25LM51245G_ResetEnable>
 800417e:	4602      	mov	r2, r0
 8004180:	b110      	cbz	r0, 8004188 <BSP_OSPI_NOR_Init+0x260>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004182:	f06f 0004 	mvn.w	r0, #4
 8004186:	e7ec      	b.n	8004162 <BSP_OSPI_NOR_Init+0x23a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004188:	4601      	mov	r1, r0
 800418a:	4823      	ldr	r0, [pc, #140]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 800418c:	f7ff fae0 	bl	8003750 <MX25LM51245G_ResetMemory>
 8004190:	4602      	mov	r2, r0
 8004192:	2800      	cmp	r0, #0
 8004194:	d1f5      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004196:	2101      	movs	r1, #1
 8004198:	481f      	ldr	r0, [pc, #124]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 800419a:	f7ff faa7 	bl	80036ec <MX25LM51245G_ResetEnable>
 800419e:	4602      	mov	r2, r0
 80041a0:	2800      	cmp	r0, #0
 80041a2:	d1ee      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 80041a4:	2101      	movs	r1, #1
 80041a6:	481c      	ldr	r0, [pc, #112]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 80041a8:	f7ff fad2 	bl	8003750 <MX25LM51245G_ResetMemory>
 80041ac:	2800      	cmp	r0, #0
 80041ae:	d1e8      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 80041b0:	2201      	movs	r2, #1
 80041b2:	4819      	ldr	r0, [pc, #100]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 80041b4:	4611      	mov	r1, r2
 80041b6:	f7ff fa99 	bl	80036ec <MX25LM51245G_ResetEnable>
 80041ba:	2800      	cmp	r0, #0
 80041bc:	d1e1      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 80041be:	2201      	movs	r2, #1
 80041c0:	4815      	ldr	r0, [pc, #84]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 80041c2:	4611      	mov	r1, r2
 80041c4:	f7ff fac4 	bl	8003750 <MX25LM51245G_ResetMemory>
 80041c8:	2800      	cmp	r0, #0
 80041ca:	d1da      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 80041cc:	2301      	movs	r3, #1
    Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;     /* After reset S/W setting to STR mode          */
 80041ce:	70b0      	strb	r0, [r6, #2]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 80041d0:	2064      	movs	r0, #100	; 0x64
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 80041d2:	8033      	strh	r3, [r6, #0]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 80041d4:	f000 f99c 	bl	8004510 <HAL_Delay>
      else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 80041d8:	78b2      	ldrb	r2, [r6, #2]
 80041da:	7871      	ldrb	r1, [r6, #1]
 80041dc:	480e      	ldr	r0, [pc, #56]	; (8004218 <BSP_OSPI_NOR_Init+0x2f0>)
 80041de:	f7ff f837 	bl	8003250 <MX25LM51245G_AutoPollingMemReady>
 80041e2:	2800      	cmp	r0, #0
 80041e4:	d1cd      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
      else if (BSP_OSPI_NOR_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 80041e6:	786a      	ldrb	r2, [r5, #1]
 80041e8:	7829      	ldrb	r1, [r5, #0]
 80041ea:	f7ff fe19 	bl	8003e20 <BSP_OSPI_NOR_ConfigFlash>
 80041ee:	2800      	cmp	r0, #0
 80041f0:	d1c7      	bne.n	8004182 <BSP_OSPI_NOR_Init+0x25a>
        ret = BSP_ERROR_NONE;
 80041f2:	2000      	movs	r0, #0
 80041f4:	e7b5      	b.n	8004162 <BSP_OSPI_NOR_Init+0x23a>
    ret = BSP_ERROR_WRONG_PARAM;
 80041f6:	f06f 0001 	mvn.w	r0, #1
  return ret;
 80041fa:	e7b2      	b.n	8004162 <BSP_OSPI_NOR_Init+0x23a>
 80041fc:	240021b8 	.word	0x240021b8
 8004200:	58024400 	.word	0x58024400
 8004204:	58021800 	.word	0x58021800
 8004208:	58020400 	.word	0x58020400
 800420c:	58021400 	.word	0x58021400
 8004210:	58020c00 	.word	0x58020c00
 8004214:	58021000 	.word	0x58021000
 8004218:	240021c0 	.word	0x240021c0

0800421c <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 800421c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004220:	460c      	mov	r4, r1
 8004222:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004224:	2800      	cmp	r0, #0
 8004226:	d163      	bne.n	80042f0 <BSP_TS_Init+0xd4>
 8004228:	680b      	ldr	r3, [r1, #0]
 800422a:	1e5a      	subs	r2, r3, #1
 800422c:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
 8004230:	d25e      	bcs.n	80042f0 <BSP_TS_Init+0xd4>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004232:	684a      	ldr	r2, [r1, #4]
  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004234:	1e51      	subs	r1, r2, #1
 8004236:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
 800423a:	d259      	bcs.n	80042f0 <BSP_TS_Init+0xd4>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 800423c:	4293      	cmp	r3, r2
 800423e:	bf28      	it	cs
 8004240:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004242:	68e2      	ldr	r2, [r4, #12]
 8004244:	429a      	cmp	r2, r3
 8004246:	d853      	bhi.n	80042f0 <BSP_TS_Init+0xd4>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
 8004248:	2370      	movs	r3, #112	; 0x70
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 800424a:	4d2b      	ldr	r5, [pc, #172]	; (80042f8 <BSP_TS_Init+0xdc>)
  uint32_t ft5336_id       = 0;
 800424c:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 800424e:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
 8004250:	f8ad 3010 	strh.w	r3, [sp, #16]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 8004254:	4628      	mov	r0, r5
  IOCtx.Init        = BSP_I2C4_Init;
 8004256:	4b29      	ldr	r3, [pc, #164]	; (80042fc <BSP_TS_Init+0xe0>)
 8004258:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
 800425a:	4b29      	ldr	r3, [pc, #164]	; (8004300 <BSP_TS_Init+0xe4>)
 800425c:	9303      	str	r3, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
 800425e:	4b29      	ldr	r3, [pc, #164]	; (8004304 <BSP_TS_Init+0xe8>)
 8004260:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
 8004262:	4b29      	ldr	r3, [pc, #164]	; (8004308 <BSP_TS_Init+0xec>)
 8004264:	9305      	str	r3, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
 8004266:	4b29      	ldr	r3, [pc, #164]	; (800430c <BSP_TS_Init+0xf0>)
 8004268:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 800426a:	f7fe ff43 	bl	80030f4 <FT5336_RegisterBusIO>
 800426e:	b128      	cbz	r0, 800427c <BSP_TS_Init+0x60>
      ret = BSP_ERROR_NO_INIT;
 8004270:	f04f 35ff 	mov.w	r5, #4294967295
}
 8004274:	4628      	mov	r0, r5
 8004276:	b008      	add	sp, #32
 8004278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
 800427c:	a901      	add	r1, sp, #4
 800427e:	4628      	mov	r0, r5
 8004280:	f7fe fe9f 	bl	8002fc2 <FT5336_ReadID>
 8004284:	2800      	cmp	r0, #0
 8004286:	d1f3      	bne.n	8004270 <BSP_TS_Init+0x54>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
 8004288:	9b01      	ldr	r3, [sp, #4]
 800428a:	2b51      	cmp	r3, #81	; 0x51
 800428c:	d1f0      	bne.n	8004270 <BSP_TS_Init+0x54>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 800428e:	4b20      	ldr	r3, [pc, #128]	; (8004310 <BSP_TS_Init+0xf4>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 8004290:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
 8004292:	4f20      	ldr	r7, [pc, #128]	; (8004314 <BSP_TS_Init+0xf8>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 8004294:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800431c <BSP_TS_Init+0x100>
    Ts_CompObj[Instance] = &FT5336Obj;
 8004298:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 800429a:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	4798      	blx	r3
 80042a2:	4605      	mov	r5, r0
 80042a4:	2800      	cmp	r0, #0
 80042a6:	d1e3      	bne.n	8004270 <BSP_TS_Init+0x54>
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 80042a8:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 80042aa:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 80042ac:	4e1a      	ldr	r6, [pc, #104]	; (8004318 <BSP_TS_Init+0xfc>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 80042ae:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 80042b0:	6033      	str	r3, [r6, #0]
      Ts_Ctx[Instance].Height      = TS_Init->Height;
 80042b2:	6863      	ldr	r3, [r4, #4]
 80042b4:	6073      	str	r3, [r6, #4]
      Ts_Ctx[Instance].Orientation = TS_Init->Orientation;
 80042b6:	68a3      	ldr	r3, [r4, #8]
 80042b8:	60b3      	str	r3, [r6, #8]
      Ts_Ctx[Instance].Accuracy    = TS_Init->Accuracy;
 80042ba:	68e3      	ldr	r3, [r4, #12]
 80042bc:	60f3      	str	r3, [r6, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 80042be:	f8d8 3000 	ldr.w	r3, [r8]
 80042c2:	69db      	ldr	r3, [r3, #28]
 80042c4:	4798      	blx	r3
 80042c6:	2800      	cmp	r0, #0
 80042c8:	db0f      	blt.n	80042ea <BSP_TS_Init+0xce>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 80042ca:	9b03      	ldr	r3, [sp, #12]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80042cc:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 80042ce:	6133      	str	r3, [r6, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 80042d0:	9b04      	ldr	r3, [sp, #16]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80042d2:	6861      	ldr	r1, [r4, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 80042d4:	6173      	str	r3, [r6, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80042d6:	68e3      	ldr	r3, [r4, #12]
 80042d8:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80042da:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80042dc:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80042de:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80042e0:	61b2      	str	r2, [r6, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80042e2:	6273      	str	r3, [r6, #36]	; 0x24
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80042e4:	e9c6 2307 	strd	r2, r3, [r6, #28]
        for(i = 0; i < TS_TOUCH_NBR; i++)
 80042e8:	e7c4      	b.n	8004274 <BSP_TS_Init+0x58>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 80042ea:	f06f 0504 	mvn.w	r5, #4
 80042ee:	e7c1      	b.n	8004274 <BSP_TS_Init+0x58>
    ret = BSP_ERROR_WRONG_PARAM;
 80042f0:	f06f 0501 	mvn.w	r5, #1
  return ret;
 80042f4:	e7be      	b.n	8004274 <BSP_TS_Init+0x58>
 80042f6:	bf00      	nop
 80042f8:	2400221c 	.word	0x2400221c
 80042fc:	0800384d 	.word	0x0800384d
 8004300:	080037b5 	.word	0x080037b5
 8004304:	08003b25 	.word	0x08003b25
 8004308:	08003af1 	.word	0x08003af1
 800430c:	08003b59 	.word	0x08003b59
 8004310:	2400000c 	.word	0x2400000c
 8004314:	24002244 	.word	0x24002244
 8004318:	24002248 	.word	0x24002248
 800431c:	24002270 	.word	0x24002270

08004320 <BSP_TS_GetState>:
{
 8004320:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004324:	460c      	mov	r4, r1
  if(Instance >= TS_INSTANCES_NBR)
 8004326:	2800      	cmp	r0, #0
 8004328:	d153      	bne.n	80043d2 <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 800432a:	4b2b      	ldr	r3, [pc, #172]	; (80043d8 <BSP_TS_GetState+0xb8>)
 800432c:	a901      	add	r1, sp, #4
 800432e:	4a2b      	ldr	r2, [pc, #172]	; (80043dc <BSP_TS_GetState+0xbc>)
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	6810      	ldr	r0, [r2, #0]
 8004334:	691b      	ldr	r3, [r3, #16]
 8004336:	4798      	blx	r3
 8004338:	2800      	cmp	r0, #0
 800433a:	db47      	blt.n	80043cc <BSP_TS_GetState+0xac>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 800433c:	4928      	ldr	r1, [pc, #160]	; (80043e0 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
 800433e:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8004340:	698e      	ldr	r6, [r1, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 8004342:	6a0d      	ldr	r5, [r1, #32]
    else if(state.TouchDetected != 0U)
 8004344:	2800      	cmp	r0, #0
 8004346:	d03d      	beq.n	80043c4 <BSP_TS_GetState+0xa4>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004348:	f8d1 e008 	ldr.w	lr, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 800434c:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004350:	f01e 0f08 	tst.w	lr, #8
      y_oriented = state.TouchY;
 8004354:	e9dd c702 	ldrd	ip, r7, [sp, #8]
        x_oriented = state.TouchY;
 8004358:	bf19      	ittee	ne
 800435a:	463b      	movne	r3, r7
        y_oriented = state.TouchX;
 800435c:	4662      	movne	r2, ip
      y_oriented = state.TouchY;
 800435e:	463a      	moveq	r2, r7
      x_oriented = state.TouchX;
 8004360:	4663      	moveq	r3, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 8004362:	f01e 0f02 	tst.w	lr, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004366:	bf1c      	itt	ne
 8004368:	f108 33ff 	addne.w	r3, r8, #4294967295
 800436c:	eba3 030c 	subne.w	r3, r3, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004370:	f8d1 c014 	ldr.w	ip, [r1, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8004374:	f01e 0f04 	tst.w	lr, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004378:	bf18      	it	ne
 800437a:	ebac 0207 	subne.w	r2, ip, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800437e:	680f      	ldr	r7, [r1, #0]
 8004380:	437b      	muls	r3, r7
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004382:	684f      	ldr	r7, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8004384:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004386:	437a      	muls	r2, r7
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004388:	68cf      	ldr	r7, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800438a:	fbb3 f3f8 	udiv	r3, r3, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800438e:	fbb2 f2fc 	udiv	r2, r2, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004392:	42b3      	cmp	r3, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004394:	6063      	str	r3, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004396:	60a2      	str	r2, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004398:	bf8c      	ite	hi
 800439a:	eba3 0c06 	subhi.w	ip, r3, r6
 800439e:	eba6 0c03 	subls.w	ip, r6, r3
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 80043a2:	42aa      	cmp	r2, r5
 80043a4:	bf8c      	ite	hi
 80043a6:	1b50      	subhi	r0, r2, r5
 80043a8:	1aa8      	subls	r0, r5, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 80043aa:	4567      	cmp	r7, ip
 80043ac:	d301      	bcc.n	80043b2 <BSP_TS_GetState+0x92>
 80043ae:	4287      	cmp	r7, r0
 80043b0:	d205      	bcs.n	80043be <BSP_TS_GetState+0x9e>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 80043b2:	618b      	str	r3, [r1, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 80043b4:	620a      	str	r2, [r1, #32]
  int32_t ret = BSP_ERROR_NONE;
 80043b6:	2000      	movs	r0, #0
}
 80043b8:	b004      	add	sp, #16
 80043ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 80043be:	e9c4 6501 	strd	r6, r5, [r4, #4]
 80043c2:	e7f8      	b.n	80043b6 <BSP_TS_GetState+0x96>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 80043c4:	e9c4 0600 	strd	r0, r6, [r4]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 80043c8:	60a5      	str	r5, [r4, #8]
 80043ca:	e7f5      	b.n	80043b8 <BSP_TS_GetState+0x98>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 80043cc:	f06f 0004 	mvn.w	r0, #4
 80043d0:	e7f2      	b.n	80043b8 <BSP_TS_GetState+0x98>
    ret = BSP_ERROR_WRONG_PARAM;
 80043d2:	f06f 0001 	mvn.w	r0, #1
  return ret;
 80043d6:	e7ef      	b.n	80043b8 <BSP_TS_GetState+0x98>
 80043d8:	24002270 	.word	0x24002270
 80043dc:	24002244 	.word	0x24002244
 80043e0:	24002248 	.word	0x24002248

080043e4 <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80043e4:	4a22      	ldr	r2, [pc, #136]	; (8004470 <SystemInit+0x8c>)
 80043e6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80043ea:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80043ee:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80043f2:	4a20      	ldr	r2, [pc, #128]	; (8004474 <SystemInit+0x90>)
 80043f4:	6813      	ldr	r3, [r2, #0]
 80043f6:	f003 030f 	and.w	r3, r3, #15
 80043fa:	2b06      	cmp	r3, #6
 80043fc:	d805      	bhi.n	800440a <SystemInit+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80043fe:	6813      	ldr	r3, [r2, #0]
 8004400:	f023 030f 	bic.w	r3, r3, #15
 8004404:	f043 0307 	orr.w	r3, r3, #7
 8004408:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 800440a:	4b1b      	ldr	r3, [pc, #108]	; (8004478 <SystemInit+0x94>)
 800440c:	681a      	ldr	r2, [r3, #0]
 800440e:	f042 0201 	orr.w	r2, r2, #1
 8004412:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004414:	2200      	movs	r2, #0
 8004416:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8004418:	4a18      	ldr	r2, [pc, #96]	; (800447c <SystemInit+0x98>)
 800441a:	6819      	ldr	r1, [r3, #0]
 800441c:	400a      	ands	r2, r1
  
   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800441e:	4915      	ldr	r1, [pc, #84]	; (8004474 <SystemInit+0x90>)
  RCC->CR &= 0xEAF6ED7FU;
 8004420:	601a      	str	r2, [r3, #0]
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8004422:	680a      	ldr	r2, [r1, #0]
 8004424:	0712      	lsls	r2, r2, #28
 8004426:	d505      	bpl.n	8004434 <SystemInit+0x50>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8004428:	680a      	ldr	r2, [r1, #0]
 800442a:	f022 020f 	bic.w	r2, r2, #15
 800442e:	f042 0207 	orr.w	r2, r2, #7
 8004432:	600a      	str	r2, [r1, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8004434:	2200      	movs	r2, #0

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8004436:	4912      	ldr	r1, [pc, #72]	; (8004480 <SystemInit+0x9c>)
  RCC->D1CFGR = 0x00000000;
 8004438:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
 800443a:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
 800443c:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x02020200;
 800443e:	6299      	str	r1, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8004440:	4910      	ldr	r1, [pc, #64]	; (8004484 <SystemInit+0xa0>)
 8004442:	62d9      	str	r1, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8004444:	4910      	ldr	r1, [pc, #64]	; (8004488 <SystemInit+0xa4>)
 8004446:	6319      	str	r1, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 8004448:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 800444a:	6399      	str	r1, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 800444c:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 800444e:	6419      	str	r1, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8004450:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8004452:	6819      	ldr	r1, [r3, #0]
 8004454:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 8004458:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 800445a:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800445c:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8004460:	4b0a      	ldr	r3, [pc, #40]	; (800448c <SystemInit+0xa8>)
 8004462:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004464:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004468:	4b01      	ldr	r3, [pc, #4]	; (8004470 <SystemInit+0x8c>)
 800446a:	609a      	str	r2, [r3, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 800446c:	4770      	bx	lr
 800446e:	bf00      	nop
 8004470:	e000ed00 	.word	0xe000ed00
 8004474:	52002000 	.word	0x52002000
 8004478:	58024400 	.word	0x58024400
 800447c:	eaf6ed7f 	.word	0xeaf6ed7f
 8004480:	02020200 	.word	0x02020200
 8004484:	01ff0000 	.word	0x01ff0000
 8004488:	01010280 	.word	0x01010280
 800448c:	52004000 	.word	0x52004000

08004490 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004490:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004492:	2003      	movs	r0, #3
 8004494:	f000 f84e 	bl	8004534 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8004498:	f002 f9ea 	bl	8006870 <HAL_RCC_GetSysClockFreq>
 800449c:	490f      	ldr	r1, [pc, #60]	; (80044dc <HAL_Init+0x4c>)
 800449e:	4a10      	ldr	r2, [pc, #64]	; (80044e0 <HAL_Init+0x50>)
 80044a0:	698b      	ldr	r3, [r1, #24]
 80044a2:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80044a6:	5cd3      	ldrb	r3, [r2, r3]
 80044a8:	f003 031f 	and.w	r3, r3, #31
 80044ac:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80044ae:	698b      	ldr	r3, [r1, #24]
 80044b0:	f003 030f 	and.w	r3, r3, #15
 80044b4:	5cd3      	ldrb	r3, [r2, r3]
 80044b6:	4a0b      	ldr	r2, [pc, #44]	; (80044e4 <HAL_Init+0x54>)
 80044b8:	f003 031f 	and.w	r3, r3, #31
 80044bc:	fa20 f303 	lsr.w	r3, r0, r3
 80044c0:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80044c2:	4b09      	ldr	r3, [pc, #36]	; (80044e8 <HAL_Init+0x58>)
 80044c4:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80044c6:	2000      	movs	r0, #0
 80044c8:	f7fc fd72 	bl	8000fb0 <HAL_InitTick>
 80044cc:	4604      	mov	r4, r0
 80044ce:	b918      	cbnz	r0, 80044d8 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80044d0:	f7fc fa7a 	bl	80009c8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80044d4:	4620      	mov	r0, r4
 80044d6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80044d8:	2401      	movs	r4, #1
 80044da:	e7fb      	b.n	80044d4 <HAL_Init+0x44>
 80044dc:	58024400 	.word	0x58024400
 80044e0:	0801c470 	.word	0x0801c470
 80044e4:	24000040 	.word	0x24000040
 80044e8:	2400003c 	.word	0x2400003c

080044ec <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 80044ec:	4a03      	ldr	r2, [pc, #12]	; (80044fc <HAL_IncTick+0x10>)
 80044ee:	4b04      	ldr	r3, [pc, #16]	; (8004500 <HAL_IncTick+0x14>)
 80044f0:	6811      	ldr	r1, [r2, #0]
 80044f2:	781b      	ldrb	r3, [r3, #0]
 80044f4:	440b      	add	r3, r1
 80044f6:	6013      	str	r3, [r2, #0]
}
 80044f8:	4770      	bx	lr
 80044fa:	bf00      	nop
 80044fc:	24002274 	.word	0x24002274
 8004500:	24000044 	.word	0x24000044

08004504 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004504:	4b01      	ldr	r3, [pc, #4]	; (800450c <HAL_GetTick+0x8>)
 8004506:	6818      	ldr	r0, [r3, #0]
}
 8004508:	4770      	bx	lr
 800450a:	bf00      	nop
 800450c:	24002274 	.word	0x24002274

08004510 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004510:	b538      	push	{r3, r4, r5, lr}
 8004512:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004514:	f7ff fff6 	bl	8004504 <HAL_GetTick>
 8004518:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800451a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800451c:	bf1e      	ittt	ne
 800451e:	4b04      	ldrne	r3, [pc, #16]	; (8004530 <HAL_Delay+0x20>)
 8004520:	781b      	ldrbne	r3, [r3, #0]
 8004522:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004524:	f7ff ffee 	bl	8004504 <HAL_GetTick>
 8004528:	1b43      	subs	r3, r0, r5
 800452a:	42a3      	cmp	r3, r4
 800452c:	d3fa      	bcc.n	8004524 <HAL_Delay+0x14>
  {
  }
}
 800452e:	bd38      	pop	{r3, r4, r5, pc}
 8004530:	24000044 	.word	0x24000044

08004534 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004534:	4907      	ldr	r1, [pc, #28]	; (8004554 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004536:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004538:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800453a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800453e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004542:	0412      	lsls	r2, r2, #16
 8004544:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004546:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004548:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800454c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004550:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004552:	4770      	bx	lr
 8004554:	e000ed00 	.word	0xe000ed00

08004558 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004558:	4b16      	ldr	r3, [pc, #88]	; (80045b4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800455a:	b530      	push	{r4, r5, lr}
 800455c:	68dc      	ldr	r4, [r3, #12]
 800455e:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004562:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004566:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004568:	2b04      	cmp	r3, #4
 800456a:	bf28      	it	cs
 800456c:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800456e:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004570:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004574:	bf8c      	ite	hi
 8004576:	3c03      	subhi	r4, #3
 8004578:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800457a:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 800457e:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004580:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004584:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004588:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800458c:	fa03 f304 	lsl.w	r3, r3, r4
 8004590:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004594:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004598:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 800459a:	db06      	blt.n	80045aa <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800459c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80045a0:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80045a4:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80045a8:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80045aa:	f000 000f 	and.w	r0, r0, #15
 80045ae:	4a02      	ldr	r2, [pc, #8]	; (80045b8 <HAL_NVIC_SetPriority+0x60>)
 80045b0:	5413      	strb	r3, [r2, r0]
 80045b2:	e7f9      	b.n	80045a8 <HAL_NVIC_SetPriority+0x50>
 80045b4:	e000ed00 	.word	0xe000ed00
 80045b8:	e000ed14 	.word	0xe000ed14

080045bc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80045bc:	2800      	cmp	r0, #0
 80045be:	db07      	blt.n	80045d0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80045c0:	2301      	movs	r3, #1
 80045c2:	0941      	lsrs	r1, r0, #5
 80045c4:	f000 001f 	and.w	r0, r0, #31
 80045c8:	4a02      	ldr	r2, [pc, #8]	; (80045d4 <HAL_NVIC_EnableIRQ+0x18>)
 80045ca:	4083      	lsls	r3, r0
 80045cc:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80045d0:	4770      	bx	lr
 80045d2:	bf00      	nop
 80045d4:	e000e100 	.word	0xe000e100

080045d8 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 80045d8:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 80045dc:	4b04      	ldr	r3, [pc, #16]	; (80045f0 <HAL_MPU_Disable+0x18>)
 80045de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80045e0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80045e4:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 80045e6:	2200      	movs	r2, #0
 80045e8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 80045ec:	4770      	bx	lr
 80045ee:	bf00      	nop
 80045f0:	e000ed00 	.word	0xe000ed00

080045f4 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 80045f4:	4b06      	ldr	r3, [pc, #24]	; (8004610 <HAL_MPU_Enable+0x1c>)
 80045f6:	f040 0001 	orr.w	r0, r0, #1
 80045fa:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 80045fe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004600:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004604:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004606:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800460a:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 800460e:	4770      	bx	lr
 8004610:	e000ed00 	.word	0xe000ed00

08004614 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004614:	7843      	ldrb	r3, [r0, #1]
 8004616:	4a14      	ldr	r2, [pc, #80]	; (8004668 <HAL_MPU_ConfigRegion+0x54>)
{
 8004618:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 800461a:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 800461e:	7801      	ldrb	r1, [r0, #0]
 8004620:	b1e9      	cbz	r1, 800465e <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8004622:	6843      	ldr	r3, [r0, #4]
 8004624:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004628:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 800462a:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 800462c:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 800462e:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004632:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004634:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004636:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 800463a:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800463c:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004640:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004642:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004646:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004648:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 800464c:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800464e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004652:	7a01      	ldrb	r1, [r0, #8]
 8004654:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004658:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 800465c:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 800465e:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 8004662:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8004666:	e7f9      	b.n	800465c <HAL_MPU_ConfigRegion+0x48>
 8004668:	e000ed00 	.word	0xe000ed00

0800466c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800466c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800466e:	4604      	mov	r4, r0
 8004670:	b908      	cbnz	r0, 8004676 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004672:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004674:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004676:	7f43      	ldrb	r3, [r0, #29]
 8004678:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800467c:	b913      	cbnz	r3, 8004684 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 800467e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004680:	f7fc f9ba 	bl	80009f8 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004684:	2302      	movs	r3, #2
 8004686:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004688:	7923      	ldrb	r3, [r4, #4]
 800468a:	b9e3      	cbnz	r3, 80046c6 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800468c:	6823      	ldr	r3, [r4, #0]
 800468e:	4a13      	ldr	r2, [pc, #76]	; (80046dc <HAL_CRC_Init+0x70>)
 8004690:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004692:	689a      	ldr	r2, [r3, #8]
 8004694:	f022 0218 	bic.w	r2, r2, #24
 8004698:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800469a:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800469c:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800469e:	b9d2      	cbnz	r2, 80046d6 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80046a0:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80046a4:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 80046a6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80046a8:	689a      	ldr	r2, [r3, #8]
 80046aa:	6961      	ldr	r1, [r4, #20]
 80046ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80046b0:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80046b2:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80046b4:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80046b6:	689a      	ldr	r2, [r3, #8]
 80046b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80046bc:	430a      	orrs	r2, r1
 80046be:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 80046c0:	2301      	movs	r3, #1
 80046c2:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 80046c4:	e7d6      	b.n	8004674 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 80046c6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 80046ca:	4620      	mov	r0, r4
 80046cc:	f000 f808 	bl	80046e0 <HAL_CRCEx_Polynomial_Set>
 80046d0:	2800      	cmp	r0, #0
 80046d2:	d0e2      	beq.n	800469a <HAL_CRC_Init+0x2e>
 80046d4:	e7cd      	b.n	8004672 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80046d6:	6922      	ldr	r2, [r4, #16]
 80046d8:	e7e4      	b.n	80046a4 <HAL_CRC_Init+0x38>
 80046da:	bf00      	nop
 80046dc:	04c11db7 	.word	0x04c11db7

080046e0 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80046e0:	07cb      	lsls	r3, r1, #31
{
 80046e2:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80046e4:	d50c      	bpl.n	8004700 <HAL_CRCEx_Polynomial_Set+0x20>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80046e6:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80046e8:	3b01      	subs	r3, #1
 80046ea:	d31c      	bcc.n	8004726 <HAL_CRCEx_Polynomial_Set+0x46>
 80046ec:	fa21 f403 	lsr.w	r4, r1, r3
 80046f0:	07e4      	lsls	r4, r4, #31
 80046f2:	d5f9      	bpl.n	80046e8 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 80046f4:	2a10      	cmp	r2, #16
 80046f6:	d012      	beq.n	800471e <HAL_CRCEx_Polynomial_Set+0x3e>
 80046f8:	d804      	bhi.n	8004704 <HAL_CRCEx_Polynomial_Set+0x24>
 80046fa:	b13a      	cbz	r2, 800470c <HAL_CRCEx_Polynomial_Set+0x2c>
 80046fc:	2a08      	cmp	r2, #8
 80046fe:	d010      	beq.n	8004722 <HAL_CRCEx_Polynomial_Set+0x42>
        }
        break;
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
        {
          status =   HAL_ERROR;
 8004700:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004702:	e00b      	b.n	800471c <HAL_CRCEx_Polynomial_Set+0x3c>
    switch (PolyLength)
 8004704:	2a18      	cmp	r2, #24
 8004706:	d1fb      	bne.n	8004700 <HAL_CRCEx_Polynomial_Set+0x20>
        if (msb >= HAL_CRC_LENGTH_7B)
 8004708:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 800470a:	d8f9      	bhi.n	8004700 <HAL_CRCEx_Polynomial_Set+0x20>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800470c:	6800      	ldr	r0, [r0, #0]
 800470e:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004710:	6883      	ldr	r3, [r0, #8]
 8004712:	f023 0318 	bic.w	r3, r3, #24
 8004716:	4313      	orrs	r3, r2
 8004718:	6083      	str	r3, [r0, #8]
 800471a:	2000      	movs	r0, #0
}
 800471c:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 800471e:	2b07      	cmp	r3, #7
 8004720:	e7f3      	b.n	800470a <HAL_CRCEx_Polynomial_Set+0x2a>
        if (msb >= HAL_CRC_LENGTH_16B)
 8004722:	2b0f      	cmp	r3, #15
 8004724:	e7f1      	b.n	800470a <HAL_CRCEx_Polynomial_Set+0x2a>
    switch (PolyLength)
 8004726:	2a00      	cmp	r2, #0
 8004728:	d1ea      	bne.n	8004700 <HAL_CRCEx_Polynomial_Set+0x20>
 800472a:	e7ef      	b.n	800470c <HAL_CRCEx_Polynomial_Set+0x2c>

0800472c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800472c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800472e:	4604      	mov	r4, r0
 8004730:	2800      	cmp	r0, #0
 8004732:	d036      	beq.n	80047a2 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004734:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 8004738:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800473c:	b91b      	cbnz	r3, 8004746 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800473e:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004742:	f7fc f971 	bl	8000a28 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004746:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004748:	69e0      	ldr	r0, [r4, #28]
 800474a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800474c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004750:	6823      	ldr	r3, [r4, #0]
 8004752:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004754:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004756:	6819      	ldr	r1, [r3, #0]
 8004758:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 800475c:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8004760:	430a      	orrs	r2, r1
 8004762:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004764:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004766:	68a2      	ldr	r2, [r4, #8]
 8004768:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 800476c:	4302      	orrs	r2, r0
 800476e:	f021 0101 	bic.w	r1, r1, #1
 8004772:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004774:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004776:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004778:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800477a:	0c12      	lsrs	r2, r2, #16
 800477c:	0412      	lsls	r2, r2, #16
 800477e:	430a      	orrs	r2, r1
 8004780:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004782:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004784:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004788:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 800478c:	0552      	lsls	r2, r2, #21
 800478e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004792:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004794:	430a      	orrs	r2, r1
 8004796:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004798:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800479a:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800479c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 80047a0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80047a2:	2001      	movs	r0, #1
 80047a4:	e7fc      	b.n	80047a0 <HAL_DMA2D_Init+0x74>

080047a6 <HAL_DMA2D_LineEventCallback>:
 80047a6:	4770      	bx	lr

080047a8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80047a8:	4770      	bx	lr

080047aa <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80047aa:	6803      	ldr	r3, [r0, #0]
{
 80047ac:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80047ae:	685e      	ldr	r6, [r3, #4]
{
 80047b0:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80047b2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80047b4:	07f2      	lsls	r2, r6, #31
 80047b6:	d514      	bpl.n	80047e2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80047b8:	05e9      	lsls	r1, r5, #23
 80047ba:	d512      	bpl.n	80047e2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80047bc:	681a      	ldr	r2, [r3, #0]
 80047be:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80047c2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80047c4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80047c6:	f042 0201 	orr.w	r2, r2, #1
 80047ca:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80047cc:	2201      	movs	r2, #1
 80047ce:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80047d0:	2304      	movs	r3, #4
 80047d2:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80047d6:	2300      	movs	r3, #0
 80047d8:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 80047dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80047de:	b103      	cbz	r3, 80047e2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80047e0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80047e2:	06b2      	lsls	r2, r6, #26
 80047e4:	d516      	bpl.n	8004814 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80047e6:	04ab      	lsls	r3, r5, #18
 80047e8:	d514      	bpl.n	8004814 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80047ea:	6823      	ldr	r3, [r4, #0]
 80047ec:	681a      	ldr	r2, [r3, #0]
 80047ee:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80047f2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80047f4:	2220      	movs	r2, #32
 80047f6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80047f8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80047fa:	f043 0302 	orr.w	r3, r3, #2
 80047fe:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004800:	2304      	movs	r3, #4
 8004802:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004806:	2300      	movs	r3, #0
 8004808:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 800480c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800480e:	b10b      	cbz	r3, 8004814 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004810:	4620      	mov	r0, r4
 8004812:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004814:	0730      	lsls	r0, r6, #28
 8004816:	d516      	bpl.n	8004846 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004818:	0529      	lsls	r1, r5, #20
 800481a:	d514      	bpl.n	8004846 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800481c:	6823      	ldr	r3, [r4, #0]
 800481e:	681a      	ldr	r2, [r3, #0]
 8004820:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004824:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004826:	2208      	movs	r2, #8
 8004828:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800482a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800482c:	f043 0304 	orr.w	r3, r3, #4
 8004830:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004832:	2304      	movs	r3, #4
 8004834:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004838:	2300      	movs	r3, #0
 800483a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 800483e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004840:	b10b      	cbz	r3, 8004846 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004842:	4620      	mov	r0, r4
 8004844:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004846:	0772      	lsls	r2, r6, #29
 8004848:	d50b      	bpl.n	8004862 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800484a:	056b      	lsls	r3, r5, #21
 800484c:	d509      	bpl.n	8004862 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800484e:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004850:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004852:	681a      	ldr	r2, [r3, #0]
 8004854:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004858:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800485a:	2204      	movs	r2, #4
 800485c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800485e:	f7ff ffa2 	bl	80047a6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004862:	07b0      	lsls	r0, r6, #30
 8004864:	d514      	bpl.n	8004890 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004866:	05a9      	lsls	r1, r5, #22
 8004868:	d512      	bpl.n	8004890 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800486a:	6823      	ldr	r3, [r4, #0]
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004872:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004874:	2202      	movs	r2, #2
 8004876:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004878:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800487a:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800487c:	2301      	movs	r3, #1
 800487e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004882:	2300      	movs	r3, #0
 8004884:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8004888:	6a23      	ldr	r3, [r4, #32]
 800488a:	b10b      	cbz	r3, 8004890 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800488c:	4620      	mov	r0, r4
 800488e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004890:	06f2      	lsls	r2, r6, #27
 8004892:	d513      	bpl.n	80048bc <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004894:	04eb      	lsls	r3, r5, #19
 8004896:	d511      	bpl.n	80048bc <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004898:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800489a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800489c:	681a      	ldr	r2, [r3, #0]
 800489e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80048a2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80048a4:	2210      	movs	r2, #16
 80048a6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80048a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80048aa:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80048ac:	2301      	movs	r3, #1
 80048ae:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 80048b2:	2300      	movs	r3, #0
 80048b4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80048b8:	f7ff ff76 	bl	80047a8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80048bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080048c0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80048c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 80048c4:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80048c6:	f8df 91bc 	ldr.w	r9, [pc, #444]	; 8004a84 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80048ca:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 80048ce:	680a      	ldr	r2, [r1, #0]
 80048d0:	fa32 f503 	lsrs.w	r5, r2, r3
 80048d4:	d102      	bne.n	80048dc <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 80048d6:	b003      	add	sp, #12
 80048d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 80048dc:	f04f 0e01 	mov.w	lr, #1
 80048e0:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 80048e4:	ea1e 0202 	ands.w	r2, lr, r2
 80048e8:	f000 80b8 	beq.w	8004a5c <HAL_GPIO_Init+0x19c>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80048ec:	684e      	ldr	r6, [r1, #4]
 80048ee:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80048f2:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80048f6:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80048fa:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80048fe:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004900:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004904:	2f01      	cmp	r7, #1
 8004906:	d834      	bhi.n	8004972 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 8004908:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800490a:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800490e:	68cf      	ldr	r7, [r1, #12]
 8004910:	fa07 f708 	lsl.w	r7, r7, r8
 8004914:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004918:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800491a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 800491c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004920:	f3c6 1700 	ubfx	r7, r6, #4, #1
 8004924:	409f      	lsls	r7, r3
 8004926:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800492a:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800492c:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800492e:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8004930:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004934:	688f      	ldr	r7, [r1, #8]
 8004936:	fa07 f708 	lsl.w	r7, r7, r8
 800493a:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 800493e:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004940:	d119      	bne.n	8004976 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8004942:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8004946:	f003 0b07 	and.w	fp, r3, #7
 800494a:	f04f 0e0f 	mov.w	lr, #15
 800494e:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8004952:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8004956:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 800495a:	fa0e fe0b 	lsl.w	lr, lr, fp
 800495e:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8004962:	690f      	ldr	r7, [r1, #16]
 8004964:	fa07 f70b 	lsl.w	r7, r7, fp
 8004968:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800496c:	f8ca 7020 	str.w	r7, [sl, #32]
 8004970:	e001      	b.n	8004976 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004972:	2d03      	cmp	r5, #3
 8004974:	d1da      	bne.n	800492c <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 8004976:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004978:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800497c:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8004980:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004984:	ea45 0507 	orr.w	r5, r5, r7
      GPIOx->MODER = temp;
 8004988:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800498a:	d067      	beq.n	8004a5c <HAL_GPIO_Init+0x19c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800498c:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8004990:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8004994:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004998:	f045 0502 	orr.w	r5, r5, #2
 800499c:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80049a0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80049a4:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 80049a8:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80049ac:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 80049b0:	f005 0502 	and.w	r5, r5, #2
 80049b4:	9501      	str	r5, [sp, #4]
 80049b6:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80049b8:	250f      	movs	r5, #15
        temp = SYSCFG->EXTICR[position >> 2U];
 80049ba:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80049be:	fa05 f50c 	lsl.w	r5, r5, ip
 80049c2:	ea2e 0e05 	bic.w	lr, lr, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80049c6:	4d2e      	ldr	r5, [pc, #184]	; (8004a80 <HAL_GPIO_Init+0x1c0>)
 80049c8:	42a8      	cmp	r0, r5
 80049ca:	d049      	beq.n	8004a60 <HAL_GPIO_Init+0x1a0>
 80049cc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049d0:	42a8      	cmp	r0, r5
 80049d2:	d047      	beq.n	8004a64 <HAL_GPIO_Init+0x1a4>
 80049d4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049d8:	42a8      	cmp	r0, r5
 80049da:	d045      	beq.n	8004a68 <HAL_GPIO_Init+0x1a8>
 80049dc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049e0:	42a8      	cmp	r0, r5
 80049e2:	d043      	beq.n	8004a6c <HAL_GPIO_Init+0x1ac>
 80049e4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049e8:	42a8      	cmp	r0, r5
 80049ea:	d041      	beq.n	8004a70 <HAL_GPIO_Init+0x1b0>
 80049ec:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049f0:	42a8      	cmp	r0, r5
 80049f2:	d03f      	beq.n	8004a74 <HAL_GPIO_Init+0x1b4>
 80049f4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049f8:	42a8      	cmp	r0, r5
 80049fa:	d03d      	beq.n	8004a78 <HAL_GPIO_Init+0x1b8>
 80049fc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004a00:	42a8      	cmp	r0, r5
 8004a02:	d03b      	beq.n	8004a7c <HAL_GPIO_Init+0x1bc>
 8004a04:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004a08:	42a8      	cmp	r0, r5
 8004a0a:	bf0c      	ite	eq
 8004a0c:	2509      	moveq	r5, #9
 8004a0e:	250a      	movne	r5, #10
 8004a10:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004a14:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8004a18:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004a1c:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 8004a1e:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 8004a22:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 8004a24:	bf0c      	ite	eq
 8004a26:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004a28:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004a2a:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 8004a2e:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8004a30:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 8004a32:	bf0c      	ite	eq
 8004a34:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004a36:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004a38:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8004a3c:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8004a3e:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 8004a42:	bf0c      	ite	eq
 8004a44:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8004a46:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004a48:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8004a4a:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8004a4e:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 8004a52:	bf54      	ite	pl
 8004a54:	403d      	andpl	r5, r7
          temp |= iocurrent;
 8004a56:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 8004a58:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 8004a5c:	3301      	adds	r3, #1
 8004a5e:	e736      	b.n	80048ce <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8004a60:	2500      	movs	r5, #0
 8004a62:	e7d5      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a64:	2501      	movs	r5, #1
 8004a66:	e7d3      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a68:	2502      	movs	r5, #2
 8004a6a:	e7d1      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a6c:	2503      	movs	r5, #3
 8004a6e:	e7cf      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a70:	2504      	movs	r5, #4
 8004a72:	e7cd      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a74:	2505      	movs	r5, #5
 8004a76:	e7cb      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a78:	2506      	movs	r5, #6
 8004a7a:	e7c9      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a7c:	2507      	movs	r5, #7
 8004a7e:	e7c7      	b.n	8004a10 <HAL_GPIO_Init+0x150>
 8004a80:	58020000 	.word	0x58020000
 8004a84:	58024400 	.word	0x58024400

08004a88 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8004a8c:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004a8e:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8004bac <HAL_GPIO_DeInit+0x124>
 8004a92:	f8df 911c 	ldr.w	r9, [pc, #284]	; 8004bb0 <HAL_GPIO_DeInit+0x128>
 8004a96:	f8df a11c 	ldr.w	sl, [pc, #284]	; 8004bb4 <HAL_GPIO_DeInit+0x12c>
 8004a9a:	f8df b11c 	ldr.w	fp, [pc, #284]	; 8004bb8 <HAL_GPIO_DeInit+0x130>
  while ((GPIO_Pin >> position) != 0x00U)
 8004a9e:	fa31 f302 	lsrs.w	r3, r1, r2
 8004aa2:	d101      	bne.n	8004aa8 <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 8004aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 8004aa8:	2301      	movs	r3, #1
 8004aaa:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 8004aae:	ea1c 0601 	ands.w	r6, ip, r1
 8004ab2:	d067      	beq.n	8004b84 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004ab4:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004ab8:	f002 0703 	and.w	r7, r2, #3
 8004abc:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004abe:	4b3a      	ldr	r3, [pc, #232]	; (8004ba8 <HAL_GPIO_DeInit+0x120>)
 8004ac0:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004ac4:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004ac6:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004ac8:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004acc:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8004ad0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004ad4:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004ad8:	d056      	beq.n	8004b88 <HAL_GPIO_DeInit+0x100>
 8004ada:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ade:	4298      	cmp	r0, r3
 8004ae0:	d054      	beq.n	8004b8c <HAL_GPIO_DeInit+0x104>
 8004ae2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ae6:	4298      	cmp	r0, r3
 8004ae8:	d052      	beq.n	8004b90 <HAL_GPIO_DeInit+0x108>
 8004aea:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004aee:	4298      	cmp	r0, r3
 8004af0:	d050      	beq.n	8004b94 <HAL_GPIO_DeInit+0x10c>
 8004af2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004af6:	4298      	cmp	r0, r3
 8004af8:	d04e      	beq.n	8004b98 <HAL_GPIO_DeInit+0x110>
 8004afa:	4540      	cmp	r0, r8
 8004afc:	d04e      	beq.n	8004b9c <HAL_GPIO_DeInit+0x114>
 8004afe:	4548      	cmp	r0, r9
 8004b00:	d04e      	beq.n	8004ba0 <HAL_GPIO_DeInit+0x118>
 8004b02:	4550      	cmp	r0, sl
 8004b04:	d04e      	beq.n	8004ba4 <HAL_GPIO_DeInit+0x11c>
 8004b06:	4558      	cmp	r0, fp
 8004b08:	bf0c      	ite	eq
 8004b0a:	2309      	moveq	r3, #9
 8004b0c:	230a      	movne	r3, #10
 8004b0e:	40bb      	lsls	r3, r7
 8004b10:	4573      	cmp	r3, lr
 8004b12:	d119      	bne.n	8004b48 <HAL_GPIO_DeInit+0xc0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8004b14:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b18:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 8004b1c:	ea27 0706 	bic.w	r7, r7, r6
 8004b20:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8004b24:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 8004b28:	ea27 0706 	bic.w	r7, r7, r6
 8004b2c:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8004b30:	685f      	ldr	r7, [r3, #4]
 8004b32:	ea27 0706 	bic.w	r7, r7, r6
 8004b36:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8004b38:	681f      	ldr	r7, [r3, #0]
 8004b3a:	ea27 0706 	bic.w	r7, r7, r6
 8004b3e:	601f      	str	r7, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004b40:	68a3      	ldr	r3, [r4, #8]
 8004b42:	ea23 0305 	bic.w	r3, r3, r5
 8004b46:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8004b48:	0055      	lsls	r5, r2, #1
 8004b4a:	2303      	movs	r3, #3
 8004b4c:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8004b4e:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8004b52:	40ab      	lsls	r3, r5
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8004b54:	260f      	movs	r6, #15
 8004b56:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8004b58:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8004b5a:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8004b5c:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8004b5e:	08d4      	lsrs	r4, r2, #3
 8004b60:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 8004b64:	6a25      	ldr	r5, [r4, #32]
 8004b66:	ea25 0506 	bic.w	r5, r5, r6
 8004b6a:	6225      	str	r5, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8004b6c:	68c4      	ldr	r4, [r0, #12]
 8004b6e:	ea24 0403 	bic.w	r4, r4, r3
 8004b72:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8004b74:	6844      	ldr	r4, [r0, #4]
 8004b76:	ea24 040c 	bic.w	r4, r4, ip
 8004b7a:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8004b7c:	6884      	ldr	r4, [r0, #8]
 8004b7e:	ea24 0303 	bic.w	r3, r4, r3
 8004b82:	6083      	str	r3, [r0, #8]
    position++;
 8004b84:	3201      	adds	r2, #1
 8004b86:	e78a      	b.n	8004a9e <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8004b88:	2300      	movs	r3, #0
 8004b8a:	e7c0      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004b8c:	2301      	movs	r3, #1
 8004b8e:	e7be      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004b90:	2302      	movs	r3, #2
 8004b92:	e7bc      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004b94:	2303      	movs	r3, #3
 8004b96:	e7ba      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004b98:	2304      	movs	r3, #4
 8004b9a:	e7b8      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004b9c:	2305      	movs	r3, #5
 8004b9e:	e7b6      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004ba0:	2306      	movs	r3, #6
 8004ba2:	e7b4      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004ba4:	2307      	movs	r3, #7
 8004ba6:	e7b2      	b.n	8004b0e <HAL_GPIO_DeInit+0x86>
 8004ba8:	58020000 	.word	0x58020000
 8004bac:	58021400 	.word	0x58021400
 8004bb0:	58021800 	.word	0x58021800
 8004bb4:	58021c00 	.word	0x58021c00
 8004bb8:	58022400 	.word	0x58022400

08004bbc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8004bbc:	6903      	ldr	r3, [r0, #16]
 8004bbe:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004bc0:	bf14      	ite	ne
 8004bc2:	2001      	movne	r0, #1
 8004bc4:	2000      	moveq	r0, #0
 8004bc6:	4770      	bx	lr

08004bc8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004bc8:	b10a      	cbz	r2, 8004bce <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8004bca:	6181      	str	r1, [r0, #24]
  }
}
 8004bcc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8004bce:	0409      	lsls	r1, r1, #16
 8004bd0:	e7fb      	b.n	8004bca <HAL_GPIO_WritePin+0x2>

08004bd2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004bd2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004bd4:	ea01 0203 	and.w	r2, r1, r3
 8004bd8:	ea21 0103 	bic.w	r1, r1, r3
 8004bdc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004be0:	6181      	str	r1, [r0, #24]
}
 8004be2:	4770      	bx	lr

08004be4 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004be4:	6803      	ldr	r3, [r0, #0]
 8004be6:	699a      	ldr	r2, [r3, #24]
 8004be8:	0791      	lsls	r1, r2, #30
 8004bea:	d501      	bpl.n	8004bf0 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004bec:	2200      	movs	r2, #0
 8004bee:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004bf0:	699a      	ldr	r2, [r3, #24]
 8004bf2:	07d2      	lsls	r2, r2, #31
 8004bf4:	d403      	bmi.n	8004bfe <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004bf6:	699a      	ldr	r2, [r3, #24]
 8004bf8:	f042 0201 	orr.w	r2, r2, #1
 8004bfc:	619a      	str	r2, [r3, #24]
  }
}
 8004bfe:	4770      	bx	lr

08004c00 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004c00:	b530      	push	{r4, r5, lr}
 8004c02:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004c04:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004c08:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004c0a:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8004c0c:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004c0e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004c12:	4a05      	ldr	r2, [pc, #20]	; (8004c28 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004c14:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004c16:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004c1a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004c1e:	ea20 0002 	bic.w	r0, r0, r2
 8004c22:	4303      	orrs	r3, r0
 8004c24:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004c26:	bd30      	pop	{r4, r5, pc}
 8004c28:	03ff63ff 	.word	0x03ff63ff

08004c2c <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004c2c:	6803      	ldr	r3, [r0, #0]
{
 8004c2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004c32:	699c      	ldr	r4, [r3, #24]
{
 8004c34:	4605      	mov	r5, r0
 8004c36:	460f      	mov	r7, r1
 8004c38:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004c3a:	f014 0410 	ands.w	r4, r4, #16
 8004c3e:	d06f      	beq.n	8004d20 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004c40:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004c42:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004c44:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004c46:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004c48:	682b      	ldr	r3, [r5, #0]
 8004c4a:	699a      	ldr	r2, [r3, #24]
 8004c4c:	0690      	lsls	r0, r2, #26
 8004c4e:	d461      	bmi.n	8004d14 <I2C_IsErrorOccurred+0xe8>
 8004c50:	f1b8 0f00 	cmp.w	r8, #0
 8004c54:	d035      	beq.n	8004cc2 <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 8004c56:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 8004c5a:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 8004c5c:	682e      	ldr	r6, [r5, #0]
 8004c5e:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004c60:	05d9      	lsls	r1, r3, #23
 8004c62:	d505      	bpl.n	8004c70 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004c64:	f44f 7280 	mov.w	r2, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8004c68:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8004c6c:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004c6e:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004c70:	055a      	lsls	r2, r3, #21
 8004c72:	d505      	bpl.n	8004c80 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004c74:	f44f 6280 	mov.w	r2, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8004c78:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8004c7c:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004c7e:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004c80:	059b      	lsls	r3, r3, #22
 8004c82:	d54f      	bpl.n	8004d24 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c84:	f44f 7300 	mov.w	r3, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004c88:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c8c:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004c8e:	4628      	mov	r0, r5
 8004c90:	f7ff ffa8 	bl	8004be4 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004c94:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004c96:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004c98:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8004c9c:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8004ca0:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8004ca4:	f023 0301 	bic.w	r3, r3, #1
 8004ca8:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004caa:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8004cac:	4323      	orrs	r3, r4
 8004cae:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004cb0:	2320      	movs	r3, #32
 8004cb2:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8004cbc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8004cc0:	e032      	b.n	8004d28 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004cc2:	1c7a      	adds	r2, r7, #1
 8004cc4:	d0c1      	beq.n	8004c4a <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004cc6:	f7ff fc1d 	bl	8004504 <HAL_GetTick>
 8004cca:	1b80      	subs	r0, r0, r6
 8004ccc:	42b8      	cmp	r0, r7
 8004cce:	d801      	bhi.n	8004cd4 <I2C_IsErrorOccurred+0xa8>
 8004cd0:	2f00      	cmp	r7, #0
 8004cd2:	d1b9      	bne.n	8004c48 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004cd4:	682b      	ldr	r3, [r5, #0]
 8004cd6:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004cd8:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004cdc:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004cde:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004ce0:	0400      	lsls	r0, r0, #16
 8004ce2:	d50a      	bpl.n	8004cfa <I2C_IsErrorOccurred+0xce>
 8004ce4:	0449      	lsls	r1, r1, #17
 8004ce6:	d408      	bmi.n	8004cfa <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004ce8:	2a20      	cmp	r2, #32
 8004cea:	d006      	beq.n	8004cfa <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004cec:	685a      	ldr	r2, [r3, #4]
 8004cee:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004cf2:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004cf4:	f7ff fc06 	bl	8004504 <HAL_GetTick>
 8004cf8:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004cfa:	682b      	ldr	r3, [r5, #0]
 8004cfc:	699b      	ldr	r3, [r3, #24]
 8004cfe:	069b      	lsls	r3, r3, #26
 8004d00:	d4a2      	bmi.n	8004c48 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004d02:	f7ff fbff 	bl	8004504 <HAL_GetTick>
 8004d06:	1b80      	subs	r0, r0, r6
 8004d08:	2819      	cmp	r0, #25
 8004d0a:	d9f6      	bls.n	8004cfa <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004d0c:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004d0e:	f04f 0801 	mov.w	r8, #1
 8004d12:	e799      	b.n	8004c48 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004d14:	f1b8 0f00 	cmp.w	r8, #0
 8004d18:	d19d      	bne.n	8004c56 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004d1a:	2220      	movs	r2, #32
 8004d1c:	61da      	str	r2, [r3, #28]
 8004d1e:	e79a      	b.n	8004c56 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004d20:	4620      	mov	r0, r4
 8004d22:	e79b      	b.n	8004c5c <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004d24:	2800      	cmp	r0, #0
 8004d26:	d1b2      	bne.n	8004c8e <I2C_IsErrorOccurred+0x62>
}
 8004d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d2c <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004d2c:	b570      	push	{r4, r5, r6, lr}
 8004d2e:	4604      	mov	r4, r0
 8004d30:	460d      	mov	r5, r1
 8004d32:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004d34:	6823      	ldr	r3, [r4, #0]
 8004d36:	699b      	ldr	r3, [r3, #24]
 8004d38:	079b      	lsls	r3, r3, #30
 8004d3a:	d501      	bpl.n	8004d40 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d3c:	2000      	movs	r0, #0
}
 8004d3e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d40:	4632      	mov	r2, r6
 8004d42:	4629      	mov	r1, r5
 8004d44:	4620      	mov	r0, r4
 8004d46:	f7ff ff71 	bl	8004c2c <I2C_IsErrorOccurred>
 8004d4a:	b9c0      	cbnz	r0, 8004d7e <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004d4c:	1c6a      	adds	r2, r5, #1
 8004d4e:	d0f1      	beq.n	8004d34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d50:	f7ff fbd8 	bl	8004504 <HAL_GetTick>
 8004d54:	1b80      	subs	r0, r0, r6
 8004d56:	42a8      	cmp	r0, r5
 8004d58:	d801      	bhi.n	8004d5e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004d5a:	2d00      	cmp	r5, #0
 8004d5c:	d1ea      	bne.n	8004d34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004d5e:	6823      	ldr	r3, [r4, #0]
 8004d60:	699b      	ldr	r3, [r3, #24]
 8004d62:	f013 0302 	ands.w	r3, r3, #2
 8004d66:	d1e5      	bne.n	8004d34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d68:	6c62      	ldr	r2, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 8004d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d6e:	f042 0220 	orr.w	r2, r2, #32
 8004d72:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004d74:	2220      	movs	r2, #32
 8004d76:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d7a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8004d7e:	2001      	movs	r0, #1
 8004d80:	e7dd      	b.n	8004d3e <I2C_WaitOnTXISFlagUntilTimeout+0x12>

08004d82 <I2C_WaitOnFlagUntilTimeout>:
{
 8004d82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d86:	9f06      	ldr	r7, [sp, #24]
 8004d88:	4604      	mov	r4, r0
 8004d8a:	4688      	mov	r8, r1
 8004d8c:	4616      	mov	r6, r2
 8004d8e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004d90:	6822      	ldr	r2, [r4, #0]
 8004d92:	6993      	ldr	r3, [r2, #24]
 8004d94:	ea38 0303 	bics.w	r3, r8, r3
 8004d98:	bf0c      	ite	eq
 8004d9a:	2301      	moveq	r3, #1
 8004d9c:	2300      	movne	r3, #0
 8004d9e:	42b3      	cmp	r3, r6
 8004da0:	d001      	beq.n	8004da6 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8004da2:	2000      	movs	r0, #0
 8004da4:	e01e      	b.n	8004de4 <I2C_WaitOnFlagUntilTimeout+0x62>
    if (Timeout != HAL_MAX_DELAY)
 8004da6:	1c6b      	adds	r3, r5, #1
 8004da8:	d0f3      	beq.n	8004d92 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004daa:	f7ff fbab 	bl	8004504 <HAL_GetTick>
 8004dae:	1bc0      	subs	r0, r0, r7
 8004db0:	42a8      	cmp	r0, r5
 8004db2:	d801      	bhi.n	8004db8 <I2C_WaitOnFlagUntilTimeout+0x36>
 8004db4:	2d00      	cmp	r5, #0
 8004db6:	d1eb      	bne.n	8004d90 <I2C_WaitOnFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004db8:	6823      	ldr	r3, [r4, #0]
 8004dba:	699b      	ldr	r3, [r3, #24]
 8004dbc:	ea38 0303 	bics.w	r3, r8, r3
 8004dc0:	bf0c      	ite	eq
 8004dc2:	2301      	moveq	r3, #1
 8004dc4:	2300      	movne	r3, #0
 8004dc6:	42b3      	cmp	r3, r6
 8004dc8:	d1e2      	bne.n	8004d90 <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004dca:	6c63      	ldr	r3, [r4, #68]	; 0x44
          return HAL_ERROR;
 8004dcc:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004dce:	f043 0320 	orr.w	r3, r3, #32
 8004dd2:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004dd4:	2320      	movs	r3, #32
 8004dd6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dda:	2300      	movs	r3, #0
 8004ddc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 8004de0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8004de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004de8 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004de8:	b570      	push	{r4, r5, r6, lr}
 8004dea:	4604      	mov	r4, r0
 8004dec:	460d      	mov	r5, r1
 8004dee:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004df0:	6823      	ldr	r3, [r4, #0]
 8004df2:	699b      	ldr	r3, [r3, #24]
 8004df4:	069b      	lsls	r3, r3, #26
 8004df6:	d501      	bpl.n	8004dfc <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004df8:	2000      	movs	r0, #0
}
 8004dfa:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004dfc:	4632      	mov	r2, r6
 8004dfe:	4629      	mov	r1, r5
 8004e00:	4620      	mov	r0, r4
 8004e02:	f7ff ff13 	bl	8004c2c <I2C_IsErrorOccurred>
 8004e06:	b9b0      	cbnz	r0, 8004e36 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e08:	f7ff fb7c 	bl	8004504 <HAL_GetTick>
 8004e0c:	1b80      	subs	r0, r0, r6
 8004e0e:	42a8      	cmp	r0, r5
 8004e10:	d801      	bhi.n	8004e16 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004e12:	2d00      	cmp	r5, #0
 8004e14:	d1ec      	bne.n	8004df0 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004e16:	6823      	ldr	r3, [r4, #0]
 8004e18:	699b      	ldr	r3, [r3, #24]
 8004e1a:	f013 0320 	ands.w	r3, r3, #32
 8004e1e:	d1e7      	bne.n	8004df0 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004e20:	6c62      	ldr	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 8004e22:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004e26:	f042 0220 	orr.w	r2, r2, #32
 8004e2a:	6462      	str	r2, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004e2c:	2220      	movs	r2, #32
 8004e2e:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e32:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8004e36:	2001      	movs	r0, #1
 8004e38:	e7df      	b.n	8004dfa <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

08004e3a <HAL_I2C_MspInit>:
}
 8004e3a:	4770      	bx	lr

08004e3c <HAL_I2C_Init>:
{
 8004e3c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004e3e:	4604      	mov	r4, r0
 8004e40:	2800      	cmp	r0, #0
 8004e42:	d04a      	beq.n	8004eda <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004e44:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8004e48:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e4c:	b91b      	cbnz	r3, 8004e56 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004e4e:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8004e52:	f7ff fff2 	bl	8004e3a <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004e56:	2324      	movs	r3, #36	; 0x24
 8004e58:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004e5c:	6823      	ldr	r3, [r4, #0]
 8004e5e:	681a      	ldr	r2, [r3, #0]
 8004e60:	f022 0201 	bic.w	r2, r2, #1
 8004e64:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004e66:	6862      	ldr	r2, [r4, #4]
 8004e68:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004e6c:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004e6e:	689a      	ldr	r2, [r3, #8]
 8004e70:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004e74:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e76:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004e7a:	2901      	cmp	r1, #1
 8004e7c:	d124      	bne.n	8004ec8 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e7e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004e82:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e84:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e86:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e88:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8004e8c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004e90:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004e92:	68da      	ldr	r2, [r3, #12]
 8004e94:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004e98:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e9a:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004e9e:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004ea0:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004ea2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004ea6:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004ea8:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004eac:	430a      	orrs	r2, r1
 8004eae:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004eb0:	681a      	ldr	r2, [r3, #0]
 8004eb2:	f042 0201 	orr.w	r2, r2, #1
 8004eb6:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004eb8:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004eba:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004ebc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004ec0:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004ec2:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8004ec6:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004ec8:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004ecc:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004ece:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004ed0:	d1d8      	bne.n	8004e84 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8004ed2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004ed6:	605a      	str	r2, [r3, #4]
 8004ed8:	e7d4      	b.n	8004e84 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8004eda:	2001      	movs	r0, #1
 8004edc:	e7f3      	b.n	8004ec6 <HAL_I2C_Init+0x8a>

08004ede <HAL_I2C_MspDeInit>:
 8004ede:	4770      	bx	lr

08004ee0 <HAL_I2C_DeInit>:
{
 8004ee0:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004ee2:	4604      	mov	r4, r0
 8004ee4:	b198      	cbz	r0, 8004f0e <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004ee6:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004ee8:	2324      	movs	r3, #36	; 0x24
 8004eea:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004eee:	6813      	ldr	r3, [r2, #0]
 8004ef0:	f023 0301 	bic.w	r3, r3, #1
 8004ef4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004ef6:	f7ff fff2 	bl	8004ede <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004efa:	2000      	movs	r0, #0
 8004efc:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 8004efe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8004f02:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004f06:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f08:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8004f0c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004f0e:	2001      	movs	r0, #1
 8004f10:	e7fc      	b.n	8004f0c <HAL_I2C_DeInit+0x2c>
	...

08004f14 <HAL_I2C_Mem_Write>:
{
 8004f14:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f18:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f1a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8004f1e:	4604      	mov	r4, r0
 8004f20:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f22:	2b20      	cmp	r3, #32
{
 8004f24:	4616      	mov	r6, r2
 8004f26:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8004f2a:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f2e:	f040 80c6 	bne.w	80050be <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004f32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004f34:	b113      	cbz	r3, 8004f3c <HAL_I2C_Mem_Write+0x28>
 8004f36:	f1ba 0f00 	cmp.w	sl, #0
 8004f3a:	d106      	bne.n	8004f4a <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004f3c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004f40:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8004f42:	2001      	movs	r0, #1
}
 8004f44:	b003      	add	sp, #12
 8004f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004f4a:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8004f4e:	2b01      	cmp	r3, #1
 8004f50:	f000 80b5 	beq.w	80050be <HAL_I2C_Mem_Write+0x1aa>
 8004f54:	f04f 0b01 	mov.w	fp, #1
 8004f58:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8004f5c:	f7ff fad2 	bl	8004504 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004f60:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004f62:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004f64:	9000      	str	r0, [sp, #0]
 8004f66:	465a      	mov	r2, fp
 8004f68:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004f6c:	4620      	mov	r0, r4
 8004f6e:	f7ff ff08 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 8004f72:	2800      	cmp	r0, #0
 8004f74:	d1e5      	bne.n	8004f42 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004f76:	2321      	movs	r3, #33	; 0x21
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004f78:	fa5f f289 	uxtb.w	r2, r9
 8004f7c:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8004f7e:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004f80:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004f84:	2340      	movs	r3, #64	; 0x40
 8004f86:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8004f8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004f8c:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004f8e:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8004f90:	6263      	str	r3, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004f92:	4b4c      	ldr	r3, [pc, #304]	; (80050c4 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 8004f94:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004f98:	9300      	str	r3, [sp, #0]
 8004f9a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004f9e:	f7ff fe2f 	bl	8004c00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fa2:	462a      	mov	r2, r5
 8004fa4:	4641      	mov	r1, r8
 8004fa6:	4620      	mov	r0, r4
 8004fa8:	f7ff fec0 	bl	8004d2c <I2C_WaitOnTXISFlagUntilTimeout>
 8004fac:	bb18      	cbnz	r0, 8004ff6 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004fae:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004fb2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004fb4:	d115      	bne.n	8004fe2 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004fb6:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004fb8:	2200      	movs	r2, #0
 8004fba:	2180      	movs	r1, #128	; 0x80
 8004fbc:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004fbe:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004fc0:	4643      	mov	r3, r8
 8004fc2:	9500      	str	r5, [sp, #0]
 8004fc4:	f7ff fedd 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 8004fc8:	b9a8      	cbnz	r0, 8004ff6 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004fca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004fcc:	b29b      	uxth	r3, r3
 8004fce:	2bff      	cmp	r3, #255	; 0xff
 8004fd0:	d815      	bhi.n	8004ffe <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004fd2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004fd4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004fd8:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8004fda:	b292      	uxth	r2, r2
 8004fdc:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004fde:	b2d2      	uxtb	r2, r2
 8004fe0:	e012      	b.n	8005008 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004fe2:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fe4:	4641      	mov	r1, r8
 8004fe6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004fe8:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fea:	462a      	mov	r2, r5
 8004fec:	f7ff fe9e 	bl	8004d2c <I2C_WaitOnTXISFlagUntilTimeout>
 8004ff0:	b908      	cbnz	r0, 8004ff6 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ff2:	6823      	ldr	r3, [r4, #0]
 8004ff4:	e7df      	b.n	8004fb6 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004ff6:	2300      	movs	r3, #0
 8004ff8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004ffc:	e7a1      	b.n	8004f42 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004ffe:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005000:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005004:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005006:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005008:	4639      	mov	r1, r7
 800500a:	4620      	mov	r0, r4
 800500c:	f7ff fdf8 	bl	8004c00 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005010:	462a      	mov	r2, r5
 8005012:	4641      	mov	r1, r8
 8005014:	4620      	mov	r0, r4
 8005016:	f7ff fe89 	bl	8004d2c <I2C_WaitOnTXISFlagUntilTimeout>
 800501a:	2800      	cmp	r0, #0
 800501c:	d191      	bne.n	8004f42 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800501e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005020:	6822      	ldr	r2, [r4, #0]
 8005022:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005026:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005028:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800502a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800502c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800502e:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005030:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005032:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005034:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005036:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005038:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800503a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800503c:	b29b      	uxth	r3, r3
 800503e:	b1b3      	cbz	r3, 800506e <HAL_I2C_Mem_Write+0x15a>
 8005040:	b9aa      	cbnz	r2, 800506e <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005042:	4643      	mov	r3, r8
 8005044:	2180      	movs	r1, #128	; 0x80
 8005046:	4620      	mov	r0, r4
 8005048:	9500      	str	r5, [sp, #0]
 800504a:	f7ff fe9a 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 800504e:	2800      	cmp	r0, #0
 8005050:	f47f af77 	bne.w	8004f42 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005054:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005056:	b29b      	uxth	r3, r3
 8005058:	2bff      	cmp	r3, #255	; 0xff
 800505a:	d928      	bls.n	80050ae <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800505c:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800505e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005062:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005064:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005066:	4639      	mov	r1, r7
 8005068:	4620      	mov	r0, r4
 800506a:	f7ff fdc9 	bl	8004c00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 800506e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005070:	b29b      	uxth	r3, r3
 8005072:	2b00      	cmp	r3, #0
 8005074:	d1cc      	bne.n	8005010 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005076:	462a      	mov	r2, r5
 8005078:	4641      	mov	r1, r8
 800507a:	4620      	mov	r0, r4
 800507c:	f7ff feb4 	bl	8004de8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005080:	2800      	cmp	r0, #0
 8005082:	f47f af5e 	bne.w	8004f42 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005086:	6823      	ldr	r3, [r4, #0]
 8005088:	2120      	movs	r1, #32
 800508a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800508c:	685a      	ldr	r2, [r3, #4]
 800508e:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005092:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005096:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 800509a:	f022 0201 	bic.w	r2, r2, #1
 800509e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80050a0:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80050a4:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80050a8:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 80050ac:	e74a      	b.n	8004f44 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 80050ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050b0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80050b4:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 80050b6:	b292      	uxth	r2, r2
 80050b8:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050ba:	b2d2      	uxtb	r2, r2
 80050bc:	e7d3      	b.n	8005066 <HAL_I2C_Mem_Write+0x152>
    return HAL_BUSY;
 80050be:	2002      	movs	r0, #2
 80050c0:	e740      	b.n	8004f44 <HAL_I2C_Mem_Write+0x30>
 80050c2:	bf00      	nop
 80050c4:	80002000 	.word	0x80002000

080050c8 <HAL_I2C_Mem_Read>:
{
 80050c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050cc:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050ce:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 80050d2:	4604      	mov	r4, r0
 80050d4:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050d6:	2b20      	cmp	r3, #32
{
 80050d8:	4616      	mov	r6, r2
 80050da:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 80050de:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050e2:	f040 80c9 	bne.w	8005278 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 80050e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80050e8:	b113      	cbz	r3, 80050f0 <HAL_I2C_Mem_Read+0x28>
 80050ea:	f1ba 0f00 	cmp.w	sl, #0
 80050ee:	d106      	bne.n	80050fe <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80050f0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80050f4:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80050f6:	2001      	movs	r0, #1
}
 80050f8:	b003      	add	sp, #12
 80050fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80050fe:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005102:	2b01      	cmp	r3, #1
 8005104:	f000 80b8 	beq.w	8005278 <HAL_I2C_Mem_Read+0x1b0>
 8005108:	f04f 0b01 	mov.w	fp, #1
 800510c:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005110:	f7ff f9f8 	bl	8004504 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005114:	2319      	movs	r3, #25
 8005116:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005118:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800511a:	465a      	mov	r2, fp
 800511c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005120:	4620      	mov	r0, r4
 8005122:	f7ff fe2e 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 8005126:	4603      	mov	r3, r0
 8005128:	2800      	cmp	r0, #0
 800512a:	d1e4      	bne.n	80050f6 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800512c:	2222      	movs	r2, #34	; 0x22
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800512e:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005130:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005132:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005136:	2240      	movs	r2, #64	; 0x40
 8005138:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 800513c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800513e:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005140:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005142:	6262      	str	r2, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005144:	4a4d      	ldr	r2, [pc, #308]	; (800527c <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8005146:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800514a:	9200      	str	r2, [sp, #0]
 800514c:	fa5f f289 	uxtb.w	r2, r9
 8005150:	f7ff fd56 	bl	8004c00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005154:	462a      	mov	r2, r5
 8005156:	4641      	mov	r1, r8
 8005158:	4620      	mov	r0, r4
 800515a:	f7ff fde7 	bl	8004d2c <I2C_WaitOnTXISFlagUntilTimeout>
 800515e:	bb20      	cbnz	r0, 80051aa <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005160:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005164:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005166:	d116      	bne.n	8005196 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005168:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800516a:	2200      	movs	r2, #0
 800516c:	2140      	movs	r1, #64	; 0x40
 800516e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005170:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005172:	4643      	mov	r3, r8
 8005174:	9500      	str	r5, [sp, #0]
 8005176:	f7ff fe04 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 800517a:	b9b0      	cbnz	r0, 80051aa <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800517c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800517e:	b29b      	uxth	r3, r3
 8005180:	2bff      	cmp	r3, #255	; 0xff
 8005182:	4b3f      	ldr	r3, [pc, #252]	; (8005280 <HAL_I2C_Mem_Read+0x1b8>)
 8005184:	d815      	bhi.n	80051b2 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005186:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005188:	9300      	str	r3, [sp, #0]
 800518a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 800518e:	b292      	uxth	r2, r2
 8005190:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005192:	b2d2      	uxtb	r2, r2
 8005194:	e012      	b.n	80051bc <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005196:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005198:	4641      	mov	r1, r8
 800519a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800519c:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800519e:	462a      	mov	r2, r5
 80051a0:	f7ff fdc4 	bl	8004d2c <I2C_WaitOnTXISFlagUntilTimeout>
 80051a4:	b908      	cbnz	r0, 80051aa <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80051a6:	6823      	ldr	r3, [r4, #0]
 80051a8:	e7de      	b.n	8005168 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 80051aa:	2300      	movs	r3, #0
 80051ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80051b0:	e7a1      	b.n	80050f6 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80051b2:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80051b4:	9300      	str	r3, [sp, #0]
 80051b6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80051ba:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80051bc:	4639      	mov	r1, r7
 80051be:	4620      	mov	r0, r4
 80051c0:	f7ff fd1e 	bl	8004c00 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80051c4:	4643      	mov	r3, r8
 80051c6:	2200      	movs	r2, #0
 80051c8:	2104      	movs	r1, #4
 80051ca:	4620      	mov	r0, r4
 80051cc:	9500      	str	r5, [sp, #0]
 80051ce:	f7ff fdd8 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 80051d2:	2800      	cmp	r0, #0
 80051d4:	d18f      	bne.n	80050f6 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80051d6:	6823      	ldr	r3, [r4, #0]
 80051d8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80051da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80051dc:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80051de:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 80051e0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 80051e2:	3301      	adds	r3, #1
      hi2c->XferSize--;
 80051e4:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 80051e6:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80051e8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80051ea:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 80051ec:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 80051ee:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80051f0:	b29b      	uxth	r3, r3
 80051f2:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80051f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80051f6:	b29b      	uxth	r3, r3
 80051f8:	b1b3      	cbz	r3, 8005228 <HAL_I2C_Mem_Read+0x160>
 80051fa:	b9aa      	cbnz	r2, 8005228 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80051fc:	4643      	mov	r3, r8
 80051fe:	2180      	movs	r1, #128	; 0x80
 8005200:	4620      	mov	r0, r4
 8005202:	9500      	str	r5, [sp, #0]
 8005204:	f7ff fdbd 	bl	8004d82 <I2C_WaitOnFlagUntilTimeout>
 8005208:	2800      	cmp	r0, #0
 800520a:	f47f af74 	bne.w	80050f6 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800520e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005210:	b29b      	uxth	r3, r3
 8005212:	2bff      	cmp	r3, #255	; 0xff
 8005214:	d928      	bls.n	8005268 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005216:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005218:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800521c:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800521e:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005220:	4639      	mov	r1, r7
 8005222:	4620      	mov	r0, r4
 8005224:	f7ff fcec 	bl	8004c00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005228:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800522a:	b29b      	uxth	r3, r3
 800522c:	2b00      	cmp	r3, #0
 800522e:	d1c9      	bne.n	80051c4 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005230:	462a      	mov	r2, r5
 8005232:	4641      	mov	r1, r8
 8005234:	4620      	mov	r0, r4
 8005236:	f7ff fdd7 	bl	8004de8 <I2C_WaitOnSTOPFlagUntilTimeout>
 800523a:	2800      	cmp	r0, #0
 800523c:	f47f af5b 	bne.w	80050f6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005240:	6823      	ldr	r3, [r4, #0]
 8005242:	2120      	movs	r1, #32
 8005244:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005246:	685a      	ldr	r2, [r3, #4]
 8005248:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 800524c:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005250:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005254:	f022 0201 	bic.w	r2, r2, #1
 8005258:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800525a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800525e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005262:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005266:	e747      	b.n	80050f8 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005268:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800526a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800526e:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005270:	b292      	uxth	r2, r2
 8005272:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005274:	b2d2      	uxtb	r2, r2
 8005276:	e7d3      	b.n	8005220 <HAL_I2C_Mem_Read+0x158>
    return HAL_BUSY;
 8005278:	2002      	movs	r0, #2
 800527a:	e73d      	b.n	80050f8 <HAL_I2C_Mem_Read+0x30>
 800527c:	80002000 	.word	0x80002000
 8005280:	80002400 	.word	0x80002400

08005284 <HAL_I2C_GetState>:
  return hi2c->State;
 8005284:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 8005288:	4770      	bx	lr

0800528a <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 800528a:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 800528c:	4770      	bx	lr

0800528e <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800528e:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005290:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005294:	2b20      	cmp	r3, #32
 8005296:	b2dc      	uxtb	r4, r3
 8005298:	d11d      	bne.n	80052d6 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800529a:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800529e:	2b01      	cmp	r3, #1
 80052a0:	d019      	beq.n	80052d6 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80052a2:	2324      	movs	r3, #36	; 0x24
 80052a4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80052a8:	6803      	ldr	r3, [r0, #0]
 80052aa:	681a      	ldr	r2, [r3, #0]
 80052ac:	f022 0201 	bic.w	r2, r2, #1
 80052b0:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80052b2:	681a      	ldr	r2, [r3, #0]
 80052b4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80052b8:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80052ba:	681a      	ldr	r2, [r3, #0]
 80052bc:	4311      	orrs	r1, r2
 80052be:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80052c0:	681a      	ldr	r2, [r3, #0]
 80052c2:	f042 0201 	orr.w	r2, r2, #1
 80052c6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80052c8:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80052ca:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80052ce:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 80052d2:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 80052d4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80052d6:	2002      	movs	r0, #2
 80052d8:	e7fc      	b.n	80052d4 <HAL_I2CEx_ConfigAnalogFilter+0x46>

080052da <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80052da:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80052dc:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80052e0:	2b20      	cmp	r3, #32
 80052e2:	b2dc      	uxtb	r4, r3
 80052e4:	d11c      	bne.n	8005320 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80052e6:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80052ea:	2b01      	cmp	r3, #1
 80052ec:	d018      	beq.n	8005320 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80052ee:	2324      	movs	r3, #36	; 0x24
 80052f0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80052f4:	6803      	ldr	r3, [r0, #0]
 80052f6:	681a      	ldr	r2, [r3, #0]
 80052f8:	f022 0201 	bic.w	r2, r2, #1
 80052fc:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80052fe:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005300:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005304:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8005308:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800530a:	681a      	ldr	r2, [r3, #0]
 800530c:	f042 0201 	orr.w	r2, r2, #1
 8005310:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005312:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005314:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005318:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 800531c:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 800531e:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005320:	2002      	movs	r0, #2
 8005322:	e7fc      	b.n	800531e <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005324 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005324:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005326:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005328:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800532c:	3284      	adds	r2, #132	; 0x84
 800532e:	1883      	adds	r3, r0, r2
{
 8005330:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005334:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005336:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800533a:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800533c:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005340:	684c      	ldr	r4, [r1, #4]
 8005342:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005346:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800534a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800534e:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005350:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005352:	68c5      	ldr	r5, [r0, #12]
 8005354:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005358:	443d      	add	r5, r7
 800535a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800535e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005360:	68c6      	ldr	r6, [r0, #12]
 8005362:	68cd      	ldr	r5, [r1, #12]
 8005364:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005368:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800536a:	689d      	ldr	r5, [r3, #8]
 800536c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005370:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005372:	688d      	ldr	r5, [r1, #8]
 8005374:	68c7      	ldr	r7, [r0, #12]
 8005376:	3501      	adds	r5, #1
 8005378:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800537c:	443d      	add	r5, r7
 800537e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005382:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005384:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005386:	691d      	ldr	r5, [r3, #16]
 8005388:	f025 0507 	bic.w	r5, r5, #7
 800538c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800538e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005390:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005392:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005396:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800539a:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800539e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80053a2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80053a6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80053aa:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80053ae:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80053b0:	695d      	ldr	r5, [r3, #20]
 80053b2:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80053b6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80053b8:	694d      	ldr	r5, [r1, #20]
 80053ba:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80053bc:	69dd      	ldr	r5, [r3, #28]
 80053be:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80053c2:	f025 0507 	bic.w	r5, r5, #7
 80053c6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80053c8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80053cc:	433d      	orrs	r5, r7
 80053ce:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80053d0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80053d2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80053d4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80053d8:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80053da:	b1fe      	cbz	r6, 800541c <LTDC_SetConfig+0xf8>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80053dc:	3e01      	subs	r6, #1
 80053de:	2e06      	cmp	r6, #6
 80053e0:	d81e      	bhi.n	8005420 <LTDC_SetConfig+0xfc>
 80053e2:	4d10      	ldr	r5, [pc, #64]	; (8005424 <LTDC_SetConfig+0x100>)
 80053e4:	5dad      	ldrb	r5, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80053e6:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80053e8:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80053ec:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80053f0:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80053f2:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80053f4:	3407      	adds	r4, #7
 80053f6:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80053f8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 80053fa:	436e      	muls	r6, r5
 80053fc:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005400:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005402:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005404:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005408:	f024 0407 	bic.w	r4, r4, #7
 800540c:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800540e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005410:	5883      	ldr	r3, [r0, r2]
 8005412:	f043 0301 	orr.w	r3, r3, #1
 8005416:	5083      	str	r3, [r0, r2]
}
 8005418:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800541c:	2504      	movs	r5, #4
 800541e:	e7e2      	b.n	80053e6 <LTDC_SetConfig+0xc2>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005420:	2501      	movs	r5, #1
 8005422:	e7e0      	b.n	80053e6 <LTDC_SetConfig+0xc2>
 8005424:	0801c480 	.word	0x0801c480

08005428 <HAL_LTDC_Init>:
{
 8005428:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800542a:	4604      	mov	r4, r0
 800542c:	2800      	cmp	r0, #0
 800542e:	d063      	beq.n	80054f8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005430:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005434:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005438:	b91b      	cbnz	r3, 8005442 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800543a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800543e:	f7fb fb17 	bl	8000a70 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005442:	2302      	movs	r3, #2
 8005444:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005448:	6823      	ldr	r3, [r4, #0]
 800544a:	699a      	ldr	r2, [r3, #24]
 800544c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005450:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005452:	6999      	ldr	r1, [r3, #24]
 8005454:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005458:	4302      	orrs	r2, r0
 800545a:	68e0      	ldr	r0, [r4, #12]
 800545c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800545e:	6920      	ldr	r0, [r4, #16]
 8005460:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005462:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005464:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005466:	4925      	ldr	r1, [pc, #148]	; (80054fc <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005468:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800546a:	689a      	ldr	r2, [r3, #8]
 800546c:	400a      	ands	r2, r1
 800546e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005470:	689a      	ldr	r2, [r3, #8]
 8005472:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005476:	69a0      	ldr	r0, [r4, #24]
 8005478:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800547a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800547c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800547e:	68da      	ldr	r2, [r3, #12]
 8005480:	400a      	ands	r2, r1
 8005482:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005484:	68da      	ldr	r2, [r3, #12]
 8005486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800548a:	6a20      	ldr	r0, [r4, #32]
 800548c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800548e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005490:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005492:	691a      	ldr	r2, [r3, #16]
 8005494:	400a      	ands	r2, r1
 8005496:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005498:	691a      	ldr	r2, [r3, #16]
 800549a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800549e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80054a0:	4302      	orrs	r2, r0
 80054a2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80054a4:	695a      	ldr	r2, [r3, #20]
 80054a6:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 80054a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80054aa:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80054ac:	695a      	ldr	r2, [r3, #20]
 80054ae:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80054b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80054b4:	430a      	orrs	r2, r1
 80054b6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80054b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80054ba:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80054be:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80054c2:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80054c6:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80054c8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80054ca:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80054ce:	432a      	orrs	r2, r5
 80054d0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80054d4:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80054d6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80054da:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80054dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054de:	f042 0206 	orr.w	r2, r2, #6
 80054e2:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80054e4:	699a      	ldr	r2, [r3, #24]
 80054e6:	f042 0201 	orr.w	r2, r2, #1
 80054ea:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80054ec:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80054ee:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80054f2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80054f6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80054f8:	2001      	movs	r0, #1
 80054fa:	e7fc      	b.n	80054f6 <HAL_LTDC_Init+0xce>
 80054fc:	f000f800 	.word	0xf000f800

08005500 <HAL_LTDC_ErrorCallback>:
 8005500:	4770      	bx	lr

08005502 <HAL_LTDC_ReloadEventCallback>:
 8005502:	4770      	bx	lr

08005504 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005504:	6803      	ldr	r3, [r0, #0]
{
 8005506:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005508:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 800550a:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800550c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800550e:	0772      	lsls	r2, r6, #29
 8005510:	d514      	bpl.n	800553c <HAL_LTDC_IRQHandler+0x38>
 8005512:	0769      	lsls	r1, r5, #29
 8005514:	d512      	bpl.n	800553c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005516:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005518:	f022 0204 	bic.w	r2, r2, #4
 800551c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800551e:	2204      	movs	r2, #4
 8005520:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005522:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005526:	f043 0301 	orr.w	r3, r3, #1
 800552a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800552e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005530:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005534:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005538:	f7ff ffe2 	bl	8005500 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800553c:	07b2      	lsls	r2, r6, #30
 800553e:	d516      	bpl.n	800556e <HAL_LTDC_IRQHandler+0x6a>
 8005540:	07ab      	lsls	r3, r5, #30
 8005542:	d514      	bpl.n	800556e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005544:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005546:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005548:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800554a:	f022 0202 	bic.w	r2, r2, #2
 800554e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005550:	2202      	movs	r2, #2
 8005552:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005554:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005558:	4313      	orrs	r3, r2
 800555a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800555e:	2304      	movs	r3, #4
 8005560:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005564:	2300      	movs	r3, #0
 8005566:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800556a:	f7ff ffc9 	bl	8005500 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800556e:	07f0      	lsls	r0, r6, #31
 8005570:	d510      	bpl.n	8005594 <HAL_LTDC_IRQHandler+0x90>
 8005572:	07e9      	lsls	r1, r5, #31
 8005574:	d50e      	bpl.n	8005594 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005576:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005578:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800557a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800557c:	f022 0201 	bic.w	r2, r2, #1
 8005580:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005582:	2201      	movs	r2, #1
 8005584:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005586:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005588:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800558c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005590:	f7fc fc92 	bl	8001eb8 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005594:	0732      	lsls	r2, r6, #28
 8005596:	d511      	bpl.n	80055bc <HAL_LTDC_IRQHandler+0xb8>
 8005598:	072b      	lsls	r3, r5, #28
 800559a:	d50f      	bpl.n	80055bc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800559c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 800559e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80055a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80055a2:	f022 0208 	bic.w	r2, r2, #8
 80055a6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80055a8:	2208      	movs	r2, #8
 80055aa:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80055ac:	2301      	movs	r3, #1
 80055ae:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80055b2:	2300      	movs	r3, #0
 80055b4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80055b8:	f7ff ffa3 	bl	8005502 <HAL_LTDC_ReloadEventCallback>
}
 80055bc:	bd70      	pop	{r4, r5, r6, pc}

080055be <HAL_LTDC_ConfigLayer>:
{
 80055be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80055c2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 80055c6:	4606      	mov	r6, r0
 80055c8:	460f      	mov	r7, r1
 80055ca:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 80055cc:	2b01      	cmp	r3, #1
 80055ce:	f04f 0002 	mov.w	r0, #2
 80055d2:	d01f      	beq.n	8005614 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80055d4:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 80055d6:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80055da:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80055dc:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80055e0:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 80055e4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80055e8:	3438      	adds	r4, #56	; 0x38
 80055ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055f4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055f6:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80055f8:	4630      	mov	r0, r6
 80055fa:	4662      	mov	r2, ip
 80055fc:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80055fe:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005600:	f7ff fe90 	bl	8005324 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005604:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005606:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005608:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800560c:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005610:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005618 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005618:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800561c:	2b01      	cmp	r3, #1
 800561e:	f04f 0302 	mov.w	r3, #2
 8005622:	d012      	beq.n	800564a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005624:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005628:	6803      	ldr	r3, [r0, #0]
 800562a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800562c:	f022 0201 	bic.w	r2, r2, #1
 8005630:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005632:	4a07      	ldr	r2, [pc, #28]	; (8005650 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005634:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005636:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005638:	f042 0201 	orr.w	r2, r2, #1
 800563c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800563e:	2301      	movs	r3, #1
 8005640:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005644:	2300      	movs	r3, #0
 8005646:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800564a:	4618      	mov	r0, r3
}
 800564c:	4770      	bx	lr
 800564e:	bf00      	nop
 8005650:	50001000 	.word	0x50001000

08005654 <HAL_MDMA_Abort>:
  *        and the Channel will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
{
 8005654:	b538      	push	{r3, r4, r5, lr}
 8005656:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8005658:	f7fe ff54 	bl	8004504 <HAL_GetTick>
 800565c:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 800565e:	b144      	cbz	r4, 8005672 <HAL_MDMA_Abort+0x1e>
  {
    return HAL_ERROR;
  }

  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8005660:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005664:	2b02      	cmp	r3, #2
 8005666:	d006      	beq.n	8005676 <HAL_MDMA_Abort+0x22>
  {
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8005668:	2380      	movs	r3, #128	; 0x80
 800566a:	66a3      	str	r3, [r4, #104]	; 0x68

    /* Process Unlocked */
    __HAL_UNLOCK(hmdma);
 800566c:	2300      	movs	r3, #0
 800566e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_ERROR;
 8005672:	2001      	movs	r0, #1
 8005674:	e015      	b.n	80056a2 <HAL_MDMA_Abort+0x4e>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 8005676:	6823      	ldr	r3, [r4, #0]
 8005678:	68da      	ldr	r2, [r3, #12]
 800567a:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
 800567e:	60da      	str	r2, [r3, #12]

    /* Disable the channel */
    __HAL_MDMA_DISABLE(hmdma);
 8005680:	68da      	ldr	r2, [r3, #12]
 8005682:	f022 0201 	bic.w	r2, r2, #1
 8005686:	60da      	str	r2, [r3, #12]

    /* Check if the MDMA Channel is effectively disabled */
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005688:	6822      	ldr	r2, [r4, #0]
 800568a:	68d3      	ldr	r3, [r2, #12]
 800568c:	f013 0301 	ands.w	r3, r3, #1
 8005690:	d108      	bne.n	80056a4 <HAL_MDMA_Abort+0x50>
        return HAL_ERROR;
      }
    }

    /* Clear all interrupt flags */
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005692:	211f      	movs	r1, #31

    /* Change the MDMA state*/
    hmdma->State = HAL_MDMA_STATE_READY;
  }

  return HAL_OK;
 8005694:	4618      	mov	r0, r3
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005696:	6051      	str	r1, [r2, #4]
    hmdma->State = HAL_MDMA_STATE_READY;
 8005698:	2201      	movs	r2, #1
    __HAL_UNLOCK(hmdma);
 800569a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
 800569e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
}
 80056a2:	bd38      	pop	{r3, r4, r5, pc}
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 80056a4:	f7fe ff2e 	bl	8004504 <HAL_GetTick>
 80056a8:	1b40      	subs	r0, r0, r5
 80056aa:	2805      	cmp	r0, #5
 80056ac:	d9ec      	bls.n	8005688 <HAL_MDMA_Abort+0x34>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 80056ae:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80056b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056b4:	66a3      	str	r3, [r4, #104]	; 0x68
        __HAL_UNLOCK(hmdma);
 80056b6:	2300      	movs	r3, #0
 80056b8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_ERROR;
 80056bc:	2303      	movs	r3, #3
 80056be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        return HAL_ERROR;
 80056c2:	e7d6      	b.n	8005672 <HAL_MDMA_Abort+0x1e>

080056c4 <OSPI_ConfigCmd>:
  * @param  hospi : OSPI handle
  * @param  cmd   : structure that contains the command configuration information
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_ConfigCmd(OSPI_HandleTypeDef *hospi, OSPI_RegularCmdTypeDef *cmd)
{
 80056c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 80056c8:	6804      	ldr	r4, [r0, #0]
 80056ca:	6823      	ldr	r3, [r4, #0]
 80056cc:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80056d0:	6023      	str	r3, [r4, #0]

  /* Configure the flash ID */
  if (hospi->Init.DualQuad == HAL_OSPI_DUALQUAD_DISABLE)
 80056d2:	6883      	ldr	r3, [r0, #8]
 80056d4:	b92b      	cbnz	r3, 80056e2 <OSPI_ConfigCmd+0x1e>
  {
    MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FSEL, cmd->FlashId);
 80056d6:	6823      	ldr	r3, [r4, #0]
 80056d8:	684a      	ldr	r2, [r1, #4]
 80056da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80056de:	4313      	orrs	r3, r2
 80056e0:	6023      	str	r3, [r4, #0]
  }

  if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 80056e2:	680b      	ldr	r3, [r1, #0]
 80056e4:	2b02      	cmp	r3, #2
 80056e6:	d150      	bne.n	800578a <OSPI_ConfigCmd+0xc6>
  {
    ccr_reg = &(hospi->Instance->WCCR);
 80056e8:	f504 72c0 	add.w	r2, r4, #384	; 0x180
    tcr_reg = &(hospi->Instance->WTCR);
 80056ec:	f504 76c4 	add.w	r6, r4, #392	; 0x188
    ir_reg  = &(hospi->Instance->WIR);
 80056f0:	f504 75c8 	add.w	r5, r4, #400	; 0x190
    abr_reg = &(hospi->Instance->WABR);
 80056f4:	f504 7cd0 	add.w	ip, r4, #416	; 0x1a0
    ir_reg  = &(hospi->Instance->IR);
    abr_reg = &(hospi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (cmd->DQSMode | cmd->SIOOMode);
 80056f8:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	; 0x48
 80056fc:	433b      	orrs	r3, r7
 80056fe:	6013      	str	r3, [r2, #0]

  if (cmd->AlternateBytesMode != HAL_OSPI_ALTERNATE_BYTES_NONE)
 8005700:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005702:	b16b      	cbz	r3, 8005720 <OSPI_ConfigCmd+0x5c>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = cmd->AlternateBytes;
 8005704:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8005706:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ABMODE | OCTOSPI_CCR_ABDTR | OCTOSPI_CCR_ABSIZE),
 800570a:	6b4f      	ldr	r7, [r1, #52]	; 0x34
 800570c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800570e:	f8d2 c000 	ldr.w	ip, [r2]
 8005712:	433b      	orrs	r3, r7
 8005714:	6b0f      	ldr	r7, [r1, #48]	; 0x30
 8005716:	433b      	orrs	r3, r7
 8005718:	f42c 177c 	bic.w	r7, ip, #4128768	; 0x3f0000
 800571c:	433b      	orrs	r3, r7
 800571e:	6013      	str	r3, [r2, #0]
                           (cmd->AlternateBytesMode | cmd->AlternateBytesDtrMode | cmd->AlternateBytesSize));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), OCTOSPI_TCR_DCYC, cmd->DummyCycles);
 8005720:	6833      	ldr	r3, [r6, #0]
 8005722:	6c4f      	ldr	r7, [r1, #68]	; 0x44
 8005724:	f023 031f 	bic.w	r3, r3, #31
 8005728:	433b      	orrs	r3, r7
 800572a:	6033      	str	r3, [r6, #0]

  if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 800572c:	f8d1 e038 	ldr.w	lr, [r1, #56]	; 0x38
 8005730:	f1be 0f00 	cmp.w	lr, #0
 8005734:	d004      	beq.n	8005740 <OSPI_ConfigCmd+0x7c>
  {
    if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005736:	680b      	ldr	r3, [r1, #0]
 8005738:	b913      	cbnz	r3, 8005740 <OSPI_ConfigCmd+0x7c>
    {
      /* Configure the DLR register with the number of data */
      hospi->Instance->DLR = (cmd->NbData - 1U);
 800573a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 800573c:	3b01      	subs	r3, #1
 800573e:	6423      	str	r3, [r4, #64]	; 0x40
    }
  }

  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005740:	68cb      	ldr	r3, [r1, #12]
  {
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005742:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005746:	2b00      	cmp	r3, #0
 8005748:	d07a      	beq.n	8005840 <OSPI_ConfigCmd+0x17c>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800574a:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 800574e:	f1b9 0f00 	cmp.w	r9, #0
 8005752:	d04a      	beq.n	80057ea <OSPI_ConfigCmd+0x126>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005754:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005758:	f1be 0f00 	cmp.w	lr, #0
 800575c:	d029      	beq.n	80057b2 <OSPI_ConfigCmd+0xee>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800575e:	ea4e 0303 	orr.w	r3, lr, r3
 8005762:	6810      	ldr	r0, [r2, #0]
 8005764:	ea43 0309 	orr.w	r3, r3, r9
 8005768:	ea43 0308 	orr.w	r3, r3, r8
 800576c:	ea43 030c 	orr.w	r3, r3, ip
 8005770:	433b      	orrs	r3, r7
 8005772:	4333      	orrs	r3, r6
 8005774:	6c0e      	ldr	r6, [r1, #64]	; 0x40
 8005776:	4333      	orrs	r3, r6
 8005778:	4e43      	ldr	r6, [pc, #268]	; (8005888 <OSPI_ConfigCmd+0x1c4>)
 800577a:	4006      	ands	r6, r0
 800577c:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
            (cmd->InstructionDtrMode == HAL_OSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 800577e:	6013      	str	r3, [r2, #0]
        }
      }

      /* Configure the IR register with the instruction value */
      *ir_reg = cmd->Instruction;
 8005780:	688b      	ldr	r3, [r1, #8]
 8005782:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
                               (cmd->AddressMode | cmd->AddressDtrMode | cmd->AddressSize));
      }

      /* Configure the AR register with the instruction value */
      hospi->Instance->AR = cmd->Address;
 8005784:	698b      	ldr	r3, [r1, #24]
 8005786:	64a3      	str	r3, [r4, #72]	; 0x48
 8005788:	e043      	b.n	8005812 <OSPI_ConfigCmd+0x14e>
  else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG)
 800578a:	2b03      	cmp	r3, #3
    ccr_reg = &(hospi->Instance->WPCCR);
 800578c:	bf01      	itttt	eq
 800578e:	f504 72a0 	addeq.w	r2, r4, #320	; 0x140
    tcr_reg = &(hospi->Instance->WPTCR);
 8005792:	f504 76a4 	addeq.w	r6, r4, #328	; 0x148
    ir_reg  = &(hospi->Instance->WPIR);
 8005796:	f504 75a8 	addeq.w	r5, r4, #336	; 0x150
    abr_reg = &(hospi->Instance->WPABR);
 800579a:	f504 7cb0 	addeq.w	ip, r4, #352	; 0x160
    ccr_reg = &(hospi->Instance->CCR);
 800579e:	bf1f      	itttt	ne
 80057a0:	f504 7280 	addne.w	r2, r4, #256	; 0x100
    tcr_reg = &(hospi->Instance->TCR);
 80057a4:	f504 7684 	addne.w	r6, r4, #264	; 0x108
    ir_reg  = &(hospi->Instance->IR);
 80057a8:	f504 7588 	addne.w	r5, r4, #272	; 0x110
    abr_reg = &(hospi->Instance->ABR);
 80057ac:	f504 7c90 	addne.w	ip, r4, #288	; 0x120
 80057b0:	e7a2      	b.n	80056f8 <OSPI_ConfigCmd+0x34>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 80057b2:	ea43 0309 	orr.w	r3, r3, r9
 80057b6:	f8d2 e000 	ldr.w	lr, [r2]
 80057ba:	ea43 0308 	orr.w	r3, r3, r8
 80057be:	f42e 5e7c 	bic.w	lr, lr, #16128	; 0x3f00
 80057c2:	ea43 030c 	orr.w	r3, r3, ip
 80057c6:	f02e 0e3f 	bic.w	lr, lr, #63	; 0x3f
 80057ca:	433b      	orrs	r3, r7
 80057cc:	4333      	orrs	r3, r6
 80057ce:	ea43 030e 	orr.w	r3, r3, lr
 80057d2:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 80057d4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80057d6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80057da:	d1d1      	bne.n	8005780 <OSPI_ConfigCmd+0xbc>
 80057dc:	694b      	ldr	r3, [r1, #20]
 80057de:	2b08      	cmp	r3, #8
 80057e0:	d1ce      	bne.n	8005780 <OSPI_ConfigCmd+0xbc>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 80057e2:	6813      	ldr	r3, [r2, #0]
 80057e4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80057e8:	e7c9      	b.n	800577e <OSPI_ConfigCmd+0xba>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 80057ea:	f1be 0f00 	cmp.w	lr, #0
 80057ee:	d013      	beq.n	8005818 <OSPI_ConfigCmd+0x154>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE |
 80057f0:	ea4e 0303 	orr.w	r3, lr, r3
 80057f4:	6810      	ldr	r0, [r2, #0]
 80057f6:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 80057f8:	ea43 0308 	orr.w	r3, r3, r8
 80057fc:	f020 6070 	bic.w	r0, r0, #251658240	; 0xf000000
 8005800:	ea43 030c 	orr.w	r3, r3, ip
 8005804:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 8005808:	4323      	orrs	r3, r4
 800580a:	4303      	orrs	r3, r0
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 800580c:	6013      	str	r3, [r2, #0]
      *ir_reg = cmd->Instruction;
 800580e:	688b      	ldr	r3, [r1, #8]
 8005810:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8005812:	2000      	movs	r0, #0
    }
  }

  /* Return function status */
  return status;
}
 8005814:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE),
 8005818:	6814      	ldr	r4, [r2, #0]
 800581a:	ea43 0308 	orr.w	r3, r3, r8
 800581e:	f024 043f 	bic.w	r4, r4, #63	; 0x3f
 8005822:	ea43 030c 	orr.w	r3, r3, ip
 8005826:	4323      	orrs	r3, r4
 8005828:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 800582a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800582c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005830:	d1ed      	bne.n	800580e <OSPI_ConfigCmd+0x14a>
 8005832:	694b      	ldr	r3, [r1, #20]
 8005834:	2b08      	cmp	r3, #8
 8005836:	d1ea      	bne.n	800580e <OSPI_ConfigCmd+0x14a>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8005838:	6813      	ldr	r3, [r2, #0]
 800583a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800583e:	e7e5      	b.n	800580c <OSPI_ConfigCmd+0x148>
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005840:	f1b9 0f00 	cmp.w	r9, #0
 8005844:	d01b      	beq.n	800587e <OSPI_ConfigCmd+0x1ba>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005846:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 800584a:	f1be 0f00 	cmp.w	lr, #0
 800584e:	d00d      	beq.n	800586c <OSPI_ConfigCmd+0x1a8>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE |
 8005850:	ea4e 0309 	orr.w	r3, lr, r9
 8005854:	6815      	ldr	r5, [r2, #0]
 8005856:	4303      	orrs	r3, r0
 8005858:	6c08      	ldr	r0, [r1, #64]	; 0x40
 800585a:	4333      	orrs	r3, r6
 800585c:	4303      	orrs	r3, r0
 800585e:	f025 6070 	bic.w	r0, r5, #251658240	; 0xf000000
 8005862:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8005866:	4303      	orrs	r3, r0
 8005868:	6013      	str	r3, [r2, #0]
 800586a:	e78b      	b.n	8005784 <OSPI_ConfigCmd+0xc0>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
 800586c:	6813      	ldr	r3, [r2, #0]
 800586e:	ea40 0009 	orr.w	r0, r0, r9
 8005872:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8005876:	4330      	orrs	r0, r6
 8005878:	4318      	orrs	r0, r3
 800587a:	6010      	str	r0, [r2, #0]
 800587c:	e782      	b.n	8005784 <OSPI_ConfigCmd+0xc0>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 800587e:	2308      	movs	r3, #8
 8005880:	6543      	str	r3, [r0, #84]	; 0x54
      status = HAL_ERROR;
 8005882:	2001      	movs	r0, #1
 8005884:	e7c6      	b.n	8005814 <OSPI_ConfigCmd+0x150>
 8005886:	bf00      	nop
 8005888:	f0ffc0c0 	.word	0xf0ffc0c0

0800588c <OSPI_WaitFlagStateUntilTimeout>:
{
 800588c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005890:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005894:	4604      	mov	r4, r0
 8005896:	460e      	mov	r6, r1
 8005898:	4615      	mov	r5, r2
 800589a:	461f      	mov	r7, r3
  while((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 800589c:	6822      	ldr	r2, [r4, #0]
 800589e:	6a13      	ldr	r3, [r2, #32]
 80058a0:	4233      	tst	r3, r6
 80058a2:	bf14      	ite	ne
 80058a4:	2301      	movne	r3, #1
 80058a6:	2300      	moveq	r3, #0
 80058a8:	42ab      	cmp	r3, r5
 80058aa:	d101      	bne.n	80058b0 <OSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80058ac:	2000      	movs	r0, #0
 80058ae:	e012      	b.n	80058d6 <OSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80058b0:	f1b8 3fff 	cmp.w	r8, #4294967295
 80058b4:	d0f3      	beq.n	800589e <OSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80058b6:	f7fe fe25 	bl	8004504 <HAL_GetTick>
 80058ba:	1bc0      	subs	r0, r0, r7
 80058bc:	4540      	cmp	r0, r8
 80058be:	d802      	bhi.n	80058c6 <OSPI_WaitFlagStateUntilTimeout+0x3a>
 80058c0:	f1b8 0f00 	cmp.w	r8, #0
 80058c4:	d1ea      	bne.n	800589c <OSPI_WaitFlagStateUntilTimeout+0x10>
        hospi->State     = HAL_OSPI_STATE_ERROR;
 80058c6:	f44f 7300 	mov.w	r3, #512	; 0x200
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 80058ca:	2001      	movs	r0, #1
        hospi->State     = HAL_OSPI_STATE_ERROR;
 80058cc:	6523      	str	r3, [r4, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 80058ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80058d0:	f043 0301 	orr.w	r3, r3, #1
 80058d4:	6563      	str	r3, [r4, #84]	; 0x54
}
 80058d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080058dc <HAL_OSPI_Init>:
{
 80058dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058de:	4604      	mov	r4, r0
 80058e0:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 80058e2:	f7fe fe0f 	bl	8004504 <HAL_GetTick>
 80058e6:	4603      	mov	r3, r0
  if (hospi == NULL)
 80058e8:	2c00      	cmp	r4, #0
 80058ea:	d067      	beq.n	80059bc <HAL_OSPI_Init+0xe0>
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 80058ec:	2000      	movs	r0, #0
 80058ee:	6560      	str	r0, [r4, #84]	; 0x54
    if (hospi->State == HAL_OSPI_STATE_RESET)
 80058f0:	6d26      	ldr	r6, [r4, #80]	; 0x50
 80058f2:	2e00      	cmp	r6, #0
 80058f4:	d160      	bne.n	80059b8 <HAL_OSPI_Init+0xdc>
      HAL_OSPI_MspInit(hospi);
 80058f6:	4620      	mov	r0, r4
 80058f8:	9303      	str	r3, [sp, #12]
 80058fa:	f7fb f9c9 	bl	8000c90 <HAL_OSPI_MspInit>
      MODIFY_REG(hospi->Instance->DCR1,
 80058fe:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005900:	68e1      	ldr	r1, [r4, #12]
  hospi->Timeout = Timeout;
 8005902:	f241 3288 	movw	r2, #5000	; 0x1388
      MODIFY_REG(hospi->Instance->DCR1,
 8005906:	6825      	ldr	r5, [r4, #0]
 8005908:	4301      	orrs	r1, r0
 800590a:	69e0      	ldr	r0, [r4, #28]
 800590c:	68af      	ldr	r7, [r5, #8]
 800590e:	4301      	orrs	r1, r0
 8005910:	482b      	ldr	r0, [pc, #172]	; (80059c0 <HAL_OSPI_Init+0xe4>)
  hospi->Timeout = Timeout;
 8005912:	65a2      	str	r2, [r4, #88]	; 0x58
      MODIFY_REG(hospi->Instance->DCR1,
 8005914:	4038      	ands	r0, r7
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005916:	9b03      	ldr	r3, [sp, #12]
      MODIFY_REG(hospi->Instance->DCR1,
 8005918:	4301      	orrs	r1, r0
 800591a:	6920      	ldr	r0, [r4, #16]
 800591c:	3801      	subs	r0, #1
 800591e:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8005922:	6960      	ldr	r0, [r4, #20]
 8005924:	3801      	subs	r0, #1
 8005926:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 800592a:	6a20      	ldr	r0, [r4, #32]
      MODIFY_REG(hospi->Instance->DCR1,
 800592c:	60a9      	str	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 800592e:	68e9      	ldr	r1, [r5, #12]
 8005930:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8005934:	4301      	orrs	r1, r0
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005936:	6b20      	ldr	r0, [r4, #48]	; 0x30
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8005938:	60e9      	str	r1, [r5, #12]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 800593a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800593c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005940:	6860      	ldr	r0, [r4, #4]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005942:	6129      	str	r1, [r5, #16]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005944:	3801      	subs	r0, #1
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8005946:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8005948:	6169      	str	r1, [r5, #20]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 800594a:	6829      	ldr	r1, [r5, #0]
 800594c:	f421 51f8 	bic.w	r1, r1, #7936	; 0x1f00
 8005950:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005954:	4620      	mov	r0, r4
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8005956:	6029      	str	r1, [r5, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005958:	2120      	movs	r1, #32
 800595a:	9200      	str	r2, [sp, #0]
 800595c:	4632      	mov	r2, r6
 800595e:	f7ff ff95 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005962:	bb48      	cbnz	r0, 80059b8 <HAL_OSPI_Init+0xdc>
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8005964:	6823      	ldr	r3, [r4, #0]
 8005966:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005968:	68d9      	ldr	r1, [r3, #12]
 800596a:	3a01      	subs	r2, #1
 800596c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005970:	430a      	orrs	r2, r1
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 8005972:	68a1      	ldr	r1, [r4, #8]
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8005974:	60da      	str	r2, [r3, #12]
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 8005976:	681a      	ldr	r2, [r3, #0]
 8005978:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800597c:	430a      	orrs	r2, r1
 800597e:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 8005980:	f8d3 1108 	ldr.w	r1, [r3, #264]	; 0x108
 8005984:	e9d4 250a 	ldrd	r2, r5, [r4, #40]	; 0x28
 8005988:	f021 41a0 	bic.w	r1, r1, #1342177280	; 0x50000000
 800598c:	432a      	orrs	r2, r5
 800598e:	430a      	orrs	r2, r1
 8005990:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
        __HAL_OSPI_ENABLE(hospi);
 8005994:	681a      	ldr	r2, [r3, #0]
 8005996:	f042 0201 	orr.w	r2, r2, #1
 800599a:	601a      	str	r2, [r3, #0]
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 800599c:	69a2      	ldr	r2, [r4, #24]
 800599e:	2a02      	cmp	r2, #2
 80059a0:	d103      	bne.n	80059aa <HAL_OSPI_Init+0xce>
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80059a2:	689a      	ldr	r2, [r3, #8]
 80059a4:	f042 0202 	orr.w	r2, r2, #2
 80059a8:	609a      	str	r2, [r3, #8]
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80059aa:	68e3      	ldr	r3, [r4, #12]
 80059ac:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 80059b0:	bf0c      	ite	eq
 80059b2:	2301      	moveq	r3, #1
          hospi->State = HAL_OSPI_STATE_READY;
 80059b4:	2302      	movne	r3, #2
 80059b6:	6523      	str	r3, [r4, #80]	; 0x50
}
 80059b8:	b005      	add	sp, #20
 80059ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_ERROR;
 80059bc:	2001      	movs	r0, #1
 80059be:	e7fb      	b.n	80059b8 <HAL_OSPI_Init+0xdc>
 80059c0:	f8e0f8f4 	.word	0xf8e0f8f4

080059c4 <HAL_OSPI_DeInit>:
{
 80059c4:	b510      	push	{r4, lr}
  if (hospi == NULL)
 80059c6:	4604      	mov	r4, r0
 80059c8:	b168      	cbz	r0, 80059e6 <HAL_OSPI_DeInit+0x22>
     __HAL_OSPI_DISABLE(hospi);
 80059ca:	6803      	ldr	r3, [r0, #0]
 80059cc:	681a      	ldr	r2, [r3, #0]
 80059ce:	f022 0201 	bic.w	r2, r2, #1
 80059d2:	601a      	str	r2, [r3, #0]
     CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80059d4:	689a      	ldr	r2, [r3, #8]
 80059d6:	f022 0202 	bic.w	r2, r2, #2
 80059da:	609a      	str	r2, [r3, #8]
     HAL_OSPI_MspDeInit(hospi);
 80059dc:	f7fb fa86 	bl	8000eec <HAL_OSPI_MspDeInit>
     hospi->State = HAL_OSPI_STATE_RESET;
 80059e0:	2000      	movs	r0, #0
 80059e2:	6520      	str	r0, [r4, #80]	; 0x50
}
 80059e4:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 80059e6:	2001      	movs	r0, #1
 80059e8:	e7fc      	b.n	80059e4 <HAL_OSPI_DeInit+0x20>

080059ea <HAL_OSPI_Command>:
{
 80059ea:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80059ec:	4604      	mov	r4, r0
 80059ee:	4616      	mov	r6, r2
 80059f0:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 80059f2:	f7fe fd87 	bl	8004504 <HAL_GetTick>
  state = hospi->State;
 80059f6:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 80059f8:	4603      	mov	r3, r0
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 80059fa:	2a02      	cmp	r2, #2
 80059fc:	d107      	bne.n	8005a0e <HAL_OSPI_Command+0x24>
 80059fe:	68e2      	ldr	r2, [r4, #12]
 8005a00:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 8005a04:	d109      	bne.n	8005a1a <HAL_OSPI_Command+0x30>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005a06:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005a08:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005a0a:	6563      	str	r3, [r4, #84]	; 0x54
 8005a0c:	e01f      	b.n	8005a4e <HAL_OSPI_Command+0x64>
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 8005a0e:	2a14      	cmp	r2, #20
 8005a10:	d11f      	bne.n	8005a52 <HAL_OSPI_Command+0x68>
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 8005a12:	682a      	ldr	r2, [r5, #0]
 8005a14:	3a02      	subs	r2, #2
      ((state == HAL_OSPI_STATE_READ_CMD_CFG)  && ((cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005a16:	2a01      	cmp	r2, #1
 8005a18:	d8f5      	bhi.n	8005a06 <HAL_OSPI_Command+0x1c>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005a1a:	2200      	movs	r2, #0
 8005a1c:	2120      	movs	r1, #32
 8005a1e:	4620      	mov	r0, r4
 8005a20:	9600      	str	r6, [sp, #0]
 8005a22:	9303      	str	r3, [sp, #12]
 8005a24:	f7ff ff32 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005a28:	b988      	cbnz	r0, 8005a4e <HAL_OSPI_Command+0x64>
      hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005a2a:	6560      	str	r0, [r4, #84]	; 0x54
      status = OSPI_ConfigCmd(hospi, cmd);
 8005a2c:	4629      	mov	r1, r5
 8005a2e:	4620      	mov	r0, r4
 8005a30:	f7ff fe48 	bl	80056c4 <OSPI_ConfigCmd>
      if (status == HAL_OK)
 8005a34:	b958      	cbnz	r0, 8005a4e <HAL_OSPI_Command+0x64>
        if (cmd->DataMode == HAL_OSPI_DATA_NONE)
 8005a36:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8005a38:	9b03      	ldr	r3, [sp, #12]
 8005a3a:	b992      	cbnz	r2, 8005a62 <HAL_OSPI_Command+0x78>
          status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005a3c:	2201      	movs	r2, #1
 8005a3e:	2102      	movs	r1, #2
 8005a40:	4620      	mov	r0, r4
 8005a42:	9600      	str	r6, [sp, #0]
 8005a44:	f7ff ff22 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005a48:	6823      	ldr	r3, [r4, #0]
 8005a4a:	2202      	movs	r2, #2
 8005a4c:	625a      	str	r2, [r3, #36]	; 0x24
}
 8005a4e:	b004      	add	sp, #16
 8005a50:	bd70      	pop	{r4, r5, r6, pc}
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 8005a52:	2a24      	cmp	r2, #36	; 0x24
 8005a54:	d1d7      	bne.n	8005a06 <HAL_OSPI_Command+0x1c>
      ((state == HAL_OSPI_STATE_WRITE_CMD_CFG) && ((cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)  ||
 8005a56:	682a      	ldr	r2, [r5, #0]
 8005a58:	f022 0202 	bic.w	r2, r2, #2
 8005a5c:	2a01      	cmp	r2, #1
 8005a5e:	d1d2      	bne.n	8005a06 <HAL_OSPI_Command+0x1c>
 8005a60:	e7db      	b.n	8005a1a <HAL_OSPI_Command+0x30>
          if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005a62:	682b      	ldr	r3, [r5, #0]
 8005a64:	b90b      	cbnz	r3, 8005a6a <HAL_OSPI_Command+0x80>
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005a66:	2304      	movs	r3, #4
 8005a68:	e005      	b.n	8005a76 <HAL_OSPI_Command+0x8c>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)
 8005a6a:	2b01      	cmp	r3, #1
 8005a6c:	d105      	bne.n	8005a7a <HAL_OSPI_Command+0x90>
            if (hospi->State == HAL_OSPI_STATE_WRITE_CMD_CFG)
 8005a6e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8005a70:	2b24      	cmp	r3, #36	; 0x24
 8005a72:	d0f8      	beq.n	8005a66 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_READ_CMD_CFG;
 8005a74:	2314      	movs	r3, #20
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005a76:	6523      	str	r3, [r4, #80]	; 0x50
 8005a78:	e7e9      	b.n	8005a4e <HAL_OSPI_Command+0x64>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005a7a:	2b02      	cmp	r3, #2
 8005a7c:	d1e7      	bne.n	8005a4e <HAL_OSPI_Command+0x64>
            if (hospi->State == HAL_OSPI_STATE_READ_CMD_CFG)
 8005a7e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8005a80:	2b14      	cmp	r3, #20
 8005a82:	d0f0      	beq.n	8005a66 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_WRITE_CMD_CFG;
 8005a84:	2324      	movs	r3, #36	; 0x24
 8005a86:	e7f6      	b.n	8005a76 <HAL_OSPI_Command+0x8c>

08005a88 <HAL_OSPI_HyperbusCfg>:
{
 8005a88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005a8a:	4604      	mov	r4, r0
 8005a8c:	4616      	mov	r6, r2
 8005a8e:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005a90:	f7fe fd38 	bl	8004504 <HAL_GetTick>
  state = hospi->State;
 8005a94:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 8005a96:	4603      	mov	r3, r0
  if ((state == HAL_OSPI_STATE_HYPERBUS_INIT) || (state == HAL_OSPI_STATE_READY))
 8005a98:	3a01      	subs	r2, #1
 8005a9a:	2a01      	cmp	r2, #1
 8005a9c:	d816      	bhi.n	8005acc <HAL_OSPI_HyperbusCfg+0x44>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	2120      	movs	r1, #32
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	9600      	str	r6, [sp, #0]
 8005aa6:	f7ff fef1 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005aaa:	b968      	cbnz	r0, 8005ac8 <HAL_OSPI_HyperbusCfg+0x40>
      WRITE_REG(hospi->Instance->HLCR, ((cfg->RWRecoveryTime << OCTOSPI_HLCR_TRWR_Pos) |
 8005aac:	6822      	ldr	r2, [r4, #0]
 8005aae:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
 8005ab2:	430b      	orrs	r3, r1
 8005ab4:	6829      	ldr	r1, [r5, #0]
 8005ab6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005aba:	6869      	ldr	r1, [r5, #4]
 8005abc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005ac0:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
      hospi->State = HAL_OSPI_STATE_READY;
 8005ac4:	2302      	movs	r3, #2
 8005ac6:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005ac8:	b002      	add	sp, #8
 8005aca:	bd70      	pop	{r4, r5, r6, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005acc:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005ace:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005ad0:	6563      	str	r3, [r4, #84]	; 0x54
 8005ad2:	e7f9      	b.n	8005ac8 <HAL_OSPI_HyperbusCfg+0x40>

08005ad4 <HAL_OSPI_HyperbusCmd>:
{
 8005ad4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005ad6:	4604      	mov	r4, r0
 8005ad8:	4616      	mov	r6, r2
 8005ada:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005adc:	f7fe fd12 	bl	8004504 <HAL_GetTick>
  if ((hospi->State == HAL_OSPI_STATE_READY) && (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS))
 8005ae0:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 8005ae2:	4603      	mov	r3, r0
  if ((hospi->State == HAL_OSPI_STATE_READY) && (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS))
 8005ae4:	2a02      	cmp	r2, #2
 8005ae6:	d127      	bne.n	8005b38 <HAL_OSPI_HyperbusCmd+0x64>
 8005ae8:	68e2      	ldr	r2, [r4, #12]
 8005aea:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 8005aee:	d123      	bne.n	8005b38 <HAL_OSPI_HyperbusCmd+0x64>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005af0:	2200      	movs	r2, #0
 8005af2:	2120      	movs	r1, #32
 8005af4:	4620      	mov	r0, r4
 8005af6:	9600      	str	r6, [sp, #0]
 8005af8:	f7ff fec8 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005afc:	b9d0      	cbnz	r0, 8005b34 <HAL_OSPI_HyperbusCmd+0x60>
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005afe:	6823      	ldr	r3, [r4, #0]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005b00:	6829      	ldr	r1, [r5, #0]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005b02:	681a      	ldr	r2, [r3, #0]
 8005b04:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005b08:	601a      	str	r2, [r3, #0]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005b0a:	689a      	ldr	r2, [r3, #8]
 8005b0c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8005b10:	430a      	orrs	r2, r1
      WRITE_REG(hospi->Instance->CCR, (cmd->DQSMode | OCTOSPI_CCR_DDTR | OCTOSPI_CCR_DMODE_2 |
 8005b12:	68a9      	ldr	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR1, OCTOSPI_DCR1_MTYP_0, cmd->AddressSpace);
 8005b14:	609a      	str	r2, [r3, #8]
      WRITE_REG(hospi->Instance->CCR, (cmd->DQSMode | OCTOSPI_CCR_DDTR | OCTOSPI_CCR_DMODE_2 |
 8005b16:	692a      	ldr	r2, [r5, #16]
 8005b18:	430a      	orrs	r2, r1
 8005b1a:	f042 220c 	orr.w	r2, r2, #201329664	; 0xc000c00
 8005b1e:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
      WRITE_REG(hospi->Instance->WCCR, (cmd->DQSMode | OCTOSPI_WCCR_DDTR | OCTOSPI_WCCR_DMODE_2 |
 8005b22:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
      WRITE_REG(hospi->Instance->DLR, (cmd->NbData - 1U));
 8005b26:	68ea      	ldr	r2, [r5, #12]
 8005b28:	3a01      	subs	r2, #1
 8005b2a:	641a      	str	r2, [r3, #64]	; 0x40
      WRITE_REG(hospi->Instance->AR, cmd->Address);
 8005b2c:	686a      	ldr	r2, [r5, #4]
 8005b2e:	649a      	str	r2, [r3, #72]	; 0x48
      hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005b30:	2304      	movs	r3, #4
 8005b32:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005b34:	b002      	add	sp, #8
 8005b36:	bd70      	pop	{r4, r5, r6, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005b38:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005b3a:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005b3c:	6563      	str	r3, [r4, #84]	; 0x54
 8005b3e:	e7f9      	b.n	8005b34 <HAL_OSPI_HyperbusCmd+0x60>

08005b40 <HAL_OSPI_Transmit>:
{
 8005b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b42:	4604      	mov	r4, r0
 8005b44:	460f      	mov	r7, r1
 8005b46:	b085      	sub	sp, #20
 8005b48:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8005b4a:	f7fe fcdb 	bl	8004504 <HAL_GetTick>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 8005b4e:	6826      	ldr	r6, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8005b50:	4603      	mov	r3, r0
  if (pData == NULL)
 8005b52:	b91f      	cbnz	r7, 8005b5c <HAL_OSPI_Transmit+0x1c>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8005b54:	2308      	movs	r3, #8
      status = HAL_ERROR;
 8005b56:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005b58:	6563      	str	r3, [r4, #84]	; 0x54
 8005b5a:	e02d      	b.n	8005bb8 <HAL_OSPI_Transmit+0x78>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8005b5c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8005b5e:	2a04      	cmp	r2, #4
 8005b60:	d12c      	bne.n	8005bbc <HAL_OSPI_Transmit+0x7c>
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8005b62:	6c32      	ldr	r2, [r6, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 8005b64:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8005b66:	3201      	adds	r2, #1
 8005b68:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 8005b6a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005b6c:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005b6e:	6832      	ldr	r2, [r6, #0]
 8005b70:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005b74:	6032      	str	r2, [r6, #0]
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_FT, SET, tickstart, Timeout);
 8005b76:	2201      	movs	r2, #1
 8005b78:	2104      	movs	r1, #4
 8005b7a:	4620      	mov	r0, r4
 8005b7c:	9500      	str	r5, [sp, #0]
 8005b7e:	9303      	str	r3, [sp, #12]
 8005b80:	f7ff fe84 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005b84:	b9c0      	cbnz	r0, 8005bb8 <HAL_OSPI_Transmit+0x78>
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 8005b86:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while (hospi->XferCount > 0U);
 8005b88:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 8005b8a:	7812      	ldrb	r2, [r2, #0]
 8005b8c:	f886 2050 	strb.w	r2, [r6, #80]	; 0x50
        hospi->pBuffPtr++;
 8005b90:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005b92:	3201      	adds	r2, #1
 8005b94:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 8005b96:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005b98:	3a01      	subs	r2, #1
 8005b9a:	64a2      	str	r2, [r4, #72]	; 0x48
      } while (hospi->XferCount > 0U);
 8005b9c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005b9e:	2a00      	cmp	r2, #0
 8005ba0:	d1e9      	bne.n	8005b76 <HAL_OSPI_Transmit+0x36>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005ba2:	2201      	movs	r2, #1
 8005ba4:	2102      	movs	r1, #2
 8005ba6:	4620      	mov	r0, r4
 8005ba8:	9500      	str	r5, [sp, #0]
 8005baa:	f7ff fe6f 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005bae:	b918      	cbnz	r0, 8005bb8 <HAL_OSPI_Transmit+0x78>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005bb0:	2302      	movs	r3, #2
 8005bb2:	6822      	ldr	r2, [r4, #0]
 8005bb4:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 8005bb6:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005bb8:	b005      	add	sp, #20
 8005bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005bbc:	2310      	movs	r3, #16
 8005bbe:	e7ca      	b.n	8005b56 <HAL_OSPI_Transmit+0x16>

08005bc0 <HAL_OSPI_Receive>:
{
 8005bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bc2:	4604      	mov	r4, r0
 8005bc4:	b085      	sub	sp, #20
 8005bc6:	460f      	mov	r7, r1
 8005bc8:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 8005bca:	f7fe fc9b 	bl	8004504 <HAL_GetTick>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 8005bce:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8005bd0:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 8005bd2:	6ca8      	ldr	r0, [r5, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 8005bd4:	f8d5 c110 	ldr.w	ip, [r5, #272]	; 0x110
  if (pData == NULL)
 8005bd8:	b91f      	cbnz	r7, 8005be2 <HAL_OSPI_Receive+0x22>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8005bda:	2308      	movs	r3, #8
      status = HAL_ERROR;
 8005bdc:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005bde:	6563      	str	r3, [r4, #84]	; 0x54
 8005be0:	e034      	b.n	8005c4c <HAL_OSPI_Receive+0x8c>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8005be2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8005be4:	2a04      	cmp	r2, #4
 8005be6:	d13b      	bne.n	8005c60 <HAL_OSPI_Receive+0xa0>
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8005be8:	6c2a      	ldr	r2, [r5, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 8005bea:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8005bec:	3201      	adds	r2, #1
 8005bee:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 8005bf0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005bf2:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005bf4:	6829      	ldr	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005bf6:	68e2      	ldr	r2, [r4, #12]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005bf8:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005bfc:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005c00:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8005c04:	6029      	str	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005c06:	d123      	bne.n	8005c50 <HAL_OSPI_Receive+0x90>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 8005c08:	64a8      	str	r0, [r5, #72]	; 0x48
        status = OSPI_WaitFlagStateUntilTimeout(hospi, (HAL_OSPI_FLAG_FT | HAL_OSPI_FLAG_TC), SET, tickstart, Timeout);
 8005c0a:	2201      	movs	r2, #1
 8005c0c:	2106      	movs	r1, #6
 8005c0e:	4620      	mov	r0, r4
 8005c10:	9600      	str	r6, [sp, #0]
 8005c12:	9303      	str	r3, [sp, #12]
 8005c14:	f7ff fe3a 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005c18:	b9c0      	cbnz	r0, 8005c4c <HAL_OSPI_Receive+0x8c>
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8005c1a:	f895 1050 	ldrb.w	r1, [r5, #80]	; 0x50
 8005c1e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while(hospi->XferCount > 0U);
 8005c20:	9b03      	ldr	r3, [sp, #12]
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8005c22:	7011      	strb	r1, [r2, #0]
        hospi->pBuffPtr++;
 8005c24:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005c26:	3201      	adds	r2, #1
 8005c28:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 8005c2a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005c2c:	3a01      	subs	r2, #1
 8005c2e:	64a2      	str	r2, [r4, #72]	; 0x48
      } while(hospi->XferCount > 0U);
 8005c30:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005c32:	2a00      	cmp	r2, #0
 8005c34:	d1e9      	bne.n	8005c0a <HAL_OSPI_Receive+0x4a>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005c36:	2201      	movs	r2, #1
 8005c38:	2102      	movs	r1, #2
 8005c3a:	4620      	mov	r0, r4
 8005c3c:	9600      	str	r6, [sp, #0]
 8005c3e:	f7ff fe25 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005c42:	b918      	cbnz	r0, 8005c4c <HAL_OSPI_Receive+0x8c>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005c44:	2302      	movs	r3, #2
 8005c46:	6822      	ldr	r2, [r4, #0]
 8005c48:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 8005c4a:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005c4c:	b005      	add	sp, #20
 8005c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 8005c50:	f8d5 2100 	ldr.w	r2, [r5, #256]	; 0x100
 8005c54:	f412 6fe0 	tst.w	r2, #1792	; 0x700
 8005c58:	d1d6      	bne.n	8005c08 <HAL_OSPI_Receive+0x48>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 8005c5a:	f8c5 c110 	str.w	ip, [r5, #272]	; 0x110
 8005c5e:	e7d4      	b.n	8005c0a <HAL_OSPI_Receive+0x4a>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005c60:	2310      	movs	r3, #16
 8005c62:	e7bb      	b.n	8005bdc <HAL_OSPI_Receive+0x1c>

08005c64 <HAL_OSPI_AutoPolling>:
{
 8005c64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005c68:	4604      	mov	r4, r0
 8005c6a:	4616      	mov	r6, r2
 8005c6c:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005c6e:	f7fe fc49 	bl	8004504 <HAL_GetTick>
  uint32_t addr_reg = hospi->Instance->AR;
 8005c72:	6822      	ldr	r2, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8005c74:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 8005c76:	6c97      	ldr	r7, [r2, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 8005c78:	f8d2 8110 	ldr.w	r8, [r2, #272]	; 0x110
  if ((hospi->State == HAL_OSPI_STATE_CMD_CFG) && (cfg->AutomaticStop == HAL_OSPI_AUTOMATIC_STOP_ENABLE))
 8005c7c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8005c7e:	2a04      	cmp	r2, #4
 8005c80:	d13c      	bne.n	8005cfc <HAL_OSPI_AutoPolling+0x98>
 8005c82:	68ea      	ldr	r2, [r5, #12]
 8005c84:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8005c88:	d138      	bne.n	8005cfc <HAL_OSPI_AutoPolling+0x98>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005c8a:	9003      	str	r0, [sp, #12]
 8005c8c:	2200      	movs	r2, #0
 8005c8e:	2120      	movs	r1, #32
 8005c90:	4620      	mov	r0, r4
 8005c92:	9600      	str	r6, [sp, #0]
 8005c94:	f7ff fdfa 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005c98:	bb28      	cbnz	r0, 8005ce6 <HAL_OSPI_AutoPolling+0x82>
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 8005c9a:	6829      	ldr	r1, [r5, #0]
 8005c9c:	6822      	ldr	r2, [r4, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005c9e:	9b03      	ldr	r3, [sp, #12]
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 8005ca0:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
      WRITE_REG (hospi->Instance->PSMKR, cfg->Mask);
 8005ca4:	6869      	ldr	r1, [r5, #4]
 8005ca6:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
      WRITE_REG (hospi->Instance->PIR,   cfg->Interval);
 8005caa:	6929      	ldr	r1, [r5, #16]
 8005cac:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
      MODIFY_REG(hospi->Instance->CR,    (OCTOSPI_CR_PMM | OCTOSPI_CR_APMS | OCTOSPI_CR_FMODE),
 8005cb0:	6810      	ldr	r0, [r2, #0]
 8005cb2:	e9d5 1502 	ldrd	r1, r5, [r5, #8]
 8005cb6:	f020 5043 	bic.w	r0, r0, #817889280	; 0x30c00000
 8005cba:	4329      	orrs	r1, r5
 8005cbc:	4301      	orrs	r1, r0
 8005cbe:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 8005cc2:	6011      	str	r1, [r2, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005cc4:	68e1      	ldr	r1, [r4, #12]
 8005cc6:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8005cca:	d10f      	bne.n	8005cec <HAL_OSPI_AutoPolling+0x88>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 8005ccc:	6497      	str	r7, [r2, #72]	; 0x48
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_SM, SET, tickstart, Timeout);
 8005cce:	2201      	movs	r2, #1
 8005cd0:	2108      	movs	r1, #8
 8005cd2:	4620      	mov	r0, r4
 8005cd4:	9600      	str	r6, [sp, #0]
 8005cd6:	f7ff fdd9 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005cda:	b920      	cbnz	r0, 8005ce6 <HAL_OSPI_AutoPolling+0x82>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_SM);
 8005cdc:	6823      	ldr	r3, [r4, #0]
 8005cde:	2208      	movs	r2, #8
 8005ce0:	625a      	str	r2, [r3, #36]	; 0x24
        hospi->State = HAL_OSPI_STATE_READY;
 8005ce2:	2302      	movs	r3, #2
 8005ce4:	6523      	str	r3, [r4, #80]	; 0x50
}
 8005ce6:	b004      	add	sp, #16
 8005ce8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 8005cec:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
 8005cf0:	f411 6fe0 	tst.w	r1, #1792	; 0x700
 8005cf4:	d1ea      	bne.n	8005ccc <HAL_OSPI_AutoPolling+0x68>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 8005cf6:	f8c2 8110 	str.w	r8, [r2, #272]	; 0x110
 8005cfa:	e7e8      	b.n	8005cce <HAL_OSPI_AutoPolling+0x6a>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005cfc:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005cfe:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005d00:	6563      	str	r3, [r4, #84]	; 0x54
 8005d02:	e7f0      	b.n	8005ce6 <HAL_OSPI_AutoPolling+0x82>

08005d04 <HAL_OSPI_MemoryMapped>:
{
 8005d04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005d06:	4604      	mov	r4, r0
 8005d08:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8005d0a:	f7fe fbfb 	bl	8004504 <HAL_GetTick>
 8005d0e:	4603      	mov	r3, r0
  if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8005d10:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8005d12:	2a04      	cmp	r2, #4
 8005d14:	d121      	bne.n	8005d5a <HAL_OSPI_MemoryMapped+0x56>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005d16:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8005d18:	2120      	movs	r1, #32
 8005d1a:	4620      	mov	r0, r4
 8005d1c:	9200      	str	r2, [sp, #0]
 8005d1e:	2200      	movs	r2, #0
 8005d20:	f7ff fdb4 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d24:	b9b8      	cbnz	r0, 8005d56 <HAL_OSPI_MemoryMapped+0x52>
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8005d26:	6829      	ldr	r1, [r5, #0]
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 8005d28:	2388      	movs	r3, #136	; 0x88
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 8005d2a:	6822      	ldr	r2, [r4, #0]
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8005d2c:	2908      	cmp	r1, #8
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 8005d2e:	6523      	str	r3, [r4, #80]	; 0x50
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8005d30:	d108      	bne.n	8005d44 <HAL_OSPI_MemoryMapped+0x40>
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 8005d32:	686b      	ldr	r3, [r5, #4]
 8005d34:	f8c2 3130 	str.w	r3, [r2, #304]	; 0x130
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TO);
 8005d38:	2310      	movs	r3, #16
 8005d3a:	6253      	str	r3, [r2, #36]	; 0x24
        __HAL_OSPI_ENABLE_IT(hospi, HAL_OSPI_IT_TO);
 8005d3c:	6813      	ldr	r3, [r2, #0]
 8005d3e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005d42:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hospi->Instance->CR, (OCTOSPI_CR_TCEN | OCTOSPI_CR_FMODE),
 8005d44:	6813      	ldr	r3, [r2, #0]
 8005d46:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8005d4a:	f023 0308 	bic.w	r3, r3, #8
 8005d4e:	430b      	orrs	r3, r1
 8005d50:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 8005d54:	6013      	str	r3, [r2, #0]
}
 8005d56:	b003      	add	sp, #12
 8005d58:	bd30      	pop	{r4, r5, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005d5a:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005d5c:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005d5e:	6563      	str	r3, [r4, #84]	; 0x54
 8005d60:	e7f9      	b.n	8005d56 <HAL_OSPI_MemoryMapped+0x52>

08005d62 <HAL_OSPI_Abort>:
{
 8005d62:	b530      	push	{r4, r5, lr}
 8005d64:	4604      	mov	r4, r0
 8005d66:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8005d68:	f7fe fbcc 	bl	8004504 <HAL_GetTick>
 8005d6c:	4603      	mov	r3, r0
  state = hospi->State;
 8005d6e:	6d22      	ldr	r2, [r4, #80]	; 0x50
  if (((state & OSPI_BUSY_STATE_MASK) != 0U) || ((state & OSPI_CFG_STATE_MASK) != 0U))
 8005d70:	f012 0f0c 	tst.w	r2, #12
 8005d74:	d035      	beq.n	8005de2 <HAL_OSPI_Abort+0x80>
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 8005d76:	6821      	ldr	r1, [r4, #0]
 8005d78:	680a      	ldr	r2, [r1, #0]
 8005d7a:	f012 0204 	ands.w	r2, r2, #4
 8005d7e:	d02b      	beq.n	8005dd8 <HAL_OSPI_Abort+0x76>
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 8005d80:	680a      	ldr	r2, [r1, #0]
 8005d82:	9003      	str	r0, [sp, #12]
 8005d84:	f022 0204 	bic.w	r2, r2, #4
      status = HAL_MDMA_Abort(hospi->hmdma);
 8005d88:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 8005d8a:	600a      	str	r2, [r1, #0]
      status = HAL_MDMA_Abort(hospi->hmdma);
 8005d8c:	f7ff fc62 	bl	8005654 <HAL_MDMA_Abort>
      if (status != HAL_OK)
 8005d90:	9b03      	ldr	r3, [sp, #12]
 8005d92:	b108      	cbz	r0, 8005d98 <HAL_OSPI_Abort+0x36>
        hospi->ErrorCode = HAL_OSPI_ERROR_DMA;
 8005d94:	2204      	movs	r2, #4
 8005d96:	6562      	str	r2, [r4, #84]	; 0x54
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8005d98:	6822      	ldr	r2, [r4, #0]
 8005d9a:	6a11      	ldr	r1, [r2, #32]
 8005d9c:	0689      	lsls	r1, r1, #26
 8005d9e:	d51d      	bpl.n	8005ddc <HAL_OSPI_Abort+0x7a>
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8005da0:	6811      	ldr	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8005da2:	4620      	mov	r0, r4
 8005da4:	9303      	str	r3, [sp, #12]
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8005da6:	f041 0102 	orr.w	r1, r1, #2
 8005daa:	6011      	str	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8005dac:	2102      	movs	r1, #2
 8005dae:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8005db0:	9200      	str	r2, [sp, #0]
 8005db2:	2201      	movs	r2, #1
 8005db4:	f7ff fd6a 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005db8:	9b03      	ldr	r3, [sp, #12]
 8005dba:	b958      	cbnz	r0, 8005dd4 <HAL_OSPI_Abort+0x72>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005dbc:	6822      	ldr	r2, [r4, #0]
 8005dbe:	2502      	movs	r5, #2
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005dc0:	2120      	movs	r1, #32
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005dc2:	6255      	str	r5, [r2, #36]	; 0x24
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005dc4:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8005dc6:	9200      	str	r2, [sp, #0]
 8005dc8:	4602      	mov	r2, r0
 8005dca:	4620      	mov	r0, r4
 8005dcc:	f7ff fd5e 	bl	800588c <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005dd0:	b900      	cbnz	r0, 8005dd4 <HAL_OSPI_Abort+0x72>
          hospi->State = HAL_OSPI_STATE_READY;
 8005dd2:	6525      	str	r5, [r4, #80]	; 0x50
}
 8005dd4:	b005      	add	sp, #20
 8005dd6:	bd30      	pop	{r4, r5, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8005dd8:	4610      	mov	r0, r2
 8005dda:	e7dd      	b.n	8005d98 <HAL_OSPI_Abort+0x36>
      hospi->State = HAL_OSPI_STATE_READY;
 8005ddc:	2302      	movs	r3, #2
 8005dde:	6523      	str	r3, [r4, #80]	; 0x50
 8005de0:	e7f8      	b.n	8005dd4 <HAL_OSPI_Abort+0x72>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005de2:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8005de4:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005de6:	6563      	str	r3, [r4, #84]	; 0x54
 8005de8:	e7f4      	b.n	8005dd4 <HAL_OSPI_Abort+0x72>
	...

08005dec <HAL_OSPIM_Config>:
    other_instance = 0U;
 8005dec:	4b9f      	ldr	r3, [pc, #636]	; (800606c <HAL_OSPIM_Config+0x280>)
 8005dee:	f04f 0c01 	mov.w	ip, #1
  if (hospi->Instance == OCTOSPI1)
 8005df2:	6802      	ldr	r2, [r0, #0]
{
 8005df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    other_instance = 0U;
 8005df8:	429a      	cmp	r2, r3
{
 8005dfa:	b08f      	sub	sp, #60	; 0x3c
    status = HAL_ERROR;
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8005dfc:	f04f 0600 	mov.w	r6, #0
    cfg->IOLowPort  = 0U;
    cfg->IOHighPort = 0U;

    if (instance_nb == 2U)
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8005e00:	f8df e270 	ldr.w	lr, [pc, #624]	; 8006074 <HAL_OSPIM_Config+0x288>
    other_instance = 0U;
 8005e04:	bf0b      	itete	eq
 8005e06:	f04f 0801 	moveq.w	r8, #1
 8005e0a:	f04f 0800 	movne.w	r8, #0
 8005e0e:	2400      	moveq	r4, #0
 8005e10:	2401      	movne	r4, #1
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8005e12:	ab02      	add	r3, sp, #8
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
               | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 8005e14:	f8df 9260 	ldr.w	r9, [pc, #608]	; 8006078 <HAL_OSPIM_Config+0x28c>
    if (instance_nb == 2U)
 8005e18:	f1bc 0f02 	cmp.w	ip, #2
    cfg->IOHighPort = 0U;
 8005e1c:	611e      	str	r6, [r3, #16]
    cfg->DQSPort    = 0U;
 8005e1e:	e9c3 6600 	strd	r6, r6, [r3]
    cfg->IOLowPort  = 0U;
 8005e22:	e9c3 6602 	strd	r6, r6, [r3, #8]
    if (instance_nb == 2U)
 8005e26:	f040 811c 	bne.w	8006062 <HAL_OSPIM_Config+0x276>
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8005e2a:	f8de 2000 	ldr.w	r2, [lr]
        value = OCTOSPIM_PCR_NCSSRC;
 8005e2e:	f012 0f01 	tst.w	r2, #1
 8005e32:	bf0c      	ite	eq
 8005e34:	464d      	moveq	r5, r9
 8005e36:	f44f 7500 	movne.w	r5, #512	; 0x200
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8005e3a:	2700      	movs	r7, #0
    {
      reg = OCTOSPIM->PCR[index];
 8005e3c:	eb0e 0287 	add.w	r2, lr, r7, lsl #2
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index+1U;
 8005e40:	1c78      	adds	r0, r7, #1
      reg = OCTOSPIM->PCR[index];
 8005e42:	6852      	ldr	r2, [r2, #4]
      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8005e44:	07d7      	lsls	r7, r2, #31
 8005e46:	d504      	bpl.n	8005e52 <HAL_OSPIM_Config+0x66>
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8005e48:	ea82 0705 	eor.w	r7, r2, r5
 8005e4c:	07bf      	lsls	r7, r7, #30
          cfg->ClkPort = index+1U;
 8005e4e:	bf58      	it	pl
 8005e50:	6018      	strpl	r0, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 8005e52:	06d7      	lsls	r7, r2, #27
 8005e54:	d504      	bpl.n	8005e60 <HAL_OSPIM_Config+0x74>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 8005e56:	ea82 0705 	eor.w	r7, r2, r5
 8005e5a:	06bf      	lsls	r7, r7, #26
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index+1U;
 8005e5c:	bf58      	it	pl
 8005e5e:	6058      	strpl	r0, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 8005e60:	05d7      	lsls	r7, r2, #23
 8005e62:	d504      	bpl.n	8005e6e <HAL_OSPIM_Config+0x82>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 8005e64:	ea82 0705 	eor.w	r7, r2, r5
 8005e68:	05bf      	lsls	r7, r7, #22
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index+1U;
 8005e6a:	bf58      	it	pl
 8005e6c:	6098      	strpl	r0, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8005e6e:	03d7      	lsls	r7, r2, #15
 8005e70:	d50a      	bpl.n	8005e88 <HAL_OSPIM_Config+0x9c>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 8005e72:	ea82 0705 	eor.w	r7, r2, r5
 8005e76:	037f      	lsls	r7, r7, #13
 8005e78:	d406      	bmi.n	8005e88 <HAL_OSPIM_Config+0x9c>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 8005e7a:	0397      	lsls	r7, r2, #14
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 8005e7c:	bf54      	ite	pl
 8005e7e:	f440 3780 	orrpl.w	r7, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 8005e82:	f040 7780 	orrmi.w	r7, r0, #16777216	; 0x1000000
 8005e86:	60df      	str	r7, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 8005e88:	01d7      	lsls	r7, r2, #7
 8005e8a:	d50a      	bpl.n	8005ea2 <HAL_OSPIM_Config+0xb6>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 8005e8c:	ea82 0705 	eor.w	r7, r2, r5
 8005e90:	017f      	lsls	r7, r7, #5
 8005e92:	d406      	bmi.n	8005ea2 <HAL_OSPIM_Config+0xb6>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 8005e94:	0197      	lsls	r7, r2, #6
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 8005e96:	bf54      	ite	pl
 8005e98:	f440 3280 	orrpl.w	r2, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 8005e9c:	f040 7280 	orrmi.w	r2, r0, #16777216	; 0x1000000
 8005ea0:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8005ea2:	2802      	cmp	r0, #2
 8005ea4:	f04f 0701 	mov.w	r7, #1
 8005ea8:	d1c8      	bne.n	8005e3c <HAL_OSPIM_Config+0x50>
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8005eaa:	f1bc 0f02 	cmp.w	ip, #2
 8005eae:	f103 0318 	add.w	r3, r3, #24
 8005eb2:	f040 80d4 	bne.w	800605e <HAL_OSPIM_Config+0x272>
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 8005eb6:	4b6d      	ldr	r3, [pc, #436]	; (800606c <HAL_OSPIM_Config+0x280>)
 8005eb8:	681d      	ldr	r5, [r3, #0]
 8005eba:	403d      	ands	r5, r7
 8005ebc:	d004      	beq.n	8005ec8 <HAL_OSPIM_Config+0xdc>
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8005ebe:	681a      	ldr	r2, [r3, #0]
      ospi_enabled |= 0x1U;
 8005ec0:	463d      	mov	r5, r7
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8005ec2:	f022 0201 	bic.w	r2, r2, #1
 8005ec6:	601a      	str	r2, [r3, #0]
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 8005ec8:	4b69      	ldr	r3, [pc, #420]	; (8006070 <HAL_OSPIM_Config+0x284>)
 8005eca:	681a      	ldr	r2, [r3, #0]
 8005ecc:	07d0      	lsls	r0, r2, #31
 8005ece:	f140 80ca 	bpl.w	8006066 <HAL_OSPIM_Config+0x27a>
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8005ed2:	681a      	ldr	r2, [r3, #0]
 8005ed4:	f022 0201 	bic.w	r2, r2, #1
 8005ed8:	601a      	str	r2, [r3, #0]
      ospi_enabled |= 0x2U;
 8005eda:	f045 0302 	orr.w	r3, r5, #2
 8005ede:	9301      	str	r3, [sp, #4]
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 8005ee0:	ab0e      	add	r3, sp, #56	; 0x38
 8005ee2:	2018      	movs	r0, #24
 8005ee4:	fb00 3004 	mla	r0, r0, r4, r3
 8005ee8:	4b62      	ldr	r3, [pc, #392]	; (8006074 <HAL_OSPIM_Config+0x288>)
 8005eea:	f850 2c28 	ldr.w	r2, [r0, #-40]
 8005eee:	3a01      	subs	r2, #1
 8005ef0:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8005ef4:	6857      	ldr	r7, [r2, #4]
 8005ef6:	f427 7780 	bic.w	r7, r7, #256	; 0x100
 8005efa:	6057      	str	r7, [r2, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8005efc:	681a      	ldr	r2, [r3, #0]
 8005efe:	07d2      	lsls	r2, r2, #31
 8005f00:	f140 80be 	bpl.w	8006080 <HAL_OSPIM_Config+0x294>
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8005f04:	681a      	ldr	r2, [r3, #0]
 8005f06:	f022 0201 	bic.w	r2, r2, #1
 8005f0a:	601a      	str	r2, [r3, #0]
      if (other_instance == 1U)
 8005f0c:	f1b8 0f00 	cmp.w	r8, #0
 8005f10:	d02c      	beq.n	8005f6c <HAL_OSPIM_Config+0x180>
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKSRC);
 8005f12:	9a08      	ldr	r2, [sp, #32]
 8005f14:	3a01      	subs	r2, #1
 8005f16:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8005f1a:	6850      	ldr	r0, [r2, #4]
 8005f1c:	f040 0002 	orr.w	r0, r0, #2
 8005f20:	6050      	str	r0, [r2, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8005f22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005f24:	b132      	cbz	r2, 8005f34 <HAL_OSPIM_Config+0x148>
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSSRC);
 8005f26:	3a01      	subs	r2, #1
 8005f28:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8005f2c:	685a      	ldr	r2, [r3, #4]
 8005f2e:	f042 0220 	orr.w	r2, r2, #32
 8005f32:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8005f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f36:	b15b      	cbz	r3, 8005f50 <HAL_OSPIM_Config+0x164>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLSRC_1);
 8005f38:	3b01      	subs	r3, #1
 8005f3a:	f003 0301 	and.w	r3, r3, #1
 8005f3e:	009b      	lsls	r3, r3, #2
 8005f40:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8005f44:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8005f48:	685a      	ldr	r2, [r3, #4]
 8005f4a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8005f4e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8005f50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005f52:	b15b      	cbz	r3, 8005f6c <HAL_OSPIM_Config+0x180>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHSRC_1);
 8005f54:	3b01      	subs	r3, #1
 8005f56:	f003 0301 	and.w	r3, r3, #1
 8005f5a:	009b      	lsls	r3, r3, #2
 8005f5c:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8005f60:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8005f64:	685a      	ldr	r2, [r3, #4]
 8005f66:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8005f6a:	605a      	str	r2, [r3, #4]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8005f6c:	ab0e      	add	r3, sp, #56	; 0x38
 8005f6e:	f04f 0918 	mov.w	r9, #24
 8005f72:	f8d1 c000 	ldr.w	ip, [r1]
 8005f76:	fb09 3908 	mla	r9, r9, r8, r3
 8005f7a:	f859 ac30 	ldr.w	sl, [r9, #-48]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8005f7e:	f859 0c20 	ldr.w	r0, [r9, #-32]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8005f82:	45d4      	cmp	ip, sl
 8005f84:	f859 bc2c 	ldr.w	fp, [r9, #-44]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8005f88:	e9d1 7e01 	ldrd	r7, lr, [r1, #4]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8005f8c:	e9d1 2303 	ldrd	r2, r3, [r1, #12]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8005f90:	f000 80b4 	beq.w	80060fc <HAL_OSPIM_Config+0x310>
 8005f94:	45bb      	cmp	fp, r7
 8005f96:	d00a      	beq.n	8005fae <HAL_OSPIM_Config+0x1c2>
 8005f98:	f859 6c28 	ldr.w	r6, [r9, #-40]
 8005f9c:	4576      	cmp	r6, lr
 8005f9e:	d006      	beq.n	8005fae <HAL_OSPIM_Config+0x1c2>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8005fa0:	f859 9c24 	ldr.w	r9, [r9, #-36]
 8005fa4:	4591      	cmp	r9, r2
 8005fa6:	d002      	beq.n	8005fae <HAL_OSPIM_Config+0x1c2>
 8005fa8:	4298      	cmp	r0, r3
 8005faa:	f040 80ba 	bne.w	8006122 <HAL_OSPIM_Config+0x336>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8005fae:	f10a 39ff 	add.w	r9, sl, #4294967295
 8005fb2:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8006074 <HAL_OSPIM_Config+0x288>
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8005fb6:	ae0e      	add	r6, sp, #56	; 0x38
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8005fb8:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 8005fbc:	f8d9 b004 	ldr.w	fp, [r9, #4]
 8005fc0:	f02b 0b01 	bic.w	fp, fp, #1
 8005fc4:	f8c9 b004 	str.w	fp, [r9, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8005fc8:	f04f 0918 	mov.w	r9, #24
 8005fcc:	fb09 6908 	mla	r9, r9, r8, r6
 8005fd0:	f859 9c2c 	ldr.w	r9, [r9, #-44]
 8005fd4:	f1b9 0f00 	cmp.w	r9, #0
 8005fd8:	d009      	beq.n	8005fee <HAL_OSPIM_Config+0x202>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 8005fda:	f109 39ff 	add.w	r9, r9, #4294967295
 8005fde:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 8005fe2:	f8d9 a004 	ldr.w	sl, [r9, #4]
 8005fe6:	f02a 0a10 	bic.w	sl, sl, #16
 8005fea:	f8c9 a004 	str.w	sl, [r9, #4]
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 8005fee:	f04f 0918 	mov.w	r9, #24
 8005ff2:	ae0e      	add	r6, sp, #56	; 0x38
 8005ff4:	fb09 6808 	mla	r8, r9, r8, r6
 8005ff8:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800607c <HAL_OSPIM_Config+0x290>
 8005ffc:	f858 6c28 	ldr.w	r6, [r8, #-40]
 8006000:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 8006004:	44d1      	add	r9, sl
 8006006:	f8d9 a004 	ldr.w	sl, [r9, #4]
 800600a:	f42a 7a80 	bic.w	sl, sl, #256	; 0x100
 800600e:	f8c9 a004 	str.w	sl, [r9, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006012:	f858 8c24 	ldr.w	r8, [r8, #-36]
 8006016:	f1b8 0f00 	cmp.w	r8, #0
 800601a:	d00f      	beq.n	800603c <HAL_OSPIM_Config+0x250>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 800601c:	f108 38ff 	add.w	r8, r8, #4294967295
 8006020:	f008 0801 	and.w	r8, r8, #1
 8006024:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8006028:	f108 48a4 	add.w	r8, r8, #1375731712	; 0x52000000
 800602c:	f508 4834 	add.w	r8, r8, #46080	; 0xb400
 8006030:	f8d8 9004 	ldr.w	r9, [r8, #4]
 8006034:	f429 3980 	bic.w	r9, r9, #65536	; 0x10000
 8006038:	f8c8 9004 	str.w	r9, [r8, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 800603c:	2800      	cmp	r0, #0
 800603e:	d070      	beq.n	8006122 <HAL_OSPIM_Config+0x336>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006040:	3801      	subs	r0, #1
 8006042:	f000 0001 	and.w	r0, r0, #1
 8006046:	0080      	lsls	r0, r0, #2
 8006048:	f100 40a4 	add.w	r0, r0, #1375731712	; 0x52000000
 800604c:	f500 4034 	add.w	r0, r0, #46080	; 0xb400
 8006050:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8006054:	f028 7880 	bic.w	r8, r8, #16777216	; 0x1000000
 8006058:	f8c0 8004 	str.w	r8, [r0, #4]
 800605c:	e061      	b.n	8006122 <HAL_OSPIM_Config+0x336>
 800605e:	4684      	mov	ip, r0
 8006060:	e6da      	b.n	8005e18 <HAL_OSPIM_Config+0x2c>
  uint32_t value = 0U;
 8006062:	2500      	movs	r5, #0
 8006064:	e6e9      	b.n	8005e3a <HAL_OSPIM_Config+0x4e>
 8006066:	9501      	str	r5, [sp, #4]
 8006068:	e73a      	b.n	8005ee0 <HAL_OSPIM_Config+0xf4>
 800606a:	bf00      	nop
 800606c:	52005000 	.word	0x52005000
 8006070:	5200a000 	.word	0x5200a000
 8006074:	5200b400 	.word	0x5200b400
 8006078:	04040222 	.word	0x04040222
 800607c:	5200b3fc 	.word	0x5200b3fc
      if (IOM_cfg[instance].ClkPort != 0U)
 8006080:	f850 2c30 	ldr.w	r2, [r0, #-48]
 8006084:	2a00      	cmp	r2, #0
 8006086:	f43f af71 	beq.w	8005f6c <HAL_OSPIM_Config+0x180>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 800608a:	3a01      	subs	r2, #1
 800608c:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006090:	6857      	ldr	r7, [r2, #4]
 8006092:	f027 0701 	bic.w	r7, r7, #1
 8006096:	6057      	str	r7, [r2, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006098:	f850 2c2c 	ldr.w	r2, [r0, #-44]
 800609c:	b132      	cbz	r2, 80060ac <HAL_OSPIM_Config+0x2c0>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 800609e:	3a01      	subs	r2, #1
 80060a0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80060a4:	685a      	ldr	r2, [r3, #4]
 80060a6:	f022 0210 	bic.w	r2, r2, #16
 80060aa:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80060ac:	2318      	movs	r3, #24
 80060ae:	aa0e      	add	r2, sp, #56	; 0x38
 80060b0:	fb03 2304 	mla	r3, r3, r4, r2
 80060b4:	f853 3c24 	ldr.w	r3, [r3, #-36]
 80060b8:	b15b      	cbz	r3, 80060d2 <HAL_OSPIM_Config+0x2e6>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 80060ba:	3b01      	subs	r3, #1
 80060bc:	f003 0301 	and.w	r3, r3, #1
 80060c0:	009b      	lsls	r3, r3, #2
 80060c2:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80060c6:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80060ca:	685a      	ldr	r2, [r3, #4]
 80060cc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80060d0:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80060d2:	2318      	movs	r3, #24
 80060d4:	aa0e      	add	r2, sp, #56	; 0x38
 80060d6:	fb03 2304 	mla	r3, r3, r4, r2
 80060da:	f853 3c20 	ldr.w	r3, [r3, #-32]
 80060de:	2b00      	cmp	r3, #0
 80060e0:	f43f af44 	beq.w	8005f6c <HAL_OSPIM_Config+0x180>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 80060e4:	3b01      	subs	r3, #1
 80060e6:	f003 0301 	and.w	r3, r3, #1
 80060ea:	009b      	lsls	r3, r3, #2
 80060ec:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80060f0:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80060f4:	685a      	ldr	r2, [r3, #4]
 80060f6:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80060fa:	e736      	b.n	8005f6a <HAL_OSPIM_Config+0x17e>
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 80060fc:	45bb      	cmp	fp, r7
 80060fe:	f47f af56 	bne.w	8005fae <HAL_OSPIM_Config+0x1c2>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006102:	f859 9c24 	ldr.w	r9, [r9, #-36]
 8006106:	4591      	cmp	r9, r2
 8006108:	f47f af51 	bne.w	8005fae <HAL_OSPIM_Config+0x1c2>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 800610c:	4298      	cmp	r0, r3
 800610e:	f47f af4e 	bne.w	8005fae <HAL_OSPIM_Config+0x1c2>
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006112:	f8df 81e0 	ldr.w	r8, [pc, #480]	; 80062f4 <HAL_OSPIM_Config+0x508>
 8006116:	f8d8 0000 	ldr.w	r0, [r8]
 800611a:	f040 0001 	orr.w	r0, r0, #1
 800611e:	f8c8 0000 	str.w	r0, [r8]
        MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 8006122:	4874      	ldr	r0, [pc, #464]	; (80062f4 <HAL_OSPIM_Config+0x508>)
 8006124:	f10e 3eff 	add.w	lr, lr, #4294967295
 8006128:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 800612c:	f8de 8004 	ldr.w	r8, [lr, #4]
 8006130:	f428 7840 	bic.w	r8, r8, #768	; 0x300
 8006134:	ea48 2844 	orr.w	r8, r8, r4, lsl #9
 8006138:	f448 7880 	orr.w	r8, r8, #256	; 0x100
 800613c:	f8ce 8004 	str.w	r8, [lr, #4]
    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006140:	6949      	ldr	r1, [r1, #20]
 8006142:	f101 3eff 	add.w	lr, r1, #4294967295
 8006146:	6801      	ldr	r1, [r0, #0]
 8006148:	f3c1 4107 	ubfx	r1, r1, #16, #8
 800614c:	458e      	cmp	lr, r1
 800614e:	d905      	bls.n	800615c <HAL_OSPIM_Config+0x370>
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006150:	6801      	ldr	r1, [r0, #0]
 8006152:	f421 017f 	bic.w	r1, r1, #16711680	; 0xff0000
 8006156:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800615a:	6001      	str	r1, [r0, #0]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 800615c:	6801      	ldr	r1, [r0, #0]
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 800615e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006162:	f402 3e80 	and.w	lr, r2, #65536	; 0x10000
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006166:	f011 0f01 	tst.w	r1, #1
 800616a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800616e:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006172:	4484      	add	ip, r0
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006174:	d063      	beq.n	800623e <HAL_OSPIM_Config+0x452>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006176:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800617a:	f024 0403 	bic.w	r4, r4, #3
 800617e:	f044 0401 	orr.w	r4, r4, #1
 8006182:	f8cc 4004 	str.w	r4, [ip, #4]
      if (cfg->DQSPort != 0U)
 8006186:	b147      	cbz	r7, 800619a <HAL_OSPIM_Config+0x3ae>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006188:	3f01      	subs	r7, #1
 800618a:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 800618e:	6878      	ldr	r0, [r7, #4]
 8006190:	f020 0030 	bic.w	r0, r0, #48	; 0x30
 8006194:	f040 0010 	orr.w	r0, r0, #16
 8006198:	6078      	str	r0, [r7, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 800619a:	f1be 0f00 	cmp.w	lr, #0
 800619e:	d02e      	beq.n	80061fe <HAL_OSPIM_Config+0x412>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80061a0:	3a01      	subs	r2, #1
 80061a2:	f002 0201 	and.w	r2, r2, #1
 80061a6:	0092      	lsls	r2, r2, #2
 80061a8:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 80061ac:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 80061b0:	6850      	ldr	r0, [r2, #4]
 80061b2:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 80061b6:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80061ba:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 80061bc:	b379      	cbz	r1, 800621e <HAL_OSPIM_Config+0x432>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80061be:	3b01      	subs	r3, #1
 80061c0:	f003 0301 	and.w	r3, r3, #1
 80061c4:	009b      	lsls	r3, r3, #2
 80061c6:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80061ca:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80061ce:	685a      	ldr	r2, [r3, #4]
 80061d0:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80061d4:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80061d8:	605a      	str	r2, [r3, #4]
    if ((ospi_enabled & 0x1U) != 0U)
 80061da:	b125      	cbz	r5, 80061e6 <HAL_OSPIM_Config+0x3fa>
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 80061dc:	4a46      	ldr	r2, [pc, #280]	; (80062f8 <HAL_OSPIM_Config+0x50c>)
 80061de:	6813      	ldr	r3, [r2, #0]
 80061e0:	f043 0301 	orr.w	r3, r3, #1
 80061e4:	6013      	str	r3, [r2, #0]
    if ((ospi_enabled & 0x2U) != 0U)
 80061e6:	9b01      	ldr	r3, [sp, #4]
 80061e8:	079b      	lsls	r3, r3, #30
 80061ea:	d504      	bpl.n	80061f6 <HAL_OSPIM_Config+0x40a>
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 80061ec:	4a43      	ldr	r2, [pc, #268]	; (80062fc <HAL_OSPIM_Config+0x510>)
 80061ee:	6813      	ldr	r3, [r2, #0]
 80061f0:	f043 0301 	orr.w	r3, r3, #1
 80061f4:	6013      	str	r3, [r2, #0]
}
 80061f6:	2000      	movs	r0, #0
 80061f8:	b00f      	add	sp, #60	; 0x3c
 80061fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80061fe:	2a00      	cmp	r2, #0
 8006200:	d0dc      	beq.n	80061bc <HAL_OSPIM_Config+0x3d0>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006202:	3a01      	subs	r2, #1
 8006204:	f002 0201 	and.w	r2, r2, #1
 8006208:	0092      	lsls	r2, r2, #2
 800620a:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 800620e:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006212:	6850      	ldr	r0, [r2, #4]
 8006214:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 8006218:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 800621c:	e7cd      	b.n	80061ba <HAL_OSPIM_Config+0x3ce>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 800621e:	2b00      	cmp	r3, #0
 8006220:	d0db      	beq.n	80061da <HAL_OSPIM_Config+0x3ee>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006222:	3b01      	subs	r3, #1
 8006224:	f003 0301 	and.w	r3, r3, #1
 8006228:	009b      	lsls	r3, r3, #2
 800622a:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 800622e:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006232:	685a      	ldr	r2, [r3, #4]
 8006234:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006238:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 800623c:	e7cc      	b.n	80061d8 <HAL_OSPIM_Config+0x3ec>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 800623e:	f8dc 8004 	ldr.w	r8, [ip, #4]
 8006242:	f028 0803 	bic.w	r8, r8, #3
 8006246:	ea48 0844 	orr.w	r8, r8, r4, lsl #1
 800624a:	f048 0801 	orr.w	r8, r8, #1
 800624e:	f8cc 8004 	str.w	r8, [ip, #4]
      if (cfg->DQSPort != 0U)
 8006252:	b157      	cbz	r7, 800626a <HAL_OSPIM_Config+0x47e>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 8006254:	3f01      	subs	r7, #1
 8006256:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 800625a:	6847      	ldr	r7, [r0, #4]
 800625c:	f027 0730 	bic.w	r7, r7, #48	; 0x30
 8006260:	ea47 1744 	orr.w	r7, r7, r4, lsl #5
 8006264:	f047 0710 	orr.w	r7, r7, #16
 8006268:	6047      	str	r7, [r0, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 800626a:	f1be 0f00 	cmp.w	lr, #0
 800626e:	d01e      	beq.n	80062ae <HAL_OSPIM_Config+0x4c2>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006270:	3a01      	subs	r2, #1
 8006272:	f002 0201 	and.w	r2, r2, #1
 8006276:	0092      	lsls	r2, r2, #2
 8006278:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 800627c:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006280:	6850      	ldr	r0, [r2, #4]
 8006282:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 8006286:	ea40 4084 	orr.w	r0, r0, r4, lsl #18
 800628a:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 800628e:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006290:	b1f9      	cbz	r1, 80062d2 <HAL_OSPIM_Config+0x4e6>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006292:	3b01      	subs	r3, #1
 8006294:	f003 0301 	and.w	r3, r3, #1
 8006298:	009b      	lsls	r3, r3, #2
 800629a:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 800629e:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80062a2:	685a      	ldr	r2, [r3, #4]
 80062a4:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 80062a8:	ea42 4284 	orr.w	r2, r2, r4, lsl #18
 80062ac:	e792      	b.n	80061d4 <HAL_OSPIM_Config+0x3e8>
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80062ae:	2a00      	cmp	r2, #0
 80062b0:	d0ee      	beq.n	8006290 <HAL_OSPIM_Config+0x4a4>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80062b2:	3a01      	subs	r2, #1
 80062b4:	f002 0201 	and.w	r2, r2, #1
 80062b8:	0092      	lsls	r2, r2, #2
 80062ba:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 80062be:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 80062c2:	6850      	ldr	r0, [r2, #4]
 80062c4:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 80062c8:	ea40 6084 	orr.w	r0, r0, r4, lsl #26
 80062cc:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 80062d0:	e7dd      	b.n	800628e <HAL_OSPIM_Config+0x4a2>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d081      	beq.n	80061da <HAL_OSPIM_Config+0x3ee>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80062d6:	3b01      	subs	r3, #1
 80062d8:	f003 0301 	and.w	r3, r3, #1
 80062dc:	009b      	lsls	r3, r3, #2
 80062de:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80062e2:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80062e6:	685a      	ldr	r2, [r3, #4]
 80062e8:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 80062ec:	ea42 6284 	orr.w	r2, r2, r4, lsl #26
 80062f0:	e7a2      	b.n	8006238 <HAL_OSPIM_Config+0x44c>
 80062f2:	bf00      	nop
 80062f4:	5200b400 	.word	0x5200b400
 80062f8:	52005000 	.word	0x52005000
 80062fc:	5200a000 	.word	0x5200a000

08006300 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006300:	b570      	push	{r4, r5, r6, lr}

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 8006302:	4d1d      	ldr	r5, [pc, #116]	; (8006378 <HAL_PWREx_ConfigSupply+0x78>)
{
 8006304:	4604      	mov	r4, r0
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 8006306:	68eb      	ldr	r3, [r5, #12]
 8006308:	f003 0307 	and.w	r3, r3, #7
 800630c:	2b06      	cmp	r3, #6
 800630e:	d006      	beq.n	800631e <HAL_PWREx_ConfigSupply+0x1e>
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006310:	68e8      	ldr	r0, [r5, #12]
 8006312:	f000 003f 	and.w	r0, r0, #63	; 0x3f
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006316:	1b00      	subs	r0, r0, r4
 8006318:	bf18      	it	ne
 800631a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 800631c:	bd70      	pop	{r4, r5, r6, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 800631e:	68eb      	ldr	r3, [r5, #12]
 8006320:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006324:	4303      	orrs	r3, r0
 8006326:	60eb      	str	r3, [r5, #12]
  tickstart = HAL_GetTick ();
 8006328:	f7fe f8ec 	bl	8004504 <HAL_GetTick>
 800632c:	4606      	mov	r6, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 800632e:	686b      	ldr	r3, [r5, #4]
 8006330:	049b      	lsls	r3, r3, #18
 8006332:	d508      	bpl.n	8006346 <HAL_PWREx_ConfigSupply+0x46>
      (SupplySource == PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) ||
 8006334:	f1a4 031d 	sub.w	r3, r4, #29
 8006338:	2b01      	cmp	r3, #1
 800633a:	d90c      	bls.n	8006356 <HAL_PWREx_ConfigSupply+0x56>
      (SupplySource == PWR_SMPS_1V8_SUPPLIES_EXT)         ||
 800633c:	3c2d      	subs	r4, #45	; 0x2d
 800633e:	2c01      	cmp	r4, #1
 8006340:	d909      	bls.n	8006356 <HAL_PWREx_ConfigSupply+0x56>
  return HAL_OK;
 8006342:	2000      	movs	r0, #0
 8006344:	e7ea      	b.n	800631c <HAL_PWREx_ConfigSupply+0x1c>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006346:	f7fe f8dd 	bl	8004504 <HAL_GetTick>
 800634a:	1b80      	subs	r0, r0, r6
 800634c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006350:	d9ed      	bls.n	800632e <HAL_PWREx_ConfigSupply+0x2e>
      return HAL_ERROR;
 8006352:	2001      	movs	r0, #1
 8006354:	e7e2      	b.n	800631c <HAL_PWREx_ConfigSupply+0x1c>
    tickstart = HAL_GetTick ();
 8006356:	f7fe f8d5 	bl	8004504 <HAL_GetTick>
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 800635a:	4d07      	ldr	r5, [pc, #28]	; (8006378 <HAL_PWREx_ConfigSupply+0x78>)
    tickstart = HAL_GetTick ();
 800635c:	4604      	mov	r4, r0
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 800635e:	68eb      	ldr	r3, [r5, #12]
 8006360:	f003 0311 	and.w	r3, r3, #17
 8006364:	2b11      	cmp	r3, #17
 8006366:	d0ec      	beq.n	8006342 <HAL_PWREx_ConfigSupply+0x42>
      if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006368:	f7fe f8cc 	bl	8004504 <HAL_GetTick>
 800636c:	1b00      	subs	r0, r0, r4
 800636e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006372:	d9f4      	bls.n	800635e <HAL_PWREx_ConfigSupply+0x5e>
 8006374:	e7ed      	b.n	8006352 <HAL_PWREx_ConfigSupply+0x52>
 8006376:	bf00      	nop
 8006378:	58024800 	.word	0x58024800

0800637c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800637c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800637e:	4604      	mov	r4, r0
 8006380:	b908      	cbnz	r0, 8006386 <HAL_RCC_OscConfig+0xa>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8006382:	2001      	movs	r0, #1
 8006384:	e080      	b.n	8006488 <HAL_RCC_OscConfig+0x10c>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006386:	6803      	ldr	r3, [r0, #0]
 8006388:	07d8      	lsls	r0, r3, #31
 800638a:	d453      	bmi.n	8006434 <HAL_RCC_OscConfig+0xb8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800638c:	6823      	ldr	r3, [r4, #0]
 800638e:	0799      	lsls	r1, r3, #30
 8006390:	f100 80a0 	bmi.w	80064d4 <HAL_RCC_OscConfig+0x158>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006394:	6823      	ldr	r3, [r4, #0]
 8006396:	06da      	lsls	r2, r3, #27
 8006398:	d51c      	bpl.n	80063d4 <HAL_RCC_OscConfig+0x58>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800639a:	4a95      	ldr	r2, [pc, #596]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 800639c:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800639e:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80063a0:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 80063a4:	2b08      	cmp	r3, #8
 80063a6:	d007      	beq.n	80063b8 <HAL_RCC_OscConfig+0x3c>
 80063a8:	2b18      	cmp	r3, #24
 80063aa:	f040 80e1 	bne.w	8006570 <HAL_RCC_OscConfig+0x1f4>
 80063ae:	f001 0303 	and.w	r3, r1, #3
 80063b2:	2b01      	cmp	r3, #1
 80063b4:	f040 80dc 	bne.w	8006570 <HAL_RCC_OscConfig+0x1f4>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 80063b8:	6813      	ldr	r3, [r2, #0]
 80063ba:	05db      	lsls	r3, r3, #23
 80063bc:	d502      	bpl.n	80063c4 <HAL_RCC_OscConfig+0x48>
 80063be:	69e3      	ldr	r3, [r4, #28]
 80063c0:	2b80      	cmp	r3, #128	; 0x80
 80063c2:	d1de      	bne.n	8006382 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 80063c4:	4a8a      	ldr	r2, [pc, #552]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 80063c6:	6a21      	ldr	r1, [r4, #32]
 80063c8:	68d3      	ldr	r3, [r2, #12]
 80063ca:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 80063ce:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80063d2:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80063d4:	6823      	ldr	r3, [r4, #0]
 80063d6:	0719      	lsls	r1, r3, #28
 80063d8:	f100 80f6 	bmi.w	80065c8 <HAL_RCC_OscConfig+0x24c>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80063dc:	6823      	ldr	r3, [r4, #0]
 80063de:	069a      	lsls	r2, r3, #26
 80063e0:	f100 811b 	bmi.w	800661a <HAL_RCC_OscConfig+0x29e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80063e4:	6823      	ldr	r3, [r4, #0]
 80063e6:	075d      	lsls	r5, r3, #29
 80063e8:	d51e      	bpl.n	8006428 <HAL_RCC_OscConfig+0xac>
    PWR->CR1 |= PWR_CR1_DBP;
 80063ea:	4d82      	ldr	r5, [pc, #520]	; (80065f4 <HAL_RCC_OscConfig+0x278>)
 80063ec:	682b      	ldr	r3, [r5, #0]
 80063ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80063f2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80063f4:	f7fe f886 	bl	8004504 <HAL_GetTick>
 80063f8:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80063fa:	682b      	ldr	r3, [r5, #0]
 80063fc:	05da      	lsls	r2, r3, #23
 80063fe:	f140 8131 	bpl.w	8006664 <HAL_RCC_OscConfig+0x2e8>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006402:	68a3      	ldr	r3, [r4, #8]
 8006404:	4d7a      	ldr	r5, [pc, #488]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 8006406:	2b01      	cmp	r3, #1
 8006408:	f040 8133 	bne.w	8006672 <HAL_RCC_OscConfig+0x2f6>
 800640c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800640e:	f043 0301 	orr.w	r3, r3, #1
 8006412:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006414:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006418:	f7fe f874 	bl	8004504 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800641c:	4e74      	ldr	r6, [pc, #464]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
      tickstart = HAL_GetTick();
 800641e:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006420:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006422:	079b      	lsls	r3, r3, #30
 8006424:	f140 814b 	bpl.w	80066be <HAL_RCC_OscConfig+0x342>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006428:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800642a:	2800      	cmp	r0, #0
 800642c:	f040 814e 	bne.w	80066cc <HAL_RCC_OscConfig+0x350>
          __HAL_RCC_PLLFRACN_ENABLE();
        }
      }
    }
  }
  return HAL_OK;
 8006430:	2000      	movs	r0, #0
 8006432:	e029      	b.n	8006488 <HAL_RCC_OscConfig+0x10c>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006434:	4a6e      	ldr	r2, [pc, #440]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 8006436:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006438:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800643a:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 800643e:	2b10      	cmp	r3, #16
 8006440:	d005      	beq.n	800644e <HAL_RCC_OscConfig+0xd2>
 8006442:	2b18      	cmp	r3, #24
 8006444:	d10a      	bne.n	800645c <HAL_RCC_OscConfig+0xe0>
 8006446:	f001 0303 	and.w	r3, r1, #3
 800644a:	2b02      	cmp	r3, #2
 800644c:	d106      	bne.n	800645c <HAL_RCC_OscConfig+0xe0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800644e:	6813      	ldr	r3, [r2, #0]
 8006450:	039a      	lsls	r2, r3, #14
 8006452:	d59b      	bpl.n	800638c <HAL_RCC_OscConfig+0x10>
 8006454:	6863      	ldr	r3, [r4, #4]
 8006456:	2b00      	cmp	r3, #0
 8006458:	d198      	bne.n	800638c <HAL_RCC_OscConfig+0x10>
 800645a:	e792      	b.n	8006382 <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800645c:	6863      	ldr	r3, [r4, #4]
 800645e:	4d64      	ldr	r5, [pc, #400]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 8006460:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006464:	d111      	bne.n	800648a <HAL_RCC_OscConfig+0x10e>
 8006466:	682b      	ldr	r3, [r5, #0]
 8006468:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800646c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800646e:	f7fe f849 	bl	8004504 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006472:	4e5f      	ldr	r6, [pc, #380]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
        tickstart = HAL_GetTick();
 8006474:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006476:	6833      	ldr	r3, [r6, #0]
 8006478:	039b      	lsls	r3, r3, #14
 800647a:	d487      	bmi.n	800638c <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800647c:	f7fe f842 	bl	8004504 <HAL_GetTick>
 8006480:	1b40      	subs	r0, r0, r5
 8006482:	2864      	cmp	r0, #100	; 0x64
 8006484:	d9f7      	bls.n	8006476 <HAL_RCC_OscConfig+0xfa>
            return HAL_TIMEOUT;
 8006486:	2003      	movs	r0, #3
}
 8006488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800648a:	b9a3      	cbnz	r3, 80064b6 <HAL_RCC_OscConfig+0x13a>
 800648c:	682b      	ldr	r3, [r5, #0]
 800648e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006492:	602b      	str	r3, [r5, #0]
 8006494:	682b      	ldr	r3, [r5, #0]
 8006496:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800649a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800649c:	f7fe f832 	bl	8004504 <HAL_GetTick>
 80064a0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80064a2:	682b      	ldr	r3, [r5, #0]
 80064a4:	039f      	lsls	r7, r3, #14
 80064a6:	f57f af71 	bpl.w	800638c <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80064aa:	f7fe f82b 	bl	8004504 <HAL_GetTick>
 80064ae:	1b80      	subs	r0, r0, r6
 80064b0:	2864      	cmp	r0, #100	; 0x64
 80064b2:	d9f6      	bls.n	80064a2 <HAL_RCC_OscConfig+0x126>
 80064b4:	e7e7      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80064b6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80064ba:	682b      	ldr	r3, [r5, #0]
 80064bc:	d103      	bne.n	80064c6 <HAL_RCC_OscConfig+0x14a>
 80064be:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80064c2:	602b      	str	r3, [r5, #0]
 80064c4:	e7cf      	b.n	8006466 <HAL_RCC_OscConfig+0xea>
 80064c6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80064ca:	602b      	str	r3, [r5, #0]
 80064cc:	682b      	ldr	r3, [r5, #0]
 80064ce:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80064d2:	e7cb      	b.n	800646c <HAL_RCC_OscConfig+0xf0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80064d4:	4946      	ldr	r1, [pc, #280]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 80064d6:	68e2      	ldr	r2, [r4, #12]
 80064d8:	690b      	ldr	r3, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 80064da:	6a88      	ldr	r0, [r1, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 80064dc:	f013 0338 	ands.w	r3, r3, #56	; 0x38
 80064e0:	d003      	beq.n	80064ea <HAL_RCC_OscConfig+0x16e>
 80064e2:	2b18      	cmp	r3, #24
 80064e4:	d121      	bne.n	800652a <HAL_RCC_OscConfig+0x1ae>
 80064e6:	0780      	lsls	r0, r0, #30
 80064e8:	d11f      	bne.n	800652a <HAL_RCC_OscConfig+0x1ae>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80064ea:	680b      	ldr	r3, [r1, #0]
 80064ec:	075b      	lsls	r3, r3, #29
 80064ee:	d502      	bpl.n	80064f6 <HAL_RCC_OscConfig+0x17a>
 80064f0:	2a00      	cmp	r2, #0
 80064f2:	f43f af46 	beq.w	8006382 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 80064f6:	4d3e      	ldr	r5, [pc, #248]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 80064f8:	682b      	ldr	r3, [r5, #0]
 80064fa:	f023 0319 	bic.w	r3, r3, #25
 80064fe:	4313      	orrs	r3, r2
 8006500:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006502:	f7fd ffff 	bl	8004504 <HAL_GetTick>
 8006506:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006508:	682b      	ldr	r3, [r5, #0]
 800650a:	075f      	lsls	r7, r3, #29
 800650c:	d507      	bpl.n	800651e <HAL_RCC_OscConfig+0x1a2>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800650e:	686b      	ldr	r3, [r5, #4]
 8006510:	6922      	ldr	r2, [r4, #16]
 8006512:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8006516:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800651a:	606b      	str	r3, [r5, #4]
 800651c:	e73a      	b.n	8006394 <HAL_RCC_OscConfig+0x18>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800651e:	f7fd fff1 	bl	8004504 <HAL_GetTick>
 8006522:	1b80      	subs	r0, r0, r6
 8006524:	2802      	cmp	r0, #2
 8006526:	d9ef      	bls.n	8006508 <HAL_RCC_OscConfig+0x18c>
 8006528:	e7ad      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800652a:	4d31      	ldr	r5, [pc, #196]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 800652c:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800652e:	b17a      	cbz	r2, 8006550 <HAL_RCC_OscConfig+0x1d4>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006530:	f023 0319 	bic.w	r3, r3, #25
 8006534:	4313      	orrs	r3, r2
 8006536:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006538:	f7fd ffe4 	bl	8004504 <HAL_GetTick>
 800653c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800653e:	682b      	ldr	r3, [r5, #0]
 8006540:	0758      	lsls	r0, r3, #29
 8006542:	d4e4      	bmi.n	800650e <HAL_RCC_OscConfig+0x192>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006544:	f7fd ffde 	bl	8004504 <HAL_GetTick>
 8006548:	1b80      	subs	r0, r0, r6
 800654a:	2802      	cmp	r0, #2
 800654c:	d9f7      	bls.n	800653e <HAL_RCC_OscConfig+0x1c2>
 800654e:	e79a      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
        __HAL_RCC_HSI_DISABLE();
 8006550:	f023 0301 	bic.w	r3, r3, #1
 8006554:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006556:	f7fd ffd5 	bl	8004504 <HAL_GetTick>
 800655a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 800655c:	682b      	ldr	r3, [r5, #0]
 800655e:	0759      	lsls	r1, r3, #29
 8006560:	f57f af18 	bpl.w	8006394 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006564:	f7fd ffce 	bl	8004504 <HAL_GetTick>
 8006568:	1b80      	subs	r0, r0, r6
 800656a:	2802      	cmp	r0, #2
 800656c:	d9f6      	bls.n	800655c <HAL_RCC_OscConfig+0x1e0>
 800656e:	e78a      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8006570:	69e3      	ldr	r3, [r4, #28]
 8006572:	4d1f      	ldr	r5, [pc, #124]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 8006574:	b1bb      	cbz	r3, 80065a6 <HAL_RCC_OscConfig+0x22a>
        __HAL_RCC_CSI_ENABLE();
 8006576:	682b      	ldr	r3, [r5, #0]
 8006578:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800657c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800657e:	f7fd ffc1 	bl	8004504 <HAL_GetTick>
 8006582:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006584:	682b      	ldr	r3, [r5, #0]
 8006586:	05df      	lsls	r7, r3, #23
 8006588:	d507      	bpl.n	800659a <HAL_RCC_OscConfig+0x21e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800658a:	68eb      	ldr	r3, [r5, #12]
 800658c:	6a22      	ldr	r2, [r4, #32]
 800658e:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006592:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006596:	60eb      	str	r3, [r5, #12]
 8006598:	e71c      	b.n	80063d4 <HAL_RCC_OscConfig+0x58>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800659a:	f7fd ffb3 	bl	8004504 <HAL_GetTick>
 800659e:	1b80      	subs	r0, r0, r6
 80065a0:	2802      	cmp	r0, #2
 80065a2:	d9ef      	bls.n	8006584 <HAL_RCC_OscConfig+0x208>
 80065a4:	e76f      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
        __HAL_RCC_CSI_DISABLE();
 80065a6:	682b      	ldr	r3, [r5, #0]
 80065a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80065ac:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80065ae:	f7fd ffa9 	bl	8004504 <HAL_GetTick>
 80065b2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 80065b4:	682b      	ldr	r3, [r5, #0]
 80065b6:	05d8      	lsls	r0, r3, #23
 80065b8:	f57f af0c 	bpl.w	80063d4 <HAL_RCC_OscConfig+0x58>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 80065bc:	f7fd ffa2 	bl	8004504 <HAL_GetTick>
 80065c0:	1b80      	subs	r0, r0, r6
 80065c2:	2802      	cmp	r0, #2
 80065c4:	d9f6      	bls.n	80065b4 <HAL_RCC_OscConfig+0x238>
 80065c6:	e75e      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80065c8:	6963      	ldr	r3, [r4, #20]
 80065ca:	4d09      	ldr	r5, [pc, #36]	; (80065f0 <HAL_RCC_OscConfig+0x274>)
 80065cc:	b1a3      	cbz	r3, 80065f8 <HAL_RCC_OscConfig+0x27c>
      __HAL_RCC_LSI_ENABLE();
 80065ce:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80065d0:	f043 0301 	orr.w	r3, r3, #1
 80065d4:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 80065d6:	f7fd ff95 	bl	8004504 <HAL_GetTick>
 80065da:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80065dc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80065de:	079b      	lsls	r3, r3, #30
 80065e0:	f53f aefc 	bmi.w	80063dc <HAL_RCC_OscConfig+0x60>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80065e4:	f7fd ff8e 	bl	8004504 <HAL_GetTick>
 80065e8:	1b80      	subs	r0, r0, r6
 80065ea:	2802      	cmp	r0, #2
 80065ec:	d9f6      	bls.n	80065dc <HAL_RCC_OscConfig+0x260>
 80065ee:	e74a      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
 80065f0:	58024400 	.word	0x58024400
 80065f4:	58024800 	.word	0x58024800
      __HAL_RCC_LSI_DISABLE();
 80065f8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80065fa:	f023 0301 	bic.w	r3, r3, #1
 80065fe:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006600:	f7fd ff80 	bl	8004504 <HAL_GetTick>
 8006604:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006606:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006608:	079f      	lsls	r7, r3, #30
 800660a:	f57f aee7 	bpl.w	80063dc <HAL_RCC_OscConfig+0x60>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800660e:	f7fd ff79 	bl	8004504 <HAL_GetTick>
 8006612:	1b80      	subs	r0, r0, r6
 8006614:	2802      	cmp	r0, #2
 8006616:	d9f6      	bls.n	8006606 <HAL_RCC_OscConfig+0x28a>
 8006618:	e735      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 800661a:	69a3      	ldr	r3, [r4, #24]
 800661c:	4d93      	ldr	r5, [pc, #588]	; (800686c <HAL_RCC_OscConfig+0x4f0>)
 800661e:	b183      	cbz	r3, 8006642 <HAL_RCC_OscConfig+0x2c6>
      __HAL_RCC_HSI48_ENABLE();
 8006620:	682b      	ldr	r3, [r5, #0]
 8006622:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006626:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006628:	f7fd ff6c 	bl	8004504 <HAL_GetTick>
 800662c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 800662e:	682b      	ldr	r3, [r5, #0]
 8006630:	0498      	lsls	r0, r3, #18
 8006632:	f53f aed7 	bmi.w	80063e4 <HAL_RCC_OscConfig+0x68>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006636:	f7fd ff65 	bl	8004504 <HAL_GetTick>
 800663a:	1b80      	subs	r0, r0, r6
 800663c:	2802      	cmp	r0, #2
 800663e:	d9f6      	bls.n	800662e <HAL_RCC_OscConfig+0x2b2>
 8006640:	e721      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      __HAL_RCC_HSI48_DISABLE();
 8006642:	682b      	ldr	r3, [r5, #0]
 8006644:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006648:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800664a:	f7fd ff5b 	bl	8004504 <HAL_GetTick>
 800664e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006650:	682b      	ldr	r3, [r5, #0]
 8006652:	0499      	lsls	r1, r3, #18
 8006654:	f57f aec6 	bpl.w	80063e4 <HAL_RCC_OscConfig+0x68>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006658:	f7fd ff54 	bl	8004504 <HAL_GetTick>
 800665c:	1b80      	subs	r0, r0, r6
 800665e:	2802      	cmp	r0, #2
 8006660:	d9f6      	bls.n	8006650 <HAL_RCC_OscConfig+0x2d4>
 8006662:	e710      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006664:	f7fd ff4e 	bl	8004504 <HAL_GetTick>
 8006668:	1b80      	subs	r0, r0, r6
 800666a:	2864      	cmp	r0, #100	; 0x64
 800666c:	f67f aec5 	bls.w	80063fa <HAL_RCC_OscConfig+0x7e>
 8006670:	e709      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006672:	b9b3      	cbnz	r3, 80066a2 <HAL_RCC_OscConfig+0x326>
 8006674:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006676:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800667a:	f023 0301 	bic.w	r3, r3, #1
 800667e:	672b      	str	r3, [r5, #112]	; 0x70
 8006680:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006682:	f023 0304 	bic.w	r3, r3, #4
 8006686:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006688:	f7fd ff3c 	bl	8004504 <HAL_GetTick>
 800668c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800668e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006690:	0798      	lsls	r0, r3, #30
 8006692:	f57f aec9 	bpl.w	8006428 <HAL_RCC_OscConfig+0xac>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006696:	f7fd ff35 	bl	8004504 <HAL_GetTick>
 800669a:	1b80      	subs	r0, r0, r6
 800669c:	42b8      	cmp	r0, r7
 800669e:	d9f6      	bls.n	800668e <HAL_RCC_OscConfig+0x312>
 80066a0:	e6f1      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80066a2:	2b05      	cmp	r3, #5
 80066a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80066a6:	d103      	bne.n	80066b0 <HAL_RCC_OscConfig+0x334>
 80066a8:	f043 0304 	orr.w	r3, r3, #4
 80066ac:	672b      	str	r3, [r5, #112]	; 0x70
 80066ae:	e6ad      	b.n	800640c <HAL_RCC_OscConfig+0x90>
 80066b0:	f023 0301 	bic.w	r3, r3, #1
 80066b4:	672b      	str	r3, [r5, #112]	; 0x70
 80066b6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80066b8:	f023 0304 	bic.w	r3, r3, #4
 80066bc:	e6a9      	b.n	8006412 <HAL_RCC_OscConfig+0x96>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80066be:	f7fd ff21 	bl	8004504 <HAL_GetTick>
 80066c2:	1b40      	subs	r0, r0, r5
 80066c4:	42b8      	cmp	r0, r7
 80066c6:	f67f aeab 	bls.w	8006420 <HAL_RCC_OscConfig+0xa4>
 80066ca:	e6dc      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80066cc:	4d67      	ldr	r5, [pc, #412]	; (800686c <HAL_RCC_OscConfig+0x4f0>)
 80066ce:	692b      	ldr	r3, [r5, #16]
 80066d0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80066d4:	2b18      	cmp	r3, #24
 80066d6:	d07a      	beq.n	80067ce <HAL_RCC_OscConfig+0x452>
        __HAL_RCC_PLL_DISABLE();
 80066d8:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80066da:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80066dc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80066e0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80066e2:	d167      	bne.n	80067b4 <HAL_RCC_OscConfig+0x438>
        tickstart = HAL_GetTick();
 80066e4:	f7fd ff0e 	bl	8004504 <HAL_GetTick>
 80066e8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80066ea:	682b      	ldr	r3, [r5, #0]
 80066ec:	0199      	lsls	r1, r3, #6
 80066ee:	d45b      	bmi.n	80067a8 <HAL_RCC_OscConfig+0x42c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80066f0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80066f2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80066f4:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 80066f8:	f023 0303 	bic.w	r3, r3, #3
 80066fc:	4313      	orrs	r3, r2
 80066fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006700:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8006704:	62ab      	str	r3, [r5, #40]	; 0x28
 8006706:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006708:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800670a:	3b01      	subs	r3, #1
 800670c:	3a01      	subs	r2, #1
 800670e:	025b      	lsls	r3, r3, #9
 8006710:	0412      	lsls	r2, r2, #16
 8006712:	b29b      	uxth	r3, r3
 8006714:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006718:	4313      	orrs	r3, r2
 800671a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800671c:	3a01      	subs	r2, #1
 800671e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006722:	4313      	orrs	r3, r2
 8006724:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006726:	3a01      	subs	r2, #1
 8006728:	0612      	lsls	r2, r2, #24
 800672a:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 800672e:	4313      	orrs	r3, r2
 8006730:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
 8006732:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006734:	f023 0301 	bic.w	r3, r3, #1
 8006738:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 800673a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800673c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800673e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006742:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006746:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800674a:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 800674c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800674e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006750:	f023 030c 	bic.w	r3, r3, #12
 8006754:	4313      	orrs	r3, r2
 8006756:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8006758:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800675a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800675c:	f023 0302 	bic.w	r3, r3, #2
 8006760:	4313      	orrs	r3, r2
 8006762:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8006764:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006766:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800676a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800676c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800676e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006772:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8006774:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006776:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800677a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
 800677c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800677e:	f043 0301 	orr.w	r3, r3, #1
 8006782:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8006784:	682b      	ldr	r3, [r5, #0]
 8006786:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800678a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800678c:	f7fd feba 	bl	8004504 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006790:	4d36      	ldr	r5, [pc, #216]	; (800686c <HAL_RCC_OscConfig+0x4f0>)
        tickstart = HAL_GetTick();
 8006792:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006794:	682b      	ldr	r3, [r5, #0]
 8006796:	019a      	lsls	r2, r3, #6
 8006798:	f53f ae4a 	bmi.w	8006430 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800679c:	f7fd feb2 	bl	8004504 <HAL_GetTick>
 80067a0:	1b00      	subs	r0, r0, r4
 80067a2:	2802      	cmp	r0, #2
 80067a4:	d9f6      	bls.n	8006794 <HAL_RCC_OscConfig+0x418>
 80067a6:	e66e      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80067a8:	f7fd feac 	bl	8004504 <HAL_GetTick>
 80067ac:	1b80      	subs	r0, r0, r6
 80067ae:	2802      	cmp	r0, #2
 80067b0:	d99b      	bls.n	80066ea <HAL_RCC_OscConfig+0x36e>
 80067b2:	e668      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
        tickstart = HAL_GetTick();
 80067b4:	f7fd fea6 	bl	8004504 <HAL_GetTick>
 80067b8:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80067ba:	682b      	ldr	r3, [r5, #0]
 80067bc:	019b      	lsls	r3, r3, #6
 80067be:	f57f ae37 	bpl.w	8006430 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80067c2:	f7fd fe9f 	bl	8004504 <HAL_GetTick>
 80067c6:	1b00      	subs	r0, r0, r4
 80067c8:	2802      	cmp	r0, #2
 80067ca:	d9f6      	bls.n	80067ba <HAL_RCC_OscConfig+0x43e>
 80067cc:	e65b      	b.n	8006486 <HAL_RCC_OscConfig+0x10a>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80067ce:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 80067d0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 80067d2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80067d4:	f43f ae58 	beq.w	8006488 <HAL_RCC_OscConfig+0x10c>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80067d8:	f002 0103 	and.w	r1, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80067dc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80067de:	4281      	cmp	r1, r0
 80067e0:	f47f adcf 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80067e4:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80067e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80067ea:	428a      	cmp	r2, r1
 80067ec:	f47f adc9 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80067f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80067f2:	f3c3 0108 	ubfx	r1, r3, #0, #9
 80067f6:	3a01      	subs	r2, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80067f8:	4291      	cmp	r1, r2
 80067fa:	f47f adc2 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80067fe:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8006800:	f3c3 2146 	ubfx	r1, r3, #9, #7
 8006804:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006806:	4291      	cmp	r1, r2
 8006808:	f47f adbb 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800680c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800680e:	f3c3 4106 	ubfx	r1, r3, #16, #7
 8006812:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006814:	4291      	cmp	r1, r2
 8006816:	f47f adb4 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 800681a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800681c:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006820:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006822:	4293      	cmp	r3, r2
 8006824:	f47f adad 	bne.w	8006382 <HAL_RCC_OscConfig+0x6>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006828:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 800682a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 800682c:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006830:	429a      	cmp	r2, r3
 8006832:	f43f adfd 	beq.w	8006430 <HAL_RCC_OscConfig+0xb4>
          __HAL_RCC_PLLFRACN_DISABLE();
 8006836:	4d0d      	ldr	r5, [pc, #52]	; (800686c <HAL_RCC_OscConfig+0x4f0>)
 8006838:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800683a:	f023 0301 	bic.w	r3, r3, #1
 800683e:	62eb      	str	r3, [r5, #44]	; 0x2c
          tickstart = HAL_GetTick();
 8006840:	f7fd fe60 	bl	8004504 <HAL_GetTick>
 8006844:	4606      	mov	r6, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8006846:	f7fd fe5d 	bl	8004504 <HAL_GetTick>
 800684a:	42b0      	cmp	r0, r6
 800684c:	d0fb      	beq.n	8006846 <HAL_RCC_OscConfig+0x4ca>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 800684e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006850:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006852:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006856:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800685a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800685e:	636b      	str	r3, [r5, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
 8006860:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006862:	f043 0301 	orr.w	r3, r3, #1
 8006866:	62eb      	str	r3, [r5, #44]	; 0x2c
 8006868:	e5e2      	b.n	8006430 <HAL_RCC_OscConfig+0xb4>
 800686a:	bf00      	nop
 800686c:	58024400 	.word	0x58024400

08006870 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006870:	4b49      	ldr	r3, [pc, #292]	; (8006998 <HAL_RCC_GetSysClockFreq+0x128>)
 8006872:	691a      	ldr	r2, [r3, #16]
 8006874:	f002 0238 	and.w	r2, r2, #56	; 0x38
 8006878:	2a10      	cmp	r2, #16
{
 800687a:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800687c:	f000 8088 	beq.w	8006990 <HAL_RCC_GetSysClockFreq+0x120>
 8006880:	2a18      	cmp	r2, #24
 8006882:	d00c      	beq.n	800689e <HAL_RCC_GetSysClockFreq+0x2e>
 8006884:	2a00      	cmp	r2, #0
 8006886:	f040 8085 	bne.w	8006994 <HAL_RCC_GetSysClockFreq+0x124>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800688a:	681a      	ldr	r2, [r3, #0]
 800688c:	4843      	ldr	r0, [pc, #268]	; (800699c <HAL_RCC_GetSysClockFreq+0x12c>)
 800688e:	f012 0f20 	tst.w	r2, #32
 8006892:	d003      	beq.n	800689c <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006894:	681b      	ldr	r3, [r3, #0]
 8006896:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 800689a:	40d8      	lsrs	r0, r3
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
 800689c:	bd30      	pop	{r4, r5, pc}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800689e:	6a99      	ldr	r1, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 80068a0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 80068a2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
      if (pllm != 0U)
 80068a4:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 80068a8:	f3c5 1005 	ubfx	r0, r5, #4, #6
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 80068ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
      if (pllm != 0U)
 80068ae:	d0f5      	beq.n	800689c <HAL_RCC_GetSysClockFreq+0x2c>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 80068b0:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 80068b4:	f004 0401 	and.w	r4, r4, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80068b8:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068bc:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 80068c0:	4362      	muls	r2, r4
 80068c2:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80068c6:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 80068cc:	ee06 2a90 	vmov	s13, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068d0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
 80068d4:	d04e      	beq.n	8006974 <HAL_RCC_GetSysClockFreq+0x104>
 80068d6:	2902      	cmp	r1, #2
 80068d8:	d03e      	beq.n	8006958 <HAL_RCC_GetSysClockFreq+0xe8>
 80068da:	2900      	cmp	r1, #0
 80068dc:	d14a      	bne.n	8006974 <HAL_RCC_GetSysClockFreq+0x104>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80068de:	681a      	ldr	r2, [r3, #0]
 80068e0:	0692      	lsls	r2, r2, #26
 80068e2:	d527      	bpl.n	8006934 <HAL_RCC_GetSysClockFreq+0xc4>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80068e4:	6819      	ldr	r1, [r3, #0]
 80068e6:	4a2d      	ldr	r2, [pc, #180]	; (800699c <HAL_RCC_GetSysClockFreq+0x12c>)
 80068e8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80068ee:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80068f4:	ee07 2a90 	vmov	s15, r2
 80068f8:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 80068fc:	eec5 7a87 	vdiv.f32	s15, s11, s14
 8006900:	ee07 3a10 	vmov	s14, r3
 8006904:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006908:	ee37 7a26 	vadd.f32	s14, s14, s13
 800690c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8006910:	ee67 7a87 	vmul.f32	s15, s15, s14
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8006914:	4b20      	ldr	r3, [pc, #128]	; (8006998 <HAL_RCC_GetSysClockFreq+0x128>)
 8006916:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006918:	f3c3 2346 	ubfx	r3, r3, #9, #7
 800691c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 800691e:	ee07 3a10 	vmov	s14, r3
 8006922:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006926:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800692a:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800692e:	ee17 0a90 	vmov	r0, s15
 8006932:	e7b3      	b.n	800689c <HAL_RCC_GetSysClockFreq+0x2c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006936:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800693a:	ee07 3a90 	vmov	s15, r3
 800693e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006942:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006946:	ee77 7a86 	vadd.f32	s15, s15, s12
 800694a:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80069a0 <HAL_RCC_GetSysClockFreq+0x130>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800694e:	eec6 6a07 	vdiv.f32	s13, s12, s14
 8006952:	ee67 7aa6 	vmul.f32	s15, s15, s13
            break;
 8006956:	e7dd      	b.n	8006914 <HAL_RCC_GetSysClockFreq+0xa4>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800695a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800695e:	ee07 3a90 	vmov	s15, r3
 8006962:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006966:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800696a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800696e:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 80069a4 <HAL_RCC_GetSysClockFreq+0x134>
 8006972:	e7ec      	b.n	800694e <HAL_RCC_GetSysClockFreq+0xde>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006976:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800697a:	ee07 3a90 	vmov	s15, r3
 800697e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006982:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006986:	ee77 7a86 	vadd.f32	s15, s15, s12
 800698a:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80069a8 <HAL_RCC_GetSysClockFreq+0x138>
 800698e:	e7de      	b.n	800694e <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006990:	4806      	ldr	r0, [pc, #24]	; (80069ac <HAL_RCC_GetSysClockFreq+0x13c>)
 8006992:	e783      	b.n	800689c <HAL_RCC_GetSysClockFreq+0x2c>
      sysclockfreq = CSI_VALUE;
 8006994:	4806      	ldr	r0, [pc, #24]	; (80069b0 <HAL_RCC_GetSysClockFreq+0x140>)
 8006996:	e781      	b.n	800689c <HAL_RCC_GetSysClockFreq+0x2c>
 8006998:	58024400 	.word	0x58024400
 800699c:	03d09000 	.word	0x03d09000
 80069a0:	4c742400 	.word	0x4c742400
 80069a4:	4bbebc20 	.word	0x4bbebc20
 80069a8:	4a742400 	.word	0x4a742400
 80069ac:	017d7840 	.word	0x017d7840
 80069b0:	003d0900 	.word	0x003d0900

080069b4 <HAL_RCC_ClockConfig>:
{
 80069b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80069b8:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 80069ba:	4604      	mov	r4, r0
 80069bc:	b910      	cbnz	r0, 80069c4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80069be:	2001      	movs	r0, #1
}
 80069c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80069c4:	4a88      	ldr	r2, [pc, #544]	; (8006be8 <HAL_RCC_ClockConfig+0x234>)
 80069c6:	6813      	ldr	r3, [r2, #0]
 80069c8:	f003 030f 	and.w	r3, r3, #15
 80069cc:	428b      	cmp	r3, r1
 80069ce:	f0c0 8093 	bcc.w	8006af8 <HAL_RCC_ClockConfig+0x144>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80069d2:	6823      	ldr	r3, [r4, #0]
 80069d4:	075f      	lsls	r7, r3, #29
 80069d6:	f100 809b 	bmi.w	8006b10 <HAL_RCC_ClockConfig+0x15c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80069da:	071e      	lsls	r6, r3, #28
 80069dc:	d50b      	bpl.n	80069f6 <HAL_RCC_ClockConfig+0x42>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80069de:	4983      	ldr	r1, [pc, #524]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 80069e0:	6960      	ldr	r0, [r4, #20]
 80069e2:	69ca      	ldr	r2, [r1, #28]
 80069e4:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80069e8:	4290      	cmp	r0, r2
 80069ea:	d904      	bls.n	80069f6 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80069ec:	69ca      	ldr	r2, [r1, #28]
 80069ee:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80069f2:	4302      	orrs	r2, r0
 80069f4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80069f6:	06d8      	lsls	r0, r3, #27
 80069f8:	d50b      	bpl.n	8006a12 <HAL_RCC_ClockConfig+0x5e>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80069fa:	497c      	ldr	r1, [pc, #496]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 80069fc:	69a0      	ldr	r0, [r4, #24]
 80069fe:	69ca      	ldr	r2, [r1, #28]
 8006a00:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8006a04:	4290      	cmp	r0, r2
 8006a06:	d904      	bls.n	8006a12 <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8006a08:	69ca      	ldr	r2, [r1, #28]
 8006a0a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a0e:	4302      	orrs	r2, r0
 8006a10:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8006a12:	0699      	lsls	r1, r3, #26
 8006a14:	d50b      	bpl.n	8006a2e <HAL_RCC_ClockConfig+0x7a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8006a16:	4975      	ldr	r1, [pc, #468]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006a18:	69e0      	ldr	r0, [r4, #28]
 8006a1a:	6a0a      	ldr	r2, [r1, #32]
 8006a1c:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006a20:	4290      	cmp	r0, r2
 8006a22:	d904      	bls.n	8006a2e <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8006a24:	6a0a      	ldr	r2, [r1, #32]
 8006a26:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006a2a:	4302      	orrs	r2, r0
 8006a2c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006a2e:	079a      	lsls	r2, r3, #30
 8006a30:	d50b      	bpl.n	8006a4a <HAL_RCC_ClockConfig+0x96>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8006a32:	496e      	ldr	r1, [pc, #440]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006a34:	68e0      	ldr	r0, [r4, #12]
 8006a36:	698a      	ldr	r2, [r1, #24]
 8006a38:	f002 020f 	and.w	r2, r2, #15
 8006a3c:	4290      	cmp	r0, r2
 8006a3e:	d904      	bls.n	8006a4a <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006a40:	698a      	ldr	r2, [r1, #24]
 8006a42:	f022 020f 	bic.w	r2, r2, #15
 8006a46:	4302      	orrs	r2, r0
 8006a48:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006a4a:	07df      	lsls	r7, r3, #31
 8006a4c:	d46e      	bmi.n	8006b2c <HAL_RCC_ClockConfig+0x178>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006a4e:	6823      	ldr	r3, [r4, #0]
 8006a50:	079e      	lsls	r6, r3, #30
 8006a52:	f100 80a1 	bmi.w	8006b98 <HAL_RCC_ClockConfig+0x1e4>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006a56:	4964      	ldr	r1, [pc, #400]	; (8006be8 <HAL_RCC_ClockConfig+0x234>)
 8006a58:	680a      	ldr	r2, [r1, #0]
 8006a5a:	f002 020f 	and.w	r2, r2, #15
 8006a5e:	42aa      	cmp	r2, r5
 8006a60:	f200 80a8 	bhi.w	8006bb4 <HAL_RCC_ClockConfig+0x200>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8006a64:	0758      	lsls	r0, r3, #29
 8006a66:	f100 80b1 	bmi.w	8006bcc <HAL_RCC_ClockConfig+0x218>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006a6a:	0719      	lsls	r1, r3, #28
 8006a6c:	d50b      	bpl.n	8006a86 <HAL_RCC_ClockConfig+0xd2>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8006a6e:	495f      	ldr	r1, [pc, #380]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006a70:	6960      	ldr	r0, [r4, #20]
 8006a72:	69ca      	ldr	r2, [r1, #28]
 8006a74:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006a78:	4290      	cmp	r0, r2
 8006a7a:	d204      	bcs.n	8006a86 <HAL_RCC_ClockConfig+0xd2>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8006a7c:	69ca      	ldr	r2, [r1, #28]
 8006a7e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006a82:	4302      	orrs	r2, r0
 8006a84:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006a86:	06da      	lsls	r2, r3, #27
 8006a88:	d50b      	bpl.n	8006aa2 <HAL_RCC_ClockConfig+0xee>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8006a8a:	4958      	ldr	r1, [pc, #352]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006a8c:	69a0      	ldr	r0, [r4, #24]
 8006a8e:	69ca      	ldr	r2, [r1, #28]
 8006a90:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8006a94:	4290      	cmp	r0, r2
 8006a96:	d204      	bcs.n	8006aa2 <HAL_RCC_ClockConfig+0xee>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8006a98:	69ca      	ldr	r2, [r1, #28]
 8006a9a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a9e:	4302      	orrs	r2, r0
 8006aa0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8006aa2:	069b      	lsls	r3, r3, #26
 8006aa4:	d50b      	bpl.n	8006abe <HAL_RCC_ClockConfig+0x10a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8006aa6:	4a51      	ldr	r2, [pc, #324]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006aa8:	69e1      	ldr	r1, [r4, #28]
 8006aaa:	6a13      	ldr	r3, [r2, #32]
 8006aac:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006ab0:	4299      	cmp	r1, r3
 8006ab2:	d204      	bcs.n	8006abe <HAL_RCC_ClockConfig+0x10a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8006ab4:	6a13      	ldr	r3, [r2, #32]
 8006ab6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006aba:	430b      	orrs	r3, r1
 8006abc:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8006abe:	f7ff fed7 	bl	8006870 <HAL_RCC_GetSysClockFreq>
 8006ac2:	494a      	ldr	r1, [pc, #296]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006ac4:	4a4a      	ldr	r2, [pc, #296]	; (8006bf0 <HAL_RCC_ClockConfig+0x23c>)
 8006ac6:	698b      	ldr	r3, [r1, #24]
 8006ac8:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8006acc:	5cd3      	ldrb	r3, [r2, r3]
 8006ace:	f003 031f 	and.w	r3, r3, #31
 8006ad2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8006ad4:	698b      	ldr	r3, [r1, #24]
 8006ad6:	f003 030f 	and.w	r3, r3, #15
 8006ada:	5cd3      	ldrb	r3, [r2, r3]
 8006adc:	4a45      	ldr	r2, [pc, #276]	; (8006bf4 <HAL_RCC_ClockConfig+0x240>)
 8006ade:	f003 031f 	and.w	r3, r3, #31
 8006ae2:	fa20 f303 	lsr.w	r3, r0, r3
 8006ae6:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 8006ae8:	4b43      	ldr	r3, [pc, #268]	; (8006bf8 <HAL_RCC_ClockConfig+0x244>)
 8006aea:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick(uwTickPrio);
 8006aec:	4b43      	ldr	r3, [pc, #268]	; (8006bfc <HAL_RCC_ClockConfig+0x248>)
}
 8006aee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
 8006af2:	6818      	ldr	r0, [r3, #0]
 8006af4:	f7fa ba5c 	b.w	8000fb0 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006af8:	6813      	ldr	r3, [r2, #0]
 8006afa:	f023 030f 	bic.w	r3, r3, #15
 8006afe:	430b      	orrs	r3, r1
 8006b00:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b02:	6813      	ldr	r3, [r2, #0]
 8006b04:	f003 030f 	and.w	r3, r3, #15
 8006b08:	428b      	cmp	r3, r1
 8006b0a:	f47f af58 	bne.w	80069be <HAL_RCC_ClockConfig+0xa>
 8006b0e:	e760      	b.n	80069d2 <HAL_RCC_ClockConfig+0x1e>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8006b10:	4936      	ldr	r1, [pc, #216]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006b12:	6920      	ldr	r0, [r4, #16]
 8006b14:	698a      	ldr	r2, [r1, #24]
 8006b16:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006b1a:	4290      	cmp	r0, r2
 8006b1c:	f67f af5d 	bls.w	80069da <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8006b20:	698a      	ldr	r2, [r1, #24]
 8006b22:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006b26:	4302      	orrs	r2, r0
 8006b28:	618a      	str	r2, [r1, #24]
 8006b2a:	e756      	b.n	80069da <HAL_RCC_ClockConfig+0x26>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8006b2c:	4b2f      	ldr	r3, [pc, #188]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006b2e:	68a1      	ldr	r1, [r4, #8]
 8006b30:	699a      	ldr	r2, [r3, #24]
 8006b32:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8006b36:	430a      	orrs	r2, r1
 8006b38:	619a      	str	r2, [r3, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006b3a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006b3c:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006b3e:	2902      	cmp	r1, #2
 8006b40:	d11d      	bne.n	8006b7e <HAL_RCC_ClockConfig+0x1ca>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006b42:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006b46:	f43f af3a 	beq.w	80069be <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8006b4a:	691a      	ldr	r2, [r3, #16]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b4c:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006b50:	4f26      	ldr	r7, [pc, #152]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8006b52:	f022 0207 	bic.w	r2, r2, #7
 8006b56:	430a      	orrs	r2, r1
 8006b58:	611a      	str	r2, [r3, #16]
    tickstart = HAL_GetTick();
 8006b5a:	f7fd fcd3 	bl	8004504 <HAL_GetTick>
 8006b5e:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006b60:	693b      	ldr	r3, [r7, #16]
 8006b62:	6862      	ldr	r2, [r4, #4]
 8006b64:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006b68:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 8006b6c:	f43f af6f 	beq.w	8006a4e <HAL_RCC_ClockConfig+0x9a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b70:	f7fd fcc8 	bl	8004504 <HAL_GetTick>
 8006b74:	1b80      	subs	r0, r0, r6
 8006b76:	4540      	cmp	r0, r8
 8006b78:	d9f2      	bls.n	8006b60 <HAL_RCC_ClockConfig+0x1ac>
        return HAL_TIMEOUT;
 8006b7a:	2003      	movs	r0, #3
 8006b7c:	e720      	b.n	80069c0 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006b7e:	2903      	cmp	r1, #3
 8006b80:	d102      	bne.n	8006b88 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006b82:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8006b86:	e7de      	b.n	8006b46 <HAL_RCC_ClockConfig+0x192>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8006b88:	2901      	cmp	r1, #1
 8006b8a:	d102      	bne.n	8006b92 <HAL_RCC_ClockConfig+0x1de>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006b8c:	f412 7f80 	tst.w	r2, #256	; 0x100
 8006b90:	e7d9      	b.n	8006b46 <HAL_RCC_ClockConfig+0x192>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006b92:	f012 0f04 	tst.w	r2, #4
 8006b96:	e7d6      	b.n	8006b46 <HAL_RCC_ClockConfig+0x192>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8006b98:	4914      	ldr	r1, [pc, #80]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006b9a:	68e0      	ldr	r0, [r4, #12]
 8006b9c:	698a      	ldr	r2, [r1, #24]
 8006b9e:	f002 020f 	and.w	r2, r2, #15
 8006ba2:	4290      	cmp	r0, r2
 8006ba4:	f4bf af57 	bcs.w	8006a56 <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006ba8:	698a      	ldr	r2, [r1, #24]
 8006baa:	f022 020f 	bic.w	r2, r2, #15
 8006bae:	4302      	orrs	r2, r0
 8006bb0:	618a      	str	r2, [r1, #24]
 8006bb2:	e750      	b.n	8006a56 <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006bb4:	680a      	ldr	r2, [r1, #0]
 8006bb6:	f022 020f 	bic.w	r2, r2, #15
 8006bba:	432a      	orrs	r2, r5
 8006bbc:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006bbe:	680a      	ldr	r2, [r1, #0]
 8006bc0:	f002 020f 	and.w	r2, r2, #15
 8006bc4:	42aa      	cmp	r2, r5
 8006bc6:	f47f aefa 	bne.w	80069be <HAL_RCC_ClockConfig+0xa>
 8006bca:	e74b      	b.n	8006a64 <HAL_RCC_ClockConfig+0xb0>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8006bcc:	4907      	ldr	r1, [pc, #28]	; (8006bec <HAL_RCC_ClockConfig+0x238>)
 8006bce:	6920      	ldr	r0, [r4, #16]
 8006bd0:	698a      	ldr	r2, [r1, #24]
 8006bd2:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006bd6:	4290      	cmp	r0, r2
 8006bd8:	f4bf af47 	bcs.w	8006a6a <HAL_RCC_ClockConfig+0xb6>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8006bdc:	698a      	ldr	r2, [r1, #24]
 8006bde:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006be2:	4302      	orrs	r2, r0
 8006be4:	618a      	str	r2, [r1, #24]
 8006be6:	e740      	b.n	8006a6a <HAL_RCC_ClockConfig+0xb6>
 8006be8:	52002000 	.word	0x52002000
 8006bec:	58024400 	.word	0x58024400
 8006bf0:	0801c470 	.word	0x0801c470
 8006bf4:	24000040 	.word	0x24000040
 8006bf8:	2400003c 	.word	0x2400003c
 8006bfc:	24000048 	.word	0x24000048

08006c00 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006c00:	b510      	push	{r4, lr}
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8006c02:	4c0c      	ldr	r4, [pc, #48]	; (8006c34 <HAL_RCC_GetHCLKFreq+0x34>)
 8006c04:	f7ff fe34 	bl	8006870 <HAL_RCC_GetSysClockFreq>
 8006c08:	490b      	ldr	r1, [pc, #44]	; (8006c38 <HAL_RCC_GetHCLKFreq+0x38>)
 8006c0a:	69a3      	ldr	r3, [r4, #24]
 8006c0c:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8006c10:	5ccb      	ldrb	r3, [r1, r3]
 8006c12:	f003 031f 	and.w	r3, r3, #31
 8006c16:	fa20 f203 	lsr.w	r2, r0, r3
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8006c1a:	69a3      	ldr	r3, [r4, #24]
 8006c1c:	f003 030f 	and.w	r3, r3, #15
 8006c20:	5ccb      	ldrb	r3, [r1, r3]
 8006c22:	f003 031f 	and.w	r3, r3, #31
 8006c26:	fa22 f003 	lsr.w	r0, r2, r3
 8006c2a:	4b04      	ldr	r3, [pc, #16]	; (8006c3c <HAL_RCC_GetHCLKFreq+0x3c>)
 8006c2c:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8006c2e:	4b04      	ldr	r3, [pc, #16]	; (8006c40 <HAL_RCC_GetHCLKFreq+0x40>)
 8006c30:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 8006c32:	bd10      	pop	{r4, pc}
 8006c34:	58024400 	.word	0x58024400
 8006c38:	0801c470 	.word	0x0801c470
 8006c3c:	24000040 	.word	0x24000040
 8006c40:	2400003c 	.word	0x2400003c

08006c44 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006c44:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8006c46:	f7ff ffdb 	bl	8006c00 <HAL_RCC_GetHCLKFreq>
 8006c4a:	4b05      	ldr	r3, [pc, #20]	; (8006c60 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006c4c:	4a05      	ldr	r2, [pc, #20]	; (8006c64 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006c4e:	69db      	ldr	r3, [r3, #28]
 8006c50:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8006c54:	5cd3      	ldrb	r3, [r2, r3]
 8006c56:	f003 031f 	and.w	r3, r3, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8006c5a:	40d8      	lsrs	r0, r3
 8006c5c:	bd08      	pop	{r3, pc}
 8006c5e:	bf00      	nop
 8006c60:	58024400 	.word	0x58024400
 8006c64:	0801c470 	.word	0x0801c470

08006c68 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8006c68:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 8006c6a:	f7ff ffc9 	bl	8006c00 <HAL_RCC_GetHCLKFreq>
 8006c6e:	4b05      	ldr	r3, [pc, #20]	; (8006c84 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006c70:	4a05      	ldr	r2, [pc, #20]	; (8006c88 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006c72:	69db      	ldr	r3, [r3, #28]
 8006c74:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8006c78:	5cd3      	ldrb	r3, [r2, r3]
 8006c7a:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 8006c7e:	40d8      	lsrs	r0, r3
 8006c80:	bd08      	pop	{r3, pc}
 8006c82:	bf00      	nop
 8006c84:	58024400 	.word	0x58024400
 8006c88:	0801c470 	.word	0x0801c470

08006c8c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 8006c8c:	233f      	movs	r3, #63	; 0x3f
 8006c8e:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006c90:	4b11      	ldr	r3, [pc, #68]	; (8006cd8 <HAL_RCC_GetClockConfig+0x4c>)
 8006c92:	691a      	ldr	r2, [r3, #16]
 8006c94:	f002 0207 	and.w	r2, r2, #7
 8006c98:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 8006c9a:	699a      	ldr	r2, [r3, #24]
 8006c9c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 8006ca0:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 8006ca2:	699a      	ldr	r2, [r3, #24]
 8006ca4:	f002 020f 	and.w	r2, r2, #15
 8006ca8:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 8006caa:	699a      	ldr	r2, [r3, #24]
 8006cac:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006cb0:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 8006cb2:	69da      	ldr	r2, [r3, #28]
 8006cb4:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8006cb8:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 8006cba:	69da      	ldr	r2, [r3, #28]
 8006cbc:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8006cc0:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 8006cc2:	6a1b      	ldr	r3, [r3, #32]
 8006cc4:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006cc8:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006cca:	4b04      	ldr	r3, [pc, #16]	; (8006cdc <HAL_RCC_GetClockConfig+0x50>)
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	f003 030f 	and.w	r3, r3, #15
 8006cd2:	600b      	str	r3, [r1, #0]
}
 8006cd4:	4770      	bx	lr
 8006cd6:	bf00      	nop
 8006cd8:	58024400 	.word	0x58024400
 8006cdc:	52002000 	.word	0x52002000

08006ce0 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8006ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006ce2:	4c3a      	ldr	r4, [pc, #232]	; (8006dcc <RCCEx_PLL2_Config+0xec>)
{
 8006ce4:	4606      	mov	r6, r0
 8006ce6:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006ce8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006cea:	f003 0303 	and.w	r3, r3, #3
 8006cee:	2b03      	cmp	r3, #3
 8006cf0:	d069      	beq.n	8006dc6 <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8006cf2:	6823      	ldr	r3, [r4, #0]
 8006cf4:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8006cf8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006cfa:	f7fd fc03 	bl	8004504 <HAL_GetTick>
 8006cfe:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8006d00:	6823      	ldr	r3, [r4, #0]
 8006d02:	011a      	lsls	r2, r3, #4
 8006d04:	d44b      	bmi.n	8006d9e <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8006d06:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006d08:	6832      	ldr	r2, [r6, #0]
 8006d0a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8006d0e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 8006d12:	62a3      	str	r3, [r4, #40]	; 0x28
 8006d14:	68b3      	ldr	r3, [r6, #8]
 8006d16:	68f2      	ldr	r2, [r6, #12]
 8006d18:	3b01      	subs	r3, #1
 8006d1a:	3a01      	subs	r2, #1
 8006d1c:	025b      	lsls	r3, r3, #9
 8006d1e:	0412      	lsls	r2, r2, #16
 8006d20:	b29b      	uxth	r3, r3
 8006d22:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006d26:	4313      	orrs	r3, r2
 8006d28:	6872      	ldr	r2, [r6, #4]
 8006d2a:	3a01      	subs	r2, #1
 8006d2c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006d30:	4313      	orrs	r3, r2
 8006d32:	6932      	ldr	r2, [r6, #16]
 8006d34:	3a01      	subs	r2, #1
 8006d36:	0612      	lsls	r2, r2, #24
 8006d38:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8006d3c:	4313      	orrs	r3, r2
 8006d3e:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8006d40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006d42:	6972      	ldr	r2, [r6, #20]
 8006d44:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8006d48:	4313      	orrs	r3, r2
 8006d4a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8006d4c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006d4e:	69b2      	ldr	r2, [r6, #24]
 8006d50:	f023 0320 	bic.w	r3, r3, #32
 8006d54:	4313      	orrs	r3, r2
 8006d56:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8006d58:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006d5a:	f023 0310 	bic.w	r3, r3, #16
 8006d5e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8006d60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006d62:	69f2      	ldr	r2, [r6, #28]
 8006d64:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006d68:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006d6c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006d70:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 8006d72:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006d74:	f043 0310 	orr.w	r3, r3, #16
 8006d78:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8006d7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8006d7c:	b9b5      	cbnz	r5, 8006dac <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8006d7e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8006d82:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8006d84:	4c11      	ldr	r4, [pc, #68]	; (8006dcc <RCCEx_PLL2_Config+0xec>)
 8006d86:	6823      	ldr	r3, [r4, #0]
 8006d88:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006d8c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006d8e:	f7fd fbb9 	bl	8004504 <HAL_GetTick>
 8006d92:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8006d94:	6823      	ldr	r3, [r4, #0]
 8006d96:	011b      	lsls	r3, r3, #4
 8006d98:	d50f      	bpl.n	8006dba <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 8006d9a:	2000      	movs	r0, #0
 8006d9c:	e005      	b.n	8006daa <RCCEx_PLL2_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8006d9e:	f7fd fbb1 	bl	8004504 <HAL_GetTick>
 8006da2:	1bc0      	subs	r0, r0, r7
 8006da4:	2802      	cmp	r0, #2
 8006da6:	d9ab      	bls.n	8006d00 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 8006da8:	2003      	movs	r0, #3
}
 8006daa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8006dac:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8006dae:	bf0c      	ite	eq
 8006db0:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8006db4:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 8006db8:	e7e3      	b.n	8006d82 <RCCEx_PLL2_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8006dba:	f7fd fba3 	bl	8004504 <HAL_GetTick>
 8006dbe:	1b40      	subs	r0, r0, r5
 8006dc0:	2802      	cmp	r0, #2
 8006dc2:	d9e7      	bls.n	8006d94 <RCCEx_PLL2_Config+0xb4>
 8006dc4:	e7f0      	b.n	8006da8 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 8006dc6:	2001      	movs	r0, #1
 8006dc8:	e7ef      	b.n	8006daa <RCCEx_PLL2_Config+0xca>
 8006dca:	bf00      	nop
 8006dcc:	58024400 	.word	0x58024400

08006dd0 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 8006dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006dd2:	4c3a      	ldr	r4, [pc, #232]	; (8006ebc <RCCEx_PLL3_Config+0xec>)
{
 8006dd4:	4606      	mov	r6, r0
 8006dd6:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006dd8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006dda:	f003 0303 	and.w	r3, r3, #3
 8006dde:	2b03      	cmp	r3, #3
 8006de0:	d069      	beq.n	8006eb6 <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8006de2:	6823      	ldr	r3, [r4, #0]
 8006de4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006de8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006dea:	f7fd fb8b 	bl	8004504 <HAL_GetTick>
 8006dee:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8006df0:	6823      	ldr	r3, [r4, #0]
 8006df2:	009a      	lsls	r2, r3, #2
 8006df4:	d44b      	bmi.n	8006e8e <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 8006df6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006df8:	6832      	ldr	r2, [r6, #0]
 8006dfa:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 8006dfe:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8006e02:	62a3      	str	r3, [r4, #40]	; 0x28
 8006e04:	68b3      	ldr	r3, [r6, #8]
 8006e06:	68f2      	ldr	r2, [r6, #12]
 8006e08:	3b01      	subs	r3, #1
 8006e0a:	3a01      	subs	r2, #1
 8006e0c:	025b      	lsls	r3, r3, #9
 8006e0e:	0412      	lsls	r2, r2, #16
 8006e10:	b29b      	uxth	r3, r3
 8006e12:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006e16:	4313      	orrs	r3, r2
 8006e18:	6872      	ldr	r2, [r6, #4]
 8006e1a:	3a01      	subs	r2, #1
 8006e1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006e20:	4313      	orrs	r3, r2
 8006e22:	6932      	ldr	r2, [r6, #16]
 8006e24:	3a01      	subs	r2, #1
 8006e26:	0612      	lsls	r2, r2, #24
 8006e28:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8006e2c:	4313      	orrs	r3, r2
 8006e2e:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8006e30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e32:	6972      	ldr	r2, [r6, #20]
 8006e34:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8006e38:	4313      	orrs	r3, r2
 8006e3a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8006e3c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e3e:	69b2      	ldr	r2, [r6, #24]
 8006e40:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006e44:	4313      	orrs	r3, r2
 8006e46:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8006e48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006e4e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8006e50:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006e52:	69f2      	ldr	r2, [r6, #28]
 8006e54:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006e58:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006e5c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006e60:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8006e62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e68:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8006e6a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8006e6c:	b9b5      	cbnz	r5, 8006e9c <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8006e6e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8006e72:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8006e74:	4c11      	ldr	r4, [pc, #68]	; (8006ebc <RCCEx_PLL3_Config+0xec>)
 8006e76:	6823      	ldr	r3, [r4, #0]
 8006e78:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006e7c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006e7e:	f7fd fb41 	bl	8004504 <HAL_GetTick>
 8006e82:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8006e84:	6823      	ldr	r3, [r4, #0]
 8006e86:	009b      	lsls	r3, r3, #2
 8006e88:	d50f      	bpl.n	8006eaa <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 8006e8a:	2000      	movs	r0, #0
 8006e8c:	e005      	b.n	8006e9a <RCCEx_PLL3_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8006e8e:	f7fd fb39 	bl	8004504 <HAL_GetTick>
 8006e92:	1bc0      	subs	r0, r0, r7
 8006e94:	2802      	cmp	r0, #2
 8006e96:	d9ab      	bls.n	8006df0 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 8006e98:	2003      	movs	r0, #3
}
 8006e9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8006e9c:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 8006e9e:	bf0c      	ite	eq
 8006ea0:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8006ea4:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 8006ea8:	e7e3      	b.n	8006e72 <RCCEx_PLL3_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8006eaa:	f7fd fb2b 	bl	8004504 <HAL_GetTick>
 8006eae:	1b40      	subs	r0, r0, r5
 8006eb0:	2802      	cmp	r0, #2
 8006eb2:	d9e7      	bls.n	8006e84 <RCCEx_PLL3_Config+0xb4>
 8006eb4:	e7f0      	b.n	8006e98 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 8006eb6:	2001      	movs	r0, #1
 8006eb8:	e7ef      	b.n	8006e9a <RCCEx_PLL3_Config+0xca>
 8006eba:	bf00      	nop
 8006ebc:	58024400 	.word	0x58024400

08006ec0 <HAL_RCCEx_PeriphCLKConfig>:
{
 8006ec0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006ec4:	6803      	ldr	r3, [r0, #0]
{
 8006ec6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006ec8:	011c      	lsls	r4, r3, #4
 8006eca:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
 8006ece:	d509      	bpl.n	8006ee4 <HAL_RCCEx_PeriphCLKConfig+0x24>
    switch (PeriphClkInit->SpdifrxClockSelection)
 8006ed0:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8006ed2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006ed6:	d02c      	beq.n	8006f32 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8006ed8:	d811      	bhi.n	8006efe <HAL_RCCEx_PeriphCLKConfig+0x3e>
 8006eda:	b1e3      	cbz	r3, 8006f16 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8006edc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006ee0:	d01f      	beq.n	8006f22 <HAL_RCCEx_PeriphCLKConfig+0x62>
 8006ee2:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8006ee4:	682b      	ldr	r3, [r5, #0]
 8006ee6:	05d8      	lsls	r0, r3, #23
 8006ee8:	f140 80d8 	bpl.w	800709c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (PeriphClkInit->Sai1ClockSelection)
 8006eec:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8006eee:	2b04      	cmp	r3, #4
 8006ef0:	f200 80d3 	bhi.w	800709a <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8006ef4:	e8df f003 	tbb	[pc, r3]
 8006ef8:	27cb2922 	.word	0x27cb2922
 8006efc:	27          	.byte	0x27
 8006efd:	00          	.byte	0x00
    switch (PeriphClkInit->SpdifrxClockSelection)
 8006efe:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8006f02:	d1ee      	bne.n	8006ee2 <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8006f04:	4aab      	ldr	r2, [pc, #684]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006f06:	2600      	movs	r6, #0
 8006f08:	6e69      	ldr	r1, [r5, #100]	; 0x64
 8006f0a:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8006f0c:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8006f10:	430b      	orrs	r3, r1
 8006f12:	6513      	str	r3, [r2, #80]	; 0x50
 8006f14:	e7e6      	b.n	8006ee4 <HAL_RCCEx_PeriphCLKConfig+0x24>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006f16:	4aa7      	ldr	r2, [pc, #668]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006f18:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8006f1a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006f1e:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8006f20:	e7f0      	b.n	8006f04 <HAL_RCCEx_PeriphCLKConfig+0x44>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8006f22:	2102      	movs	r1, #2
 8006f24:	3008      	adds	r0, #8
 8006f26:	f7ff fedb 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8006f2a:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 8006f2c:	2800      	cmp	r0, #0
 8006f2e:	d1d9      	bne.n	8006ee4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006f30:	e7e8      	b.n	8006f04 <HAL_RCCEx_PeriphCLKConfig+0x44>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8006f32:	2102      	movs	r1, #2
 8006f34:	3028      	adds	r0, #40	; 0x28
 8006f36:	f7ff ff4b 	bl	8006dd0 <RCCEx_PLL3_Config>
 8006f3a:	e7f6      	b.n	8006f2a <HAL_RCCEx_PeriphCLKConfig+0x6a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006f3c:	4a9d      	ldr	r2, [pc, #628]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006f3e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8006f40:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006f44:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch (PeriphClkInit->Sai1ClockSelection)
 8006f46:	4634      	mov	r4, r6
 8006f48:	e005      	b.n	8006f56 <HAL_RCCEx_PeriphCLKConfig+0x96>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006f4a:	2100      	movs	r1, #0
 8006f4c:	f105 0008 	add.w	r0, r5, #8
 8006f50:	f7ff fec6 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006f54:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8006f56:	2c00      	cmp	r4, #0
 8006f58:	f040 80a2 	bne.w	80070a0 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006f5c:	4a95      	ldr	r2, [pc, #596]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006f5e:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8006f60:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8006f62:	f023 0307 	bic.w	r3, r3, #7
 8006f66:	430b      	orrs	r3, r1
 8006f68:	6513      	str	r3, [r2, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8006f6a:	682b      	ldr	r3, [r5, #0]
 8006f6c:	0559      	lsls	r1, r3, #21
 8006f6e:	d510      	bpl.n	8006f92 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    switch (PeriphClkInit->Sai4AClockSelection)
 8006f70:	f8d5 30a4 	ldr.w	r3, [r5, #164]	; 0xa4
 8006f74:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006f78:	f000 80b4 	beq.w	80070e4 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006f7c:	f200 8092 	bhi.w	80070a4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8006f80:	2b00      	cmp	r3, #0
 8006f82:	f000 80a2 	beq.w	80070ca <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8006f86:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006f8a:	f000 80a4 	beq.w	80070d6 <HAL_RCCEx_PeriphCLKConfig+0x216>
 8006f8e:	2601      	movs	r6, #1
 8006f90:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8006f92:	682b      	ldr	r3, [r5, #0]
 8006f94:	051a      	lsls	r2, r3, #20
 8006f96:	d510      	bpl.n	8006fba <HAL_RCCEx_PeriphCLKConfig+0xfa>
    switch (PeriphClkInit->Sai4BClockSelection)
 8006f98:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 8006f9c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8006fa0:	f000 80c8 	beq.w	8007134 <HAL_RCCEx_PeriphCLKConfig+0x274>
 8006fa4:	f200 80a6 	bhi.w	80070f4 <HAL_RCCEx_PeriphCLKConfig+0x234>
 8006fa8:	2b00      	cmp	r3, #0
 8006faa:	f000 80b6 	beq.w	800711a <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8006fae:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006fb2:	f000 80b8 	beq.w	8007126 <HAL_RCCEx_PeriphCLKConfig+0x266>
 8006fb6:	2601      	movs	r6, #1
 8006fb8:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8006fba:	682b      	ldr	r3, [r5, #0]
 8006fbc:	019b      	lsls	r3, r3, #6
 8006fbe:	d50d      	bpl.n	8006fdc <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->OspiClockSelection)
 8006fc0:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8006fc2:	2b20      	cmp	r3, #32
 8006fc4:	f000 80d0 	beq.w	8007168 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8006fc8:	f200 80bc 	bhi.w	8007144 <HAL_RCCEx_PeriphCLKConfig+0x284>
 8006fcc:	2b00      	cmp	r3, #0
 8006fce:	f000 80bc 	beq.w	800714a <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8006fd2:	2b10      	cmp	r3, #16
 8006fd4:	f000 80c2 	beq.w	800715c <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8006fd8:	2601      	movs	r6, #1
 8006fda:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8006fdc:	682b      	ldr	r3, [r5, #0]
 8006fde:	04df      	lsls	r7, r3, #19
 8006fe0:	d50f      	bpl.n	8007002 <HAL_RCCEx_PeriphCLKConfig+0x142>
    switch (PeriphClkInit->Spi123ClockSelection)
 8006fe2:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8006fe4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006fe8:	f000 80e6 	beq.w	80071b8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8006fec:	f200 80c5 	bhi.w	800717a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	f000 80d2 	beq.w	800719a <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8006ff6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006ffa:	f000 80d4 	beq.w	80071a6 <HAL_RCCEx_PeriphCLKConfig+0x2e6>
 8006ffe:	2601      	movs	r6, #1
 8007000:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8007002:	682b      	ldr	r3, [r5, #0]
 8007004:	0498      	lsls	r0, r3, #18
 8007006:	d50f      	bpl.n	8007028 <HAL_RCCEx_PeriphCLKConfig+0x168>
    switch (PeriphClkInit->Spi45ClockSelection)
 8007008:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800700a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800700e:	f000 80f4 	beq.w	80071fa <HAL_RCCEx_PeriphCLKConfig+0x33a>
 8007012:	f200 80d9 	bhi.w	80071c8 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8007016:	2b00      	cmp	r3, #0
 8007018:	f000 80df 	beq.w	80071da <HAL_RCCEx_PeriphCLKConfig+0x31a>
 800701c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007020:	f000 80e4 	beq.w	80071ec <HAL_RCCEx_PeriphCLKConfig+0x32c>
 8007024:	2601      	movs	r6, #1
 8007026:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8007028:	682b      	ldr	r3, [r5, #0]
 800702a:	0459      	lsls	r1, r3, #17
 800702c:	d510      	bpl.n	8007050 <HAL_RCCEx_PeriphCLKConfig+0x190>
    switch (PeriphClkInit->Spi6ClockSelection)
 800702e:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 8007032:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007036:	f000 8102 	beq.w	800723e <HAL_RCCEx_PeriphCLKConfig+0x37e>
 800703a:	f200 80e6 	bhi.w	800720a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 800703e:	2b00      	cmp	r3, #0
 8007040:	f000 80ec 	beq.w	800721c <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8007044:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007048:	f000 80f2 	beq.w	8007230 <HAL_RCCEx_PeriphCLKConfig+0x370>
 800704c:	2601      	movs	r6, #1
 800704e:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007050:	682b      	ldr	r3, [r5, #0]
 8007052:	041a      	lsls	r2, r3, #16
 8007054:	d50d      	bpl.n	8007072 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch (PeriphClkInit->FdcanClockSelection)
 8007056:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8007058:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800705c:	f000 80f7 	beq.w	800724e <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8007060:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007064:	f000 8101 	beq.w	800726a <HAL_RCCEx_PeriphCLKConfig+0x3aa>
 8007068:	2b00      	cmp	r3, #0
 800706a:	f000 80f5 	beq.w	8007258 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800706e:	2601      	movs	r6, #1
 8007070:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 8007072:	682b      	ldr	r3, [r5, #0]
 8007074:	01db      	lsls	r3, r3, #7
 8007076:	f140 810f 	bpl.w	8007298 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
    switch (PeriphClkInit->FmcClockSelection)
 800707a:	6cab      	ldr	r3, [r5, #72]	; 0x48
 800707c:	2b03      	cmp	r3, #3
 800707e:	f200 8150 	bhi.w	8007322 <HAL_RCCEx_PeriphCLKConfig+0x462>
 8007082:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007086:	0100      	.short	0x0100
 8007088:	014700fb 	.word	0x014700fb
 800708c:	0100      	.short	0x0100
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800708e:	2100      	movs	r1, #0
 8007090:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007094:	f7ff fe9c 	bl	8006dd0 <RCCEx_PLL3_Config>
 8007098:	e75c      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x94>
    switch (PeriphClkInit->Sai1ClockSelection)
 800709a:	2601      	movs	r6, #1
 800709c:	4634      	mov	r4, r6
 800709e:	e764      	b.n	8006f6a <HAL_RCCEx_PeriphCLKConfig+0xaa>
 80070a0:	4626      	mov	r6, r4
 80070a2:	e762      	b.n	8006f6a <HAL_RCCEx_PeriphCLKConfig+0xaa>
    switch (PeriphClkInit->Sai4AClockSelection)
 80070a4:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 80070a8:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 80070ac:	d003      	beq.n	80070b6 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80070ae:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80070b2:	f47f af6c 	bne.w	8006f8e <HAL_RCCEx_PeriphCLKConfig+0xce>
    if (ret == HAL_OK)
 80070b6:	b9dc      	cbnz	r4, 80070f0 <HAL_RCCEx_PeriphCLKConfig+0x230>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 80070b8:	4a3e      	ldr	r2, [pc, #248]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80070ba:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 80070be:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80070c0:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 80070c4:	430b      	orrs	r3, r1
 80070c6:	6593      	str	r3, [r2, #88]	; 0x58
 80070c8:	e763      	b.n	8006f92 <HAL_RCCEx_PeriphCLKConfig+0xd2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80070ca:	4a3a      	ldr	r2, [pc, #232]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80070cc:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80070ce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80070d2:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80070d4:	e7ef      	b.n	80070b6 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80070d6:	2100      	movs	r1, #0
 80070d8:	f105 0008 	add.w	r0, r5, #8
 80070dc:	f7ff fe00 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80070e0:	4604      	mov	r4, r0
        break;
 80070e2:	e7e8      	b.n	80070b6 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80070e4:	2100      	movs	r1, #0
 80070e6:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80070ea:	f7ff fe71 	bl	8006dd0 <RCCEx_PLL3_Config>
 80070ee:	e7f7      	b.n	80070e0 <HAL_RCCEx_PeriphCLKConfig+0x220>
 80070f0:	4626      	mov	r6, r4
 80070f2:	e74e      	b.n	8006f92 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    switch (PeriphClkInit->Sai4BClockSelection)
 80070f4:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 80070f8:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 80070fc:	d003      	beq.n	8007106 <HAL_RCCEx_PeriphCLKConfig+0x246>
 80070fe:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007102:	f47f af58 	bne.w	8006fb6 <HAL_RCCEx_PeriphCLKConfig+0xf6>
    if (ret == HAL_OK)
 8007106:	b9dc      	cbnz	r4, 8007140 <HAL_RCCEx_PeriphCLKConfig+0x280>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8007108:	4a2a      	ldr	r2, [pc, #168]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800710a:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 800710e:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007110:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8007114:	430b      	orrs	r3, r1
 8007116:	6593      	str	r3, [r2, #88]	; 0x58
 8007118:	e74f      	b.n	8006fba <HAL_RCCEx_PeriphCLKConfig+0xfa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800711a:	4a26      	ldr	r2, [pc, #152]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800711c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800711e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007122:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007124:	e7ef      	b.n	8007106 <HAL_RCCEx_PeriphCLKConfig+0x246>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007126:	2100      	movs	r1, #0
 8007128:	f105 0008 	add.w	r0, r5, #8
 800712c:	f7ff fdd8 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007130:	4604      	mov	r4, r0
        break;
 8007132:	e7e8      	b.n	8007106 <HAL_RCCEx_PeriphCLKConfig+0x246>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007134:	2100      	movs	r1, #0
 8007136:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800713a:	f7ff fe49 	bl	8006dd0 <RCCEx_PLL3_Config>
 800713e:	e7f7      	b.n	8007130 <HAL_RCCEx_PeriphCLKConfig+0x270>
 8007140:	4626      	mov	r6, r4
 8007142:	e73a      	b.n	8006fba <HAL_RCCEx_PeriphCLKConfig+0xfa>
    switch (PeriphClkInit->OspiClockSelection)
 8007144:	2b30      	cmp	r3, #48	; 0x30
 8007146:	f47f af47 	bne.w	8006fd8 <HAL_RCCEx_PeriphCLKConfig+0x118>
    if (ret == HAL_OK)
 800714a:	b9a4      	cbnz	r4, 8007176 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 800714c:	4a19      	ldr	r2, [pc, #100]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800714e:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 8007150:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007152:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8007156:	430b      	orrs	r3, r1
 8007158:	64d3      	str	r3, [r2, #76]	; 0x4c
 800715a:	e73f      	b.n	8006fdc <HAL_RCCEx_PeriphCLKConfig+0x11c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800715c:	4a15      	ldr	r2, [pc, #84]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800715e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007160:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007164:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007166:	e7f0      	b.n	800714a <HAL_RCCEx_PeriphCLKConfig+0x28a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007168:	2102      	movs	r1, #2
 800716a:	f105 0008 	add.w	r0, r5, #8
 800716e:	f7ff fdb7 	bl	8006ce0 <RCCEx_PLL2_Config>
 8007172:	4604      	mov	r4, r0
        break;
 8007174:	e7e9      	b.n	800714a <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8007176:	4626      	mov	r6, r4
 8007178:	e730      	b.n	8006fdc <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Spi123ClockSelection)
 800717a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800717e:	d003      	beq.n	8007188 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8007180:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007184:	f47f af3b 	bne.w	8006ffe <HAL_RCCEx_PeriphCLKConfig+0x13e>
    if (ret == HAL_OK)
 8007188:	b9e4      	cbnz	r4, 80071c4 <HAL_RCCEx_PeriphCLKConfig+0x304>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 800718a:	4a0a      	ldr	r2, [pc, #40]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800718c:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 800718e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007190:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007194:	430b      	orrs	r3, r1
 8007196:	6513      	str	r3, [r2, #80]	; 0x50
 8007198:	e733      	b.n	8007002 <HAL_RCCEx_PeriphCLKConfig+0x142>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800719a:	4a06      	ldr	r2, [pc, #24]	; (80071b4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800719c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800719e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80071a2:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80071a4:	e7f0      	b.n	8007188 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80071a6:	2100      	movs	r1, #0
 80071a8:	f105 0008 	add.w	r0, r5, #8
 80071ac:	f7ff fd98 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80071b0:	4604      	mov	r4, r0
        break;
 80071b2:	e7e9      	b.n	8007188 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 80071b4:	58024400 	.word	0x58024400
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80071b8:	2100      	movs	r1, #0
 80071ba:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80071be:	f7ff fe07 	bl	8006dd0 <RCCEx_PLL3_Config>
 80071c2:	e7f5      	b.n	80071b0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80071c4:	4626      	mov	r6, r4
 80071c6:	e71c      	b.n	8007002 <HAL_RCCEx_PeriphCLKConfig+0x142>
    switch (PeriphClkInit->Spi45ClockSelection)
 80071c8:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80071cc:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 80071d0:	d003      	beq.n	80071da <HAL_RCCEx_PeriphCLKConfig+0x31a>
 80071d2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80071d6:	f47f af25 	bne.w	8007024 <HAL_RCCEx_PeriphCLKConfig+0x164>
    if (ret == HAL_OK)
 80071da:	b9a4      	cbnz	r4, 8007206 <HAL_RCCEx_PeriphCLKConfig+0x346>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 80071dc:	4a92      	ldr	r2, [pc, #584]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80071de:	6e29      	ldr	r1, [r5, #96]	; 0x60
 80071e0:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80071e2:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 80071e6:	430b      	orrs	r3, r1
 80071e8:	6513      	str	r3, [r2, #80]	; 0x50
 80071ea:	e71d      	b.n	8007028 <HAL_RCCEx_PeriphCLKConfig+0x168>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80071ec:	2101      	movs	r1, #1
 80071ee:	f105 0008 	add.w	r0, r5, #8
 80071f2:	f7ff fd75 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80071f6:	4604      	mov	r4, r0
        break;
 80071f8:	e7ef      	b.n	80071da <HAL_RCCEx_PeriphCLKConfig+0x31a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80071fa:	2101      	movs	r1, #1
 80071fc:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007200:	f7ff fde6 	bl	8006dd0 <RCCEx_PLL3_Config>
 8007204:	e7f7      	b.n	80071f6 <HAL_RCCEx_PeriphCLKConfig+0x336>
 8007206:	4626      	mov	r6, r4
 8007208:	e70e      	b.n	8007028 <HAL_RCCEx_PeriphCLKConfig+0x168>
    switch (PeriphClkInit->Spi6ClockSelection)
 800720a:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 800720e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8007212:	d003      	beq.n	800721c <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8007214:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007218:	f47f af18 	bne.w	800704c <HAL_RCCEx_PeriphCLKConfig+0x18c>
    if (ret == HAL_OK)
 800721c:	b9ac      	cbnz	r4, 800724a <HAL_RCCEx_PeriphCLKConfig+0x38a>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 800721e:	4a82      	ldr	r2, [pc, #520]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007220:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 8007224:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007226:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 800722a:	430b      	orrs	r3, r1
 800722c:	6593      	str	r3, [r2, #88]	; 0x58
 800722e:	e70f      	b.n	8007050 <HAL_RCCEx_PeriphCLKConfig+0x190>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007230:	2101      	movs	r1, #1
 8007232:	f105 0008 	add.w	r0, r5, #8
 8007236:	f7ff fd53 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800723a:	4604      	mov	r4, r0
        break;
 800723c:	e7ee      	b.n	800721c <HAL_RCCEx_PeriphCLKConfig+0x35c>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800723e:	2101      	movs	r1, #1
 8007240:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007244:	f7ff fdc4 	bl	8006dd0 <RCCEx_PLL3_Config>
 8007248:	e7f7      	b.n	800723a <HAL_RCCEx_PeriphCLKConfig+0x37a>
 800724a:	4626      	mov	r6, r4
 800724c:	e700      	b.n	8007050 <HAL_RCCEx_PeriphCLKConfig+0x190>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800724e:	4a76      	ldr	r2, [pc, #472]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8007250:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007252:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007256:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007258:	b974      	cbnz	r4, 8007278 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 800725a:	4a73      	ldr	r2, [pc, #460]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 800725c:	6ee9      	ldr	r1, [r5, #108]	; 0x6c
 800725e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007260:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8007264:	430b      	orrs	r3, r1
 8007266:	6513      	str	r3, [r2, #80]	; 0x50
 8007268:	e703      	b.n	8007072 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800726a:	2101      	movs	r1, #1
 800726c:	f105 0008 	add.w	r0, r5, #8
 8007270:	f7ff fd36 	bl	8006ce0 <RCCEx_PLL2_Config>
 8007274:	4604      	mov	r4, r0
        break;
 8007276:	e7ef      	b.n	8007258 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007278:	4626      	mov	r6, r4
 800727a:	e6fa      	b.n	8007072 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800727c:	4a6a      	ldr	r2, [pc, #424]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 800727e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007280:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007284:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007286:	2c00      	cmp	r4, #0
 8007288:	d14e      	bne.n	8007328 <HAL_RCCEx_PeriphCLKConfig+0x468>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 800728a:	4a67      	ldr	r2, [pc, #412]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 800728c:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 800728e:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007290:	f023 0303 	bic.w	r3, r3, #3
 8007294:	430b      	orrs	r3, r1
 8007296:	64d3      	str	r3, [r2, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007298:	682b      	ldr	r3, [r5, #0]
 800729a:	025f      	lsls	r7, r3, #9
 800729c:	d54e      	bpl.n	800733c <HAL_RCCEx_PeriphCLKConfig+0x47c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800729e:	4f63      	ldr	r7, [pc, #396]	; (800742c <HAL_RCCEx_PeriphCLKConfig+0x56c>)
 80072a0:	683b      	ldr	r3, [r7, #0]
 80072a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80072a6:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 80072a8:	f7fd f92c 	bl	8004504 <HAL_GetTick>
 80072ac:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80072ae:	683b      	ldr	r3, [r7, #0]
 80072b0:	05d8      	lsls	r0, r3, #23
 80072b2:	d53b      	bpl.n	800732c <HAL_RCCEx_PeriphCLKConfig+0x46c>
    if (ret == HAL_OK)
 80072b4:	2c00      	cmp	r4, #0
 80072b6:	d16d      	bne.n	8007394 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 80072b8:	4b5b      	ldr	r3, [pc, #364]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80072ba:	f8d5 00b0 	ldr.w	r0, [r5, #176]	; 0xb0
 80072be:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80072c0:	4042      	eors	r2, r0
 80072c2:	f412 7f40 	tst.w	r2, #768	; 0x300
 80072c6:	d00b      	beq.n	80072e0 <HAL_RCCEx_PeriphCLKConfig+0x420>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80072c8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 80072ca:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80072cc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 80072d0:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 80072d4:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80072d6:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80072d8:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 80072dc:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 80072de:	671a      	str	r2, [r3, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80072e0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80072e4:	d041      	beq.n	800736a <HAL_RCCEx_PeriphCLKConfig+0x4aa>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80072e6:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 80072ea:	494f      	ldr	r1, [pc, #316]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80072ec:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80072f0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80072f4:	d14a      	bne.n	800738c <HAL_RCCEx_PeriphCLKConfig+0x4cc>
 80072f6:	6908      	ldr	r0, [r1, #16]
 80072f8:	4a4d      	ldr	r2, [pc, #308]	; (8007430 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 80072fa:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80072fe:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 8007302:	4302      	orrs	r2, r0
 8007304:	610a      	str	r2, [r1, #16]
 8007306:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800730a:	4a47      	ldr	r2, [pc, #284]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 800730c:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800730e:	430b      	orrs	r3, r1
 8007310:	6713      	str	r3, [r2, #112]	; 0x70
 8007312:	e013      	b.n	800733c <HAL_RCCEx_PeriphCLKConfig+0x47c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007314:	2102      	movs	r1, #2
 8007316:	f105 0008 	add.w	r0, r5, #8
 800731a:	f7ff fce1 	bl	8006ce0 <RCCEx_PLL2_Config>
 800731e:	4604      	mov	r4, r0
        break;
 8007320:	e7b1      	b.n	8007286 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
    switch (PeriphClkInit->FmcClockSelection)
 8007322:	2601      	movs	r6, #1
 8007324:	4634      	mov	r4, r6
 8007326:	e7b7      	b.n	8007298 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
 8007328:	4626      	mov	r6, r4
 800732a:	e7b5      	b.n	8007298 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800732c:	f7fd f8ea 	bl	8004504 <HAL_GetTick>
 8007330:	eba0 0008 	sub.w	r0, r0, r8
 8007334:	2864      	cmp	r0, #100	; 0x64
 8007336:	d9ba      	bls.n	80072ae <HAL_RCCEx_PeriphCLKConfig+0x3ee>
        ret = HAL_TIMEOUT;
 8007338:	2603      	movs	r6, #3
 800733a:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 800733c:	682b      	ldr	r3, [r5, #0]
 800733e:	07da      	lsls	r2, r3, #31
 8007340:	d508      	bpl.n	8007354 <HAL_RCCEx_PeriphCLKConfig+0x494>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007342:	6fab      	ldr	r3, [r5, #120]	; 0x78
 8007344:	2b10      	cmp	r3, #16
 8007346:	d03d      	beq.n	80073c4 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8007348:	d826      	bhi.n	8007398 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
 800734a:	b35b      	cbz	r3, 80073a4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 800734c:	2b08      	cmp	r3, #8
 800734e:	d032      	beq.n	80073b6 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007350:	2601      	movs	r6, #1
 8007352:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8007354:	682b      	ldr	r3, [r5, #0]
 8007356:	079b      	lsls	r3, r3, #30
 8007358:	d54a      	bpl.n	80073f0 <HAL_RCCEx_PeriphCLKConfig+0x530>
    switch (PeriphClkInit->Usart234578ClockSelection)
 800735a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800735c:	2b05      	cmp	r3, #5
 800735e:	d85d      	bhi.n	800741c <HAL_RCCEx_PeriphCLKConfig+0x55c>
 8007360:	e8df f003 	tbb	[pc, r3]
 8007364:	3e56383e 	.word	0x3e56383e
 8007368:	3e3e      	.short	0x3e3e
        tickstart = HAL_GetTick();
 800736a:	f7fd f8cb 	bl	8004504 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800736e:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>
        tickstart = HAL_GetTick();
 8007372:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007374:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007378:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 800737c:	0799      	lsls	r1, r3, #30
 800737e:	d4b2      	bmi.n	80072e6 <HAL_RCCEx_PeriphCLKConfig+0x426>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007380:	f7fd f8c0 	bl	8004504 <HAL_GetTick>
 8007384:	1bc0      	subs	r0, r0, r7
 8007386:	4548      	cmp	r0, r9
 8007388:	d9f6      	bls.n	8007378 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 800738a:	e7d5      	b.n	8007338 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800738c:	690a      	ldr	r2, [r1, #16]
 800738e:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8007392:	e7b7      	b.n	8007304 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8007394:	4626      	mov	r6, r4
 8007396:	e7d1      	b.n	800733c <HAL_RCCEx_PeriphCLKConfig+0x47c>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007398:	f023 0208 	bic.w	r2, r3, #8
 800739c:	2a20      	cmp	r2, #32
 800739e:	d001      	beq.n	80073a4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 80073a0:	2b18      	cmp	r3, #24
 80073a2:	d1d5      	bne.n	8007350 <HAL_RCCEx_PeriphCLKConfig+0x490>
    if (ret == HAL_OK)
 80073a4:	b9a4      	cbnz	r4, 80073d0 <HAL_RCCEx_PeriphCLKConfig+0x510>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80073a6:	4a20      	ldr	r2, [pc, #128]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80073a8:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 80073aa:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80073ac:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 80073b0:	430b      	orrs	r3, r1
 80073b2:	6553      	str	r3, [r2, #84]	; 0x54
 80073b4:	e7ce      	b.n	8007354 <HAL_RCCEx_PeriphCLKConfig+0x494>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80073b6:	2101      	movs	r1, #1
 80073b8:	f105 0008 	add.w	r0, r5, #8
 80073bc:	f7ff fc90 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80073c0:	4604      	mov	r4, r0
        break;
 80073c2:	e7ef      	b.n	80073a4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80073c4:	2101      	movs	r1, #1
 80073c6:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80073ca:	f7ff fd01 	bl	8006dd0 <RCCEx_PLL3_Config>
 80073ce:	e7f7      	b.n	80073c0 <HAL_RCCEx_PeriphCLKConfig+0x500>
 80073d0:	4626      	mov	r6, r4
 80073d2:	e7bf      	b.n	8007354 <HAL_RCCEx_PeriphCLKConfig+0x494>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80073d4:	2101      	movs	r1, #1
 80073d6:	f105 0008 	add.w	r0, r5, #8
 80073da:	f7ff fc81 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80073de:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 80073e0:	b9fc      	cbnz	r4, 8007422 <HAL_RCCEx_PeriphCLKConfig+0x562>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 80073e2:	4a11      	ldr	r2, [pc, #68]	; (8007428 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 80073e4:	6f69      	ldr	r1, [r5, #116]	; 0x74
 80073e6:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80073e8:	f023 0307 	bic.w	r3, r3, #7
 80073ec:	430b      	orrs	r3, r1
 80073ee:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80073f0:	682b      	ldr	r3, [r5, #0]
 80073f2:	075f      	lsls	r7, r3, #29
 80073f4:	d52f      	bpl.n	8007456 <HAL_RCCEx_PeriphCLKConfig+0x596>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 80073f6:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80073fa:	2b05      	cmp	r3, #5
 80073fc:	f200 8173 	bhi.w	80076e6 <HAL_RCCEx_PeriphCLKConfig+0x826>
 8007400:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007404:	0018001e 	.word	0x0018001e
 8007408:	001e016b 	.word	0x001e016b
 800740c:	001e001e 	.word	0x001e001e
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007410:	2101      	movs	r1, #1
 8007412:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007416:	f7ff fcdb 	bl	8006dd0 <RCCEx_PLL3_Config>
 800741a:	e7e0      	b.n	80073de <HAL_RCCEx_PeriphCLKConfig+0x51e>
    switch (PeriphClkInit->Usart234578ClockSelection)
 800741c:	2601      	movs	r6, #1
 800741e:	4634      	mov	r4, r6
 8007420:	e7e6      	b.n	80073f0 <HAL_RCCEx_PeriphCLKConfig+0x530>
 8007422:	4626      	mov	r6, r4
 8007424:	e7e4      	b.n	80073f0 <HAL_RCCEx_PeriphCLKConfig+0x530>
 8007426:	bf00      	nop
 8007428:	58024400 	.word	0x58024400
 800742c:	58024800 	.word	0x58024800
 8007430:	00ffffcf 	.word	0x00ffffcf
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007434:	2101      	movs	r1, #1
 8007436:	f105 0008 	add.w	r0, r5, #8
 800743a:	f7ff fc51 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800743e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007440:	2c00      	cmp	r4, #0
 8007442:	f040 8153 	bne.w	80076ec <HAL_RCCEx_PeriphCLKConfig+0x82c>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8007446:	4aaa      	ldr	r2, [pc, #680]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007448:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 800744c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800744e:	f023 0307 	bic.w	r3, r3, #7
 8007452:	430b      	orrs	r3, r1
 8007454:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007456:	682b      	ldr	r3, [r5, #0]
 8007458:	0698      	lsls	r0, r3, #26
 800745a:	d510      	bpl.n	800747e <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->Lptim1ClockSelection)
 800745c:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007460:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007464:	f000 8160 	beq.w	8007728 <HAL_RCCEx_PeriphCLKConfig+0x868>
 8007468:	f200 8144 	bhi.w	80076f4 <HAL_RCCEx_PeriphCLKConfig+0x834>
 800746c:	2b00      	cmp	r3, #0
 800746e:	f000 814a 	beq.w	8007706 <HAL_RCCEx_PeriphCLKConfig+0x846>
 8007472:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007476:	f000 8150 	beq.w	800771a <HAL_RCCEx_PeriphCLKConfig+0x85a>
 800747a:	2601      	movs	r6, #1
 800747c:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 800747e:	682b      	ldr	r3, [r5, #0]
 8007480:	0659      	lsls	r1, r3, #25
 8007482:	d510      	bpl.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007484:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8007488:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800748c:	f000 816e 	beq.w	800776c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8007490:	f200 8152 	bhi.w	8007738 <HAL_RCCEx_PeriphCLKConfig+0x878>
 8007494:	2b00      	cmp	r3, #0
 8007496:	f000 8158 	beq.w	800774a <HAL_RCCEx_PeriphCLKConfig+0x88a>
 800749a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800749e:	f000 815e 	beq.w	800775e <HAL_RCCEx_PeriphCLKConfig+0x89e>
 80074a2:	2601      	movs	r6, #1
 80074a4:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 80074a6:	682b      	ldr	r3, [r5, #0]
 80074a8:	061a      	lsls	r2, r3, #24
 80074aa:	d510      	bpl.n	80074ce <HAL_RCCEx_PeriphCLKConfig+0x60e>
    switch (PeriphClkInit->Lptim345ClockSelection)
 80074ac:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 80074b0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80074b4:	f000 817c 	beq.w	80077b0 <HAL_RCCEx_PeriphCLKConfig+0x8f0>
 80074b8:	f200 8160 	bhi.w	800777c <HAL_RCCEx_PeriphCLKConfig+0x8bc>
 80074bc:	2b00      	cmp	r3, #0
 80074be:	f000 8166 	beq.w	800778e <HAL_RCCEx_PeriphCLKConfig+0x8ce>
 80074c2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80074c6:	f000 816c 	beq.w	80077a2 <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 80074ca:	2601      	movs	r6, #1
 80074cc:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 80074ce:	682b      	ldr	r3, [r5, #0]
 80074d0:	071b      	lsls	r3, r3, #28
 80074d2:	d514      	bpl.n	80074fe <HAL_RCCEx_PeriphCLKConfig+0x63e>
    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 80074d4:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 80074d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80074dc:	d107      	bne.n	80074ee <HAL_RCCEx_PeriphCLKConfig+0x62e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80074de:	2102      	movs	r1, #2
 80074e0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80074e4:	f7ff fc74 	bl	8006dd0 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 80074e8:	2800      	cmp	r0, #0
 80074ea:	bf18      	it	ne
 80074ec:	2601      	movne	r6, #1
    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 80074ee:	4a80      	ldr	r2, [pc, #512]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 80074f0:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 80074f4:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80074f6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80074fa:	430b      	orrs	r3, r1
 80074fc:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80074fe:	682b      	ldr	r3, [r5, #0]
 8007500:	06df      	lsls	r7, r3, #27
 8007502:	d514      	bpl.n	800752e <HAL_RCCEx_PeriphCLKConfig+0x66e>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8007504:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 8007508:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800750c:	d107      	bne.n	800751e <HAL_RCCEx_PeriphCLKConfig+0x65e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 800750e:	2102      	movs	r1, #2
 8007510:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007514:	f7ff fc5c 	bl	8006dd0 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007518:	2800      	cmp	r0, #0
 800751a:	bf18      	it	ne
 800751c:	2601      	movne	r6, #1
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 800751e:	4a74      	ldr	r2, [pc, #464]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007520:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 8007524:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007526:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800752a:	430b      	orrs	r3, r1
 800752c:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 800752e:	682b      	ldr	r3, [r5, #0]
 8007530:	0318      	lsls	r0, r3, #12
 8007532:	d51b      	bpl.n	800756c <HAL_RCCEx_PeriphCLKConfig+0x6ac>
    switch (PeriphClkInit->AdcClockSelection)
 8007534:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007538:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800753c:	f000 8140 	beq.w	80077c0 <HAL_RCCEx_PeriphCLKConfig+0x900>
 8007540:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8007544:	d007      	beq.n	8007556 <HAL_RCCEx_PeriphCLKConfig+0x696>
 8007546:	2900      	cmp	r1, #0
 8007548:	f040 8140 	bne.w	80077cc <HAL_RCCEx_PeriphCLKConfig+0x90c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800754c:	f105 0008 	add.w	r0, r5, #8
 8007550:	f7ff fbc6 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007554:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007556:	2c00      	cmp	r4, #0
 8007558:	f040 813b 	bne.w	80077d2 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 800755c:	4a64      	ldr	r2, [pc, #400]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 800755e:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007562:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007564:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007568:	430b      	orrs	r3, r1
 800756a:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 800756c:	682b      	ldr	r3, [r5, #0]
 800756e:	0359      	lsls	r1, r3, #13
 8007570:	d51c      	bpl.n	80075ac <HAL_RCCEx_PeriphCLKConfig+0x6ec>
    switch (PeriphClkInit->UsbClockSelection)
 8007572:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8007576:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800757a:	f000 812c 	beq.w	80077d6 <HAL_RCCEx_PeriphCLKConfig+0x916>
 800757e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007582:	d008      	beq.n	8007596 <HAL_RCCEx_PeriphCLKConfig+0x6d6>
 8007584:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007588:	f040 812c 	bne.w	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x924>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800758c:	4a58      	ldr	r2, [pc, #352]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 800758e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007590:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007594:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007596:	2c00      	cmp	r4, #0
 8007598:	f040 8127 	bne.w	80077ea <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 800759c:	4a54      	ldr	r2, [pc, #336]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 800759e:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 80075a2:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80075a4:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80075a8:	430b      	orrs	r3, r1
 80075aa:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 80075ac:	682b      	ldr	r3, [r5, #0]
 80075ae:	03da      	lsls	r2, r3, #15
 80075b0:	d509      	bpl.n	80075c6 <HAL_RCCEx_PeriphCLKConfig+0x706>
    switch (PeriphClkInit->SdmmcClockSelection)
 80075b2:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 80075b4:	2b00      	cmp	r3, #0
 80075b6:	f000 811a 	beq.w	80077ee <HAL_RCCEx_PeriphCLKConfig+0x92e>
 80075ba:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80075be:	f000 8124 	beq.w	800780a <HAL_RCCEx_PeriphCLKConfig+0x94a>
 80075c2:	2601      	movs	r6, #1
 80075c4:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 80075c6:	682b      	ldr	r3, [r5, #0]
 80075c8:	009b      	lsls	r3, r3, #2
 80075ca:	d507      	bpl.n	80075dc <HAL_RCCEx_PeriphCLKConfig+0x71c>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80075cc:	2102      	movs	r1, #2
 80075ce:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80075d2:	f7ff fbfd 	bl	8006dd0 <RCCEx_PLL3_Config>
      status = HAL_ERROR;
 80075d6:	2800      	cmp	r0, #0
 80075d8:	bf18      	it	ne
 80075da:	2601      	movne	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 80075dc:	e9d5 3100 	ldrd	r3, r1, [r5]
 80075e0:	039f      	lsls	r7, r3, #14
 80075e2:	d50a      	bpl.n	80075fa <HAL_RCCEx_PeriphCLKConfig+0x73a>
    switch (PeriphClkInit->RngClockSelection)
 80075e4:	6fe8      	ldr	r0, [r5, #124]	; 0x7c
 80075e6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80075ea:	f000 8125 	beq.w	8007838 <HAL_RCCEx_PeriphCLKConfig+0x978>
 80075ee:	f200 8115 	bhi.w	800781c <HAL_RCCEx_PeriphCLKConfig+0x95c>
 80075f2:	2800      	cmp	r0, #0
 80075f4:	f000 8118 	beq.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0x968>
 80075f8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 80075fa:	02dc      	lsls	r4, r3, #11
 80075fc:	d506      	bpl.n	800760c <HAL_RCCEx_PeriphCLKConfig+0x74c>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 80075fe:	483c      	ldr	r0, [pc, #240]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007600:	6f2c      	ldr	r4, [r5, #112]	; 0x70
 8007602:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007604:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8007608:	4322      	orrs	r2, r4
 800760a:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 800760c:	0298      	lsls	r0, r3, #10
 800760e:	d506      	bpl.n	800761e <HAL_RCCEx_PeriphCLKConfig+0x75e>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007610:	4837      	ldr	r0, [pc, #220]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007612:	6eac      	ldr	r4, [r5, #104]	; 0x68
 8007614:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007616:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800761a:	4322      	orrs	r2, r4
 800761c:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 800761e:	005a      	lsls	r2, r3, #1
 8007620:	d509      	bpl.n	8007636 <HAL_RCCEx_PeriphCLKConfig+0x776>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007622:	4a33      	ldr	r2, [pc, #204]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 8007624:	6910      	ldr	r0, [r2, #16]
 8007626:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 800762a:	6110      	str	r0, [r2, #16]
 800762c:	6910      	ldr	r0, [r2, #16]
 800762e:	f8d5 40b4 	ldr.w	r4, [r5, #180]	; 0xb4
 8007632:	4320      	orrs	r0, r4
 8007634:	6110      	str	r0, [r2, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8007636:	2b00      	cmp	r3, #0
 8007638:	da06      	bge.n	8007648 <HAL_RCCEx_PeriphCLKConfig+0x788>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 800763a:	482d      	ldr	r0, [pc, #180]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 800763c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 800763e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8007640:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007644:	4322      	orrs	r2, r4
 8007646:	64c2      	str	r2, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007648:	021b      	lsls	r3, r3, #8
 800764a:	d507      	bpl.n	800765c <HAL_RCCEx_PeriphCLKConfig+0x79c>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800764c:	4a28      	ldr	r2, [pc, #160]	; (80076f0 <HAL_RCCEx_PeriphCLKConfig+0x830>)
 800764e:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8007652:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007654:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8007658:	4303      	orrs	r3, r0
 800765a:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 800765c:	07cf      	lsls	r7, r1, #31
 800765e:	d507      	bpl.n	8007670 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007660:	2100      	movs	r1, #0
 8007662:	f105 0008 	add.w	r0, r5, #8
 8007666:	f7ff fb3b 	bl	8006ce0 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 800766a:	2800      	cmp	r0, #0
 800766c:	bf18      	it	ne
 800766e:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8007670:	686b      	ldr	r3, [r5, #4]
 8007672:	079c      	lsls	r4, r3, #30
 8007674:	d507      	bpl.n	8007686 <HAL_RCCEx_PeriphCLKConfig+0x7c6>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007676:	2101      	movs	r1, #1
 8007678:	f105 0008 	add.w	r0, r5, #8
 800767c:	f7ff fb30 	bl	8006ce0 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007680:	2800      	cmp	r0, #0
 8007682:	bf18      	it	ne
 8007684:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8007686:	686b      	ldr	r3, [r5, #4]
 8007688:	0758      	lsls	r0, r3, #29
 800768a:	d507      	bpl.n	800769c <HAL_RCCEx_PeriphCLKConfig+0x7dc>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800768c:	2102      	movs	r1, #2
 800768e:	f105 0008 	add.w	r0, r5, #8
 8007692:	f7ff fb25 	bl	8006ce0 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007696:	2800      	cmp	r0, #0
 8007698:	bf18      	it	ne
 800769a:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 800769c:	686b      	ldr	r3, [r5, #4]
 800769e:	0719      	lsls	r1, r3, #28
 80076a0:	d507      	bpl.n	80076b2 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80076a2:	2100      	movs	r1, #0
 80076a4:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076a8:	f7ff fb92 	bl	8006dd0 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 80076ac:	2800      	cmp	r0, #0
 80076ae:	bf18      	it	ne
 80076b0:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 80076b2:	686b      	ldr	r3, [r5, #4]
 80076b4:	06da      	lsls	r2, r3, #27
 80076b6:	d507      	bpl.n	80076c8 <HAL_RCCEx_PeriphCLKConfig+0x808>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80076b8:	2101      	movs	r1, #1
 80076ba:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076be:	f7ff fb87 	bl	8006dd0 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 80076c2:	2800      	cmp	r0, #0
 80076c4:	bf18      	it	ne
 80076c6:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 80076c8:	686b      	ldr	r3, [r5, #4]
 80076ca:	069b      	lsls	r3, r3, #26
 80076cc:	f100 80bc 	bmi.w	8007848 <HAL_RCCEx_PeriphCLKConfig+0x988>
    return HAL_OK;
 80076d0:	1e30      	subs	r0, r6, #0
 80076d2:	bf18      	it	ne
 80076d4:	2001      	movne	r0, #1
}
 80076d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80076da:	2101      	movs	r1, #1
 80076dc:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076e0:	f7ff fb76 	bl	8006dd0 <RCCEx_PLL3_Config>
 80076e4:	e6ab      	b.n	800743e <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 80076e6:	2601      	movs	r6, #1
 80076e8:	4634      	mov	r4, r6
 80076ea:	e6b4      	b.n	8007456 <HAL_RCCEx_PeriphCLKConfig+0x596>
 80076ec:	4626      	mov	r6, r4
 80076ee:	e6b2      	b.n	8007456 <HAL_RCCEx_PeriphCLKConfig+0x596>
 80076f0:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Lptim1ClockSelection)
 80076f4:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80076f8:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80076fc:	d003      	beq.n	8007706 <HAL_RCCEx_PeriphCLKConfig+0x846>
 80076fe:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007702:	f47f aeba 	bne.w	800747a <HAL_RCCEx_PeriphCLKConfig+0x5ba>
    if (ret == HAL_OK)
 8007706:	b9ac      	cbnz	r4, 8007734 <HAL_RCCEx_PeriphCLKConfig+0x874>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8007708:	4a54      	ldr	r2, [pc, #336]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 800770a:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
 800770e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007710:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007714:	430b      	orrs	r3, r1
 8007716:	6553      	str	r3, [r2, #84]	; 0x54
 8007718:	e6b1      	b.n	800747e <HAL_RCCEx_PeriphCLKConfig+0x5be>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800771a:	2100      	movs	r1, #0
 800771c:	f105 0008 	add.w	r0, r5, #8
 8007720:	f7ff fade 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007724:	4604      	mov	r4, r0
        break;
 8007726:	e7ee      	b.n	8007706 <HAL_RCCEx_PeriphCLKConfig+0x846>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007728:	2102      	movs	r1, #2
 800772a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800772e:	f7ff fb4f 	bl	8006dd0 <RCCEx_PLL3_Config>
 8007732:	e7f7      	b.n	8007724 <HAL_RCCEx_PeriphCLKConfig+0x864>
 8007734:	4626      	mov	r6, r4
 8007736:	e6a2      	b.n	800747e <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007738:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800773c:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8007740:	d003      	beq.n	800774a <HAL_RCCEx_PeriphCLKConfig+0x88a>
 8007742:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007746:	f47f aeac 	bne.w	80074a2 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    if (ret == HAL_OK)
 800774a:	b9ac      	cbnz	r4, 8007778 <HAL_RCCEx_PeriphCLKConfig+0x8b8>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800774c:	4a43      	ldr	r2, [pc, #268]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 800774e:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8007752:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007754:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007758:	430b      	orrs	r3, r1
 800775a:	6593      	str	r3, [r2, #88]	; 0x58
 800775c:	e6a3      	b.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800775e:	2100      	movs	r1, #0
 8007760:	f105 0008 	add.w	r0, r5, #8
 8007764:	f7ff fabc 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007768:	4604      	mov	r4, r0
        break;
 800776a:	e7ee      	b.n	800774a <HAL_RCCEx_PeriphCLKConfig+0x88a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800776c:	2102      	movs	r1, #2
 800776e:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007772:	f7ff fb2d 	bl	8006dd0 <RCCEx_PLL3_Config>
 8007776:	e7f7      	b.n	8007768 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
 8007778:	4626      	mov	r6, r4
 800777a:	e694      	b.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (PeriphClkInit->Lptim345ClockSelection)
 800777c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007780:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007784:	d003      	beq.n	800778e <HAL_RCCEx_PeriphCLKConfig+0x8ce>
 8007786:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800778a:	f47f ae9e 	bne.w	80074ca <HAL_RCCEx_PeriphCLKConfig+0x60a>
    if (ret == HAL_OK)
 800778e:	b9ac      	cbnz	r4, 80077bc <HAL_RCCEx_PeriphCLKConfig+0x8fc>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8007790:	4a32      	ldr	r2, [pc, #200]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 8007792:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8007796:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007798:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800779c:	430b      	orrs	r3, r1
 800779e:	6593      	str	r3, [r2, #88]	; 0x58
 80077a0:	e695      	b.n	80074ce <HAL_RCCEx_PeriphCLKConfig+0x60e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80077a2:	2100      	movs	r1, #0
 80077a4:	f105 0008 	add.w	r0, r5, #8
 80077a8:	f7ff fa9a 	bl	8006ce0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80077ac:	4604      	mov	r4, r0
        break;
 80077ae:	e7ee      	b.n	800778e <HAL_RCCEx_PeriphCLKConfig+0x8ce>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80077b0:	2102      	movs	r1, #2
 80077b2:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80077b6:	f7ff fb0b 	bl	8006dd0 <RCCEx_PLL3_Config>
 80077ba:	e7f7      	b.n	80077ac <HAL_RCCEx_PeriphCLKConfig+0x8ec>
 80077bc:	4626      	mov	r6, r4
 80077be:	e686      	b.n	80074ce <HAL_RCCEx_PeriphCLKConfig+0x60e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80077c0:	2102      	movs	r1, #2
 80077c2:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80077c6:	f7ff fb03 	bl	8006dd0 <RCCEx_PLL3_Config>
 80077ca:	e6c3      	b.n	8007554 <HAL_RCCEx_PeriphCLKConfig+0x694>
    switch (PeriphClkInit->AdcClockSelection)
 80077cc:	2601      	movs	r6, #1
 80077ce:	4634      	mov	r4, r6
 80077d0:	e6cc      	b.n	800756c <HAL_RCCEx_PeriphCLKConfig+0x6ac>
 80077d2:	4626      	mov	r6, r4
 80077d4:	e6ca      	b.n	800756c <HAL_RCCEx_PeriphCLKConfig+0x6ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80077d6:	2101      	movs	r1, #1
 80077d8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80077dc:	f7ff faf8 	bl	8006dd0 <RCCEx_PLL3_Config>
 80077e0:	4604      	mov	r4, r0
        break;
 80077e2:	e6d8      	b.n	8007596 <HAL_RCCEx_PeriphCLKConfig+0x6d6>
    switch (PeriphClkInit->UsbClockSelection)
 80077e4:	2601      	movs	r6, #1
 80077e6:	4634      	mov	r4, r6
 80077e8:	e6e0      	b.n	80075ac <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 80077ea:	4626      	mov	r6, r4
 80077ec:	e6de      	b.n	80075ac <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80077ee:	4a1b      	ldr	r2, [pc, #108]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 80077f0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80077f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80077f6:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 80077f8:	b974      	cbnz	r4, 8007818 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 80077fa:	4a18      	ldr	r2, [pc, #96]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 80077fc:	6d29      	ldr	r1, [r5, #80]	; 0x50
 80077fe:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007800:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007804:	430b      	orrs	r3, r1
 8007806:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007808:	e6dd      	b.n	80075c6 <HAL_RCCEx_PeriphCLKConfig+0x706>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800780a:	2102      	movs	r1, #2
 800780c:	f105 0008 	add.w	r0, r5, #8
 8007810:	f7ff fa66 	bl	8006ce0 <RCCEx_PLL2_Config>
 8007814:	4604      	mov	r4, r0
        break;
 8007816:	e7ef      	b.n	80077f8 <HAL_RCCEx_PeriphCLKConfig+0x938>
 8007818:	4626      	mov	r6, r4
 800781a:	e6d4      	b.n	80075c6 <HAL_RCCEx_PeriphCLKConfig+0x706>
    switch (PeriphClkInit->RngClockSelection)
 800781c:	f420 7280 	bic.w	r2, r0, #256	; 0x100
 8007820:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8007824:	f47f aee8 	bne.w	80075f8 <HAL_RCCEx_PeriphCLKConfig+0x738>
    if (ret == HAL_OK)
 8007828:	b964      	cbnz	r4, 8007844 <HAL_RCCEx_PeriphCLKConfig+0x984>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 800782a:	4c0c      	ldr	r4, [pc, #48]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 800782c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800782e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8007832:	4302      	orrs	r2, r0
 8007834:	6562      	str	r2, [r4, #84]	; 0x54
 8007836:	e6e0      	b.n	80075fa <HAL_RCCEx_PeriphCLKConfig+0x73a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007838:	4f08      	ldr	r7, [pc, #32]	; (800785c <HAL_RCCEx_PeriphCLKConfig+0x99c>)
 800783a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800783c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8007840:	62fa      	str	r2, [r7, #44]	; 0x2c
        break;
 8007842:	e7f1      	b.n	8007828 <HAL_RCCEx_PeriphCLKConfig+0x968>
 8007844:	4626      	mov	r6, r4
 8007846:	e6d8      	b.n	80075fa <HAL_RCCEx_PeriphCLKConfig+0x73a>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007848:	2102      	movs	r1, #2
 800784a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800784e:	f7ff fabf 	bl	8006dd0 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007852:	2800      	cmp	r0, #0
 8007854:	f43f af3c 	beq.w	80076d0 <HAL_RCCEx_PeriphCLKConfig+0x810>
  return HAL_ERROR;
 8007858:	2001      	movs	r0, #1
 800785a:	e73c      	b.n	80076d6 <HAL_RCCEx_PeriphCLKConfig+0x816>
 800785c:	58024400 	.word	0x58024400

08007860 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007860:	4770      	bx	lr
	...

08007864 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007864:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007868:	2b01      	cmp	r3, #1
 800786a:	d13b      	bne.n	80078e4 <HAL_TIM_Base_Start_IT+0x80>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800786c:	2302      	movs	r3, #2
 800786e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007872:	6803      	ldr	r3, [r0, #0]
 8007874:	68da      	ldr	r2, [r3, #12]
 8007876:	f042 0201 	orr.w	r2, r2, #1
 800787a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800787c:	4a1a      	ldr	r2, [pc, #104]	; (80078e8 <HAL_TIM_Base_Start_IT+0x84>)
 800787e:	4293      	cmp	r3, r2
 8007880:	d022      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 8007882:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007886:	d01f      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 8007888:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800788c:	4293      	cmp	r3, r2
 800788e:	d01b      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 8007890:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007894:	4293      	cmp	r3, r2
 8007896:	d017      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 8007898:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800789c:	4293      	cmp	r3, r2
 800789e:	d013      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 80078a0:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80078a4:	4293      	cmp	r3, r2
 80078a6:	d00f      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 80078a8:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 80078ac:	4293      	cmp	r3, r2
 80078ae:	d00b      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 80078b0:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 80078b4:	4293      	cmp	r3, r2
 80078b6:	d007      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 80078b8:	f5a2 42c0 	sub.w	r2, r2, #24576	; 0x6000
 80078bc:	4293      	cmp	r3, r2
 80078be:	d003      	beq.n	80078c8 <HAL_TIM_Base_Start_IT+0x64>
 80078c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80078c4:	4293      	cmp	r3, r2
 80078c6:	d107      	bne.n	80078d8 <HAL_TIM_Base_Start_IT+0x74>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80078c8:	6899      	ldr	r1, [r3, #8]
 80078ca:	4a08      	ldr	r2, [pc, #32]	; (80078ec <HAL_TIM_Base_Start_IT+0x88>)
 80078cc:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80078ce:	2a06      	cmp	r2, #6
 80078d0:	d006      	beq.n	80078e0 <HAL_TIM_Base_Start_IT+0x7c>
 80078d2:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80078d6:	d003      	beq.n	80078e0 <HAL_TIM_Base_Start_IT+0x7c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80078d8:	681a      	ldr	r2, [r3, #0]
 80078da:	f042 0201 	orr.w	r2, r2, #1
 80078de:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80078e0:	2000      	movs	r0, #0
}
 80078e2:	4770      	bx	lr
    return HAL_ERROR;
 80078e4:	2001      	movs	r0, #1
 80078e6:	4770      	bx	lr
 80078e8:	40010000 	.word	0x40010000
 80078ec:	00010007 	.word	0x00010007

080078f0 <HAL_TIM_OC_DelayElapsedCallback>:
 80078f0:	4770      	bx	lr

080078f2 <HAL_TIM_IC_CaptureCallback>:
 80078f2:	4770      	bx	lr

080078f4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80078f4:	4770      	bx	lr

080078f6 <HAL_TIM_TriggerCallback>:
 80078f6:	4770      	bx	lr

080078f8 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80078f8:	6803      	ldr	r3, [r0, #0]
 80078fa:	691a      	ldr	r2, [r3, #16]
 80078fc:	0791      	lsls	r1, r2, #30
{
 80078fe:	b510      	push	{r4, lr}
 8007900:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007902:	d50f      	bpl.n	8007924 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007904:	68da      	ldr	r2, [r3, #12]
 8007906:	0792      	lsls	r2, r2, #30
 8007908:	d50c      	bpl.n	8007924 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800790a:	f06f 0202 	mvn.w	r2, #2
 800790e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007910:	2201      	movs	r2, #1
 8007912:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007914:	699b      	ldr	r3, [r3, #24]
 8007916:	0799      	lsls	r1, r3, #30
 8007918:	f000 8085 	beq.w	8007a26 <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800791c:	f7ff ffe9 	bl	80078f2 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007920:	2300      	movs	r3, #0
 8007922:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007924:	6823      	ldr	r3, [r4, #0]
 8007926:	691a      	ldr	r2, [r3, #16]
 8007928:	0752      	lsls	r2, r2, #29
 800792a:	d510      	bpl.n	800794e <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800792c:	68da      	ldr	r2, [r3, #12]
 800792e:	0750      	lsls	r0, r2, #29
 8007930:	d50d      	bpl.n	800794e <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007932:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007936:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007938:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800793a:	2202      	movs	r2, #2
 800793c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800793e:	699b      	ldr	r3, [r3, #24]
 8007940:	f413 7f40 	tst.w	r3, #768	; 0x300
 8007944:	d075      	beq.n	8007a32 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007946:	f7ff ffd4 	bl	80078f2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800794a:	2300      	movs	r3, #0
 800794c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800794e:	6823      	ldr	r3, [r4, #0]
 8007950:	691a      	ldr	r2, [r3, #16]
 8007952:	0711      	lsls	r1, r2, #28
 8007954:	d50f      	bpl.n	8007976 <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007956:	68da      	ldr	r2, [r3, #12]
 8007958:	0712      	lsls	r2, r2, #28
 800795a:	d50c      	bpl.n	8007976 <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800795c:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007960:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007962:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007964:	2204      	movs	r2, #4
 8007966:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007968:	69db      	ldr	r3, [r3, #28]
 800796a:	079b      	lsls	r3, r3, #30
 800796c:	d067      	beq.n	8007a3e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800796e:	f7ff ffc0 	bl	80078f2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007972:	2300      	movs	r3, #0
 8007974:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007976:	6823      	ldr	r3, [r4, #0]
 8007978:	691a      	ldr	r2, [r3, #16]
 800797a:	06d0      	lsls	r0, r2, #27
 800797c:	d510      	bpl.n	80079a0 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800797e:	68da      	ldr	r2, [r3, #12]
 8007980:	06d1      	lsls	r1, r2, #27
 8007982:	d50d      	bpl.n	80079a0 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007984:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007988:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800798a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800798c:	2208      	movs	r2, #8
 800798e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007990:	69db      	ldr	r3, [r3, #28]
 8007992:	f413 7f40 	tst.w	r3, #768	; 0x300
 8007996:	d058      	beq.n	8007a4a <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8007998:	f7ff ffab 	bl	80078f2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800799c:	2300      	movs	r3, #0
 800799e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80079a0:	6823      	ldr	r3, [r4, #0]
 80079a2:	691a      	ldr	r2, [r3, #16]
 80079a4:	07d2      	lsls	r2, r2, #31
 80079a6:	d508      	bpl.n	80079ba <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80079a8:	68da      	ldr	r2, [r3, #12]
 80079aa:	07d0      	lsls	r0, r2, #31
 80079ac:	d505      	bpl.n	80079ba <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80079ae:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80079b2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80079b4:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80079b6:	f7f8 fffb 	bl	80009b0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80079ba:	6823      	ldr	r3, [r4, #0]
 80079bc:	691a      	ldr	r2, [r3, #16]
 80079be:	0611      	lsls	r1, r2, #24
 80079c0:	d508      	bpl.n	80079d4 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80079c2:	68da      	ldr	r2, [r3, #12]
 80079c4:	0612      	lsls	r2, r2, #24
 80079c6:	d505      	bpl.n	80079d4 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80079c8:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80079cc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80079ce:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80079d0:	f000 f8e1 	bl	8007b96 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 80079d4:	6823      	ldr	r3, [r4, #0]
 80079d6:	691a      	ldr	r2, [r3, #16]
 80079d8:	05d0      	lsls	r0, r2, #23
 80079da:	d508      	bpl.n	80079ee <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80079dc:	68da      	ldr	r2, [r3, #12]
 80079de:	0611      	lsls	r1, r2, #24
 80079e0:	d505      	bpl.n	80079ee <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 80079e2:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 80079e6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 80079e8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 80079ea:	f000 f8d5 	bl	8007b98 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80079ee:	6823      	ldr	r3, [r4, #0]
 80079f0:	691a      	ldr	r2, [r3, #16]
 80079f2:	0652      	lsls	r2, r2, #25
 80079f4:	d508      	bpl.n	8007a08 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80079f6:	68da      	ldr	r2, [r3, #12]
 80079f8:	0650      	lsls	r0, r2, #25
 80079fa:	d505      	bpl.n	8007a08 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80079fc:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007a00:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007a02:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007a04:	f7ff ff77 	bl	80078f6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007a08:	6823      	ldr	r3, [r4, #0]
 8007a0a:	691a      	ldr	r2, [r3, #16]
 8007a0c:	0691      	lsls	r1, r2, #26
 8007a0e:	d522      	bpl.n	8007a56 <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007a10:	68da      	ldr	r2, [r3, #12]
 8007a12:	0692      	lsls	r2, r2, #26
 8007a14:	d51f      	bpl.n	8007a56 <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007a16:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007a1a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007a1c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007a22:	f000 b8b7 	b.w	8007b94 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a26:	f7ff ff63 	bl	80078f0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a2a:	4620      	mov	r0, r4
 8007a2c:	f7ff ff62 	bl	80078f4 <HAL_TIM_PWM_PulseFinishedCallback>
 8007a30:	e776      	b.n	8007920 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a32:	f7ff ff5d 	bl	80078f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a36:	4620      	mov	r0, r4
 8007a38:	f7ff ff5c 	bl	80078f4 <HAL_TIM_PWM_PulseFinishedCallback>
 8007a3c:	e785      	b.n	800794a <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a3e:	f7ff ff57 	bl	80078f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a42:	4620      	mov	r0, r4
 8007a44:	f7ff ff56 	bl	80078f4 <HAL_TIM_PWM_PulseFinishedCallback>
 8007a48:	e793      	b.n	8007972 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a4a:	f7ff ff51 	bl	80078f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a4e:	4620      	mov	r0, r4
 8007a50:	f7ff ff50 	bl	80078f4 <HAL_TIM_PWM_PulseFinishedCallback>
 8007a54:	e7a2      	b.n	800799c <HAL_TIM_IRQHandler+0xa4>
}
 8007a56:	bd10      	pop	{r4, pc}

08007a58 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a58:	4a34      	ldr	r2, [pc, #208]	; (8007b2c <TIM_Base_SetConfig+0xd4>)
  tmpcr1 = TIMx->CR1;
 8007a5a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a5c:	4290      	cmp	r0, r2
 8007a5e:	d012      	beq.n	8007a86 <TIM_Base_SetConfig+0x2e>
 8007a60:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007a64:	d00f      	beq.n	8007a86 <TIM_Base_SetConfig+0x2e>
 8007a66:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007a6a:	4290      	cmp	r0, r2
 8007a6c:	d00b      	beq.n	8007a86 <TIM_Base_SetConfig+0x2e>
 8007a6e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a72:	4290      	cmp	r0, r2
 8007a74:	d007      	beq.n	8007a86 <TIM_Base_SetConfig+0x2e>
 8007a76:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a7a:	4290      	cmp	r0, r2
 8007a7c:	d003      	beq.n	8007a86 <TIM_Base_SetConfig+0x2e>
 8007a7e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007a82:	4290      	cmp	r0, r2
 8007a84:	d119      	bne.n	8007aba <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007a86:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007a88:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007a8c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007a8e:	4a27      	ldr	r2, [pc, #156]	; (8007b2c <TIM_Base_SetConfig+0xd4>)
 8007a90:	4290      	cmp	r0, r2
 8007a92:	d025      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007a94:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007a98:	d022      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007a9a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007a9e:	4290      	cmp	r0, r2
 8007aa0:	d01e      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007aa2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007aa6:	4290      	cmp	r0, r2
 8007aa8:	d01a      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007aaa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007aae:	4290      	cmp	r0, r2
 8007ab0:	d016      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007ab2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007ab6:	4290      	cmp	r0, r2
 8007ab8:	d012      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007aba:	4a1d      	ldr	r2, [pc, #116]	; (8007b30 <TIM_Base_SetConfig+0xd8>)
 8007abc:	4290      	cmp	r0, r2
 8007abe:	d00f      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007ac0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ac4:	4290      	cmp	r0, r2
 8007ac6:	d00b      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007ac8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007acc:	4290      	cmp	r0, r2
 8007ace:	d007      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007ad0:	f5a2 42d0 	sub.w	r2, r2, #26624	; 0x6800
 8007ad4:	4290      	cmp	r0, r2
 8007ad6:	d003      	beq.n	8007ae0 <TIM_Base_SetConfig+0x88>
 8007ad8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007adc:	4290      	cmp	r0, r2
 8007ade:	d103      	bne.n	8007ae8 <TIM_Base_SetConfig+0x90>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007ae0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007ae4:	68ca      	ldr	r2, [r1, #12]
 8007ae6:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007ae8:	694a      	ldr	r2, [r1, #20]
 8007aea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007aee:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007af0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007af2:	688b      	ldr	r3, [r1, #8]
 8007af4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007af6:	680b      	ldr	r3, [r1, #0]
 8007af8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007afa:	4b0c      	ldr	r3, [pc, #48]	; (8007b2c <TIM_Base_SetConfig+0xd4>)
 8007afc:	4298      	cmp	r0, r3
 8007afe:	d00f      	beq.n	8007b20 <TIM_Base_SetConfig+0xc8>
 8007b00:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007b04:	4298      	cmp	r0, r3
 8007b06:	d00b      	beq.n	8007b20 <TIM_Base_SetConfig+0xc8>
 8007b08:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8007b0c:	4298      	cmp	r0, r3
 8007b0e:	d007      	beq.n	8007b20 <TIM_Base_SetConfig+0xc8>
 8007b10:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007b14:	4298      	cmp	r0, r3
 8007b16:	d003      	beq.n	8007b20 <TIM_Base_SetConfig+0xc8>
 8007b18:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007b1c:	4298      	cmp	r0, r3
 8007b1e:	d101      	bne.n	8007b24 <TIM_Base_SetConfig+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007b20:	690b      	ldr	r3, [r1, #16]
 8007b22:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007b24:	2301      	movs	r3, #1
 8007b26:	6143      	str	r3, [r0, #20]
}
 8007b28:	4770      	bx	lr
 8007b2a:	bf00      	nop
 8007b2c:	40010000 	.word	0x40010000
 8007b30:	40014000 	.word	0x40014000

08007b34 <HAL_TIM_Base_Init>:
{
 8007b34:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007b36:	4604      	mov	r4, r0
 8007b38:	b350      	cbz	r0, 8007b90 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007b3a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007b3e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b42:	b91b      	cbnz	r3, 8007b4c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007b44:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007b48:	f7ff fe8a 	bl	8007860 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007b4c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007b4e:	6820      	ldr	r0, [r4, #0]
 8007b50:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8007b52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007b56:	f7ff ff7f 	bl	8007a58 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007b5a:	2301      	movs	r3, #1
  return HAL_OK;
 8007b5c:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007b5e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007b62:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8007b66:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8007b6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007b6e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8007b72:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007b76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007b7a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8007b7e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007b82:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8007b86:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8007b8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8007b8e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007b90:	2001      	movs	r0, #1
 8007b92:	e7fc      	b.n	8007b8e <HAL_TIM_Base_Init+0x5a>

08007b94 <HAL_TIMEx_CommutCallback>:
 8007b94:	4770      	bx	lr

08007b96 <HAL_TIMEx_BreakCallback>:
 8007b96:	4770      	bx	lr

08007b98 <HAL_TIMEx_Break2Callback>:
 8007b98:	4770      	bx	lr

08007b9a <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007b9a:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007b9c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ba0:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007ba2:	f001 fe35 	bl	8009810 <xTaskGetSchedulerState>
 8007ba6:	2801      	cmp	r0, #1
 8007ba8:	d003      	beq.n	8007bb2 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007baa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007bae:	f000 bbd9 	b.w	8008364 <xPortSysTickHandler>
}
 8007bb2:	bd08      	pop	{r3, pc}

08007bb4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007bb4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007bb8:	b92b      	cbnz	r3, 8007bc6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007bba:	4b06      	ldr	r3, [pc, #24]	; (8007bd4 <osKernelInitialize+0x20>)
 8007bbc:	6818      	ldr	r0, [r3, #0]
 8007bbe:	b928      	cbnz	r0, 8007bcc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007bc0:	2201      	movs	r2, #1
 8007bc2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007bc4:	4770      	bx	lr
    stat = osErrorISR;
 8007bc6:	f06f 0005 	mvn.w	r0, #5
 8007bca:	4770      	bx	lr
    } else {
      stat = osError;
 8007bcc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007bd0:	4770      	bx	lr
 8007bd2:	bf00      	nop
 8007bd4:	240024d8 	.word	0x240024d8

08007bd8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007bd8:	b510      	push	{r4, lr}
 8007bda:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007bde:	b95c      	cbnz	r4, 8007bf8 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007be0:	4b08      	ldr	r3, [pc, #32]	; (8007c04 <osKernelStart+0x2c>)
 8007be2:	681a      	ldr	r2, [r3, #0]
 8007be4:	2a01      	cmp	r2, #1
 8007be6:	d10a      	bne.n	8007bfe <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007be8:	4a07      	ldr	r2, [pc, #28]	; (8007c08 <osKernelStart+0x30>)
 8007bea:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007bec:	2202      	movs	r2, #2
 8007bee:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007bf0:	f001 fcb2 	bl	8009558 <vTaskStartScheduler>
      stat = osOK;
 8007bf4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007bf6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007bf8:	f06f 0005 	mvn.w	r0, #5
 8007bfc:	e7fb      	b.n	8007bf6 <osKernelStart+0x1e>
      stat = osError;
 8007bfe:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007c02:	e7f8      	b.n	8007bf6 <osKernelStart+0x1e>
 8007c04:	240024d8 	.word	0x240024d8
 8007c08:	e000ed00 	.word	0xe000ed00

08007c0c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c0e:	460b      	mov	r3, r1
 8007c10:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007c12:	2100      	movs	r1, #0
 8007c14:	9105      	str	r1, [sp, #20]
 8007c16:	f3ef 8405 	mrs	r4, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007c1a:	b9cc      	cbnz	r4, 8007c50 <osThreadNew+0x44>
 8007c1c:	b1c0      	cbz	r0, 8007c50 <osThreadNew+0x44>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007c1e:	b36a      	cbz	r2, 8007c7c <osThreadNew+0x70>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007c20:	6995      	ldr	r5, [r2, #24]
 8007c22:	428d      	cmp	r5, r1
 8007c24:	bf08      	it	eq
 8007c26:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007c28:	1e69      	subs	r1, r5, #1
 8007c2a:	46ac      	mov	ip, r5
 8007c2c:	2937      	cmp	r1, #55	; 0x37
 8007c2e:	d82a      	bhi.n	8007c86 <osThreadNew+0x7a>
 8007c30:	6851      	ldr	r1, [r2, #4]
 8007c32:	07c9      	lsls	r1, r1, #31
 8007c34:	d427      	bmi.n	8007c86 <osThreadNew+0x7a>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007c36:	6956      	ldr	r6, [r2, #20]
 8007c38:	b16e      	cbz	r6, 8007c56 <osThreadNew+0x4a>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007c3a:	08b4      	lsrs	r4, r6, #2
      if (attr->name != NULL) {
 8007c3c:	6811      	ldr	r1, [r2, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c3e:	e9d2 7e02 	ldrd	r7, lr, [r2, #8]
 8007c42:	b157      	cbz	r7, 8007c5a <osThreadNew+0x4e>
 8007c44:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007c48:	d902      	bls.n	8007c50 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c4a:	6912      	ldr	r2, [r2, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c4c:	b102      	cbz	r2, 8007c50 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c4e:	b9e6      	cbnz	r6, 8007c8a <osThreadNew+0x7e>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007c50:	9805      	ldr	r0, [sp, #20]
}
 8007c52:	b007      	add	sp, #28
 8007c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007c56:	2480      	movs	r4, #128	; 0x80
 8007c58:	e7f0      	b.n	8007c3c <osThreadNew+0x30>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007c5a:	f1be 0f00 	cmp.w	lr, #0
 8007c5e:	d1f7      	bne.n	8007c50 <osThreadNew+0x44>
      if (mem == 0) {
 8007c60:	6912      	ldr	r2, [r2, #16]
 8007c62:	2a00      	cmp	r2, #0
 8007c64:	d1f4      	bne.n	8007c50 <osThreadNew+0x44>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007c66:	aa05      	add	r2, sp, #20
 8007c68:	e9cd c200 	strd	ip, r2, [sp]
 8007c6c:	b2a2      	uxth	r2, r4
 8007c6e:	f001 faee 	bl	800924e <xTaskCreate>
 8007c72:	2801      	cmp	r0, #1
            hTask = NULL;
 8007c74:	bf1c      	itt	ne
 8007c76:	2300      	movne	r3, #0
 8007c78:	9305      	strne	r3, [sp, #20]
 8007c7a:	e7e9      	b.n	8007c50 <osThreadNew+0x44>
    name = NULL;
 8007c7c:	4611      	mov	r1, r2
    prio  = (UBaseType_t)osPriorityNormal;
 8007c7e:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007c82:	2480      	movs	r4, #128	; 0x80
 8007c84:	e7ef      	b.n	8007c66 <osThreadNew+0x5a>
        return (NULL);
 8007c86:	4620      	mov	r0, r4
 8007c88:	e7e3      	b.n	8007c52 <osThreadNew+0x46>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007c8a:	e9cd 2701 	strd	r2, r7, [sp, #4]
 8007c8e:	9500      	str	r5, [sp, #0]
 8007c90:	4622      	mov	r2, r4
 8007c92:	f001 faa4 	bl	80091de <xTaskCreateStatic>
 8007c96:	9005      	str	r0, [sp, #20]
 8007c98:	e7da      	b.n	8007c50 <osThreadNew+0x44>

08007c9a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007c9a:	b510      	push	{r4, lr}
 8007c9c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007ca0:	b924      	cbnz	r4, 8007cac <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007ca2:	b110      	cbz	r0, 8007caa <osDelay+0x10>
      vTaskDelay(ticks);
 8007ca4:	f001 fc18 	bl	80094d8 <vTaskDelay>
    stat = osOK;
 8007ca8:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8007caa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007cac:	f06f 0005 	mvn.w	r0, #5
 8007cb0:	e7fb      	b.n	8007caa <osDelay+0x10>

08007cb2 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007cb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007cb4:	4604      	mov	r4, r0
 8007cb6:	460e      	mov	r6, r1
 8007cb8:	4615      	mov	r5, r2
 8007cba:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007cbe:	b11a      	cbz	r2, 8007cc8 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007cc0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007cc2:	4620      	mov	r0, r4
 8007cc4:	b003      	add	sp, #12
 8007cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007cc8:	2800      	cmp	r0, #0
 8007cca:	d0f9      	beq.n	8007cc0 <osSemaphoreNew+0xe>
 8007ccc:	4288      	cmp	r0, r1
 8007cce:	d3f7      	bcc.n	8007cc0 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8007cd0:	b1e5      	cbz	r5, 8007d0c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007cd2:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007cd6:	b1bb      	cbz	r3, 8007d08 <osSemaphoreNew+0x56>
 8007cd8:	2f4f      	cmp	r7, #79	; 0x4f
 8007cda:	d9f1      	bls.n	8007cc0 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007cdc:	2801      	cmp	r0, #1
 8007cde:	d12a      	bne.n	8007d36 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007ce0:	2103      	movs	r1, #3
 8007ce2:	9100      	str	r1, [sp, #0]
 8007ce4:	4611      	mov	r1, r2
 8007ce6:	f000 fce5 	bl	80086b4 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007cea:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007cec:	2800      	cmp	r0, #0
 8007cee:	d0e7      	beq.n	8007cc0 <osSemaphoreNew+0xe>
 8007cf0:	b1de      	cbz	r6, 8007d2a <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007cf2:	2300      	movs	r3, #0
 8007cf4:	461a      	mov	r2, r3
 8007cf6:	4619      	mov	r1, r3
 8007cf8:	f000 fd91 	bl	800881e <xQueueGenericSend>
 8007cfc:	2801      	cmp	r0, #1
 8007cfe:	d014      	beq.n	8007d2a <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8007d00:	4620      	mov	r0, r4
 8007d02:	f001 f8cd 	bl	8008ea0 <vQueueDelete>
 8007d06:	e7db      	b.n	8007cc0 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007d08:	2f00      	cmp	r7, #0
 8007d0a:	d1d9      	bne.n	8007cc0 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007d0c:	2c01      	cmp	r4, #1
 8007d0e:	d105      	bne.n	8007d1c <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8007d10:	2203      	movs	r2, #3
 8007d12:	2100      	movs	r1, #0
 8007d14:	4620      	mov	r0, r4
 8007d16:	f000 fd1b 	bl	8008750 <xQueueGenericCreate>
 8007d1a:	e7e6      	b.n	8007cea <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007d1c:	4620      	mov	r0, r4
 8007d1e:	4631      	mov	r1, r6
 8007d20:	f000 fd5f 	bl	80087e2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007d24:	4604      	mov	r4, r0
 8007d26:	2800      	cmp	r0, #0
 8007d28:	d0ca      	beq.n	8007cc0 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8007d2a:	b955      	cbnz	r5, 8007d42 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8007d2c:	4629      	mov	r1, r5
 8007d2e:	4620      	mov	r0, r4
 8007d30:	f001 f890 	bl	8008e54 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007d34:	e7c5      	b.n	8007cc2 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007d36:	461a      	mov	r2, r3
 8007d38:	f000 fd31 	bl	800879e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007d3c:	4604      	mov	r4, r0
 8007d3e:	2800      	cmp	r0, #0
 8007d40:	d0be      	beq.n	8007cc0 <osSemaphoreNew+0xe>
          name = attr->name;
 8007d42:	682d      	ldr	r5, [r5, #0]
 8007d44:	e7f2      	b.n	8007d2c <osSemaphoreNew+0x7a>

08007d46 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007d46:	b513      	push	{r0, r1, r4, lr}
 8007d48:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007d4a:	b308      	cbz	r0, 8007d90 <osSemaphoreAcquire+0x4a>
 8007d4c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007d50:	b1b3      	cbz	r3, 8007d80 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8007d52:	b9e9      	cbnz	r1, 8007d90 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007d54:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007d56:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007d58:	f001 f82c 	bl	8008db4 <xQueueReceiveFromISR>
 8007d5c:	2801      	cmp	r0, #1
 8007d5e:	d114      	bne.n	8007d8a <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007d60:	9b01      	ldr	r3, [sp, #4]
 8007d62:	b913      	cbnz	r3, 8007d6a <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007d64:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007d66:	b002      	add	sp, #8
 8007d68:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007d6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007d6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d72:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007d76:	f3bf 8f4f 	dsb	sy
 8007d7a:	f3bf 8f6f 	isb	sy
 8007d7e:	e7f1      	b.n	8007d64 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007d80:	f000 ff55 	bl	8008c2e <xQueueSemaphoreTake>
 8007d84:	2801      	cmp	r0, #1
 8007d86:	d0ed      	beq.n	8007d64 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8007d88:	b92c      	cbnz	r4, 8007d96 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8007d8a:	f06f 0002 	mvn.w	r0, #2
 8007d8e:	e7ea      	b.n	8007d66 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8007d90:	f06f 0003 	mvn.w	r0, #3
 8007d94:	e7e7      	b.n	8007d66 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8007d96:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007d9a:	e7e4      	b.n	8007d66 <osSemaphoreAcquire+0x20>

08007d9c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007d9c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007d9e:	b310      	cbz	r0, 8007de6 <osSemaphoreRelease+0x4a>
 8007da0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007da4:	b1b3      	cbz	r3, 8007dd4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8007da6:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007da8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007daa:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007dac:	f000 fe4c 	bl	8008a48 <xQueueGiveFromISR>
 8007db0:	2801      	cmp	r0, #1
 8007db2:	d115      	bne.n	8007de0 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8007db4:	9b01      	ldr	r3, [sp, #4]
 8007db6:	b913      	cbnz	r3, 8007dbe <osSemaphoreRelease+0x22>
  stat = osOK;
 8007db8:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8007dba:	b002      	add	sp, #8
 8007dbc:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007dbe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007dc2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007dc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007dca:	f3bf 8f4f 	dsb	sy
 8007dce:	f3bf 8f6f 	isb	sy
 8007dd2:	e7f1      	b.n	8007db8 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007dd4:	461a      	mov	r2, r3
 8007dd6:	4619      	mov	r1, r3
 8007dd8:	f000 fd21 	bl	800881e <xQueueGenericSend>
 8007ddc:	2801      	cmp	r0, #1
 8007dde:	d0eb      	beq.n	8007db8 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007de0:	f06f 0002 	mvn.w	r0, #2
 8007de4:	e7e9      	b.n	8007dba <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007de6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007dea:	e7e6      	b.n	8007dba <osSemaphoreRelease+0x1e>

08007dec <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007dec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007dee:	4605      	mov	r5, r0
 8007df0:	460e      	mov	r6, r1
 8007df2:	4614      	mov	r4, r2
 8007df4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007df8:	b11f      	cbz	r7, 8007e02 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007dfa:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007dfc:	4628      	mov	r0, r5
 8007dfe:	b003      	add	sp, #12
 8007e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007e02:	2800      	cmp	r0, #0
 8007e04:	d0f9      	beq.n	8007dfa <osMessageQueueNew+0xe>
 8007e06:	2900      	cmp	r1, #0
 8007e08:	d0f7      	beq.n	8007dfa <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007e0a:	b1da      	cbz	r2, 8007e44 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e0c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007e10:	b183      	cbz	r3, 8007e34 <osMessageQueueNew+0x48>
 8007e12:	2a4f      	cmp	r2, #79	; 0x4f
 8007e14:	d9f1      	bls.n	8007dfa <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e16:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e18:	2a00      	cmp	r2, #0
 8007e1a:	d0ee      	beq.n	8007dfa <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e1c:	434d      	muls	r5, r1
 8007e1e:	6966      	ldr	r6, [r4, #20]
 8007e20:	42ae      	cmp	r6, r5
 8007e22:	d3ea      	bcc.n	8007dfa <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007e24:	9700      	str	r7, [sp, #0]
 8007e26:	f000 fc45 	bl	80086b4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007e2a:	4605      	mov	r5, r0
 8007e2c:	2800      	cmp	r0, #0
 8007e2e:	d0e4      	beq.n	8007dfa <osMessageQueueNew+0xe>
        name = attr->name;
 8007e30:	6824      	ldr	r4, [r4, #0]
 8007e32:	e011      	b.n	8007e58 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007e34:	2a00      	cmp	r2, #0
 8007e36:	d1e0      	bne.n	8007dfa <osMessageQueueNew+0xe>
 8007e38:	6923      	ldr	r3, [r4, #16]
 8007e3a:	2b00      	cmp	r3, #0
 8007e3c:	d1dd      	bne.n	8007dfa <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007e3e:	6963      	ldr	r3, [r4, #20]
 8007e40:	2b00      	cmp	r3, #0
 8007e42:	d1da      	bne.n	8007dfa <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007e44:	4628      	mov	r0, r5
 8007e46:	2200      	movs	r2, #0
 8007e48:	4631      	mov	r1, r6
 8007e4a:	f000 fc81 	bl	8008750 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007e4e:	4605      	mov	r5, r0
 8007e50:	2800      	cmp	r0, #0
 8007e52:	d0d2      	beq.n	8007dfa <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007e54:	2c00      	cmp	r4, #0
 8007e56:	d1eb      	bne.n	8007e30 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007e58:	4621      	mov	r1, r4
 8007e5a:	4628      	mov	r0, r5
 8007e5c:	f000 fffa 	bl	8008e54 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007e60:	e7cc      	b.n	8007dfc <osMessageQueueNew+0x10>

08007e62 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007e62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007e64:	461c      	mov	r4, r3
 8007e66:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007e6a:	b1c6      	cbz	r6, 8007e9e <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007e6c:	b318      	cbz	r0, 8007eb6 <osMessageQueuePut+0x54>
 8007e6e:	b311      	cbz	r1, 8007eb6 <osMessageQueuePut+0x54>
 8007e70:	bb0b      	cbnz	r3, 8007eb6 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007e72:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007e74:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007e76:	f000 fd85 	bl	8008984 <xQueueGenericSendFromISR>
 8007e7a:	2801      	cmp	r0, #1
 8007e7c:	d118      	bne.n	8007eb0 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007e7e:	9b01      	ldr	r3, [sp, #4]
 8007e80:	b913      	cbnz	r3, 8007e88 <osMessageQueuePut+0x26>
  stat = osOK;
 8007e82:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007e84:	b002      	add	sp, #8
 8007e86:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007e88:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007e8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007e90:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007e94:	f3bf 8f4f 	dsb	sy
 8007e98:	f3bf 8f6f 	isb	sy
 8007e9c:	e7f1      	b.n	8007e82 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007e9e:	b150      	cbz	r0, 8007eb6 <osMessageQueuePut+0x54>
 8007ea0:	b149      	cbz	r1, 8007eb6 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007ea2:	4633      	mov	r3, r6
 8007ea4:	4622      	mov	r2, r4
 8007ea6:	f000 fcba 	bl	800881e <xQueueGenericSend>
 8007eaa:	2801      	cmp	r0, #1
 8007eac:	d0e9      	beq.n	8007e82 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8007eae:	b92c      	cbnz	r4, 8007ebc <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8007eb0:	f06f 0002 	mvn.w	r0, #2
 8007eb4:	e7e6      	b.n	8007e84 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8007eb6:	f06f 0003 	mvn.w	r0, #3
 8007eba:	e7e3      	b.n	8007e84 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8007ebc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007ec0:	e7e0      	b.n	8007e84 <osMessageQueuePut+0x22>

08007ec2 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007ec2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ec4:	461c      	mov	r4, r3
 8007ec6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007eca:	b1c3      	cbz	r3, 8007efe <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007ecc:	b310      	cbz	r0, 8007f14 <osMessageQueueGet+0x52>
 8007ece:	b309      	cbz	r1, 8007f14 <osMessageQueueGet+0x52>
 8007ed0:	bb04      	cbnz	r4, 8007f14 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007ed2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007ed4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007ed6:	f000 ff6d 	bl	8008db4 <xQueueReceiveFromISR>
 8007eda:	2801      	cmp	r0, #1
 8007edc:	d117      	bne.n	8007f0e <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007ede:	9b01      	ldr	r3, [sp, #4]
 8007ee0:	b913      	cbnz	r3, 8007ee8 <osMessageQueueGet+0x26>
  stat = osOK;
 8007ee2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007ee4:	b003      	add	sp, #12
 8007ee6:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007ee8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007eec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ef0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007ef4:	f3bf 8f4f 	dsb	sy
 8007ef8:	f3bf 8f6f 	isb	sy
 8007efc:	e7f1      	b.n	8007ee2 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007efe:	b148      	cbz	r0, 8007f14 <osMessageQueueGet+0x52>
 8007f00:	b141      	cbz	r1, 8007f14 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007f02:	4622      	mov	r2, r4
 8007f04:	f000 fdf4 	bl	8008af0 <xQueueReceive>
 8007f08:	2801      	cmp	r0, #1
 8007f0a:	d0ea      	beq.n	8007ee2 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8007f0c:	b92c      	cbnz	r4, 8007f1a <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8007f0e:	f06f 0002 	mvn.w	r0, #2
 8007f12:	e7e7      	b.n	8007ee4 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8007f14:	f06f 0003 	mvn.w	r0, #3
 8007f18:	e7e4      	b.n	8007ee4 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8007f1a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007f1e:	e7e1      	b.n	8007ee4 <osMessageQueueGet+0x22>

08007f20 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007f20:	4b03      	ldr	r3, [pc, #12]	; (8007f30 <vApplicationGetIdleTaskMemory+0x10>)
 8007f22:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007f24:	4b03      	ldr	r3, [pc, #12]	; (8007f34 <vApplicationGetIdleTaskMemory+0x14>)
 8007f26:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007f28:	2380      	movs	r3, #128	; 0x80
 8007f2a:	6013      	str	r3, [r2, #0]
}
 8007f2c:	4770      	bx	lr
 8007f2e:	bf00      	nop
 8007f30:	24002478 	.word	0x24002478
 8007f34:	24002278 	.word	0x24002278

08007f38 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007f38:	4b03      	ldr	r3, [pc, #12]	; (8007f48 <vApplicationGetTimerTaskMemory+0x10>)
 8007f3a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007f3c:	4b03      	ldr	r3, [pc, #12]	; (8007f4c <vApplicationGetTimerTaskMemory+0x14>)
 8007f3e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007f40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007f44:	6013      	str	r3, [r2, #0]
}
 8007f46:	4770      	bx	lr
 8007f48:	240028dc 	.word	0x240028dc
 8007f4c:	240024dc 	.word	0x240024dc

08007f50 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007f50:	4b10      	ldr	r3, [pc, #64]	; (8007f94 <prvInsertBlockIntoFreeList+0x44>)
{
 8007f52:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007f54:	461a      	mov	r2, r3
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	4283      	cmp	r3, r0
 8007f5a:	d3fb      	bcc.n	8007f54 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007f5c:	6854      	ldr	r4, [r2, #4]
 8007f5e:	1911      	adds	r1, r2, r4
 8007f60:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007f62:	bf01      	itttt	eq
 8007f64:	6841      	ldreq	r1, [r0, #4]
 8007f66:	4610      	moveq	r0, r2
 8007f68:	1909      	addeq	r1, r1, r4
 8007f6a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007f6c:	6844      	ldr	r4, [r0, #4]
 8007f6e:	1901      	adds	r1, r0, r4
 8007f70:	428b      	cmp	r3, r1
 8007f72:	d10c      	bne.n	8007f8e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007f74:	4908      	ldr	r1, [pc, #32]	; (8007f98 <prvInsertBlockIntoFreeList+0x48>)
 8007f76:	6809      	ldr	r1, [r1, #0]
 8007f78:	428b      	cmp	r3, r1
 8007f7a:	d003      	beq.n	8007f84 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007f7c:	6859      	ldr	r1, [r3, #4]
 8007f7e:	4421      	add	r1, r4
 8007f80:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007f82:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007f84:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007f86:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007f88:	bf18      	it	ne
 8007f8a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007f8c:	bd10      	pop	{r4, pc}
 8007f8e:	4619      	mov	r1, r3
 8007f90:	e7f8      	b.n	8007f84 <prvInsertBlockIntoFreeList+0x34>
 8007f92:	bf00      	nop
 8007f94:	24006554 	.word	0x24006554
 8007f98:	2400293c 	.word	0x2400293c

08007f9c <pvPortMalloc>:
{
 8007f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007fa0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007fa2:	f001 f981 	bl	80092a8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007fa6:	4942      	ldr	r1, [pc, #264]	; (80080b0 <pvPortMalloc+0x114>)
 8007fa8:	4d42      	ldr	r5, [pc, #264]	; (80080b4 <pvPortMalloc+0x118>)
 8007faa:	680b      	ldr	r3, [r1, #0]
 8007fac:	bb0b      	cbnz	r3, 8007ff2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007fae:	4a42      	ldr	r2, [pc, #264]	; (80080b8 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007fb0:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007fb2:	4e42      	ldr	r6, [pc, #264]	; (80080bc <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007fb4:	bf1b      	ittet	ne
 8007fb6:	1dd0      	addne	r0, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007fb8:	f502 5270 	addne.w	r2, r2, #15360	; 0x3c00
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007fbc:	f44f 5370 	moveq.w	r3, #15360	; 0x3c00
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007fc0:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007fc4:	bf1c      	itt	ne
 8007fc6:	1a13      	subne	r3, r2, r0
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007fc8:	4602      	movne	r2, r0
	xStart.xBlockSize = ( size_t ) 0;
 8007fca:	2000      	movs	r0, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007fcc:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007fce:	6032      	str	r2, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8007fd0:	6070      	str	r0, [r6, #4]
	uxAddress -= xHeapStructSize;
 8007fd2:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007fd4:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8007fd8:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007fdc:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8007fde:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007fe0:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007fe4:	4b36      	ldr	r3, [pc, #216]	; (80080c0 <pvPortMalloc+0x124>)
 8007fe6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007fe8:	4b36      	ldr	r3, [pc, #216]	; (80080c4 <pvPortMalloc+0x128>)
 8007fea:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007fec:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007ff0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007ff2:	682e      	ldr	r6, [r5, #0]
 8007ff4:	4226      	tst	r6, r4
 8007ff6:	d155      	bne.n	80080a4 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007ff8:	2c00      	cmp	r4, #0
 8007ffa:	d046      	beq.n	800808a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007ffc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008000:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008002:	bf1c      	itt	ne
 8008004:	f023 0307 	bicne.w	r3, r3, #7
 8008008:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800800a:	2b00      	cmp	r3, #0
 800800c:	d04a      	beq.n	80080a4 <pvPortMalloc+0x108>
 800800e:	4f2d      	ldr	r7, [pc, #180]	; (80080c4 <pvPortMalloc+0x128>)
 8008010:	683c      	ldr	r4, [r7, #0]
 8008012:	429c      	cmp	r4, r3
 8008014:	d346      	bcc.n	80080a4 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008016:	4a29      	ldr	r2, [pc, #164]	; (80080bc <pvPortMalloc+0x120>)
 8008018:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800801a:	6868      	ldr	r0, [r5, #4]
 800801c:	4298      	cmp	r0, r3
 800801e:	d204      	bcs.n	800802a <pvPortMalloc+0x8e>
 8008020:	f8d5 c000 	ldr.w	ip, [r5]
 8008024:	f1bc 0f00 	cmp.w	ip, #0
 8008028:	d115      	bne.n	8008056 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800802a:	6809      	ldr	r1, [r1, #0]
 800802c:	42a9      	cmp	r1, r5
 800802e:	d039      	beq.n	80080a4 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008030:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008032:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008036:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008038:	1ac2      	subs	r2, r0, r3
 800803a:	2a10      	cmp	r2, #16
 800803c:	d912      	bls.n	8008064 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800803e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008040:	0741      	lsls	r1, r0, #29
 8008042:	d00b      	beq.n	800805c <pvPortMalloc+0xc0>
 8008044:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008048:	f383 8811 	msr	BASEPRI, r3
 800804c:	f3bf 8f6f 	isb	sy
 8008050:	f3bf 8f4f 	dsb	sy
 8008054:	e7fe      	b.n	8008054 <pvPortMalloc+0xb8>
 8008056:	462a      	mov	r2, r5
 8008058:	4665      	mov	r5, ip
 800805a:	e7de      	b.n	800801a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800805c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800805e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008060:	f7ff ff76 	bl	8007f50 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008064:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008066:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008068:	4915      	ldr	r1, [pc, #84]	; (80080c0 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800806a:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800806c:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800806e:	6808      	ldr	r0, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008070:	4a15      	ldr	r2, [pc, #84]	; (80080c8 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008072:	4284      	cmp	r4, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008074:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8008076:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008078:	603c      	str	r4, [r7, #0]
					xNumberOfSuccessfulAllocations++;
 800807a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800807e:	bf38      	it	cc
 8008080:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008082:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008086:	606e      	str	r6, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8008088:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800808a:	f001 f9b1 	bl	80093f0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800808e:	0763      	lsls	r3, r4, #29
 8008090:	d00a      	beq.n	80080a8 <pvPortMalloc+0x10c>
 8008092:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008096:	f383 8811 	msr	BASEPRI, r3
 800809a:	f3bf 8f6f 	isb	sy
 800809e:	f3bf 8f4f 	dsb	sy
 80080a2:	e7fe      	b.n	80080a2 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80080a4:	2400      	movs	r4, #0
 80080a6:	e7f0      	b.n	800808a <pvPortMalloc+0xee>
}
 80080a8:	4620      	mov	r0, r4
 80080aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80080ae:	bf00      	nop
 80080b0:	2400293c 	.word	0x2400293c
 80080b4:	24006540 	.word	0x24006540
 80080b8:	24002940 	.word	0x24002940
 80080bc:	24006554 	.word	0x24006554
 80080c0:	24006548 	.word	0x24006548
 80080c4:	24006544 	.word	0x24006544
 80080c8:	2400654c 	.word	0x2400654c

080080cc <vPortFree>:
{
 80080cc:	b510      	push	{r4, lr}
	if( pv != NULL )
 80080ce:	4604      	mov	r4, r0
 80080d0:	b390      	cbz	r0, 8008138 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80080d2:	4a1a      	ldr	r2, [pc, #104]	; (800813c <vPortFree+0x70>)
 80080d4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80080d8:	6812      	ldr	r2, [r2, #0]
 80080da:	4213      	tst	r3, r2
 80080dc:	d108      	bne.n	80080f0 <vPortFree+0x24>
 80080de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080e2:	f383 8811 	msr	BASEPRI, r3
 80080e6:	f3bf 8f6f 	isb	sy
 80080ea:	f3bf 8f4f 	dsb	sy
 80080ee:	e7fe      	b.n	80080ee <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80080f0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80080f4:	b141      	cbz	r1, 8008108 <vPortFree+0x3c>
 80080f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080fa:	f383 8811 	msr	BASEPRI, r3
 80080fe:	f3bf 8f6f 	isb	sy
 8008102:	f3bf 8f4f 	dsb	sy
 8008106:	e7fe      	b.n	8008106 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008108:	ea23 0302 	bic.w	r3, r3, r2
 800810c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008110:	f001 f8ca 	bl	80092a8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008114:	4a0a      	ldr	r2, [pc, #40]	; (8008140 <vPortFree+0x74>)
 8008116:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800811a:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800811e:	6811      	ldr	r1, [r2, #0]
 8008120:	440b      	add	r3, r1
 8008122:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008124:	f7ff ff14 	bl	8007f50 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008128:	4a06      	ldr	r2, [pc, #24]	; (8008144 <vPortFree+0x78>)
 800812a:	6813      	ldr	r3, [r2, #0]
 800812c:	3301      	adds	r3, #1
}
 800812e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008132:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008134:	f001 b95c 	b.w	80093f0 <xTaskResumeAll>
}
 8008138:	bd10      	pop	{r4, pc}
 800813a:	bf00      	nop
 800813c:	24006540 	.word	0x24006540
 8008140:	24006544 	.word	0x24006544
 8008144:	24006550 	.word	0x24006550

08008148 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008148:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800814c:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008150:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008152:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008154:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008158:	2300      	movs	r3, #0
 800815a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800815c:	4770      	bx	lr

0800815e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800815e:	2300      	movs	r3, #0
 8008160:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008162:	4770      	bx	lr

08008164 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008164:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008166:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008168:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800816a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800816c:	689a      	ldr	r2, [r3, #8]
 800816e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008170:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008172:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008174:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008176:	3301      	adds	r3, #1
 8008178:	6003      	str	r3, [r0, #0]
}
 800817a:	4770      	bx	lr

0800817c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800817c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800817e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008180:	1c63      	adds	r3, r4, #1
 8008182:	d10a      	bne.n	800819a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008184:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008186:	685a      	ldr	r2, [r3, #4]
 8008188:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800818a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800818c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800818e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008190:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008192:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008194:	3301      	adds	r3, #1
 8008196:	6003      	str	r3, [r0, #0]
}
 8008198:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800819a:	f100 0208 	add.w	r2, r0, #8
 800819e:	4613      	mov	r3, r2
 80081a0:	6852      	ldr	r2, [r2, #4]
 80081a2:	6815      	ldr	r5, [r2, #0]
 80081a4:	42a5      	cmp	r5, r4
 80081a6:	d9fa      	bls.n	800819e <vListInsert+0x22>
 80081a8:	e7ed      	b.n	8008186 <vListInsert+0xa>

080081aa <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80081aa:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80081ac:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80081b0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80081b2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80081b4:	6859      	ldr	r1, [r3, #4]
 80081b6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80081b8:	bf08      	it	eq
 80081ba:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80081bc:	2200      	movs	r2, #0
 80081be:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80081c0:	681a      	ldr	r2, [r3, #0]
 80081c2:	3a01      	subs	r2, #1
 80081c4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80081c6:	6818      	ldr	r0, [r3, #0]
}
 80081c8:	4770      	bx	lr
	...

080081cc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80081cc:	4808      	ldr	r0, [pc, #32]	; (80081f0 <prvPortStartFirstTask+0x24>)
 80081ce:	6800      	ldr	r0, [r0, #0]
 80081d0:	6800      	ldr	r0, [r0, #0]
 80081d2:	f380 8808 	msr	MSP, r0
 80081d6:	f04f 0000 	mov.w	r0, #0
 80081da:	f380 8814 	msr	CONTROL, r0
 80081de:	b662      	cpsie	i
 80081e0:	b661      	cpsie	f
 80081e2:	f3bf 8f4f 	dsb	sy
 80081e6:	f3bf 8f6f 	isb	sy
 80081ea:	df00      	svc	0
 80081ec:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80081ee:	0000      	.short	0x0000
 80081f0:	e000ed08 	.word	0xe000ed08

080081f4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80081f4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008204 <vPortEnableVFP+0x10>
 80081f8:	6801      	ldr	r1, [r0, #0]
 80081fa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081fe:	6001      	str	r1, [r0, #0]
 8008200:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008202:	0000      	.short	0x0000
 8008204:	e000ed88 	.word	0xe000ed88

08008208 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008208:	2300      	movs	r3, #0
{
 800820a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800820c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800820e:	4b0d      	ldr	r3, [pc, #52]	; (8008244 <prvTaskExitError+0x3c>)
 8008210:	681b      	ldr	r3, [r3, #0]
 8008212:	3301      	adds	r3, #1
 8008214:	d008      	beq.n	8008228 <prvTaskExitError+0x20>
 8008216:	f04f 0350 	mov.w	r3, #80	; 0x50
 800821a:	f383 8811 	msr	BASEPRI, r3
 800821e:	f3bf 8f6f 	isb	sy
 8008222:	f3bf 8f4f 	dsb	sy
 8008226:	e7fe      	b.n	8008226 <prvTaskExitError+0x1e>
 8008228:	f04f 0350 	mov.w	r3, #80	; 0x50
 800822c:	f383 8811 	msr	BASEPRI, r3
 8008230:	f3bf 8f6f 	isb	sy
 8008234:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008238:	9b01      	ldr	r3, [sp, #4]
 800823a:	2b00      	cmp	r3, #0
 800823c:	d0fc      	beq.n	8008238 <prvTaskExitError+0x30>
}
 800823e:	b002      	add	sp, #8
 8008240:	4770      	bx	lr
 8008242:	bf00      	nop
 8008244:	2400004c 	.word	0x2400004c

08008248 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008248:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800824c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008250:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008254:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008256:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008258:	4b03      	ldr	r3, [pc, #12]	; (8008268 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800825a:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800825c:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800825e:	f06f 0302 	mvn.w	r3, #2
 8008262:	6203      	str	r3, [r0, #32]
}
 8008264:	4770      	bx	lr
 8008266:	bf00      	nop
 8008268:	08008209 	.word	0x08008209
 800826c:	00000000 	.word	0x00000000

08008270 <SVC_Handler>:
	__asm volatile (
 8008270:	4b07      	ldr	r3, [pc, #28]	; (8008290 <pxCurrentTCBConst2>)
 8008272:	6819      	ldr	r1, [r3, #0]
 8008274:	6808      	ldr	r0, [r1, #0]
 8008276:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800827a:	f380 8809 	msr	PSP, r0
 800827e:	f3bf 8f6f 	isb	sy
 8008282:	f04f 0000 	mov.w	r0, #0
 8008286:	f380 8811 	msr	BASEPRI, r0
 800828a:	4770      	bx	lr
 800828c:	f3af 8000 	nop.w

08008290 <pxCurrentTCBConst2>:
 8008290:	240065a4 	.word	0x240065a4

08008294 <vPortEnterCritical>:
 8008294:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008298:	f383 8811 	msr	BASEPRI, r3
 800829c:	f3bf 8f6f 	isb	sy
 80082a0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80082a4:	4a0a      	ldr	r2, [pc, #40]	; (80082d0 <vPortEnterCritical+0x3c>)
 80082a6:	6813      	ldr	r3, [r2, #0]
 80082a8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80082aa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80082ac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80082ae:	d10e      	bne.n	80082ce <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80082b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082b4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80082b8:	b2db      	uxtb	r3, r3
 80082ba:	b143      	cbz	r3, 80082ce <vPortEnterCritical+0x3a>
 80082bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082c0:	f383 8811 	msr	BASEPRI, r3
 80082c4:	f3bf 8f6f 	isb	sy
 80082c8:	f3bf 8f4f 	dsb	sy
 80082cc:	e7fe      	b.n	80082cc <vPortEnterCritical+0x38>
}
 80082ce:	4770      	bx	lr
 80082d0:	2400004c 	.word	0x2400004c

080082d4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80082d4:	4a08      	ldr	r2, [pc, #32]	; (80082f8 <vPortExitCritical+0x24>)
 80082d6:	6813      	ldr	r3, [r2, #0]
 80082d8:	b943      	cbnz	r3, 80082ec <vPortExitCritical+0x18>
 80082da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082de:	f383 8811 	msr	BASEPRI, r3
 80082e2:	f3bf 8f6f 	isb	sy
 80082e6:	f3bf 8f4f 	dsb	sy
 80082ea:	e7fe      	b.n	80082ea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80082ec:	3b01      	subs	r3, #1
 80082ee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80082f0:	b90b      	cbnz	r3, 80082f6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80082f2:	f383 8811 	msr	BASEPRI, r3
}
 80082f6:	4770      	bx	lr
 80082f8:	2400004c 	.word	0x2400004c
 80082fc:	00000000 	.word	0x00000000

08008300 <PendSV_Handler>:
	__asm volatile
 8008300:	f3ef 8009 	mrs	r0, PSP
 8008304:	f3bf 8f6f 	isb	sy
 8008308:	4b15      	ldr	r3, [pc, #84]	; (8008360 <pxCurrentTCBConst>)
 800830a:	681a      	ldr	r2, [r3, #0]
 800830c:	f01e 0f10 	tst.w	lr, #16
 8008310:	bf08      	it	eq
 8008312:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008316:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800831a:	6010      	str	r0, [r2, #0]
 800831c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008320:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008324:	f380 8811 	msr	BASEPRI, r0
 8008328:	f3bf 8f4f 	dsb	sy
 800832c:	f3bf 8f6f 	isb	sy
 8008330:	f001 f960 	bl	80095f4 <vTaskSwitchContext>
 8008334:	f04f 0000 	mov.w	r0, #0
 8008338:	f380 8811 	msr	BASEPRI, r0
 800833c:	bc09      	pop	{r0, r3}
 800833e:	6819      	ldr	r1, [r3, #0]
 8008340:	6808      	ldr	r0, [r1, #0]
 8008342:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008346:	f01e 0f10 	tst.w	lr, #16
 800834a:	bf08      	it	eq
 800834c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008350:	f380 8809 	msr	PSP, r0
 8008354:	f3bf 8f6f 	isb	sy
 8008358:	4770      	bx	lr
 800835a:	bf00      	nop
 800835c:	f3af 8000 	nop.w

08008360 <pxCurrentTCBConst>:
 8008360:	240065a4 	.word	0x240065a4

08008364 <xPortSysTickHandler>:
{
 8008364:	b508      	push	{r3, lr}
	__asm volatile
 8008366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800836a:	f383 8811 	msr	BASEPRI, r3
 800836e:	f3bf 8f6f 	isb	sy
 8008372:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008376:	f000 ffa5 	bl	80092c4 <xTaskIncrementTick>
 800837a:	b128      	cbz	r0, 8008388 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800837c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008380:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008384:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008388:	2300      	movs	r3, #0
 800838a:	f383 8811 	msr	BASEPRI, r3
}
 800838e:	bd08      	pop	{r3, pc}

08008390 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008390:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008394:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008396:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800839a:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800839c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800839e:	4b04      	ldr	r3, [pc, #16]	; (80083b0 <vPortSetupTimerInterrupt+0x20>)
 80083a0:	681b      	ldr	r3, [r3, #0]
 80083a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80083a6:	3b01      	subs	r3, #1
 80083a8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80083aa:	2307      	movs	r3, #7
 80083ac:	6113      	str	r3, [r2, #16]
}
 80083ae:	4770      	bx	lr
 80083b0:	2400003c 	.word	0x2400003c

080083b4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80083b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 80083b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80083ba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80083be:	4a3a      	ldr	r2, [pc, #232]	; (80084a8 <xPortStartScheduler+0xf4>)
 80083c0:	4291      	cmp	r1, r2
 80083c2:	d108      	bne.n	80083d6 <xPortStartScheduler+0x22>
	__asm volatile
 80083c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083c8:	f383 8811 	msr	BASEPRI, r3
 80083cc:	f3bf 8f6f 	isb	sy
 80083d0:	f3bf 8f4f 	dsb	sy
 80083d4:	e7fe      	b.n	80083d4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80083d6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80083da:	4b34      	ldr	r3, [pc, #208]	; (80084ac <xPortStartScheduler+0xf8>)
 80083dc:	429a      	cmp	r2, r3
 80083de:	d108      	bne.n	80083f2 <xPortStartScheduler+0x3e>
 80083e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083e4:	f383 8811 	msr	BASEPRI, r3
 80083e8:	f3bf 8f6f 	isb	sy
 80083ec:	f3bf 8f4f 	dsb	sy
 80083f0:	e7fe      	b.n	80083f0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80083f2:	4b2f      	ldr	r3, [pc, #188]	; (80084b0 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80083f4:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80083f6:	781a      	ldrb	r2, [r3, #0]
 80083f8:	b2d2      	uxtb	r2, r2
 80083fa:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80083fc:	22ff      	movs	r2, #255	; 0xff
 80083fe:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008400:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008402:	4a2c      	ldr	r2, [pc, #176]	; (80084b4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008404:	b2db      	uxtb	r3, r3
 8008406:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800840a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800840e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008412:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008414:	2307      	movs	r3, #7
 8008416:	4a28      	ldr	r2, [pc, #160]	; (80084b8 <xPortStartScheduler+0x104>)
 8008418:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800841a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800841e:	1e5c      	subs	r4, r3, #1
 8008420:	0600      	lsls	r0, r0, #24
 8008422:	d40c      	bmi.n	800843e <xPortStartScheduler+0x8a>
 8008424:	b111      	cbz	r1, 800842c <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008426:	2b03      	cmp	r3, #3
 8008428:	6013      	str	r3, [r2, #0]
 800842a:	d011      	beq.n	8008450 <xPortStartScheduler+0x9c>
 800842c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008430:	f383 8811 	msr	BASEPRI, r3
 8008434:	f3bf 8f6f 	isb	sy
 8008438:	f3bf 8f4f 	dsb	sy
 800843c:	e7fe      	b.n	800843c <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800843e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008442:	2101      	movs	r1, #1
 8008444:	005b      	lsls	r3, r3, #1
 8008446:	b2db      	uxtb	r3, r3
 8008448:	f88d 3003 	strb.w	r3, [sp, #3]
 800844c:	4623      	mov	r3, r4
 800844e:	e7e4      	b.n	800841a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008450:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008454:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8008458:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800845a:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800845c:	9b01      	ldr	r3, [sp, #4]
 800845e:	4a14      	ldr	r2, [pc, #80]	; (80084b0 <xPortStartScheduler+0xfc>)
 8008460:	b2db      	uxtb	r3, r3
 8008462:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008464:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008468:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800846c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008470:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008474:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008478:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800847c:	f7ff ff88 	bl	8008390 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008480:	4b0e      	ldr	r3, [pc, #56]	; (80084bc <xPortStartScheduler+0x108>)
 8008482:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008484:	f7ff feb6 	bl	80081f4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008488:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800848c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008490:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008494:	f7ff fe9a 	bl	80081cc <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008498:	f001 f8ac 	bl	80095f4 <vTaskSwitchContext>
}
 800849c:	4628      	mov	r0, r5
	prvTaskExitError();
 800849e:	f7ff feb3 	bl	8008208 <prvTaskExitError>
}
 80084a2:	b003      	add	sp, #12
 80084a4:	bd30      	pop	{r4, r5, pc}
 80084a6:	bf00      	nop
 80084a8:	410fc271 	.word	0x410fc271
 80084ac:	410fc270 	.word	0x410fc270
 80084b0:	e000e400 	.word	0xe000e400
 80084b4:	2400655c 	.word	0x2400655c
 80084b8:	24006560 	.word	0x24006560
 80084bc:	2400004c 	.word	0x2400004c

080084c0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80084c0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80084c4:	2b0f      	cmp	r3, #15
 80084c6:	d90e      	bls.n	80084e6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80084c8:	4a11      	ldr	r2, [pc, #68]	; (8008510 <vPortValidateInterruptPriority+0x50>)
 80084ca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80084cc:	4a11      	ldr	r2, [pc, #68]	; (8008514 <vPortValidateInterruptPriority+0x54>)
 80084ce:	7812      	ldrb	r2, [r2, #0]
 80084d0:	429a      	cmp	r2, r3
 80084d2:	d908      	bls.n	80084e6 <vPortValidateInterruptPriority+0x26>
 80084d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084d8:	f383 8811 	msr	BASEPRI, r3
 80084dc:	f3bf 8f6f 	isb	sy
 80084e0:	f3bf 8f4f 	dsb	sy
 80084e4:	e7fe      	b.n	80084e4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80084e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084ea:	4a0b      	ldr	r2, [pc, #44]	; (8008518 <vPortValidateInterruptPriority+0x58>)
 80084ec:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80084f0:	6812      	ldr	r2, [r2, #0]
 80084f2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80084f6:	4293      	cmp	r3, r2
 80084f8:	d908      	bls.n	800850c <vPortValidateInterruptPriority+0x4c>
 80084fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084fe:	f383 8811 	msr	BASEPRI, r3
 8008502:	f3bf 8f6f 	isb	sy
 8008506:	f3bf 8f4f 	dsb	sy
 800850a:	e7fe      	b.n	800850a <vPortValidateInterruptPriority+0x4a>
	}
 800850c:	4770      	bx	lr
 800850e:	bf00      	nop
 8008510:	e000e3f0 	.word	0xe000e3f0
 8008514:	2400655c 	.word	0x2400655c
 8008518:	24006560 	.word	0x24006560

0800851c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800851c:	b510      	push	{r4, lr}
 800851e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008520:	f7ff feb8 	bl	8008294 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008524:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008526:	f7ff fed5 	bl	80082d4 <vPortExitCritical>

	return xReturn;
}
 800852a:	fab4 f084 	clz	r0, r4
 800852e:	0940      	lsrs	r0, r0, #5
 8008530:	bd10      	pop	{r4, pc}

08008532 <prvCopyDataToQueue>:
{
 8008532:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008534:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008536:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 8008538:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800853a:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800853c:	b952      	cbnz	r2, 8008554 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800853e:	6807      	ldr	r7, [r0, #0]
 8008540:	bb47      	cbnz	r7, 8008594 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008542:	6880      	ldr	r0, [r0, #8]
 8008544:	f001 f9b4 	bl	80098b0 <xTaskPriorityDisinherit>
 8008548:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800854a:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800854c:	3601      	adds	r6, #1
}
 800854e:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008550:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008552:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008554:	b965      	cbnz	r5, 8008570 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008556:	6840      	ldr	r0, [r0, #4]
 8008558:	f012 f9fc 	bl	801a954 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800855c:	6863      	ldr	r3, [r4, #4]
 800855e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008560:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008562:	68a2      	ldr	r2, [r4, #8]
 8008564:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008566:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008568:	d3f0      	bcc.n	800854c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800856a:	6823      	ldr	r3, [r4, #0]
 800856c:	6063      	str	r3, [r4, #4]
 800856e:	e7ed      	b.n	800854c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008570:	68c0      	ldr	r0, [r0, #12]
 8008572:	f012 f9ef 	bl	801a954 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008576:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008578:	68e3      	ldr	r3, [r4, #12]
 800857a:	4251      	negs	r1, r2
 800857c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800857e:	6822      	ldr	r2, [r4, #0]
 8008580:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008582:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008584:	bf3e      	ittt	cc
 8008586:	68a3      	ldrcc	r3, [r4, #8]
 8008588:	185b      	addcc	r3, r3, r1
 800858a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800858c:	2d02      	cmp	r5, #2
 800858e:	d101      	bne.n	8008594 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008590:	b116      	cbz	r6, 8008598 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008592:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008594:	2500      	movs	r5, #0
 8008596:	e7d9      	b.n	800854c <prvCopyDataToQueue+0x1a>
 8008598:	4635      	mov	r5, r6
 800859a:	e7d7      	b.n	800854c <prvCopyDataToQueue+0x1a>

0800859c <prvCopyDataFromQueue>:
{
 800859c:	4603      	mov	r3, r0
 800859e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80085a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80085a2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80085a4:	b162      	cbz	r2, 80085c0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085a6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80085a8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085aa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80085ac:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085ae:	60dc      	str	r4, [r3, #12]
}
 80085b0:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80085b4:	bf24      	itt	cs
 80085b6:	6819      	ldrcs	r1, [r3, #0]
 80085b8:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80085ba:	68d9      	ldr	r1, [r3, #12]
 80085bc:	f012 b9ca 	b.w	801a954 <memcpy>
}
 80085c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80085c4:	4770      	bx	lr

080085c6 <prvUnlockQueue>:
{
 80085c6:	b570      	push	{r4, r5, r6, lr}
 80085c8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80085ca:	f7ff fe63 	bl	8008294 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80085ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80085d2:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80085d6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80085d8:	2d00      	cmp	r5, #0
 80085da:	dc14      	bgt.n	8008606 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80085dc:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085de:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 80085e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80085e6:	f7ff fe75 	bl	80082d4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80085ea:	f7ff fe53 	bl	8008294 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80085ee:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 80085f2:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80085f4:	2d00      	cmp	r5, #0
 80085f6:	dc12      	bgt.n	800861e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80085f8:	23ff      	movs	r3, #255	; 0xff
 80085fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80085fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008602:	f7ff be67 	b.w	80082d4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008606:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008608:	2b00      	cmp	r3, #0
 800860a:	d0e7      	beq.n	80085dc <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800860c:	4630      	mov	r0, r6
 800860e:	f001 f86d 	bl	80096ec <xTaskRemoveFromEventList>
 8008612:	b108      	cbz	r0, 8008618 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008614:	f001 f8f6 	bl	8009804 <vTaskMissedYield>
			--cTxLock;
 8008618:	3d01      	subs	r5, #1
 800861a:	b26d      	sxtb	r5, r5
 800861c:	e7dc      	b.n	80085d8 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800861e:	6923      	ldr	r3, [r4, #16]
 8008620:	2b00      	cmp	r3, #0
 8008622:	d0e9      	beq.n	80085f8 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008624:	4630      	mov	r0, r6
 8008626:	f001 f861 	bl	80096ec <xTaskRemoveFromEventList>
 800862a:	b108      	cbz	r0, 8008630 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800862c:	f001 f8ea 	bl	8009804 <vTaskMissedYield>
				--cRxLock;
 8008630:	3d01      	subs	r5, #1
 8008632:	b26d      	sxtb	r5, r5
 8008634:	e7de      	b.n	80085f4 <prvUnlockQueue+0x2e>

08008636 <xQueueGenericReset>:
{
 8008636:	b538      	push	{r3, r4, r5, lr}
 8008638:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800863a:	4604      	mov	r4, r0
 800863c:	b940      	cbnz	r0, 8008650 <xQueueGenericReset+0x1a>
 800863e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008642:	f383 8811 	msr	BASEPRI, r3
 8008646:	f3bf 8f6f 	isb	sy
 800864a:	f3bf 8f4f 	dsb	sy
 800864e:	e7fe      	b.n	800864e <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008650:	f7ff fe20 	bl	8008294 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008654:	6822      	ldr	r2, [r4, #0]
 8008656:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800865a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800865c:	434b      	muls	r3, r1
 800865e:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008660:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008662:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008664:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008666:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008668:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800866a:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800866c:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800866e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008672:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008676:	b9a5      	cbnz	r5, 80086a2 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008678:	6923      	ldr	r3, [r4, #16]
 800867a:	b173      	cbz	r3, 800869a <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800867c:	f104 0010 	add.w	r0, r4, #16
 8008680:	f001 f834 	bl	80096ec <xTaskRemoveFromEventList>
 8008684:	b148      	cbz	r0, 800869a <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008686:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800868a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800868e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008692:	f3bf 8f4f 	dsb	sy
 8008696:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800869a:	f7ff fe1b 	bl	80082d4 <vPortExitCritical>
}
 800869e:	2001      	movs	r0, #1
 80086a0:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80086a2:	f104 0010 	add.w	r0, r4, #16
 80086a6:	f7ff fd4f 	bl	8008148 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80086aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80086ae:	f7ff fd4b 	bl	8008148 <vListInitialise>
 80086b2:	e7f2      	b.n	800869a <xQueueGenericReset+0x64>

080086b4 <xQueueGenericCreateStatic>:
	{
 80086b4:	b513      	push	{r0, r1, r4, lr}
 80086b6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80086b8:	b940      	cbnz	r0, 80086cc <xQueueGenericCreateStatic+0x18>
 80086ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086be:	f383 8811 	msr	BASEPRI, r3
 80086c2:	f3bf 8f6f 	isb	sy
 80086c6:	f3bf 8f4f 	dsb	sy
 80086ca:	e7fe      	b.n	80086ca <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80086cc:	b943      	cbnz	r3, 80086e0 <xQueueGenericCreateStatic+0x2c>
 80086ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086d2:	f383 8811 	msr	BASEPRI, r3
 80086d6:	f3bf 8f6f 	isb	sy
 80086da:	f3bf 8f4f 	dsb	sy
 80086de:	e7fe      	b.n	80086de <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80086e0:	b14a      	cbz	r2, 80086f6 <xQueueGenericCreateStatic+0x42>
 80086e2:	b991      	cbnz	r1, 800870a <xQueueGenericCreateStatic+0x56>
 80086e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086e8:	f383 8811 	msr	BASEPRI, r3
 80086ec:	f3bf 8f6f 	isb	sy
 80086f0:	f3bf 8f4f 	dsb	sy
 80086f4:	e7fe      	b.n	80086f4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80086f6:	b141      	cbz	r1, 800870a <xQueueGenericCreateStatic+0x56>
 80086f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086fc:	f383 8811 	msr	BASEPRI, r3
 8008700:	f3bf 8f6f 	isb	sy
 8008704:	f3bf 8f4f 	dsb	sy
 8008708:	e7fe      	b.n	8008708 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800870a:	2350      	movs	r3, #80	; 0x50
 800870c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800870e:	9b01      	ldr	r3, [sp, #4]
 8008710:	2b50      	cmp	r3, #80	; 0x50
 8008712:	d008      	beq.n	8008726 <xQueueGenericCreateStatic+0x72>
 8008714:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008718:	f383 8811 	msr	BASEPRI, r3
 800871c:	f3bf 8f6f 	isb	sy
 8008720:	f3bf 8f4f 	dsb	sy
 8008724:	e7fe      	b.n	8008724 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008726:	2900      	cmp	r1, #0
 8008728:	bf08      	it	eq
 800872a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800872c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800872e:	2301      	movs	r3, #1
 8008730:	6022      	str	r2, [r4, #0]
 8008732:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8008736:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800873a:	4619      	mov	r1, r3
 800873c:	4620      	mov	r0, r4
 800873e:	f7ff ff7a 	bl	8008636 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008742:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 8008746:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008748:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800874c:	b002      	add	sp, #8
 800874e:	bd10      	pop	{r4, pc}

08008750 <xQueueGenericCreate>:
	{
 8008750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008752:	460d      	mov	r5, r1
 8008754:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008756:	4606      	mov	r6, r0
 8008758:	b940      	cbnz	r0, 800876c <xQueueGenericCreate+0x1c>
 800875a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800875e:	f383 8811 	msr	BASEPRI, r3
 8008762:	f3bf 8f6f 	isb	sy
 8008766:	f3bf 8f4f 	dsb	sy
 800876a:	e7fe      	b.n	800876a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800876c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800876e:	3050      	adds	r0, #80	; 0x50
 8008770:	f7ff fc14 	bl	8007f9c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008774:	4604      	mov	r4, r0
 8008776:	b170      	cbz	r0, 8008796 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008778:	2300      	movs	r3, #0
 800877a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800877e:	b165      	cbz	r5, 800879a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008780:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008784:	2101      	movs	r1, #1
 8008786:	4620      	mov	r0, r4
 8008788:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800878a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800878e:	f7ff ff52 	bl	8008636 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008792:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008796:	4620      	mov	r0, r4
 8008798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800879a:	4603      	mov	r3, r0
 800879c:	e7f2      	b.n	8008784 <xQueueGenericCreate+0x34>

0800879e <xQueueCreateCountingSemaphoreStatic>:
	{
 800879e:	b513      	push	{r0, r1, r4, lr}
 80087a0:	4613      	mov	r3, r2
 80087a2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80087a4:	b940      	cbnz	r0, 80087b8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 80087a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087aa:	f383 8811 	msr	BASEPRI, r3
 80087ae:	f3bf 8f6f 	isb	sy
 80087b2:	f3bf 8f4f 	dsb	sy
 80087b6:	e7fe      	b.n	80087b6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80087b8:	4288      	cmp	r0, r1
 80087ba:	d208      	bcs.n	80087ce <xQueueCreateCountingSemaphoreStatic+0x30>
 80087bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087c0:	f383 8811 	msr	BASEPRI, r3
 80087c4:	f3bf 8f6f 	isb	sy
 80087c8:	f3bf 8f4f 	dsb	sy
 80087cc:	e7fe      	b.n	80087cc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80087ce:	2202      	movs	r2, #2
 80087d0:	9200      	str	r2, [sp, #0]
 80087d2:	2200      	movs	r2, #0
 80087d4:	4611      	mov	r1, r2
 80087d6:	f7ff ff6d 	bl	80086b4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80087da:	b100      	cbz	r0, 80087de <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80087dc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80087de:	b002      	add	sp, #8
 80087e0:	bd10      	pop	{r4, pc}

080087e2 <xQueueCreateCountingSemaphore>:
	{
 80087e2:	b510      	push	{r4, lr}
 80087e4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80087e6:	b940      	cbnz	r0, 80087fa <xQueueCreateCountingSemaphore+0x18>
 80087e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ec:	f383 8811 	msr	BASEPRI, r3
 80087f0:	f3bf 8f6f 	isb	sy
 80087f4:	f3bf 8f4f 	dsb	sy
 80087f8:	e7fe      	b.n	80087f8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80087fa:	4288      	cmp	r0, r1
 80087fc:	d208      	bcs.n	8008810 <xQueueCreateCountingSemaphore+0x2e>
 80087fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008802:	f383 8811 	msr	BASEPRI, r3
 8008806:	f3bf 8f6f 	isb	sy
 800880a:	f3bf 8f4f 	dsb	sy
 800880e:	e7fe      	b.n	800880e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008810:	2202      	movs	r2, #2
 8008812:	2100      	movs	r1, #0
 8008814:	f7ff ff9c 	bl	8008750 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008818:	b100      	cbz	r0, 800881c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800881a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800881c:	bd10      	pop	{r4, pc}

0800881e <xQueueGenericSend>:
{
 800881e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008822:	b085      	sub	sp, #20
 8008824:	4688      	mov	r8, r1
 8008826:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008828:	4604      	mov	r4, r0
{
 800882a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800882c:	b940      	cbnz	r0, 8008840 <xQueueGenericSend+0x22>
 800882e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008832:	f383 8811 	msr	BASEPRI, r3
 8008836:	f3bf 8f6f 	isb	sy
 800883a:	f3bf 8f4f 	dsb	sy
 800883e:	e7fe      	b.n	800883e <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008840:	b951      	cbnz	r1, 8008858 <xQueueGenericSend+0x3a>
 8008842:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008844:	b143      	cbz	r3, 8008858 <xQueueGenericSend+0x3a>
 8008846:	f04f 0350 	mov.w	r3, #80	; 0x50
 800884a:	f383 8811 	msr	BASEPRI, r3
 800884e:	f3bf 8f6f 	isb	sy
 8008852:	f3bf 8f4f 	dsb	sy
 8008856:	e7fe      	b.n	8008856 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008858:	2f02      	cmp	r7, #2
 800885a:	d10b      	bne.n	8008874 <xQueueGenericSend+0x56>
 800885c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800885e:	2b01      	cmp	r3, #1
 8008860:	d008      	beq.n	8008874 <xQueueGenericSend+0x56>
 8008862:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008866:	f383 8811 	msr	BASEPRI, r3
 800886a:	f3bf 8f6f 	isb	sy
 800886e:	f3bf 8f4f 	dsb	sy
 8008872:	e7fe      	b.n	8008872 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008874:	f000 ffcc 	bl	8009810 <xTaskGetSchedulerState>
 8008878:	4606      	mov	r6, r0
 800887a:	b950      	cbnz	r0, 8008892 <xQueueGenericSend+0x74>
 800887c:	9b01      	ldr	r3, [sp, #4]
 800887e:	b14b      	cbz	r3, 8008894 <xQueueGenericSend+0x76>
 8008880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <xQueueGenericSend+0x72>
 8008892:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008894:	f04f 0900 	mov.w	r9, #0
 8008898:	e037      	b.n	800890a <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800889a:	9d01      	ldr	r5, [sp, #4]
 800889c:	b91d      	cbnz	r5, 80088a6 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800889e:	f7ff fd19 	bl	80082d4 <vPortExitCritical>
			return errQUEUE_FULL;
 80088a2:	2000      	movs	r0, #0
 80088a4:	e052      	b.n	800894c <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80088a6:	b916      	cbnz	r6, 80088ae <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80088a8:	a802      	add	r0, sp, #8
 80088aa:	f000 ff63 	bl	8009774 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80088ae:	f7ff fd11 	bl	80082d4 <vPortExitCritical>
		vTaskSuspendAll();
 80088b2:	f000 fcf9 	bl	80092a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80088b6:	f7ff fced 	bl	8008294 <vPortEnterCritical>
 80088ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80088be:	2bff      	cmp	r3, #255	; 0xff
 80088c0:	d101      	bne.n	80088c6 <xQueueGenericSend+0xa8>
 80088c2:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 80088c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80088ca:	2bff      	cmp	r3, #255	; 0xff
 80088cc:	d101      	bne.n	80088d2 <xQueueGenericSend+0xb4>
 80088ce:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 80088d2:	f7ff fcff 	bl	80082d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80088d6:	a901      	add	r1, sp, #4
 80088d8:	a802      	add	r0, sp, #8
 80088da:	f000 ff57 	bl	800978c <xTaskCheckForTimeOut>
 80088de:	2800      	cmp	r0, #0
 80088e0:	d14a      	bne.n	8008978 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80088e2:	f7ff fcd7 	bl	8008294 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80088e6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80088e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80088ea:	429a      	cmp	r2, r3
 80088ec:	d131      	bne.n	8008952 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80088ee:	f7ff fcf1 	bl	80082d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80088f2:	9901      	ldr	r1, [sp, #4]
 80088f4:	f104 0010 	add.w	r0, r4, #16
 80088f8:	f000 fec0 	bl	800967c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80088fc:	4620      	mov	r0, r4
 80088fe:	f7ff fe62 	bl	80085c6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008902:	f000 fd75 	bl	80093f0 <xTaskResumeAll>
 8008906:	b360      	cbz	r0, 8008962 <xQueueGenericSend+0x144>
 8008908:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800890a:	f7ff fcc3 	bl	8008294 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800890e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008910:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008912:	429a      	cmp	r2, r3
 8008914:	d301      	bcc.n	800891a <xQueueGenericSend+0xfc>
 8008916:	2f02      	cmp	r7, #2
 8008918:	d1bf      	bne.n	800889a <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800891a:	463a      	mov	r2, r7
 800891c:	4641      	mov	r1, r8
 800891e:	4620      	mov	r0, r4
 8008920:	f7ff fe07 	bl	8008532 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008924:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008926:	b11b      	cbz	r3, 8008930 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008928:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800892c:	f000 fede 	bl	80096ec <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008930:	b148      	cbz	r0, 8008946 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800893a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800893e:	f3bf 8f4f 	dsb	sy
 8008942:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008946:	f7ff fcc5 	bl	80082d4 <vPortExitCritical>
				return pdPASS;
 800894a:	2001      	movs	r0, #1
}
 800894c:	b005      	add	sp, #20
 800894e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008952:	f7ff fcbf 	bl	80082d4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008956:	4620      	mov	r0, r4
 8008958:	f7ff fe35 	bl	80085c6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800895c:	f000 fd48 	bl	80093f0 <xTaskResumeAll>
 8008960:	e7d2      	b.n	8008908 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008962:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008966:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800896a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800896e:	f3bf 8f4f 	dsb	sy
 8008972:	f3bf 8f6f 	isb	sy
 8008976:	e7c7      	b.n	8008908 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008978:	4620      	mov	r0, r4
 800897a:	f7ff fe24 	bl	80085c6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800897e:	f000 fd37 	bl	80093f0 <xTaskResumeAll>
 8008982:	e78e      	b.n	80088a2 <xQueueGenericSend+0x84>

08008984 <xQueueGenericSendFromISR>:
{
 8008984:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008988:	4689      	mov	r9, r1
 800898a:	4690      	mov	r8, r2
 800898c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800898e:	4604      	mov	r4, r0
 8008990:	b940      	cbnz	r0, 80089a4 <xQueueGenericSendFromISR+0x20>
 8008992:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008996:	f383 8811 	msr	BASEPRI, r3
 800899a:	f3bf 8f6f 	isb	sy
 800899e:	f3bf 8f4f 	dsb	sy
 80089a2:	e7fe      	b.n	80089a2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80089a4:	b951      	cbnz	r1, 80089bc <xQueueGenericSendFromISR+0x38>
 80089a6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80089a8:	b143      	cbz	r3, 80089bc <xQueueGenericSendFromISR+0x38>
 80089aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ae:	f383 8811 	msr	BASEPRI, r3
 80089b2:	f3bf 8f6f 	isb	sy
 80089b6:	f3bf 8f4f 	dsb	sy
 80089ba:	e7fe      	b.n	80089ba <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80089bc:	2f02      	cmp	r7, #2
 80089be:	d10b      	bne.n	80089d8 <xQueueGenericSendFromISR+0x54>
 80089c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80089c2:	2b01      	cmp	r3, #1
 80089c4:	d008      	beq.n	80089d8 <xQueueGenericSendFromISR+0x54>
 80089c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ca:	f383 8811 	msr	BASEPRI, r3
 80089ce:	f3bf 8f6f 	isb	sy
 80089d2:	f3bf 8f4f 	dsb	sy
 80089d6:	e7fe      	b.n	80089d6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80089d8:	f7ff fd72 	bl	80084c0 <vPortValidateInterruptPriority>
	__asm volatile
 80089dc:	f3ef 8611 	mrs	r6, BASEPRI
 80089e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089e4:	f383 8811 	msr	BASEPRI, r3
 80089e8:	f3bf 8f6f 	isb	sy
 80089ec:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80089f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80089f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80089f4:	429a      	cmp	r2, r3
 80089f6:	d301      	bcc.n	80089fc <xQueueGenericSendFromISR+0x78>
 80089f8:	2f02      	cmp	r7, #2
 80089fa:	d123      	bne.n	8008a44 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 80089fc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a00:	463a      	mov	r2, r7
 8008a02:	4649      	mov	r1, r9
 8008a04:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a06:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008a08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a0a:	f7ff fd92 	bl	8008532 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008a0e:	1c6b      	adds	r3, r5, #1
 8008a10:	d113      	bne.n	8008a3a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008a14:	b90b      	cbnz	r3, 8008a1a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008a16:	2001      	movs	r0, #1
 8008a18:	e00b      	b.n	8008a32 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a1a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a1e:	f000 fe65 	bl	80096ec <xTaskRemoveFromEventList>
 8008a22:	2800      	cmp	r0, #0
 8008a24:	d0f7      	beq.n	8008a16 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008a26:	f1b8 0f00 	cmp.w	r8, #0
 8008a2a:	d0f4      	beq.n	8008a16 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008a2c:	2001      	movs	r0, #1
 8008a2e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008a32:	f386 8811 	msr	BASEPRI, r6
}
 8008a36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008a3a:	3501      	adds	r5, #1
 8008a3c:	b26d      	sxtb	r5, r5
 8008a3e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008a42:	e7e8      	b.n	8008a16 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008a44:	2000      	movs	r0, #0
 8008a46:	e7f4      	b.n	8008a32 <xQueueGenericSendFromISR+0xae>

08008a48 <xQueueGiveFromISR>:
{
 8008a48:	b570      	push	{r4, r5, r6, lr}
 8008a4a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008a4c:	4604      	mov	r4, r0
 8008a4e:	b940      	cbnz	r0, 8008a62 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008a50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a54:	f383 8811 	msr	BASEPRI, r3
 8008a58:	f3bf 8f6f 	isb	sy
 8008a5c:	f3bf 8f4f 	dsb	sy
 8008a60:	e7fe      	b.n	8008a60 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008a62:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008a64:	b143      	cbz	r3, 8008a78 <xQueueGiveFromISR+0x30>
 8008a66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a6a:	f383 8811 	msr	BASEPRI, r3
 8008a6e:	f3bf 8f6f 	isb	sy
 8008a72:	f3bf 8f4f 	dsb	sy
 8008a76:	e7fe      	b.n	8008a76 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008a78:	6803      	ldr	r3, [r0, #0]
 8008a7a:	b953      	cbnz	r3, 8008a92 <xQueueGiveFromISR+0x4a>
 8008a7c:	6883      	ldr	r3, [r0, #8]
 8008a7e:	b143      	cbz	r3, 8008a92 <xQueueGiveFromISR+0x4a>
 8008a80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a84:	f383 8811 	msr	BASEPRI, r3
 8008a88:	f3bf 8f6f 	isb	sy
 8008a8c:	f3bf 8f4f 	dsb	sy
 8008a90:	e7fe      	b.n	8008a90 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008a92:	f7ff fd15 	bl	80084c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008a96:	f3ef 8611 	mrs	r6, BASEPRI
 8008a9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a9e:	f383 8811 	msr	BASEPRI, r3
 8008aa2:	f3bf 8f6f 	isb	sy
 8008aa6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008aaa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008aac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008aae:	4293      	cmp	r3, r2
 8008ab0:	d91c      	bls.n	8008aec <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ab2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008ab6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008ab8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008aba:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008abc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008abe:	d110      	bne.n	8008ae2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ac0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008ac2:	b90b      	cbnz	r3, 8008ac8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008ac4:	2001      	movs	r0, #1
 8008ac6:	e009      	b.n	8008adc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ac8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008acc:	f000 fe0e 	bl	80096ec <xTaskRemoveFromEventList>
 8008ad0:	2800      	cmp	r0, #0
 8008ad2:	d0f7      	beq.n	8008ac4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008ad4:	2d00      	cmp	r5, #0
 8008ad6:	d0f5      	beq.n	8008ac4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008ad8:	2001      	movs	r0, #1
 8008ada:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008adc:	f386 8811 	msr	BASEPRI, r6
}
 8008ae0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008ae2:	3301      	adds	r3, #1
 8008ae4:	b25b      	sxtb	r3, r3
 8008ae6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008aea:	e7eb      	b.n	8008ac4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008aec:	2000      	movs	r0, #0
 8008aee:	e7f5      	b.n	8008adc <xQueueGiveFromISR+0x94>

08008af0 <xQueueReceive>:
{
 8008af0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008af4:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 8008af6:	4604      	mov	r4, r0
{
 8008af8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008afa:	b940      	cbnz	r0, 8008b0e <xQueueReceive+0x1e>
	__asm volatile
 8008afc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b00:	f383 8811 	msr	BASEPRI, r3
 8008b04:	f3bf 8f6f 	isb	sy
 8008b08:	f3bf 8f4f 	dsb	sy
 8008b0c:	e7fe      	b.n	8008b0c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b0e:	b951      	cbnz	r1, 8008b26 <xQueueReceive+0x36>
 8008b10:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008b12:	b143      	cbz	r3, 8008b26 <xQueueReceive+0x36>
 8008b14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b18:	f383 8811 	msr	BASEPRI, r3
 8008b1c:	f3bf 8f6f 	isb	sy
 8008b20:	f3bf 8f4f 	dsb	sy
 8008b24:	e7fe      	b.n	8008b24 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008b26:	f000 fe73 	bl	8009810 <xTaskGetSchedulerState>
 8008b2a:	4606      	mov	r6, r0
 8008b2c:	b950      	cbnz	r0, 8008b44 <xQueueReceive+0x54>
 8008b2e:	9b01      	ldr	r3, [sp, #4]
 8008b30:	b14b      	cbz	r3, 8008b46 <xQueueReceive+0x56>
 8008b32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b36:	f383 8811 	msr	BASEPRI, r3
 8008b3a:	f3bf 8f6f 	isb	sy
 8008b3e:	f3bf 8f4f 	dsb	sy
 8008b42:	e7fe      	b.n	8008b42 <xQueueReceive+0x52>
 8008b44:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008b46:	f04f 0800 	mov.w	r8, #0
 8008b4a:	e03d      	b.n	8008bc8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008b4c:	9d01      	ldr	r5, [sp, #4]
 8008b4e:	b91d      	cbnz	r5, 8008b58 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008b50:	f7ff fbc0 	bl	80082d4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008b54:	2000      	movs	r0, #0
 8008b56:	e056      	b.n	8008c06 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008b58:	b916      	cbnz	r6, 8008b60 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008b5a:	a802      	add	r0, sp, #8
 8008b5c:	f000 fe0a 	bl	8009774 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008b60:	f7ff fbb8 	bl	80082d4 <vPortExitCritical>
		vTaskSuspendAll();
 8008b64:	f000 fba0 	bl	80092a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008b68:	f7ff fb94 	bl	8008294 <vPortEnterCritical>
 8008b6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008b70:	2bff      	cmp	r3, #255	; 0xff
 8008b72:	d101      	bne.n	8008b78 <xQueueReceive+0x88>
 8008b74:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 8008b78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008b7c:	2bff      	cmp	r3, #255	; 0xff
 8008b7e:	d101      	bne.n	8008b84 <xQueueReceive+0x94>
 8008b80:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 8008b84:	f7ff fba6 	bl	80082d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008b88:	a901      	add	r1, sp, #4
 8008b8a:	a802      	add	r0, sp, #8
 8008b8c:	f000 fdfe 	bl	800978c <xTaskCheckForTimeOut>
 8008b90:	2800      	cmp	r0, #0
 8008b92:	d141      	bne.n	8008c18 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008b94:	4620      	mov	r0, r4
 8008b96:	f7ff fcc1 	bl	800851c <prvIsQueueEmpty>
 8008b9a:	b3b8      	cbz	r0, 8008c0c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008b9c:	9901      	ldr	r1, [sp, #4]
 8008b9e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008ba2:	f000 fd6b 	bl	800967c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008ba6:	4620      	mov	r0, r4
 8008ba8:	f7ff fd0d 	bl	80085c6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008bac:	f000 fc20 	bl	80093f0 <xTaskResumeAll>
 8008bb0:	b948      	cbnz	r0, 8008bc6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008bb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008bb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008bba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008bbe:	f3bf 8f4f 	dsb	sy
 8008bc2:	f3bf 8f6f 	isb	sy
 8008bc6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008bc8:	f7ff fb64 	bl	8008294 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008bcc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008bce:	2d00      	cmp	r5, #0
 8008bd0:	d0bc      	beq.n	8008b4c <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008bd2:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008bd4:	4639      	mov	r1, r7
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	f7ff fce0 	bl	800859c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008bdc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008bde:	6923      	ldr	r3, [r4, #16]
 8008be0:	b173      	cbz	r3, 8008c00 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008be2:	f104 0010 	add.w	r0, r4, #16
 8008be6:	f000 fd81 	bl	80096ec <xTaskRemoveFromEventList>
 8008bea:	b148      	cbz	r0, 8008c00 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8008bec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008bf0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008bf4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008bf8:	f3bf 8f4f 	dsb	sy
 8008bfc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008c00:	f7ff fb68 	bl	80082d4 <vPortExitCritical>
				return pdPASS;
 8008c04:	2001      	movs	r0, #1
}
 8008c06:	b004      	add	sp, #16
 8008c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008c0c:	4620      	mov	r0, r4
 8008c0e:	f7ff fcda 	bl	80085c6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008c12:	f000 fbed 	bl	80093f0 <xTaskResumeAll>
 8008c16:	e7d6      	b.n	8008bc6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008c18:	4620      	mov	r0, r4
 8008c1a:	f7ff fcd4 	bl	80085c6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008c1e:	f000 fbe7 	bl	80093f0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c22:	4620      	mov	r0, r4
 8008c24:	f7ff fc7a 	bl	800851c <prvIsQueueEmpty>
 8008c28:	2800      	cmp	r0, #0
 8008c2a:	d0cc      	beq.n	8008bc6 <xQueueReceive+0xd6>
 8008c2c:	e792      	b.n	8008b54 <xQueueReceive+0x64>

08008c2e <xQueueSemaphoreTake>:
{
 8008c2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c30:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008c32:	4604      	mov	r4, r0
{
 8008c34:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008c36:	b940      	cbnz	r0, 8008c4a <xQueueSemaphoreTake+0x1c>
 8008c38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3c:	f383 8811 	msr	BASEPRI, r3
 8008c40:	f3bf 8f6f 	isb	sy
 8008c44:	f3bf 8f4f 	dsb	sy
 8008c48:	e7fe      	b.n	8008c48 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008c4a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008c4c:	b145      	cbz	r5, 8008c60 <xQueueSemaphoreTake+0x32>
 8008c4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c52:	f383 8811 	msr	BASEPRI, r3
 8008c56:	f3bf 8f6f 	isb	sy
 8008c5a:	f3bf 8f4f 	dsb	sy
 8008c5e:	e7fe      	b.n	8008c5e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008c60:	f000 fdd6 	bl	8009810 <xTaskGetSchedulerState>
 8008c64:	4606      	mov	r6, r0
 8008c66:	b950      	cbnz	r0, 8008c7e <xQueueSemaphoreTake+0x50>
 8008c68:	9b01      	ldr	r3, [sp, #4]
 8008c6a:	b15b      	cbz	r3, 8008c84 <xQueueSemaphoreTake+0x56>
 8008c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c70:	f383 8811 	msr	BASEPRI, r3
 8008c74:	f3bf 8f6f 	isb	sy
 8008c78:	f3bf 8f4f 	dsb	sy
 8008c7c:	e7fe      	b.n	8008c7c <xQueueSemaphoreTake+0x4e>
 8008c7e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008c80:	2700      	movs	r7, #0
 8008c82:	e053      	b.n	8008d2c <xQueueSemaphoreTake+0xfe>
 8008c84:	4605      	mov	r5, r0
 8008c86:	e7fb      	b.n	8008c80 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008c88:	9b01      	ldr	r3, [sp, #4]
 8008c8a:	b963      	cbnz	r3, 8008ca6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008c8c:	b145      	cbz	r5, 8008ca0 <xQueueSemaphoreTake+0x72>
 8008c8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c92:	f383 8811 	msr	BASEPRI, r3
 8008c96:	f3bf 8f6f 	isb	sy
 8008c9a:	f3bf 8f4f 	dsb	sy
 8008c9e:	e7fe      	b.n	8008c9e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8008ca0:	f7ff fb18 	bl	80082d4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008ca4:	e062      	b.n	8008d6c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8008ca6:	b916      	cbnz	r6, 8008cae <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008ca8:	a802      	add	r0, sp, #8
 8008caa:	f000 fd63 	bl	8009774 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008cae:	f7ff fb11 	bl	80082d4 <vPortExitCritical>
		vTaskSuspendAll();
 8008cb2:	f000 faf9 	bl	80092a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008cb6:	f7ff faed 	bl	8008294 <vPortEnterCritical>
 8008cba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008cbe:	2bff      	cmp	r3, #255	; 0xff
 8008cc0:	d101      	bne.n	8008cc6 <xQueueSemaphoreTake+0x98>
 8008cc2:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 8008cc6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008cca:	2bff      	cmp	r3, #255	; 0xff
 8008ccc:	d101      	bne.n	8008cd2 <xQueueSemaphoreTake+0xa4>
 8008cce:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8008cd2:	f7ff faff 	bl	80082d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008cd6:	a901      	add	r1, sp, #4
 8008cd8:	a802      	add	r0, sp, #8
 8008cda:	f000 fd57 	bl	800978c <xTaskCheckForTimeOut>
 8008cde:	2800      	cmp	r0, #0
 8008ce0:	d14d      	bne.n	8008d7e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008ce2:	4620      	mov	r0, r4
 8008ce4:	f7ff fc1a 	bl	800851c <prvIsQueueEmpty>
 8008ce8:	2800      	cmp	r0, #0
 8008cea:	d042      	beq.n	8008d72 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008cec:	6823      	ldr	r3, [r4, #0]
 8008cee:	b93b      	cbnz	r3, 8008d00 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008cf0:	f7ff fad0 	bl	8008294 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008cf4:	68a0      	ldr	r0, [r4, #8]
 8008cf6:	f000 fd9b 	bl	8009830 <xTaskPriorityInherit>
 8008cfa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008cfc:	f7ff faea 	bl	80082d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008d00:	9901      	ldr	r1, [sp, #4]
 8008d02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008d06:	f000 fcb9 	bl	800967c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008d0a:	4620      	mov	r0, r4
 8008d0c:	f7ff fc5b 	bl	80085c6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008d10:	f000 fb6e 	bl	80093f0 <xTaskResumeAll>
 8008d14:	b948      	cbnz	r0, 8008d2a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008d16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d22:	f3bf 8f4f 	dsb	sy
 8008d26:	f3bf 8f6f 	isb	sy
 8008d2a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008d2c:	f7ff fab2 	bl	8008294 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008d30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008d32:	2b00      	cmp	r3, #0
 8008d34:	d0a8      	beq.n	8008c88 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008d36:	3b01      	subs	r3, #1
 8008d38:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008d3a:	6823      	ldr	r3, [r4, #0]
 8008d3c:	b913      	cbnz	r3, 8008d44 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008d3e:	f000 fe4d 	bl	80099dc <pvTaskIncrementMutexHeldCount>
 8008d42:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008d44:	6923      	ldr	r3, [r4, #16]
 8008d46:	b173      	cbz	r3, 8008d66 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008d48:	f104 0010 	add.w	r0, r4, #16
 8008d4c:	f000 fcce 	bl	80096ec <xTaskRemoveFromEventList>
 8008d50:	b148      	cbz	r0, 8008d66 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008d52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d5e:	f3bf 8f4f 	dsb	sy
 8008d62:	f3bf 8f6f 	isb	sy
				return pdPASS;
 8008d66:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 8008d68:	f7ff fab4 	bl	80082d4 <vPortExitCritical>
}
 8008d6c:	4628      	mov	r0, r5
 8008d6e:	b005      	add	sp, #20
 8008d70:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008d72:	4620      	mov	r0, r4
 8008d74:	f7ff fc27 	bl	80085c6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008d78:	f000 fb3a 	bl	80093f0 <xTaskResumeAll>
 8008d7c:	e7d5      	b.n	8008d2a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8008d7e:	4620      	mov	r0, r4
 8008d80:	f7ff fc21 	bl	80085c6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008d84:	f000 fb34 	bl	80093f0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d88:	4620      	mov	r0, r4
 8008d8a:	f7ff fbc7 	bl	800851c <prvIsQueueEmpty>
 8008d8e:	2800      	cmp	r0, #0
 8008d90:	d0cb      	beq.n	8008d2a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008d92:	2d00      	cmp	r5, #0
 8008d94:	d0ea      	beq.n	8008d6c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8008d96:	f7ff fa7d 	bl	8008294 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008d9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008d9c:	b119      	cbz	r1, 8008da6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008d9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008da0:	6819      	ldr	r1, [r3, #0]
 8008da2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008da6:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 8008da8:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008daa:	f000 fdc5 	bl	8009938 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8008dae:	f7ff fa91 	bl	80082d4 <vPortExitCritical>
 8008db2:	e7db      	b.n	8008d6c <xQueueSemaphoreTake+0x13e>

08008db4 <xQueueReceiveFromISR>:
{
 8008db4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008db8:	4689      	mov	r9, r1
 8008dba:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008dbc:	4605      	mov	r5, r0
 8008dbe:	b940      	cbnz	r0, 8008dd2 <xQueueReceiveFromISR+0x1e>
 8008dc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dc4:	f383 8811 	msr	BASEPRI, r3
 8008dc8:	f3bf 8f6f 	isb	sy
 8008dcc:	f3bf 8f4f 	dsb	sy
 8008dd0:	e7fe      	b.n	8008dd0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008dd2:	b951      	cbnz	r1, 8008dea <xQueueReceiveFromISR+0x36>
 8008dd4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008dd6:	b143      	cbz	r3, 8008dea <xQueueReceiveFromISR+0x36>
 8008dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ddc:	f383 8811 	msr	BASEPRI, r3
 8008de0:	f3bf 8f6f 	isb	sy
 8008de4:	f3bf 8f4f 	dsb	sy
 8008de8:	e7fe      	b.n	8008de8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008dea:	f7ff fb69 	bl	80084c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008dee:	f3ef 8711 	mrs	r7, BASEPRI
 8008df2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df6:	f383 8811 	msr	BASEPRI, r3
 8008dfa:	f3bf 8f6f 	isb	sy
 8008dfe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e02:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008e04:	b31c      	cbz	r4, 8008e4e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e06:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e0a:	4649      	mov	r1, r9
 8008e0c:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e0e:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e10:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e12:	f7ff fbc3 	bl	800859c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e16:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8008e18:	1c73      	adds	r3, r6, #1
 8008e1a:	d113      	bne.n	8008e44 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008e1c:	692b      	ldr	r3, [r5, #16]
 8008e1e:	b90b      	cbnz	r3, 8008e24 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008e20:	2001      	movs	r0, #1
 8008e22:	e00b      	b.n	8008e3c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008e24:	f105 0010 	add.w	r0, r5, #16
 8008e28:	f000 fc60 	bl	80096ec <xTaskRemoveFromEventList>
 8008e2c:	2800      	cmp	r0, #0
 8008e2e:	d0f7      	beq.n	8008e20 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008e30:	f1b8 0f00 	cmp.w	r8, #0
 8008e34:	d0f4      	beq.n	8008e20 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008e36:	2001      	movs	r0, #1
 8008e38:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008e3c:	f387 8811 	msr	BASEPRI, r7
}
 8008e40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008e44:	3601      	adds	r6, #1
 8008e46:	b276      	sxtb	r6, r6
 8008e48:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008e4c:	e7e8      	b.n	8008e20 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008e4e:	4620      	mov	r0, r4
 8008e50:	e7f4      	b.n	8008e3c <xQueueReceiveFromISR+0x88>
	...

08008e54 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008e54:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008e56:	4a07      	ldr	r2, [pc, #28]	; (8008e74 <vQueueAddToRegistry+0x20>)
	{
 8008e58:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008e5a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8008e5e:	b92c      	cbnz	r4, 8008e6c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008e60:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008e64:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8008e68:	6050      	str	r0, [r2, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008e6a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008e6c:	3301      	adds	r3, #1
 8008e6e:	2b08      	cmp	r3, #8
 8008e70:	d1f3      	bne.n	8008e5a <vQueueAddToRegistry+0x6>
 8008e72:	e7fa      	b.n	8008e6a <vQueueAddToRegistry+0x16>
 8008e74:	24006564 	.word	0x24006564

08008e78 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008e78:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008e7a:	4a08      	ldr	r2, [pc, #32]	; (8008e9c <vQueueUnregisterQueue+0x24>)
	{
 8008e7c:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008e7e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008e82:	684c      	ldr	r4, [r1, #4]
 8008e84:	4284      	cmp	r4, r0
 8008e86:	d104      	bne.n	8008e92 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008e88:	2000      	movs	r0, #0
 8008e8a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008e8e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008e90:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008e92:	3301      	adds	r3, #1
 8008e94:	2b08      	cmp	r3, #8
 8008e96:	d1f2      	bne.n	8008e7e <vQueueUnregisterQueue+0x6>
 8008e98:	e7fa      	b.n	8008e90 <vQueueUnregisterQueue+0x18>
 8008e9a:	bf00      	nop
 8008e9c:	24006564 	.word	0x24006564

08008ea0 <vQueueDelete>:
{
 8008ea0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008ea2:	4604      	mov	r4, r0
 8008ea4:	b940      	cbnz	r0, 8008eb8 <vQueueDelete+0x18>
	__asm volatile
 8008ea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eaa:	f383 8811 	msr	BASEPRI, r3
 8008eae:	f3bf 8f6f 	isb	sy
 8008eb2:	f3bf 8f4f 	dsb	sy
 8008eb6:	e7fe      	b.n	8008eb6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008eb8:	f7ff ffde 	bl	8008e78 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008ebc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008ec0:	b923      	cbnz	r3, 8008ecc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008ec2:	4620      	mov	r0, r4
}
 8008ec4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008ec8:	f7ff b900 	b.w	80080cc <vPortFree>
}
 8008ecc:	bd10      	pop	{r4, pc}

08008ece <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008ece:	b570      	push	{r4, r5, r6, lr}
 8008ed0:	4604      	mov	r4, r0
 8008ed2:	460d      	mov	r5, r1
 8008ed4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008ed6:	f7ff f9dd 	bl	8008294 <vPortEnterCritical>
 8008eda:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008ede:	2bff      	cmp	r3, #255	; 0xff
 8008ee0:	d102      	bne.n	8008ee8 <vQueueWaitForMessageRestricted+0x1a>
 8008ee2:	2300      	movs	r3, #0
 8008ee4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8008ee8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008eec:	2bff      	cmp	r3, #255	; 0xff
 8008eee:	d102      	bne.n	8008ef6 <vQueueWaitForMessageRestricted+0x28>
 8008ef0:	2300      	movs	r3, #0
 8008ef2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008ef6:	f7ff f9ed 	bl	80082d4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008efa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008efc:	b92b      	cbnz	r3, 8008f0a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008efe:	4632      	mov	r2, r6
 8008f00:	4629      	mov	r1, r5
 8008f02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f06:	f000 fbd3 	bl	80096b0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008f0a:	4620      	mov	r0, r4
	}
 8008f0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008f10:	f7ff bb59 	b.w	80085c6 <prvUnlockQueue>

08008f14 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008f14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f18:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008f1a:	f7ff f9bb 	bl	8008294 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008f1e:	4b2f      	ldr	r3, [pc, #188]	; (8008fdc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8008f20:	4e2f      	ldr	r6, [pc, #188]	; (8008fe0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8008f22:	681a      	ldr	r2, [r3, #0]
 8008f24:	4f2f      	ldr	r7, [pc, #188]	; (8008fe4 <prvAddNewTaskToReadyList+0xd0>)
 8008f26:	3201      	adds	r2, #1
 8008f28:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008f2a:	6835      	ldr	r5, [r6, #0]
 8008f2c:	2d00      	cmp	r5, #0
 8008f2e:	d14a      	bne.n	8008fc6 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008f30:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008f32:	681b      	ldr	r3, [r3, #0]
 8008f34:	2b01      	cmp	r3, #1
 8008f36:	d11f      	bne.n	8008f78 <prvAddNewTaskToReadyList+0x64>
 8008f38:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008f3a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008f3c:	4640      	mov	r0, r8
 8008f3e:	f7ff f903 	bl	8008148 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008f42:	f108 0814 	add.w	r8, r8, #20
 8008f46:	2d38      	cmp	r5, #56	; 0x38
 8008f48:	d1f7      	bne.n	8008f3a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008f4a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800900c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 8008f4e:	4d26      	ldr	r5, [pc, #152]	; (8008fe8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008f50:	4640      	mov	r0, r8
 8008f52:	f7ff f8f9 	bl	8008148 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008f56:	4628      	mov	r0, r5
 8008f58:	f7ff f8f6 	bl	8008148 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008f5c:	4823      	ldr	r0, [pc, #140]	; (8008fec <prvAddNewTaskToReadyList+0xd8>)
 8008f5e:	f7ff f8f3 	bl	8008148 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008f62:	4823      	ldr	r0, [pc, #140]	; (8008ff0 <prvAddNewTaskToReadyList+0xdc>)
 8008f64:	f7ff f8f0 	bl	8008148 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008f68:	4822      	ldr	r0, [pc, #136]	; (8008ff4 <prvAddNewTaskToReadyList+0xe0>)
 8008f6a:	f7ff f8ed 	bl	8008148 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008f6e:	4b22      	ldr	r3, [pc, #136]	; (8008ff8 <prvAddNewTaskToReadyList+0xe4>)
 8008f70:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008f74:	4b21      	ldr	r3, [pc, #132]	; (8008ffc <prvAddNewTaskToReadyList+0xe8>)
 8008f76:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008f78:	4a21      	ldr	r2, [pc, #132]	; (8009000 <prvAddNewTaskToReadyList+0xec>)
 8008f7a:	6813      	ldr	r3, [r2, #0]
 8008f7c:	3301      	adds	r3, #1
 8008f7e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008f80:	4a20      	ldr	r2, [pc, #128]	; (8009004 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008f82:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008f84:	6811      	ldr	r1, [r2, #0]
 8008f86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008f88:	428b      	cmp	r3, r1
 8008f8a:	d900      	bls.n	8008f8e <prvAddNewTaskToReadyList+0x7a>
 8008f8c:	6013      	str	r3, [r2, #0]
 8008f8e:	2014      	movs	r0, #20
 8008f90:	1d21      	adds	r1, r4, #4
 8008f92:	fb00 7003 	mla	r0, r0, r3, r7
 8008f96:	f7ff f8e5 	bl	8008164 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008f9a:	f7ff f99b 	bl	80082d4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008f9e:	4b1a      	ldr	r3, [pc, #104]	; (8009008 <prvAddNewTaskToReadyList+0xf4>)
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	b173      	cbz	r3, 8008fc2 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008fa4:	6833      	ldr	r3, [r6, #0]
 8008fa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008fa8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008faa:	429a      	cmp	r2, r3
 8008fac:	d209      	bcs.n	8008fc2 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 8008fae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008fb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008fba:	f3bf 8f4f 	dsb	sy
 8008fbe:	f3bf 8f6f 	isb	sy
}
 8008fc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008fc6:	4b10      	ldr	r3, [pc, #64]	; (8009008 <prvAddNewTaskToReadyList+0xf4>)
 8008fc8:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008fca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			if( xSchedulerRunning == pdFALSE )
 8008fcc:	2a00      	cmp	r2, #0
 8008fce:	d1d3      	bne.n	8008f78 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008fd0:	6832      	ldr	r2, [r6, #0]
 8008fd2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008fd4:	429a      	cmp	r2, r3
 8008fd6:	d8cf      	bhi.n	8008f78 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8008fd8:	6034      	str	r4, [r6, #0]
 8008fda:	e7cd      	b.n	8008f78 <prvAddNewTaskToReadyList+0x64>
 8008fdc:	24006a10 	.word	0x24006a10
 8008fe0:	240065a4 	.word	0x240065a4
 8008fe4:	240065b0 	.word	0x240065b0
 8008fe8:	24006a38 	.word	0x24006a38
 8008fec:	24006a58 	.word	0x24006a58
 8008ff0:	24006a84 	.word	0x24006a84
 8008ff4:	24006a70 	.word	0x24006a70
 8008ff8:	240065a8 	.word	0x240065a8
 8008ffc:	240065ac 	.word	0x240065ac
 8009000:	24006a1c 	.word	0x24006a1c
 8009004:	24006a20 	.word	0x24006a20
 8009008:	24006a6c 	.word	0x24006a6c
 800900c:	24006a24 	.word	0x24006a24

08009010 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009012:	4b15      	ldr	r3, [pc, #84]	; (8009068 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009014:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009016:	4d15      	ldr	r5, [pc, #84]	; (800906c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009018:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800901a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800901c:	6828      	ldr	r0, [r5, #0]
 800901e:	3004      	adds	r0, #4
 8009020:	f7ff f8c3 	bl	80081aa <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009024:	1c73      	adds	r3, r6, #1
 8009026:	d107      	bne.n	8009038 <prvAddCurrentTaskToDelayedList+0x28>
 8009028:	b137      	cbz	r7, 8009038 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800902a:	6829      	ldr	r1, [r5, #0]
 800902c:	4810      	ldr	r0, [pc, #64]	; (8009070 <prvAddCurrentTaskToDelayedList+0x60>)
 800902e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009030:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009034:	f7ff b896 	b.w	8008164 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009038:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800903a:	682b      	ldr	r3, [r5, #0]
 800903c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800903e:	d307      	bcc.n	8009050 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009040:	4b0c      	ldr	r3, [pc, #48]	; (8009074 <prvAddCurrentTaskToDelayedList+0x64>)
 8009042:	6818      	ldr	r0, [r3, #0]
 8009044:	6829      	ldr	r1, [r5, #0]
}
 8009046:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800904a:	3104      	adds	r1, #4
 800904c:	f7ff b896 	b.w	800817c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009050:	4b09      	ldr	r3, [pc, #36]	; (8009078 <prvAddCurrentTaskToDelayedList+0x68>)
 8009052:	6818      	ldr	r0, [r3, #0]
 8009054:	6829      	ldr	r1, [r5, #0]
 8009056:	3104      	adds	r1, #4
 8009058:	f7ff f890 	bl	800817c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800905c:	4b07      	ldr	r3, [pc, #28]	; (800907c <prvAddCurrentTaskToDelayedList+0x6c>)
 800905e:	681a      	ldr	r2, [r3, #0]
 8009060:	42a2      	cmp	r2, r4
 8009062:	d900      	bls.n	8009066 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009064:	601c      	str	r4, [r3, #0]
}
 8009066:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009068:	24006a98 	.word	0x24006a98
 800906c:	240065a4 	.word	0x240065a4
 8009070:	24006a70 	.word	0x24006a70
 8009074:	240065ac 	.word	0x240065ac
 8009078:	240065a8 	.word	0x240065a8
 800907c:	24006a4c 	.word	0x24006a4c

08009080 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009080:	4a06      	ldr	r2, [pc, #24]	; (800909c <prvResetNextTaskUnblockTime+0x1c>)
 8009082:	6813      	ldr	r3, [r2, #0]
 8009084:	6819      	ldr	r1, [r3, #0]
 8009086:	4b06      	ldr	r3, [pc, #24]	; (80090a0 <prvResetNextTaskUnblockTime+0x20>)
 8009088:	b919      	cbnz	r1, 8009092 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800908a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800908e:	601a      	str	r2, [r3, #0]
}
 8009090:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009092:	6812      	ldr	r2, [r2, #0]
 8009094:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009096:	68d2      	ldr	r2, [r2, #12]
 8009098:	6852      	ldr	r2, [r2, #4]
 800909a:	e7f8      	b.n	800908e <prvResetNextTaskUnblockTime+0xe>
 800909c:	240065a8 	.word	0x240065a8
 80090a0:	24006a4c 	.word	0x24006a4c

080090a4 <prvDeleteTCB>:
	{
 80090a4:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80090a6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80090aa:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80090ac:	b93b      	cbnz	r3, 80090be <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80090ae:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80090b0:	f7ff f80c 	bl	80080cc <vPortFree>
				vPortFree( pxTCB );
 80090b4:	4620      	mov	r0, r4
	}
 80090b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80090ba:	f7ff b807 	b.w	80080cc <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80090be:	2b01      	cmp	r3, #1
 80090c0:	d0f9      	beq.n	80090b6 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80090c2:	2b02      	cmp	r3, #2
 80090c4:	d008      	beq.n	80090d8 <prvDeleteTCB+0x34>
 80090c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ca:	f383 8811 	msr	BASEPRI, r3
 80090ce:	f3bf 8f6f 	isb	sy
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	e7fe      	b.n	80090d6 <prvDeleteTCB+0x32>
	}
 80090d8:	bd10      	pop	{r4, pc}
	...

080090dc <prvIdleTask>:
{
 80090dc:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80090de:	4c14      	ldr	r4, [pc, #80]	; (8009130 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090e0:	4f14      	ldr	r7, [pc, #80]	; (8009134 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 80090e2:	4d15      	ldr	r5, [pc, #84]	; (8009138 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80090e4:	6823      	ldr	r3, [r4, #0]
 80090e6:	b983      	cbnz	r3, 800910a <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80090e8:	4b14      	ldr	r3, [pc, #80]	; (800913c <prvIdleTask+0x60>)
 80090ea:	681b      	ldr	r3, [r3, #0]
 80090ec:	2b01      	cmp	r3, #1
 80090ee:	d909      	bls.n	8009104 <prvIdleTask+0x28>
				taskYIELD();
 80090f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80090f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009104:	f7f7 f954 	bl	80003b0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009108:	e7eb      	b.n	80090e2 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800910a:	f7ff f8c3 	bl	8008294 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800910e:	68fb      	ldr	r3, [r7, #12]
 8009110:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009112:	1d30      	adds	r0, r6, #4
 8009114:	f7ff f849 	bl	80081aa <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009118:	682b      	ldr	r3, [r5, #0]
 800911a:	3b01      	subs	r3, #1
 800911c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800911e:	6823      	ldr	r3, [r4, #0]
 8009120:	3b01      	subs	r3, #1
 8009122:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009124:	f7ff f8d6 	bl	80082d4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009128:	4630      	mov	r0, r6
 800912a:	f7ff ffbb 	bl	80090a4 <prvDeleteTCB>
 800912e:	e7d9      	b.n	80090e4 <prvIdleTask+0x8>
 8009130:	24006a14 	.word	0x24006a14
 8009134:	24006a84 	.word	0x24006a84
 8009138:	24006a10 	.word	0x24006a10
 800913c:	240065b0 	.word	0x240065b0

08009140 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009144:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009148:	4606      	mov	r6, r0
 800914a:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800914c:	21a5      	movs	r1, #165	; 0xa5
 800914e:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009150:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009152:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009156:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800915a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800915c:	f011 fb2b 	bl	801a7b6 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009160:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009162:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009164:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8009168:	b3b5      	cbz	r5, 80091d8 <prvInitialiseNewTask.constprop.0+0x98>
 800916a:	1e6b      	subs	r3, r5, #1
 800916c:	f104 0233 	add.w	r2, r4, #51	; 0x33
 8009170:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009172:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009176:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800917a:	b109      	cbz	r1, 8009180 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800917c:	42ab      	cmp	r3, r5
 800917e:	d1f8      	bne.n	8009172 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009180:	2300      	movs	r3, #0
 8009182:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009186:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009188:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800918c:	1d20      	adds	r0, r4, #4
 800918e:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009190:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 8009194:	bf28      	it	cs
 8009196:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009198:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800919a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800919c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80091a0:	f7fe ffdd 	bl	800815e <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80091a4:	f104 0018 	add.w	r0, r4, #24
 80091a8:	f7fe ffd9 	bl	800815e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80091ac:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80091b0:	463a      	mov	r2, r7
 80091b2:	4631      	mov	r1, r6
 80091b4:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80091b6:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80091b8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80091ba:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80091bc:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80091c0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80091c4:	f7ff f840 	bl	8008248 <pxPortInitialiseStack>
 80091c8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80091ca:	f1b8 0f00 	cmp.w	r8, #0
 80091ce:	d001      	beq.n	80091d4 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80091d0:	f8c8 4000 	str.w	r4, [r8]
}
 80091d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80091d8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80091dc:	e7d3      	b.n	8009186 <prvInitialiseNewTask.constprop.0+0x46>

080091de <xTaskCreateStatic>:
	{
 80091de:	b570      	push	{r4, r5, r6, lr}
 80091e0:	b086      	sub	sp, #24
 80091e2:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80091e6:	b945      	cbnz	r5, 80091fa <xTaskCreateStatic+0x1c>
 80091e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ec:	f383 8811 	msr	BASEPRI, r3
 80091f0:	f3bf 8f6f 	isb	sy
 80091f4:	f3bf 8f4f 	dsb	sy
 80091f8:	e7fe      	b.n	80091f8 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80091fa:	b944      	cbnz	r4, 800920e <xTaskCreateStatic+0x30>
 80091fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009200:	f383 8811 	msr	BASEPRI, r3
 8009204:	f3bf 8f6f 	isb	sy
 8009208:	f3bf 8f4f 	dsb	sy
 800920c:	e7fe      	b.n	800920c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800920e:	2660      	movs	r6, #96	; 0x60
 8009210:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009212:	9e05      	ldr	r6, [sp, #20]
 8009214:	2e60      	cmp	r6, #96	; 0x60
 8009216:	d008      	beq.n	800922a <xTaskCreateStatic+0x4c>
 8009218:	f04f 0350 	mov.w	r3, #80	; 0x50
 800921c:	f383 8811 	msr	BASEPRI, r3
 8009220:	f3bf 8f6f 	isb	sy
 8009224:	f3bf 8f4f 	dsb	sy
 8009228:	e7fe      	b.n	8009228 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800922a:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800922c:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800922e:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009230:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009234:	ad04      	add	r5, sp, #16
 8009236:	9402      	str	r4, [sp, #8]
 8009238:	9501      	str	r5, [sp, #4]
 800923a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800923c:	9500      	str	r5, [sp, #0]
 800923e:	f7ff ff7f 	bl	8009140 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009242:	4620      	mov	r0, r4
 8009244:	f7ff fe66 	bl	8008f14 <prvAddNewTaskToReadyList>
	}
 8009248:	9804      	ldr	r0, [sp, #16]
 800924a:	b006      	add	sp, #24
 800924c:	bd70      	pop	{r4, r5, r6, pc}

0800924e <xTaskCreate>:
	{
 800924e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009252:	4607      	mov	r7, r0
 8009254:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009256:	0090      	lsls	r0, r2, #2
	{
 8009258:	4688      	mov	r8, r1
 800925a:	4616      	mov	r6, r2
 800925c:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800925e:	f7fe fe9d 	bl	8007f9c <pvPortMalloc>
			if( pxStack != NULL )
 8009262:	4605      	mov	r5, r0
 8009264:	b1e8      	cbz	r0, 80092a2 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009266:	2060      	movs	r0, #96	; 0x60
 8009268:	f7fe fe98 	bl	8007f9c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800926c:	4604      	mov	r4, r0
 800926e:	b1a8      	cbz	r0, 800929c <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009270:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009272:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009274:	4632      	mov	r2, r6
 8009276:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009278:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800927c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800927e:	9002      	str	r0, [sp, #8]
 8009280:	4638      	mov	r0, r7
 8009282:	9301      	str	r3, [sp, #4]
 8009284:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009286:	9300      	str	r3, [sp, #0]
 8009288:	464b      	mov	r3, r9
 800928a:	f7ff ff59 	bl	8009140 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800928e:	4620      	mov	r0, r4
 8009290:	f7ff fe40 	bl	8008f14 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009294:	2001      	movs	r0, #1
	}
 8009296:	b005      	add	sp, #20
 8009298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800929c:	4628      	mov	r0, r5
 800929e:	f7fe ff15 	bl	80080cc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80092a2:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80092a6:	e7f6      	b.n	8009296 <xTaskCreate+0x48>

080092a8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80092a8:	4a02      	ldr	r2, [pc, #8]	; (80092b4 <vTaskSuspendAll+0xc>)
 80092aa:	6813      	ldr	r3, [r2, #0]
 80092ac:	3301      	adds	r3, #1
 80092ae:	6013      	str	r3, [r2, #0]
}
 80092b0:	4770      	bx	lr
 80092b2:	bf00      	nop
 80092b4:	24006a18 	.word	0x24006a18

080092b8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80092b8:	4b01      	ldr	r3, [pc, #4]	; (80092c0 <xTaskGetTickCount+0x8>)
 80092ba:	6818      	ldr	r0, [r3, #0]
}
 80092bc:	4770      	bx	lr
 80092be:	bf00      	nop
 80092c0:	24006a98 	.word	0x24006a98

080092c4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80092c4:	4b3f      	ldr	r3, [pc, #252]	; (80093c4 <xTaskIncrementTick+0x100>)
 80092c6:	681b      	ldr	r3, [r3, #0]
{
 80092c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80092cc:	2b00      	cmp	r3, #0
 80092ce:	d172      	bne.n	80093b6 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80092d0:	4b3d      	ldr	r3, [pc, #244]	; (80093c8 <xTaskIncrementTick+0x104>)
 80092d2:	681d      	ldr	r5, [r3, #0]
 80092d4:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 80092d6:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80092d8:	b9bd      	cbnz	r5, 800930a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80092da:	4b3c      	ldr	r3, [pc, #240]	; (80093cc <xTaskIncrementTick+0x108>)
 80092dc:	681a      	ldr	r2, [r3, #0]
 80092de:	6812      	ldr	r2, [r2, #0]
 80092e0:	b142      	cbz	r2, 80092f4 <xTaskIncrementTick+0x30>
 80092e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e6:	f383 8811 	msr	BASEPRI, r3
 80092ea:	f3bf 8f6f 	isb	sy
 80092ee:	f3bf 8f4f 	dsb	sy
 80092f2:	e7fe      	b.n	80092f2 <xTaskIncrementTick+0x2e>
 80092f4:	4a36      	ldr	r2, [pc, #216]	; (80093d0 <xTaskIncrementTick+0x10c>)
 80092f6:	6819      	ldr	r1, [r3, #0]
 80092f8:	6810      	ldr	r0, [r2, #0]
 80092fa:	6018      	str	r0, [r3, #0]
 80092fc:	6011      	str	r1, [r2, #0]
 80092fe:	4a35      	ldr	r2, [pc, #212]	; (80093d4 <xTaskIncrementTick+0x110>)
 8009300:	6813      	ldr	r3, [r2, #0]
 8009302:	3301      	adds	r3, #1
 8009304:	6013      	str	r3, [r2, #0]
 8009306:	f7ff febb 	bl	8009080 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800930a:	4e33      	ldr	r6, [pc, #204]	; (80093d8 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 800930c:	2400      	movs	r4, #0
 800930e:	4f33      	ldr	r7, [pc, #204]	; (80093dc <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009310:	6833      	ldr	r3, [r6, #0]
 8009312:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80093e8 <xTaskIncrementTick+0x124>
 8009316:	429d      	cmp	r5, r3
 8009318:	d211      	bcs.n	800933e <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800931a:	f8d8 3000 	ldr.w	r3, [r8]
 800931e:	2214      	movs	r2, #20
 8009320:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009322:	4353      	muls	r3, r2
 8009324:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009326:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8009328:	4b2d      	ldr	r3, [pc, #180]	; (80093e0 <xTaskIncrementTick+0x11c>)
 800932a:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800932c:	bf28      	it	cs
 800932e:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8009330:	2b00      	cmp	r3, #0
 8009332:	bf18      	it	ne
 8009334:	2401      	movne	r4, #1
}
 8009336:	4620      	mov	r0, r4
 8009338:	b003      	add	sp, #12
 800933a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800933e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80093cc <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009342:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 80093ec <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009346:	f8d9 3000 	ldr.w	r3, [r9]
 800934a:	681b      	ldr	r3, [r3, #0]
 800934c:	b91b      	cbnz	r3, 8009356 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800934e:	f04f 33ff 	mov.w	r3, #4294967295
 8009352:	6033      	str	r3, [r6, #0]
					break;
 8009354:	e7e1      	b.n	800931a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009356:	f8d9 3000 	ldr.w	r3, [r9]
 800935a:	68db      	ldr	r3, [r3, #12]
 800935c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009360:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009364:	4295      	cmp	r5, r2
 8009366:	d201      	bcs.n	800936c <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 8009368:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800936a:	e7d6      	b.n	800931a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800936c:	f10b 0104 	add.w	r1, fp, #4
 8009370:	4608      	mov	r0, r1
 8009372:	9101      	str	r1, [sp, #4]
 8009374:	f7fe ff19 	bl	80081aa <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009378:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800937c:	9901      	ldr	r1, [sp, #4]
 800937e:	b122      	cbz	r2, 800938a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009380:	f10b 0018 	add.w	r0, fp, #24
 8009384:	f7fe ff11 	bl	80081aa <uxListRemove>
 8009388:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800938a:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800938e:	f8da 2000 	ldr.w	r2, [sl]
 8009392:	4290      	cmp	r0, r2
 8009394:	d901      	bls.n	800939a <xTaskIncrementTick+0xd6>
 8009396:	f8ca 0000 	str.w	r0, [sl]
 800939a:	2314      	movs	r3, #20
 800939c:	fb03 7000 	mla	r0, r3, r0, r7
 80093a0:	f7fe fee0 	bl	8008164 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80093a4:	f8d8 1000 	ldr.w	r1, [r8]
 80093a8:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80093ac:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80093ae:	429a      	cmp	r2, r3
 80093b0:	bf28      	it	cs
 80093b2:	2401      	movcs	r4, #1
 80093b4:	e7c7      	b.n	8009346 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 80093b6:	4a0b      	ldr	r2, [pc, #44]	; (80093e4 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 80093b8:	2400      	movs	r4, #0
		++xPendedTicks;
 80093ba:	6813      	ldr	r3, [r2, #0]
 80093bc:	3301      	adds	r3, #1
 80093be:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 80093c0:	e7b9      	b.n	8009336 <xTaskIncrementTick+0x72>
 80093c2:	bf00      	nop
 80093c4:	24006a18 	.word	0x24006a18
 80093c8:	24006a98 	.word	0x24006a98
 80093cc:	240065a8 	.word	0x240065a8
 80093d0:	240065ac 	.word	0x240065ac
 80093d4:	24006a50 	.word	0x24006a50
 80093d8:	24006a4c 	.word	0x24006a4c
 80093dc:	240065b0 	.word	0x240065b0
 80093e0:	24006a9c 	.word	0x24006a9c
 80093e4:	24006a54 	.word	0x24006a54
 80093e8:	240065a4 	.word	0x240065a4
 80093ec:	24006a20 	.word	0x24006a20

080093f0 <xTaskResumeAll>:
{
 80093f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80093f2:	4c31      	ldr	r4, [pc, #196]	; (80094b8 <xTaskResumeAll+0xc8>)
 80093f4:	6823      	ldr	r3, [r4, #0]
 80093f6:	b943      	cbnz	r3, 800940a <xTaskResumeAll+0x1a>
 80093f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093fc:	f383 8811 	msr	BASEPRI, r3
 8009400:	f3bf 8f6f 	isb	sy
 8009404:	f3bf 8f4f 	dsb	sy
 8009408:	e7fe      	b.n	8009408 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800940a:	f7fe ff43 	bl	8008294 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800940e:	6823      	ldr	r3, [r4, #0]
 8009410:	3b01      	subs	r3, #1
 8009412:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009414:	6824      	ldr	r4, [r4, #0]
 8009416:	b12c      	cbz	r4, 8009424 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009418:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800941a:	f7fe ff5b 	bl	80082d4 <vPortExitCritical>
}
 800941e:	4620      	mov	r0, r4
 8009420:	b003      	add	sp, #12
 8009422:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009424:	4b25      	ldr	r3, [pc, #148]	; (80094bc <xTaskResumeAll+0xcc>)
 8009426:	681b      	ldr	r3, [r3, #0]
 8009428:	2b00      	cmp	r3, #0
 800942a:	d0f5      	beq.n	8009418 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800942c:	4d24      	ldr	r5, [pc, #144]	; (80094c0 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800942e:	4e25      	ldr	r6, [pc, #148]	; (80094c4 <xTaskResumeAll+0xd4>)
 8009430:	4f25      	ldr	r7, [pc, #148]	; (80094c8 <xTaskResumeAll+0xd8>)
 8009432:	e01e      	b.n	8009472 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009434:	68eb      	ldr	r3, [r5, #12]
 8009436:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009438:	f104 0018 	add.w	r0, r4, #24
 800943c:	f7fe feb5 	bl	80081aa <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009440:	1d21      	adds	r1, r4, #4
 8009442:	4608      	mov	r0, r1
 8009444:	9101      	str	r1, [sp, #4]
 8009446:	f7fe feb0 	bl	80081aa <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800944a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800944c:	6832      	ldr	r2, [r6, #0]
 800944e:	9901      	ldr	r1, [sp, #4]
 8009450:	4293      	cmp	r3, r2
 8009452:	d900      	bls.n	8009456 <xTaskResumeAll+0x66>
 8009454:	6033      	str	r3, [r6, #0]
 8009456:	2014      	movs	r0, #20
 8009458:	fb00 7003 	mla	r0, r0, r3, r7
 800945c:	f7fe fe82 	bl	8008164 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009460:	4b1a      	ldr	r3, [pc, #104]	; (80094cc <xTaskResumeAll+0xdc>)
 8009462:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009464:	681b      	ldr	r3, [r3, #0]
 8009466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009468:	429a      	cmp	r2, r3
 800946a:	d302      	bcc.n	8009472 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800946c:	4b18      	ldr	r3, [pc, #96]	; (80094d0 <xTaskResumeAll+0xe0>)
 800946e:	2201      	movs	r2, #1
 8009470:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009472:	682b      	ldr	r3, [r5, #0]
 8009474:	2b00      	cmp	r3, #0
 8009476:	d1dd      	bne.n	8009434 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009478:	b10c      	cbz	r4, 800947e <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800947a:	f7ff fe01 	bl	8009080 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800947e:	4d15      	ldr	r5, [pc, #84]	; (80094d4 <xTaskResumeAll+0xe4>)
 8009480:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009482:	b144      	cbz	r4, 8009496 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009484:	4e12      	ldr	r6, [pc, #72]	; (80094d0 <xTaskResumeAll+0xe0>)
 8009486:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009488:	f7ff ff1c 	bl	80092c4 <xTaskIncrementTick>
 800948c:	b100      	cbz	r0, 8009490 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800948e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009490:	3c01      	subs	r4, #1
 8009492:	d1f9      	bne.n	8009488 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8009494:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009496:	4b0e      	ldr	r3, [pc, #56]	; (80094d0 <xTaskResumeAll+0xe0>)
 8009498:	681b      	ldr	r3, [r3, #0]
 800949a:	2b00      	cmp	r3, #0
 800949c:	d0bc      	beq.n	8009418 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800949e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80094aa:	f3bf 8f4f 	dsb	sy
 80094ae:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80094b2:	2401      	movs	r4, #1
 80094b4:	e7b1      	b.n	800941a <xTaskResumeAll+0x2a>
 80094b6:	bf00      	nop
 80094b8:	24006a18 	.word	0x24006a18
 80094bc:	24006a10 	.word	0x24006a10
 80094c0:	24006a58 	.word	0x24006a58
 80094c4:	24006a20 	.word	0x24006a20
 80094c8:	240065b0 	.word	0x240065b0
 80094cc:	240065a4 	.word	0x240065a4
 80094d0:	24006a9c 	.word	0x24006a9c
 80094d4:	24006a54 	.word	0x24006a54

080094d8 <vTaskDelay>:
	{
 80094d8:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80094da:	b950      	cbnz	r0, 80094f2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80094dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80094e8:	f3bf 8f4f 	dsb	sy
 80094ec:	f3bf 8f6f 	isb	sy
	}
 80094f0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80094f2:	4b0a      	ldr	r3, [pc, #40]	; (800951c <vTaskDelay+0x44>)
 80094f4:	6819      	ldr	r1, [r3, #0]
 80094f6:	b141      	cbz	r1, 800950a <vTaskDelay+0x32>
 80094f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094fc:	f383 8811 	msr	BASEPRI, r3
 8009500:	f3bf 8f6f 	isb	sy
 8009504:	f3bf 8f4f 	dsb	sy
 8009508:	e7fe      	b.n	8009508 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800950a:	f7ff fecd 	bl	80092a8 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800950e:	f7ff fd7f 	bl	8009010 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009512:	f7ff ff6d 	bl	80093f0 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009516:	2800      	cmp	r0, #0
 8009518:	d0e0      	beq.n	80094dc <vTaskDelay+0x4>
 800951a:	e7e9      	b.n	80094f0 <vTaskDelay+0x18>
 800951c:	24006a18 	.word	0x24006a18

08009520 <vTaskSetApplicationTaskTag>:
	{
 8009520:	b538      	push	{r3, r4, r5, lr}
 8009522:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009524:	4604      	mov	r4, r0
 8009526:	b908      	cbnz	r0, 800952c <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009528:	4b04      	ldr	r3, [pc, #16]	; (800953c <vTaskSetApplicationTaskTag+0x1c>)
 800952a:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800952c:	f7fe feb2 	bl	8008294 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009530:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009532:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009536:	f7fe becd 	b.w	80082d4 <vPortExitCritical>
 800953a:	bf00      	nop
 800953c:	240065a4 	.word	0x240065a4

08009540 <xTaskCallApplicationTaskHook>:
	{
 8009540:	4603      	mov	r3, r0
 8009542:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009544:	b90b      	cbnz	r3, 800954a <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009546:	4b03      	ldr	r3, [pc, #12]	; (8009554 <xTaskCallApplicationTaskHook+0x14>)
 8009548:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800954a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800954c:	b103      	cbz	r3, 8009550 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800954e:	4718      	bx	r3
	}
 8009550:	4618      	mov	r0, r3
 8009552:	4770      	bx	lr
 8009554:	240065a4 	.word	0x240065a4

08009558 <vTaskStartScheduler>:
{
 8009558:	b510      	push	{r4, lr}
 800955a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800955c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800955e:	aa07      	add	r2, sp, #28
 8009560:	a906      	add	r1, sp, #24
 8009562:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009564:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009568:	f7fe fcda 	bl	8007f20 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800956c:	9b05      	ldr	r3, [sp, #20]
 800956e:	9a07      	ldr	r2, [sp, #28]
 8009570:	9302      	str	r3, [sp, #8]
 8009572:	9b06      	ldr	r3, [sp, #24]
 8009574:	4919      	ldr	r1, [pc, #100]	; (80095dc <vTaskStartScheduler+0x84>)
 8009576:	481a      	ldr	r0, [pc, #104]	; (80095e0 <vTaskStartScheduler+0x88>)
 8009578:	e9cd 4300 	strd	r4, r3, [sp]
 800957c:	4623      	mov	r3, r4
 800957e:	f7ff fe2e 	bl	80091de <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009582:	b340      	cbz	r0, 80095d6 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009584:	f000 fa88 	bl	8009a98 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009588:	2801      	cmp	r0, #1
 800958a:	d119      	bne.n	80095c0 <vTaskStartScheduler+0x68>
 800958c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009590:	f383 8811 	msr	BASEPRI, r3
 8009594:	f3bf 8f6f 	isb	sy
 8009598:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800959c:	f04f 32ff 	mov.w	r2, #4294967295
 80095a0:	4b10      	ldr	r3, [pc, #64]	; (80095e4 <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 80095a2:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 80095a4:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80095a6:	4b10      	ldr	r3, [pc, #64]	; (80095e8 <vTaskStartScheduler+0x90>)
 80095a8:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80095aa:	4b10      	ldr	r3, [pc, #64]	; (80095ec <vTaskStartScheduler+0x94>)
 80095ac:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 80095ae:	4b10      	ldr	r3, [pc, #64]	; (80095f0 <vTaskStartScheduler+0x98>)
 80095b0:	6818      	ldr	r0, [r3, #0]
 80095b2:	f7ff ffc5 	bl	8009540 <xTaskCallApplicationTaskHook>
}
 80095b6:	b008      	add	sp, #32
 80095b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80095bc:	f7fe befa 	b.w	80083b4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80095c0:	3001      	adds	r0, #1
 80095c2:	d108      	bne.n	80095d6 <vTaskStartScheduler+0x7e>
 80095c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095c8:	f383 8811 	msr	BASEPRI, r3
 80095cc:	f3bf 8f6f 	isb	sy
 80095d0:	f3bf 8f4f 	dsb	sy
 80095d4:	e7fe      	b.n	80095d4 <vTaskStartScheduler+0x7c>
}
 80095d6:	b008      	add	sp, #32
 80095d8:	bd10      	pop	{r4, pc}
 80095da:	bf00      	nop
 80095dc:	0801c487 	.word	0x0801c487
 80095e0:	080090dd 	.word	0x080090dd
 80095e4:	24006a4c 	.word	0x24006a4c
 80095e8:	24006a6c 	.word	0x24006a6c
 80095ec:	24006a98 	.word	0x24006a98
 80095f0:	240065a4 	.word	0x240065a4

080095f4 <vTaskSwitchContext>:
{
 80095f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80095f6:	4b1c      	ldr	r3, [pc, #112]	; (8009668 <vTaskSwitchContext+0x74>)
 80095f8:	681a      	ldr	r2, [r3, #0]
 80095fa:	4b1c      	ldr	r3, [pc, #112]	; (800966c <vTaskSwitchContext+0x78>)
 80095fc:	b112      	cbz	r2, 8009604 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80095fe:	2201      	movs	r2, #1
 8009600:	601a      	str	r2, [r3, #0]
}
 8009602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009604:	4c1a      	ldr	r4, [pc, #104]	; (8009670 <vTaskSwitchContext+0x7c>)
 8009606:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009608:	4e1a      	ldr	r6, [pc, #104]	; (8009674 <vTaskSwitchContext+0x80>)
 800960a:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 800960c:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800960e:	6820      	ldr	r0, [r4, #0]
 8009610:	f7ff ff96 	bl	8009540 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009614:	6832      	ldr	r2, [r6, #0]
 8009616:	4918      	ldr	r1, [pc, #96]	; (8009678 <vTaskSwitchContext+0x84>)
 8009618:	fb07 f302 	mul.w	r3, r7, r2
 800961c:	58cd      	ldr	r5, [r1, r3]
 800961e:	18c8      	adds	r0, r1, r3
 8009620:	b1ad      	cbz	r5, 800964e <vTaskSwitchContext+0x5a>
 8009622:	6845      	ldr	r5, [r0, #4]
 8009624:	3308      	adds	r3, #8
 8009626:	686d      	ldr	r5, [r5, #4]
 8009628:	440b      	add	r3, r1
 800962a:	429d      	cmp	r5, r3
 800962c:	6045      	str	r5, [r0, #4]
 800962e:	bf04      	itt	eq
 8009630:	686b      	ldreq	r3, [r5, #4]
 8009632:	6043      	streq	r3, [r0, #4]
 8009634:	2314      	movs	r3, #20
 8009636:	fb03 1102 	mla	r1, r3, r2, r1
 800963a:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 800963c:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800963e:	68db      	ldr	r3, [r3, #12]
 8009640:	6023      	str	r3, [r4, #0]
 8009642:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009644:	6820      	ldr	r0, [r4, #0]
}
 8009646:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800964a:	f7ff bf79 	b.w	8009540 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800964e:	b942      	cbnz	r2, 8009662 <vTaskSwitchContext+0x6e>
 8009650:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009654:	f383 8811 	msr	BASEPRI, r3
 8009658:	f3bf 8f6f 	isb	sy
 800965c:	f3bf 8f4f 	dsb	sy
 8009660:	e7fe      	b.n	8009660 <vTaskSwitchContext+0x6c>
 8009662:	3a01      	subs	r2, #1
 8009664:	e7d8      	b.n	8009618 <vTaskSwitchContext+0x24>
 8009666:	bf00      	nop
 8009668:	24006a18 	.word	0x24006a18
 800966c:	24006a9c 	.word	0x24006a9c
 8009670:	240065a4 	.word	0x240065a4
 8009674:	24006a20 	.word	0x24006a20
 8009678:	240065b0 	.word	0x240065b0

0800967c <vTaskPlaceOnEventList>:
{
 800967c:	b510      	push	{r4, lr}
 800967e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009680:	b940      	cbnz	r0, 8009694 <vTaskPlaceOnEventList+0x18>
 8009682:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009686:	f383 8811 	msr	BASEPRI, r3
 800968a:	f3bf 8f6f 	isb	sy
 800968e:	f3bf 8f4f 	dsb	sy
 8009692:	e7fe      	b.n	8009692 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009694:	4b05      	ldr	r3, [pc, #20]	; (80096ac <vTaskPlaceOnEventList+0x30>)
 8009696:	6819      	ldr	r1, [r3, #0]
 8009698:	3118      	adds	r1, #24
 800969a:	f7fe fd6f 	bl	800817c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800969e:	4620      	mov	r0, r4
 80096a0:	2101      	movs	r1, #1
}
 80096a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80096a6:	f7ff bcb3 	b.w	8009010 <prvAddCurrentTaskToDelayedList>
 80096aa:	bf00      	nop
 80096ac:	240065a4 	.word	0x240065a4

080096b0 <vTaskPlaceOnEventListRestricted>:
	{
 80096b0:	b538      	push	{r3, r4, r5, lr}
 80096b2:	460d      	mov	r5, r1
 80096b4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80096b6:	b940      	cbnz	r0, 80096ca <vTaskPlaceOnEventListRestricted+0x1a>
 80096b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096bc:	f383 8811 	msr	BASEPRI, r3
 80096c0:	f3bf 8f6f 	isb	sy
 80096c4:	f3bf 8f4f 	dsb	sy
 80096c8:	e7fe      	b.n	80096c8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80096ca:	4b07      	ldr	r3, [pc, #28]	; (80096e8 <vTaskPlaceOnEventListRestricted+0x38>)
 80096cc:	6819      	ldr	r1, [r3, #0]
 80096ce:	3118      	adds	r1, #24
 80096d0:	f7fe fd48 	bl	8008164 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80096d4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80096d6:	4621      	mov	r1, r4
 80096d8:	bf0c      	ite	eq
 80096da:	4628      	moveq	r0, r5
 80096dc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80096e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80096e4:	f7ff bc94 	b.w	8009010 <prvAddCurrentTaskToDelayedList>
 80096e8:	240065a4 	.word	0x240065a4

080096ec <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80096ec:	68c3      	ldr	r3, [r0, #12]
{
 80096ee:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80096f0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80096f2:	b944      	cbnz	r4, 8009706 <xTaskRemoveFromEventList+0x1a>
 80096f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096f8:	f383 8811 	msr	BASEPRI, r3
 80096fc:	f3bf 8f6f 	isb	sy
 8009700:	f3bf 8f4f 	dsb	sy
 8009704:	e7fe      	b.n	8009704 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009706:	f104 0118 	add.w	r1, r4, #24
 800970a:	4608      	mov	r0, r1
 800970c:	9101      	str	r1, [sp, #4]
 800970e:	f7fe fd4c 	bl	80081aa <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009712:	4b12      	ldr	r3, [pc, #72]	; (800975c <xTaskRemoveFromEventList+0x70>)
 8009714:	9901      	ldr	r1, [sp, #4]
 8009716:	681b      	ldr	r3, [r3, #0]
 8009718:	b9e3      	cbnz	r3, 8009754 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800971a:	1d21      	adds	r1, r4, #4
 800971c:	4608      	mov	r0, r1
 800971e:	9101      	str	r1, [sp, #4]
 8009720:	f7fe fd43 	bl	80081aa <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009724:	4a0e      	ldr	r2, [pc, #56]	; (8009760 <xTaskRemoveFromEventList+0x74>)
 8009726:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009728:	6810      	ldr	r0, [r2, #0]
 800972a:	9901      	ldr	r1, [sp, #4]
 800972c:	4283      	cmp	r3, r0
 800972e:	d900      	bls.n	8009732 <xTaskRemoveFromEventList+0x46>
 8009730:	6013      	str	r3, [r2, #0]
 8009732:	4a0c      	ldr	r2, [pc, #48]	; (8009764 <xTaskRemoveFromEventList+0x78>)
 8009734:	2014      	movs	r0, #20
 8009736:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800973a:	f7fe fd13 	bl	8008164 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800973e:	4b0a      	ldr	r3, [pc, #40]	; (8009768 <xTaskRemoveFromEventList+0x7c>)
 8009740:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009742:	681b      	ldr	r3, [r3, #0]
 8009744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009746:	429a      	cmp	r2, r3
 8009748:	d906      	bls.n	8009758 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800974a:	2001      	movs	r0, #1
 800974c:	4b07      	ldr	r3, [pc, #28]	; (800976c <xTaskRemoveFromEventList+0x80>)
 800974e:	6018      	str	r0, [r3, #0]
}
 8009750:	b002      	add	sp, #8
 8009752:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009754:	4806      	ldr	r0, [pc, #24]	; (8009770 <xTaskRemoveFromEventList+0x84>)
 8009756:	e7f0      	b.n	800973a <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 8009758:	2000      	movs	r0, #0
	return xReturn;
 800975a:	e7f9      	b.n	8009750 <xTaskRemoveFromEventList+0x64>
 800975c:	24006a18 	.word	0x24006a18
 8009760:	24006a20 	.word	0x24006a20
 8009764:	240065b0 	.word	0x240065b0
 8009768:	240065a4 	.word	0x240065a4
 800976c:	24006a9c 	.word	0x24006a9c
 8009770:	24006a58 	.word	0x24006a58

08009774 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009774:	4b03      	ldr	r3, [pc, #12]	; (8009784 <vTaskInternalSetTimeOutState+0x10>)
 8009776:	681b      	ldr	r3, [r3, #0]
 8009778:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800977a:	4b03      	ldr	r3, [pc, #12]	; (8009788 <vTaskInternalSetTimeOutState+0x14>)
 800977c:	681b      	ldr	r3, [r3, #0]
 800977e:	6043      	str	r3, [r0, #4]
}
 8009780:	4770      	bx	lr
 8009782:	bf00      	nop
 8009784:	24006a50 	.word	0x24006a50
 8009788:	24006a98 	.word	0x24006a98

0800978c <xTaskCheckForTimeOut>:
{
 800978c:	b570      	push	{r4, r5, r6, lr}
 800978e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009790:	4605      	mov	r5, r0
 8009792:	b940      	cbnz	r0, 80097a6 <xTaskCheckForTimeOut+0x1a>
 8009794:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009798:	f383 8811 	msr	BASEPRI, r3
 800979c:	f3bf 8f6f 	isb	sy
 80097a0:	f3bf 8f4f 	dsb	sy
 80097a4:	e7fe      	b.n	80097a4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80097a6:	b941      	cbnz	r1, 80097ba <xTaskCheckForTimeOut+0x2e>
 80097a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ac:	f383 8811 	msr	BASEPRI, r3
 80097b0:	f3bf 8f6f 	isb	sy
 80097b4:	f3bf 8f4f 	dsb	sy
 80097b8:	e7fe      	b.n	80097b8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80097ba:	f7fe fd6b 	bl	8008294 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80097be:	4b0f      	ldr	r3, [pc, #60]	; (80097fc <xTaskCheckForTimeOut+0x70>)
 80097c0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80097c2:	6823      	ldr	r3, [r4, #0]
 80097c4:	1c5a      	adds	r2, r3, #1
 80097c6:	d010      	beq.n	80097ea <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80097c8:	480d      	ldr	r0, [pc, #52]	; (8009800 <xTaskCheckForTimeOut+0x74>)
 80097ca:	682e      	ldr	r6, [r5, #0]
 80097cc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80097ce:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80097d0:	4286      	cmp	r6, r0
 80097d2:	d001      	beq.n	80097d8 <xTaskCheckForTimeOut+0x4c>
 80097d4:	428a      	cmp	r2, r1
 80097d6:	d90f      	bls.n	80097f8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80097d8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80097da:	4283      	cmp	r3, r0
 80097dc:	d90a      	bls.n	80097f4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80097de:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 80097e0:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 80097e2:	4413      	add	r3, r2
 80097e4:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80097e6:	f7ff ffc5 	bl	8009774 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80097ea:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80097ec:	f7fe fd72 	bl	80082d4 <vPortExitCritical>
}
 80097f0:	4620      	mov	r0, r4
 80097f2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80097f4:	2300      	movs	r3, #0
 80097f6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80097f8:	2401      	movs	r4, #1
 80097fa:	e7f7      	b.n	80097ec <xTaskCheckForTimeOut+0x60>
 80097fc:	24006a98 	.word	0x24006a98
 8009800:	24006a50 	.word	0x24006a50

08009804 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009804:	4b01      	ldr	r3, [pc, #4]	; (800980c <vTaskMissedYield+0x8>)
 8009806:	2201      	movs	r2, #1
 8009808:	601a      	str	r2, [r3, #0]
}
 800980a:	4770      	bx	lr
 800980c:	24006a9c 	.word	0x24006a9c

08009810 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009810:	4b05      	ldr	r3, [pc, #20]	; (8009828 <xTaskGetSchedulerState+0x18>)
 8009812:	681b      	ldr	r3, [r3, #0]
 8009814:	b133      	cbz	r3, 8009824 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009816:	4b05      	ldr	r3, [pc, #20]	; (800982c <xTaskGetSchedulerState+0x1c>)
 8009818:	6818      	ldr	r0, [r3, #0]
 800981a:	fab0 f080 	clz	r0, r0
 800981e:	0940      	lsrs	r0, r0, #5
 8009820:	0040      	lsls	r0, r0, #1
 8009822:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009824:	2001      	movs	r0, #1
	}
 8009826:	4770      	bx	lr
 8009828:	24006a6c 	.word	0x24006a6c
 800982c:	24006a18 	.word	0x24006a18

08009830 <xTaskPriorityInherit>:
	{
 8009830:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009832:	4604      	mov	r4, r0
 8009834:	b340      	cbz	r0, 8009888 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009836:	4d1b      	ldr	r5, [pc, #108]	; (80098a4 <xTaskPriorityInherit+0x74>)
 8009838:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800983a:	682a      	ldr	r2, [r5, #0]
 800983c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800983e:	4293      	cmp	r3, r2
 8009840:	d228      	bcs.n	8009894 <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009842:	6982      	ldr	r2, [r0, #24]
 8009844:	2a00      	cmp	r2, #0
 8009846:	db04      	blt.n	8009852 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009848:	682a      	ldr	r2, [r5, #0]
 800984a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800984c:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8009850:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009852:	2214      	movs	r2, #20
 8009854:	4e14      	ldr	r6, [pc, #80]	; (80098a8 <xTaskPriorityInherit+0x78>)
 8009856:	fb02 6303 	mla	r3, r2, r3, r6
 800985a:	6962      	ldr	r2, [r4, #20]
 800985c:	429a      	cmp	r2, r3
 800985e:	d115      	bne.n	800988c <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009860:	1d21      	adds	r1, r4, #4
 8009862:	4608      	mov	r0, r1
 8009864:	9101      	str	r1, [sp, #4]
 8009866:	f7fe fca0 	bl	80081aa <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800986a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800986c:	4a0f      	ldr	r2, [pc, #60]	; (80098ac <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800986e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009870:	6810      	ldr	r0, [r2, #0]
 8009872:	9901      	ldr	r1, [sp, #4]
 8009874:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009876:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009878:	d900      	bls.n	800987c <xTaskPriorityInherit+0x4c>
 800987a:	6013      	str	r3, [r2, #0]
 800987c:	2014      	movs	r0, #20
 800987e:	fb00 6003 	mla	r0, r0, r3, r6
 8009882:	f7fe fc6f 	bl	8008164 <vListInsertEnd>
				xReturn = pdTRUE;
 8009886:	2001      	movs	r0, #1
	}
 8009888:	b002      	add	sp, #8
 800988a:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800988c:	682b      	ldr	r3, [r5, #0]
 800988e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009890:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009892:	e7f8      	b.n	8009886 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009894:	682b      	ldr	r3, [r5, #0]
 8009896:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009898:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800989a:	4298      	cmp	r0, r3
 800989c:	bf2c      	ite	cs
 800989e:	2000      	movcs	r0, #0
 80098a0:	2001      	movcc	r0, #1
 80098a2:	e7f1      	b.n	8009888 <xTaskPriorityInherit+0x58>
 80098a4:	240065a4 	.word	0x240065a4
 80098a8:	240065b0 	.word	0x240065b0
 80098ac:	24006a20 	.word	0x24006a20

080098b0 <xTaskPriorityDisinherit>:
	{
 80098b0:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 80098b2:	b910      	cbnz	r0, 80098ba <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 80098b4:	2000      	movs	r0, #0
	}
 80098b6:	b002      	add	sp, #8
 80098b8:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80098ba:	4b1c      	ldr	r3, [pc, #112]	; (800992c <xTaskPriorityDisinherit+0x7c>)
 80098bc:	681c      	ldr	r4, [r3, #0]
 80098be:	4284      	cmp	r4, r0
 80098c0:	d008      	beq.n	80098d4 <xTaskPriorityDisinherit+0x24>
 80098c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098c6:	f383 8811 	msr	BASEPRI, r3
 80098ca:	f3bf 8f6f 	isb	sy
 80098ce:	f3bf 8f4f 	dsb	sy
 80098d2:	e7fe      	b.n	80098d2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 80098d4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80098d6:	b943      	cbnz	r3, 80098ea <xTaskPriorityDisinherit+0x3a>
 80098d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098dc:	f383 8811 	msr	BASEPRI, r3
 80098e0:	f3bf 8f6f 	isb	sy
 80098e4:	f3bf 8f4f 	dsb	sy
 80098e8:	e7fe      	b.n	80098e8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80098ea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 80098ec:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80098ee:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80098f0:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80098f2:	4291      	cmp	r1, r2
 80098f4:	d0de      	beq.n	80098b4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80098f6:	2b00      	cmp	r3, #0
 80098f8:	d1dc      	bne.n	80098b4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80098fa:	1d21      	adds	r1, r4, #4
 80098fc:	4608      	mov	r0, r1
 80098fe:	9101      	str	r1, [sp, #4]
 8009900:	f7fe fc53 	bl	80081aa <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009904:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009906:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009908:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800990c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800990e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009910:	4a07      	ldr	r2, [pc, #28]	; (8009930 <xTaskPriorityDisinherit+0x80>)
 8009912:	6810      	ldr	r0, [r2, #0]
 8009914:	4283      	cmp	r3, r0
 8009916:	d900      	bls.n	800991a <xTaskPriorityDisinherit+0x6a>
 8009918:	6013      	str	r3, [r2, #0]
 800991a:	4a06      	ldr	r2, [pc, #24]	; (8009934 <xTaskPriorityDisinherit+0x84>)
 800991c:	2014      	movs	r0, #20
 800991e:	fb00 2003 	mla	r0, r0, r3, r2
 8009922:	f7fe fc1f 	bl	8008164 <vListInsertEnd>
					xReturn = pdTRUE;
 8009926:	2001      	movs	r0, #1
		return xReturn;
 8009928:	e7c5      	b.n	80098b6 <xTaskPriorityDisinherit+0x6>
 800992a:	bf00      	nop
 800992c:	240065a4 	.word	0x240065a4
 8009930:	24006a20 	.word	0x24006a20
 8009934:	240065b0 	.word	0x240065b0

08009938 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009938:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800993a:	4604      	mov	r4, r0
 800993c:	2800      	cmp	r0, #0
 800993e:	d044      	beq.n	80099ca <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009940:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009942:	b942      	cbnz	r2, 8009956 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009944:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009948:	f383 8811 	msr	BASEPRI, r3
 800994c:	f3bf 8f6f 	isb	sy
 8009950:	f3bf 8f4f 	dsb	sy
 8009954:	e7fe      	b.n	8009954 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009956:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009958:	4299      	cmp	r1, r3
 800995a:	bf38      	it	cc
 800995c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800995e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009960:	428b      	cmp	r3, r1
 8009962:	d032      	beq.n	80099ca <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009964:	2a01      	cmp	r2, #1
 8009966:	d130      	bne.n	80099ca <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009968:	4a19      	ldr	r2, [pc, #100]	; (80099d0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800996a:	6812      	ldr	r2, [r2, #0]
 800996c:	4282      	cmp	r2, r0
 800996e:	d108      	bne.n	8009982 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009970:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009974:	f383 8811 	msr	BASEPRI, r3
 8009978:	f3bf 8f6f 	isb	sy
 800997c:	f3bf 8f4f 	dsb	sy
 8009980:	e7fe      	b.n	8009980 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009982:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009984:	4d13      	ldr	r5, [pc, #76]	; (80099d4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009986:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009988:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800998c:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800998e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009992:	bfa8      	it	ge
 8009994:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009998:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800999a:	bfa8      	it	ge
 800999c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800999e:	429a      	cmp	r2, r3
 80099a0:	d113      	bne.n	80099ca <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099a2:	1d01      	adds	r1, r0, #4
 80099a4:	4608      	mov	r0, r1
 80099a6:	9101      	str	r1, [sp, #4]
 80099a8:	f7fe fbff 	bl	80081aa <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80099ac:	4a0a      	ldr	r2, [pc, #40]	; (80099d8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80099ae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099b0:	6810      	ldr	r0, [r2, #0]
 80099b2:	9901      	ldr	r1, [sp, #4]
 80099b4:	4283      	cmp	r3, r0
 80099b6:	d900      	bls.n	80099ba <vTaskPriorityDisinheritAfterTimeout+0x82>
 80099b8:	6013      	str	r3, [r2, #0]
 80099ba:	2014      	movs	r0, #20
 80099bc:	fb00 5003 	mla	r0, r0, r3, r5
	}
 80099c0:	b003      	add	sp, #12
 80099c2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80099c6:	f7fe bbcd 	b.w	8008164 <vListInsertEnd>
	}
 80099ca:	b003      	add	sp, #12
 80099cc:	bd30      	pop	{r4, r5, pc}
 80099ce:	bf00      	nop
 80099d0:	240065a4 	.word	0x240065a4
 80099d4:	240065b0 	.word	0x240065b0
 80099d8:	24006a20 	.word	0x24006a20

080099dc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80099dc:	4b04      	ldr	r3, [pc, #16]	; (80099f0 <pvTaskIncrementMutexHeldCount+0x14>)
 80099de:	681a      	ldr	r2, [r3, #0]
 80099e0:	b11a      	cbz	r2, 80099ea <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80099e2:	6819      	ldr	r1, [r3, #0]
 80099e4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80099e6:	3201      	adds	r2, #1
 80099e8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80099ea:	6818      	ldr	r0, [r3, #0]
	}
 80099ec:	4770      	bx	lr
 80099ee:	bf00      	nop
 80099f0:	240065a4 	.word	0x240065a4

080099f4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80099f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80099f6:	4c11      	ldr	r4, [pc, #68]	; (8009a3c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80099f8:	f7fe fc4c 	bl	8008294 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80099fc:	6825      	ldr	r5, [r4, #0]
 80099fe:	b9bd      	cbnz	r5, 8009a30 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009a00:	4f0f      	ldr	r7, [pc, #60]	; (8009a40 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009a02:	4e10      	ldr	r6, [pc, #64]	; (8009a44 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009a04:	4638      	mov	r0, r7
 8009a06:	f7fe fb9f 	bl	8008148 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009a0a:	4630      	mov	r0, r6
 8009a0c:	f7fe fb9c 	bl	8008148 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009a10:	4b0d      	ldr	r3, [pc, #52]	; (8009a48 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009a12:	4a0e      	ldr	r2, [pc, #56]	; (8009a4c <prvCheckForValidListAndQueue+0x58>)
 8009a14:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8009a16:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009a18:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 8009a1a:	4b0d      	ldr	r3, [pc, #52]	; (8009a50 <prvCheckForValidListAndQueue+0x5c>)
 8009a1c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009a1e:	4b0d      	ldr	r3, [pc, #52]	; (8009a54 <prvCheckForValidListAndQueue+0x60>)
 8009a20:	9500      	str	r5, [sp, #0]
 8009a22:	f7fe fe47 	bl	80086b4 <xQueueGenericCreateStatic>
 8009a26:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009a28:	b110      	cbz	r0, 8009a30 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009a2a:	490b      	ldr	r1, [pc, #44]	; (8009a58 <prvCheckForValidListAndQueue+0x64>)
 8009a2c:	f7ff fa12 	bl	8008e54 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009a30:	b003      	add	sp, #12
 8009a32:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009a36:	f7fe bc4d 	b.w	80082d4 <vPortExitCritical>
 8009a3a:	bf00      	nop
 8009a3c:	24006bc4 	.word	0x24006bc4
 8009a40:	24006b48 	.word	0x24006b48
 8009a44:	24006b5c 	.word	0x24006b5c
 8009a48:	24006aa0 	.word	0x24006aa0
 8009a4c:	24006aa8 	.word	0x24006aa8
 8009a50:	24006aa4 	.word	0x24006aa4
 8009a54:	24006b74 	.word	0x24006b74
 8009a58:	0801c48c 	.word	0x0801c48c

08009a5c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009a5c:	4291      	cmp	r1, r2
{
 8009a5e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009a60:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009a62:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009a64:	d80a      	bhi.n	8009a7c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a66:	1ad3      	subs	r3, r2, r3
 8009a68:	6982      	ldr	r2, [r0, #24]
 8009a6a:	4293      	cmp	r3, r2
 8009a6c:	d20d      	bcs.n	8009a8a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009a6e:	1d01      	adds	r1, r0, #4
 8009a70:	4b07      	ldr	r3, [pc, #28]	; (8009a90 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009a72:	6818      	ldr	r0, [r3, #0]
 8009a74:	f7fe fb82 	bl	800817c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009a78:	2000      	movs	r0, #0
}
 8009a7a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009a7c:	429a      	cmp	r2, r3
 8009a7e:	d201      	bcs.n	8009a84 <prvInsertTimerInActiveList+0x28>
 8009a80:	4299      	cmp	r1, r3
 8009a82:	d202      	bcs.n	8009a8a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009a84:	1d01      	adds	r1, r0, #4
 8009a86:	4b03      	ldr	r3, [pc, #12]	; (8009a94 <prvInsertTimerInActiveList+0x38>)
 8009a88:	e7f3      	b.n	8009a72 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009a8a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009a8c:	e7f5      	b.n	8009a7a <prvInsertTimerInActiveList+0x1e>
 8009a8e:	bf00      	nop
 8009a90:	24006aa4 	.word	0x24006aa4
 8009a94:	24006aa0 	.word	0x24006aa0

08009a98 <xTimerCreateTimerTask>:
{
 8009a98:	b510      	push	{r4, lr}
 8009a9a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009a9c:	f7ff ffaa 	bl	80099f4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009aa0:	4b12      	ldr	r3, [pc, #72]	; (8009aec <xTimerCreateTimerTask+0x54>)
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	b1b3      	cbz	r3, 8009ad4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009aa6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009aa8:	aa07      	add	r2, sp, #28
 8009aaa:	a906      	add	r1, sp, #24
 8009aac:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009aae:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009ab2:	f7fe fa41 	bl	8007f38 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009ab6:	9b05      	ldr	r3, [sp, #20]
 8009ab8:	9a07      	ldr	r2, [sp, #28]
 8009aba:	9302      	str	r3, [sp, #8]
 8009abc:	9b06      	ldr	r3, [sp, #24]
 8009abe:	490c      	ldr	r1, [pc, #48]	; (8009af0 <xTimerCreateTimerTask+0x58>)
 8009ac0:	9301      	str	r3, [sp, #4]
 8009ac2:	2302      	movs	r3, #2
 8009ac4:	480b      	ldr	r0, [pc, #44]	; (8009af4 <xTimerCreateTimerTask+0x5c>)
 8009ac6:	9300      	str	r3, [sp, #0]
 8009ac8:	4623      	mov	r3, r4
 8009aca:	f7ff fb88 	bl	80091de <xTaskCreateStatic>
 8009ace:	4b0a      	ldr	r3, [pc, #40]	; (8009af8 <xTimerCreateTimerTask+0x60>)
 8009ad0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009ad2:	b940      	cbnz	r0, 8009ae6 <xTimerCreateTimerTask+0x4e>
 8009ad4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ad8:	f383 8811 	msr	BASEPRI, r3
 8009adc:	f3bf 8f6f 	isb	sy
 8009ae0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009ae4:	e7fe      	b.n	8009ae4 <xTimerCreateTimerTask+0x4c>
}
 8009ae6:	2001      	movs	r0, #1
 8009ae8:	b008      	add	sp, #32
 8009aea:	bd10      	pop	{r4, pc}
 8009aec:	24006bc4 	.word	0x24006bc4
 8009af0:	0801c491 	.word	0x0801c491
 8009af4:	08009bfd 	.word	0x08009bfd
 8009af8:	24006bc8 	.word	0x24006bc8

08009afc <xTimerGenericCommand>:
{
 8009afc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009afe:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009b00:	4604      	mov	r4, r0
{
 8009b02:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009b04:	b940      	cbnz	r0, 8009b18 <xTimerGenericCommand+0x1c>
 8009b06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b0a:	f383 8811 	msr	BASEPRI, r3
 8009b0e:	f3bf 8f6f 	isb	sy
 8009b12:	f3bf 8f4f 	dsb	sy
 8009b16:	e7fe      	b.n	8009b16 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009b18:	4d0c      	ldr	r5, [pc, #48]	; (8009b4c <xTimerGenericCommand+0x50>)
 8009b1a:	6828      	ldr	r0, [r5, #0]
 8009b1c:	b178      	cbz	r0, 8009b3e <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009b1e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009b20:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009b22:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009b26:	dc0c      	bgt.n	8009b42 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009b28:	f7ff fe72 	bl	8009810 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009b2c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009b2e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009b30:	4669      	mov	r1, sp
 8009b32:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009b34:	bf0c      	ite	eq
 8009b36:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009b38:	461a      	movne	r2, r3
 8009b3a:	f7fe fe70 	bl	800881e <xQueueGenericSend>
}
 8009b3e:	b004      	add	sp, #16
 8009b40:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009b42:	2300      	movs	r3, #0
 8009b44:	4669      	mov	r1, sp
 8009b46:	f7fe ff1d 	bl	8008984 <xQueueGenericSendFromISR>
 8009b4a:	e7f8      	b.n	8009b3e <xTimerGenericCommand+0x42>
 8009b4c:	24006bc4 	.word	0x24006bc4

08009b50 <prvSampleTimeNow>:
{
 8009b50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009b54:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009bf8 <prvSampleTimeNow+0xa8>
{
 8009b58:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009b5a:	f7ff fbad 	bl	80092b8 <xTaskGetTickCount>
 8009b5e:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009b60:	f8d8 3000 	ldr.w	r3, [r8]
 8009b64:	4283      	cmp	r3, r0
 8009b66:	d90b      	bls.n	8009b80 <prvSampleTimeNow+0x30>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009b68:	4f21      	ldr	r7, [pc, #132]	; (8009bf0 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009b6a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009b6e:	683b      	ldr	r3, [r7, #0]
 8009b70:	681a      	ldr	r2, [r3, #0]
 8009b72:	b96a      	cbnz	r2, 8009b90 <prvSampleTimeNow+0x40>
	pxCurrentTimerList = pxOverflowTimerList;
 8009b74:	4a1f      	ldr	r2, [pc, #124]	; (8009bf4 <prvSampleTimeNow+0xa4>)
 8009b76:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 8009b78:	6013      	str	r3, [r2, #0]
 8009b7a:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 8009b7c:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009b7e:	e000      	b.n	8009b82 <prvSampleTimeNow+0x32>
 8009b80:	2300      	movs	r3, #0
}
 8009b82:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009b84:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009b86:	f8c8 5000 	str.w	r5, [r8]
}
 8009b8a:	b004      	add	sp, #16
 8009b8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009b90:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b92:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009b94:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009b98:	1d21      	adds	r1, r4, #4
 8009b9a:	4608      	mov	r0, r1
 8009b9c:	9103      	str	r1, [sp, #12]
 8009b9e:	f7fe fb04 	bl	80081aa <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009ba2:	6a23      	ldr	r3, [r4, #32]
 8009ba4:	4620      	mov	r0, r4
 8009ba6:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009ba8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009bac:	9903      	ldr	r1, [sp, #12]
 8009bae:	f013 0f04 	tst.w	r3, #4
 8009bb2:	d0dc      	beq.n	8009b6e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009bb4:	69a3      	ldr	r3, [r4, #24]
 8009bb6:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009bb8:	459a      	cmp	sl, r3
 8009bba:	d205      	bcs.n	8009bc8 <prvSampleTimeNow+0x78>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009bbc:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009bbe:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009bc0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009bc2:	f7fe fadb 	bl	800817c <vListInsert>
 8009bc6:	e7d2      	b.n	8009b6e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009bc8:	2300      	movs	r3, #0
 8009bca:	4652      	mov	r2, sl
 8009bcc:	4620      	mov	r0, r4
 8009bce:	f8cd 9000 	str.w	r9, [sp]
 8009bd2:	4619      	mov	r1, r3
 8009bd4:	f7ff ff92 	bl	8009afc <xTimerGenericCommand>
				configASSERT( xResult );
 8009bd8:	2800      	cmp	r0, #0
 8009bda:	d1c8      	bne.n	8009b6e <prvSampleTimeNow+0x1e>
 8009bdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009be0:	f383 8811 	msr	BASEPRI, r3
 8009be4:	f3bf 8f6f 	isb	sy
 8009be8:	f3bf 8f4f 	dsb	sy
 8009bec:	e7fe      	b.n	8009bec <prvSampleTimeNow+0x9c>
 8009bee:	bf00      	nop
 8009bf0:	24006aa0 	.word	0x24006aa0
 8009bf4:	24006aa4 	.word	0x24006aa4
 8009bf8:	24006b70 	.word	0x24006b70

08009bfc <prvTimerTask>:
{
 8009bfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009c00:	4d6e      	ldr	r5, [pc, #440]	; (8009dbc <prvTimerTask+0x1c0>)
{
 8009c02:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009c04:	4e6e      	ldr	r6, [pc, #440]	; (8009dc0 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009c06:	682b      	ldr	r3, [r5, #0]
 8009c08:	f8d3 8000 	ldr.w	r8, [r3]
 8009c0c:	f1b8 0f00 	cmp.w	r8, #0
 8009c10:	d035      	beq.n	8009c7e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009c12:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009c14:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009c16:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 8009c1a:	f7ff fb45 	bl	80092a8 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009c1e:	a804      	add	r0, sp, #16
 8009c20:	f7ff ff96 	bl	8009b50 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009c24:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009c26:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009c28:	2b00      	cmp	r3, #0
 8009c2a:	d169      	bne.n	8009d00 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009c2c:	2c00      	cmp	r4, #0
 8009c2e:	d14c      	bne.n	8009cca <prvTimerTask+0xce>
 8009c30:	4540      	cmp	r0, r8
 8009c32:	d350      	bcc.n	8009cd6 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009c34:	f7ff fbdc 	bl	80093f0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c38:	682b      	ldr	r3, [r5, #0]
 8009c3a:	68db      	ldr	r3, [r3, #12]
 8009c3c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009c3e:	1d38      	adds	r0, r7, #4
 8009c40:	f7fe fab3 	bl	80081aa <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009c44:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009c48:	0758      	lsls	r0, r3, #29
 8009c4a:	d51a      	bpl.n	8009c82 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009c4c:	69b9      	ldr	r1, [r7, #24]
 8009c4e:	4643      	mov	r3, r8
 8009c50:	464a      	mov	r2, r9
 8009c52:	4638      	mov	r0, r7
 8009c54:	4441      	add	r1, r8
 8009c56:	f7ff ff01 	bl	8009a5c <prvInsertTimerInActiveList>
 8009c5a:	b1b0      	cbz	r0, 8009c8a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009c5c:	4623      	mov	r3, r4
 8009c5e:	4642      	mov	r2, r8
 8009c60:	4621      	mov	r1, r4
 8009c62:	4638      	mov	r0, r7
 8009c64:	9400      	str	r4, [sp, #0]
 8009c66:	f7ff ff49 	bl	8009afc <xTimerGenericCommand>
			configASSERT( xResult );
 8009c6a:	b970      	cbnz	r0, 8009c8a <prvTimerTask+0x8e>
 8009c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c70:	f383 8811 	msr	BASEPRI, r3
 8009c74:	f3bf 8f6f 	isb	sy
 8009c78:	f3bf 8f4f 	dsb	sy
 8009c7c:	e7fe      	b.n	8009c7c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009c7e:	2401      	movs	r4, #1
 8009c80:	e7cb      	b.n	8009c1a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009c82:	f023 0301 	bic.w	r3, r3, #1
 8009c86:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009c8a:	6a3b      	ldr	r3, [r7, #32]
 8009c8c:	4638      	mov	r0, r7
 8009c8e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009c90:	2200      	movs	r2, #0
 8009c92:	a904      	add	r1, sp, #16
 8009c94:	6830      	ldr	r0, [r6, #0]
 8009c96:	f7fe ff2b 	bl	8008af0 <xQueueReceive>
 8009c9a:	2800      	cmp	r0, #0
 8009c9c:	d0b3      	beq.n	8009c06 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009c9e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009ca0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009ca2:	2b00      	cmp	r3, #0
 8009ca4:	db2f      	blt.n	8009d06 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009ca6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009ca8:	6963      	ldr	r3, [r4, #20]
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	d132      	bne.n	8009d14 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009cae:	a803      	add	r0, sp, #12
 8009cb0:	f7ff ff4e 	bl	8009b50 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009cb4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009cb6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009cb8:	2b09      	cmp	r3, #9
 8009cba:	d8e9      	bhi.n	8009c90 <prvTimerTask+0x94>
 8009cbc:	e8df f003 	tbb	[pc, r3]
 8009cc0:	572e2e2e 	.word	0x572e2e2e
 8009cc4:	2e2e765e 	.word	0x2e2e765e
 8009cc8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009cca:	4b3e      	ldr	r3, [pc, #248]	; (8009dc4 <prvTimerTask+0x1c8>)
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	681c      	ldr	r4, [r3, #0]
 8009cd0:	fab4 f484 	clz	r4, r4
 8009cd4:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009cd6:	4622      	mov	r2, r4
 8009cd8:	eba8 0109 	sub.w	r1, r8, r9
 8009cdc:	6830      	ldr	r0, [r6, #0]
 8009cde:	f7ff f8f6 	bl	8008ece <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009ce2:	f7ff fb85 	bl	80093f0 <xTaskResumeAll>
 8009ce6:	2800      	cmp	r0, #0
 8009ce8:	d1d2      	bne.n	8009c90 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009cea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009cf2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009cf6:	f3bf 8f4f 	dsb	sy
 8009cfa:	f3bf 8f6f 	isb	sy
 8009cfe:	e7c7      	b.n	8009c90 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009d00:	f7ff fb76 	bl	80093f0 <xTaskResumeAll>
}
 8009d04:	e7c4      	b.n	8009c90 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009d06:	9b05      	ldr	r3, [sp, #20]
 8009d08:	9907      	ldr	r1, [sp, #28]
 8009d0a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009d0c:	9b04      	ldr	r3, [sp, #16]
 8009d0e:	2b00      	cmp	r3, #0
 8009d10:	dbbe      	blt.n	8009c90 <prvTimerTask+0x94>
 8009d12:	e7c8      	b.n	8009ca6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d14:	1d20      	adds	r0, r4, #4
 8009d16:	f7fe fa48 	bl	80081aa <uxListRemove>
 8009d1a:	e7c8      	b.n	8009cae <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009d1c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009d20:	4620      	mov	r0, r4
 8009d22:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009d24:	f043 0301 	orr.w	r3, r3, #1
 8009d28:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009d2c:	9b05      	ldr	r3, [sp, #20]
 8009d2e:	4419      	add	r1, r3
 8009d30:	f7ff fe94 	bl	8009a5c <prvInsertTimerInActiveList>
 8009d34:	2800      	cmp	r0, #0
 8009d36:	d0ab      	beq.n	8009c90 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009d38:	6a23      	ldr	r3, [r4, #32]
 8009d3a:	4620      	mov	r0, r4
 8009d3c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d3e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009d42:	0759      	lsls	r1, r3, #29
 8009d44:	d5a4      	bpl.n	8009c90 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009d46:	69a2      	ldr	r2, [r4, #24]
 8009d48:	2300      	movs	r3, #0
 8009d4a:	9905      	ldr	r1, [sp, #20]
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	9300      	str	r3, [sp, #0]
 8009d50:	440a      	add	r2, r1
 8009d52:	4619      	mov	r1, r3
 8009d54:	f7ff fed2 	bl	8009afc <xTimerGenericCommand>
							configASSERT( xResult );
 8009d58:	2800      	cmp	r0, #0
 8009d5a:	d199      	bne.n	8009c90 <prvTimerTask+0x94>
 8009d5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d60:	f383 8811 	msr	BASEPRI, r3
 8009d64:	f3bf 8f6f 	isb	sy
 8009d68:	f3bf 8f4f 	dsb	sy
 8009d6c:	e7fe      	b.n	8009d6c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009d6e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009d72:	f023 0301 	bic.w	r3, r3, #1
 8009d76:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009d7a:	e789      	b.n	8009c90 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009d7c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009d80:	f043 0301 	orr.w	r3, r3, #1
 8009d84:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009d88:	9905      	ldr	r1, [sp, #20]
 8009d8a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009d8c:	b941      	cbnz	r1, 8009da0 <prvTimerTask+0x1a4>
 8009d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d92:	f383 8811 	msr	BASEPRI, r3
 8009d96:	f3bf 8f6f 	isb	sy
 8009d9a:	f3bf 8f4f 	dsb	sy
 8009d9e:	e7fe      	b.n	8009d9e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009da0:	4603      	mov	r3, r0
 8009da2:	4401      	add	r1, r0
 8009da4:	4620      	mov	r0, r4
 8009da6:	f7ff fe59 	bl	8009a5c <prvInsertTimerInActiveList>
					break;
 8009daa:	e771      	b.n	8009c90 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009dac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009db0:	079a      	lsls	r2, r3, #30
 8009db2:	d4de      	bmi.n	8009d72 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009db4:	4620      	mov	r0, r4
 8009db6:	f7fe f989 	bl	80080cc <vPortFree>
 8009dba:	e769      	b.n	8009c90 <prvTimerTask+0x94>
 8009dbc:	24006aa0 	.word	0x24006aa0
 8009dc0:	24006bc4 	.word	0x24006bc4
 8009dc4:	24006aa4 	.word	0x24006aa4

08009dc8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009dc8:	8880      	ldrh	r0, [r0, #4]
 8009dca:	4770      	bx	lr

08009dcc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009dcc:	b570      	push	{r4, r5, r6, lr}
 8009dce:	6803      	ldr	r3, [r0, #0]
 8009dd0:	460c      	mov	r4, r1
 8009dd2:	2100      	movs	r1, #0
 8009dd4:	4605      	mov	r5, r0
 8009dd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009dd8:	4798      	blx	r3
 8009dda:	4606      	mov	r6, r0
 8009ddc:	682b      	ldr	r3, [r5, #0]
 8009dde:	4628      	mov	r0, r5
 8009de0:	1ba4      	subs	r4, r4, r6
 8009de2:	6a1b      	ldr	r3, [r3, #32]
 8009de4:	b2a4      	uxth	r4, r4
 8009de6:	4798      	blx	r3
 8009de8:	fbb4 f0f0 	udiv	r0, r4, r0
 8009dec:	bd70      	pop	{r4, r5, r6, pc}

08009dee <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009dee:	2300      	movs	r3, #0
 8009df0:	8083      	strh	r3, [r0, #4]
 8009df2:	4770      	bx	lr

08009df4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009df4:	b510      	push	{r4, lr}
 8009df6:	6803      	ldr	r3, [r0, #0]
 8009df8:	4604      	mov	r4, r0
 8009dfa:	8881      	ldrh	r1, [r0, #4]
 8009dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009dfe:	4798      	blx	r3
 8009e00:	88a3      	ldrh	r3, [r4, #4]
 8009e02:	3301      	adds	r3, #1
 8009e04:	80a3      	strh	r3, [r4, #4]
 8009e06:	bd10      	pop	{r4, pc}

08009e08 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009e08:	6803      	ldr	r3, [r0, #0]
 8009e0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e0c:	4718      	bx	r3

08009e0e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009e0e:	4770      	bx	lr

08009e10 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009e10:	4a02      	ldr	r2, [pc, #8]	; (8009e1c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009e12:	6002      	str	r2, [r0, #0]
 8009e14:	2200      	movs	r2, #0
 8009e16:	8082      	strh	r2, [r0, #4]
 8009e18:	4770      	bx	lr
 8009e1a:	bf00      	nop
 8009e1c:	0801c4a4 	.word	0x0801c4a4

08009e20 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009e20:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8009e22:	4770      	bx	lr

08009e24 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009e24:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009e26:	2000      	movs	r0, #0
 8009e28:	b12b      	cbz	r3, 8009e36 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009e2a:	b920      	cbnz	r0, 8009e36 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009e2c:	1a5a      	subs	r2, r3, r1
 8009e2e:	699b      	ldr	r3, [r3, #24]
 8009e30:	4250      	negs	r0, r2
 8009e32:	4150      	adcs	r0, r2
 8009e34:	e7f8      	b.n	8009e28 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009e36:	4770      	bx	lr

08009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009e38:	2300      	movs	r3, #0
 8009e3a:	6148      	str	r0, [r1, #20]
 8009e3c:	618b      	str	r3, [r1, #24]
 8009e3e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009e40:	b913      	cbnz	r3, 8009e48 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009e42:	6281      	str	r1, [r0, #40]	; 0x28
 8009e44:	4770      	bx	lr
 8009e46:	4613      	mov	r3, r2
 8009e48:	699a      	ldr	r2, [r3, #24]
 8009e4a:	2a00      	cmp	r2, #0
 8009e4c:	d1fb      	bne.n	8009e46 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009e4e:	6199      	str	r1, [r3, #24]
 8009e50:	4770      	bx	lr

08009e52 <_ZN8touchgfx9Container9removeAllEv>:
 8009e52:	2200      	movs	r2, #0
 8009e54:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009e56:	b123      	cbz	r3, 8009e62 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009e58:	6999      	ldr	r1, [r3, #24]
 8009e5a:	6281      	str	r1, [r0, #40]	; 0x28
 8009e5c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009e60:	e7f8      	b.n	8009e54 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009e62:	4770      	bx	lr

08009e64 <_ZN8touchgfx9Container6unlinkEv>:
 8009e64:	2300      	movs	r3, #0
 8009e66:	6283      	str	r3, [r0, #40]	; 0x28
 8009e68:	4770      	bx	lr

08009e6a <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009e6a:	2200      	movs	r2, #0
 8009e6c:	8002      	strh	r2, [r0, #0]
 8009e6e:	8042      	strh	r2, [r0, #2]
 8009e70:	8082      	strh	r2, [r0, #4]
 8009e72:	80c2      	strh	r2, [r0, #6]
 8009e74:	4770      	bx	lr

08009e76 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009e76:	b570      	push	{r4, r5, r6, lr}
 8009e78:	460d      	mov	r5, r1
 8009e7a:	4616      	mov	r6, r2
 8009e7c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009e7e:	b13c      	cbz	r4, 8009e90 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009e80:	6823      	ldr	r3, [r4, #0]
 8009e82:	4620      	mov	r0, r4
 8009e84:	4632      	mov	r2, r6
 8009e86:	4629      	mov	r1, r5
 8009e88:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009e8a:	4798      	blx	r3
 8009e8c:	69a4      	ldr	r4, [r4, #24]
 8009e8e:	e7f6      	b.n	8009e7e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009e90:	bd70      	pop	{r4, r5, r6, pc}

08009e92 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009e92:	b538      	push	{r3, r4, r5, lr}
 8009e94:	460d      	mov	r5, r1
 8009e96:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009e98:	b134      	cbz	r4, 8009ea8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009e9a:	682b      	ldr	r3, [r5, #0]
 8009e9c:	4621      	mov	r1, r4
 8009e9e:	4628      	mov	r0, r5
 8009ea0:	689b      	ldr	r3, [r3, #8]
 8009ea2:	4798      	blx	r3
 8009ea4:	69a4      	ldr	r4, [r4, #24]
 8009ea6:	e7f7      	b.n	8009e98 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009ea8:	bd38      	pop	{r3, r4, r5, pc}

08009eaa <_ZN8touchgfx9ContainerD1Ev>:
 8009eaa:	4770      	bx	lr

08009eac <_ZN8touchgfx9ContainerD0Ev>:
 8009eac:	b510      	push	{r4, lr}
 8009eae:	4604      	mov	r4, r0
 8009eb0:	212c      	movs	r1, #44	; 0x2c
 8009eb2:	f010 fa5f 	bl	801a374 <_ZdlPvj>
 8009eb6:	4620      	mov	r0, r4
 8009eb8:	bd10      	pop	{r4, pc}

08009eba <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009eba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009ebc:	b19b      	cbz	r3, 8009ee6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009ebe:	428b      	cmp	r3, r1
 8009ec0:	d109      	bne.n	8009ed6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009ec2:	699a      	ldr	r2, [r3, #24]
 8009ec4:	2100      	movs	r1, #0
 8009ec6:	6159      	str	r1, [r3, #20]
 8009ec8:	6282      	str	r2, [r0, #40]	; 0x28
 8009eca:	b902      	cbnz	r2, 8009ece <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009ecc:	4770      	bx	lr
 8009ece:	6199      	str	r1, [r3, #24]
 8009ed0:	4770      	bx	lr
 8009ed2:	4613      	mov	r3, r2
 8009ed4:	b13a      	cbz	r2, 8009ee6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009ed6:	699a      	ldr	r2, [r3, #24]
 8009ed8:	428a      	cmp	r2, r1
 8009eda:	d1fa      	bne.n	8009ed2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009edc:	698a      	ldr	r2, [r1, #24]
 8009ede:	619a      	str	r2, [r3, #24]
 8009ee0:	2300      	movs	r3, #0
 8009ee2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009ee6:	4770      	bx	lr

08009ee8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009ee8:	b410      	push	{r4}
 8009eea:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009eec:	4604      	mov	r4, r0
 8009eee:	b92b      	cbnz	r3, 8009efc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009ef0:	6803      	ldr	r3, [r0, #0]
 8009ef2:	4611      	mov	r1, r2
 8009ef4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009ef8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009efa:	4718      	bx	r3
 8009efc:	b941      	cbnz	r1, 8009f10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009efe:	6193      	str	r3, [r2, #24]
 8009f00:	6282      	str	r2, [r0, #40]	; 0x28
 8009f02:	6154      	str	r4, [r2, #20]
 8009f04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009f08:	4770      	bx	lr
 8009f0a:	4603      	mov	r3, r0
 8009f0c:	2800      	cmp	r0, #0
 8009f0e:	d0f9      	beq.n	8009f04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009f10:	4299      	cmp	r1, r3
 8009f12:	6998      	ldr	r0, [r3, #24]
 8009f14:	d1f9      	bne.n	8009f0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009f16:	6190      	str	r0, [r2, #24]
 8009f18:	618a      	str	r2, [r1, #24]
 8009f1a:	e7f2      	b.n	8009f02 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f20:	461f      	mov	r7, r3
 8009f22:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009f26:	460d      	mov	r5, r1
 8009f28:	4616      	mov	r6, r2
 8009f2a:	b103      	cbz	r3, 8009f2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009f2c:	6038      	str	r0, [r7, #0]
 8009f2e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009f30:	b314      	cbz	r4, 8009f78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009f32:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009f36:	b1eb      	cbz	r3, 8009f74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009f38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009f3c:	428d      	cmp	r5, r1
 8009f3e:	db19      	blt.n	8009f74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009f40:	b289      	uxth	r1, r1
 8009f42:	8923      	ldrh	r3, [r4, #8]
 8009f44:	440b      	add	r3, r1
 8009f46:	b21b      	sxth	r3, r3
 8009f48:	429d      	cmp	r5, r3
 8009f4a:	da13      	bge.n	8009f74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009f4c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009f50:	4296      	cmp	r6, r2
 8009f52:	db0f      	blt.n	8009f74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009f54:	b292      	uxth	r2, r2
 8009f56:	8963      	ldrh	r3, [r4, #10]
 8009f58:	4413      	add	r3, r2
 8009f5a:	b21b      	sxth	r3, r3
 8009f5c:	429e      	cmp	r6, r3
 8009f5e:	da09      	bge.n	8009f74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009f60:	6823      	ldr	r3, [r4, #0]
 8009f62:	1ab2      	subs	r2, r6, r2
 8009f64:	1a69      	subs	r1, r5, r1
 8009f66:	4620      	mov	r0, r4
 8009f68:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8009f6c:	b212      	sxth	r2, r2
 8009f6e:	463b      	mov	r3, r7
 8009f70:	b209      	sxth	r1, r1
 8009f72:	47c0      	blx	r8
 8009f74:	69a4      	ldr	r4, [r4, #24]
 8009f76:	e7db      	b.n	8009f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009f7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f80:	4c6d      	ldr	r4, [pc, #436]	; (800a138 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 8009f82:	b0a1      	sub	sp, #132	; 0x84
 8009f84:	4606      	mov	r6, r0
 8009f86:	6824      	ldr	r4, [r4, #0]
 8009f88:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8009f8a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8009f8e:	2400      	movs	r4, #0
 8009f90:	9303      	str	r3, [sp, #12]
 8009f92:	802c      	strh	r4, [r5, #0]
 8009f94:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8009f96:	802c      	strh	r4, [r5, #0]
 8009f98:	601c      	str	r4, [r3, #0]
 8009f9a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009f9e:	f7ff ffbd 	bl	8009f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009fa2:	f1b9 0f03 	cmp.w	r9, #3
 8009fa6:	f340 80c1 	ble.w	800a12c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 8009faa:	4631      	mov	r1, r6
 8009fac:	a80c      	add	r0, sp, #48	; 0x30
 8009fae:	f005 fac3 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009fb2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009fb6:	9306      	str	r3, [sp, #24]
 8009fb8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009fbc:	9307      	str	r3, [sp, #28]
 8009fbe:	9b03      	ldr	r3, [sp, #12]
 8009fc0:	f8d3 a000 	ldr.w	sl, [r3]
 8009fc4:	f1ba 0f00 	cmp.w	sl, #0
 8009fc8:	f000 80b3 	beq.w	800a132 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 8009fcc:	4651      	mov	r1, sl
 8009fce:	a810      	add	r0, sp, #64	; 0x40
 8009fd0:	f005 fab2 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009fd4:	2002      	movs	r0, #2
 8009fd6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009fda:	9b01      	ldr	r3, [sp, #4]
 8009fdc:	9a06      	ldr	r2, [sp, #24]
 8009fde:	fb91 f1f0 	sdiv	r1, r1, r0
 8009fe2:	189d      	adds	r5, r3, r2
 8009fe4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8009fe8:	9a07      	ldr	r2, [sp, #28]
 8009fea:	4419      	add	r1, r3
 8009fec:	9b02      	ldr	r3, [sp, #8]
 8009fee:	4413      	add	r3, r2
 8009ff0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009ff4:	1a6d      	subs	r5, r5, r1
 8009ff6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009ffa:	fb92 f2f0 	sdiv	r2, r2, r0
 8009ffe:	440a      	add	r2, r1
 800a000:	1a9b      	subs	r3, r3, r2
 800a002:	435b      	muls	r3, r3
 800a004:	fb05 3505 	mla	r5, r5, r5, r3
 800a008:	4f4c      	ldr	r7, [pc, #304]	; (800a13c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a00a:	ac10      	add	r4, sp, #64	; 0x40
 800a00c:	f1b9 0f0c 	cmp.w	r9, #12
 800a010:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a012:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a014:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a016:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a018:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a01a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a01c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a020:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a024:	f04f 0303 	mov.w	r3, #3
 800a028:	bfd8      	it	le
 800a02a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a02e:	f04f 0400 	mov.w	r4, #0
 800a032:	f8cd 9000 	str.w	r9, [sp]
 800a036:	bfcc      	ite	gt
 800a038:	4698      	movgt	r8, r3
 800a03a:	fb92 f8f3 	sdivle	r8, r2, r3
 800a03e:	1c63      	adds	r3, r4, #1
 800a040:	aa10      	add	r2, sp, #64	; 0x40
 800a042:	f004 0401 	and.w	r4, r4, #1
 800a046:	f04f 0b00 	mov.w	fp, #0
 800a04a:	9308      	str	r3, [sp, #32]
 800a04c:	9b00      	ldr	r3, [sp, #0]
 800a04e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a052:	fb93 f3f8 	sdiv	r3, r3, r8
 800a056:	3404      	adds	r4, #4
 800a058:	b29b      	uxth	r3, r3
 800a05a:	9304      	str	r3, [sp, #16]
 800a05c:	9a04      	ldr	r2, [sp, #16]
 800a05e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a062:	fb13 f302 	smulbb	r3, r3, r2
 800a066:	9a01      	ldr	r2, [sp, #4]
 800a068:	b29b      	uxth	r3, r3
 800a06a:	1899      	adds	r1, r3, r2
 800a06c:	9305      	str	r3, [sp, #20]
 800a06e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a072:	b209      	sxth	r1, r1
 800a074:	4299      	cmp	r1, r3
 800a076:	db4d      	blt.n	800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a078:	8932      	ldrh	r2, [r6, #8]
 800a07a:	4413      	add	r3, r2
 800a07c:	b21b      	sxth	r3, r3
 800a07e:	4299      	cmp	r1, r3
 800a080:	da48      	bge.n	800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a082:	9b04      	ldr	r3, [sp, #16]
 800a084:	6827      	ldr	r7, [r4, #0]
 800a086:	fb17 f703 	smulbb	r7, r7, r3
 800a08a:	9b02      	ldr	r3, [sp, #8]
 800a08c:	b2bf      	uxth	r7, r7
 800a08e:	18fa      	adds	r2, r7, r3
 800a090:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a094:	b212      	sxth	r2, r2
 800a096:	429a      	cmp	r2, r3
 800a098:	db3c      	blt.n	800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a09a:	8970      	ldrh	r0, [r6, #10]
 800a09c:	4403      	add	r3, r0
 800a09e:	b21b      	sxth	r3, r3
 800a0a0:	429a      	cmp	r2, r3
 800a0a2:	da37      	bge.n	800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a0a4:	2300      	movs	r3, #0
 800a0a6:	4630      	mov	r0, r6
 800a0a8:	930b      	str	r3, [sp, #44]	; 0x2c
 800a0aa:	ab0b      	add	r3, sp, #44	; 0x2c
 800a0ac:	f7ff ff36 	bl	8009f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a0b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a0b2:	b37a      	cbz	r2, 800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a0b4:	4552      	cmp	r2, sl
 800a0b6:	d02d      	beq.n	800a114 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a0b8:	4611      	mov	r1, r2
 800a0ba:	a80e      	add	r0, sp, #56	; 0x38
 800a0bc:	9209      	str	r2, [sp, #36]	; 0x24
 800a0be:	f005 fa3b 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a0c2:	f04f 0e02 	mov.w	lr, #2
 800a0c6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a0ca:	9a06      	ldr	r2, [sp, #24]
 800a0cc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a0d0:	9b01      	ldr	r3, [sp, #4]
 800a0d2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a0d6:	4413      	add	r3, r2
 800a0d8:	9a07      	ldr	r2, [sp, #28]
 800a0da:	fb91 f1fe 	sdiv	r1, r1, lr
 800a0de:	fb9c fcfe 	sdiv	ip, ip, lr
 800a0e2:	4401      	add	r1, r0
 800a0e4:	1a58      	subs	r0, r3, r1
 800a0e6:	9b02      	ldr	r3, [sp, #8]
 800a0e8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a0ec:	4413      	add	r3, r2
 800a0ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a0f0:	448c      	add	ip, r1
 800a0f2:	eba3 030c 	sub.w	r3, r3, ip
 800a0f6:	435b      	muls	r3, r3
 800a0f8:	fb00 3300 	mla	r3, r0, r0, r3
 800a0fc:	42ab      	cmp	r3, r5
 800a0fe:	d208      	bcs.n	800a112 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a100:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a102:	461d      	mov	r5, r3
 800a104:	9803      	ldr	r0, [sp, #12]
 800a106:	6001      	str	r1, [r0, #0]
 800a108:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a10a:	9805      	ldr	r0, [sp, #20]
 800a10c:	8008      	strh	r0, [r1, #0]
 800a10e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a110:	800f      	strh	r7, [r1, #0]
 800a112:	4692      	mov	sl, r2
 800a114:	f10b 0b01 	add.w	fp, fp, #1
 800a118:	3408      	adds	r4, #8
 800a11a:	f1bb 0f04 	cmp.w	fp, #4
 800a11e:	d19d      	bne.n	800a05c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a120:	9b00      	ldr	r3, [sp, #0]
 800a122:	9c08      	ldr	r4, [sp, #32]
 800a124:	444b      	add	r3, r9
 800a126:	4544      	cmp	r4, r8
 800a128:	9300      	str	r3, [sp, #0]
 800a12a:	d188      	bne.n	800a03e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a12c:	b021      	add	sp, #132	; 0x84
 800a12e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a132:	f04f 35ff 	mov.w	r5, #4294967295
 800a136:	e767      	b.n	800a008 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a138:	24006bd8 	.word	0x24006bd8
 800a13c:	0801b414 	.word	0x0801b414

0800a140 <_ZN8touchgfx4RectaNERKS0_>:
 800a140:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a144:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a148:	888c      	ldrh	r4, [r1, #4]
 800a14a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a14e:	443c      	add	r4, r7
 800a150:	b2a4      	uxth	r4, r4
 800a152:	fa0f f884 	sxth.w	r8, r4
 800a156:	45c1      	cmp	r9, r8
 800a158:	da2f      	bge.n	800a1ba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a15a:	8882      	ldrh	r2, [r0, #4]
 800a15c:	444a      	add	r2, r9
 800a15e:	b292      	uxth	r2, r2
 800a160:	fa0f fe82 	sxth.w	lr, r2
 800a164:	4577      	cmp	r7, lr
 800a166:	da28      	bge.n	800a1ba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a168:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a16c:	88cb      	ldrh	r3, [r1, #6]
 800a16e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a172:	442b      	add	r3, r5
 800a174:	b21b      	sxth	r3, r3
 800a176:	429e      	cmp	r6, r3
 800a178:	da1f      	bge.n	800a1ba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a17a:	88c3      	ldrh	r3, [r0, #6]
 800a17c:	4433      	add	r3, r6
 800a17e:	b29b      	uxth	r3, r3
 800a180:	fa0f fc83 	sxth.w	ip, r3
 800a184:	4565      	cmp	r5, ip
 800a186:	da18      	bge.n	800a1ba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a188:	454f      	cmp	r7, r9
 800a18a:	bfb8      	it	lt
 800a18c:	464f      	movlt	r7, r9
 800a18e:	42b5      	cmp	r5, r6
 800a190:	bfb8      	it	lt
 800a192:	4635      	movlt	r5, r6
 800a194:	45f0      	cmp	r8, lr
 800a196:	bfd8      	it	le
 800a198:	4622      	movle	r2, r4
 800a19a:	1bd2      	subs	r2, r2, r7
 800a19c:	8082      	strh	r2, [r0, #4]
 800a19e:	884a      	ldrh	r2, [r1, #2]
 800a1a0:	88c9      	ldrh	r1, [r1, #6]
 800a1a2:	8007      	strh	r7, [r0, #0]
 800a1a4:	440a      	add	r2, r1
 800a1a6:	8045      	strh	r5, [r0, #2]
 800a1a8:	b292      	uxth	r2, r2
 800a1aa:	b211      	sxth	r1, r2
 800a1ac:	458c      	cmp	ip, r1
 800a1ae:	bfa8      	it	ge
 800a1b0:	4613      	movge	r3, r2
 800a1b2:	1b5b      	subs	r3, r3, r5
 800a1b4:	80c3      	strh	r3, [r0, #6]
 800a1b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1ba:	2300      	movs	r3, #0
 800a1bc:	8003      	strh	r3, [r0, #0]
 800a1be:	8043      	strh	r3, [r0, #2]
 800a1c0:	8083      	strh	r3, [r0, #4]
 800a1c2:	80c3      	strh	r3, [r0, #6]
 800a1c4:	e7f7      	b.n	800a1b6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a1c6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a1ca:	2b00      	cmp	r3, #0
 800a1cc:	dd06      	ble.n	800a1dc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a1ce:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a1d2:	2800      	cmp	r0, #0
 800a1d4:	bfcc      	ite	gt
 800a1d6:	2000      	movgt	r0, #0
 800a1d8:	2001      	movle	r0, #1
 800a1da:	4770      	bx	lr
 800a1dc:	2001      	movs	r0, #1
 800a1de:	4770      	bx	lr

0800a1e0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1e4:	2300      	movs	r3, #0
 800a1e6:	4604      	mov	r4, r0
 800a1e8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a1ea:	8003      	strh	r3, [r0, #0]
 800a1ec:	8043      	strh	r3, [r0, #2]
 800a1ee:	8083      	strh	r3, [r0, #4]
 800a1f0:	80c3      	strh	r3, [r0, #6]
 800a1f2:	2d00      	cmp	r5, #0
 800a1f4:	d040      	beq.n	800a278 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a1f6:	1d28      	adds	r0, r5, #4
 800a1f8:	f7ff ffe5 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a1fc:	b988      	cbnz	r0, 800a222 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a1fe:	4620      	mov	r0, r4
 800a200:	f7ff ffe1 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a204:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a208:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a20c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a210:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a214:	b138      	cbz	r0, 800a226 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a216:	8022      	strh	r2, [r4, #0]
 800a218:	8063      	strh	r3, [r4, #2]
 800a21a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a21e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a222:	69ad      	ldr	r5, [r5, #24]
 800a224:	e7e5      	b.n	800a1f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a226:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a22a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a22e:	4290      	cmp	r0, r2
 800a230:	4607      	mov	r7, r0
 800a232:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a236:	460e      	mov	r6, r1
 800a238:	bfa8      	it	ge
 800a23a:	4617      	movge	r7, r2
 800a23c:	4299      	cmp	r1, r3
 800a23e:	4472      	add	r2, lr
 800a240:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a244:	bfa8      	it	ge
 800a246:	461e      	movge	r6, r3
 800a248:	4440      	add	r0, r8
 800a24a:	4471      	add	r1, lr
 800a24c:	4463      	add	r3, ip
 800a24e:	b200      	sxth	r0, r0
 800a250:	8027      	strh	r7, [r4, #0]
 800a252:	b212      	sxth	r2, r2
 800a254:	8066      	strh	r6, [r4, #2]
 800a256:	b209      	sxth	r1, r1
 800a258:	b21b      	sxth	r3, r3
 800a25a:	4290      	cmp	r0, r2
 800a25c:	bfac      	ite	ge
 800a25e:	ebc7 0200 	rsbge	r2, r7, r0
 800a262:	ebc7 0202 	rsblt	r2, r7, r2
 800a266:	4299      	cmp	r1, r3
 800a268:	bfac      	ite	ge
 800a26a:	ebc6 0301 	rsbge	r3, r6, r1
 800a26e:	ebc6 0303 	rsblt	r3, r6, r3
 800a272:	80a2      	strh	r2, [r4, #4]
 800a274:	80e3      	strh	r3, [r4, #6]
 800a276:	e7d4      	b.n	800a222 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a278:	4620      	mov	r0, r4
 800a27a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a27e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a27e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a282:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a286:	b383      	cbz	r3, 800a2ea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a288:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a28a:	b374      	cbz	r4, 800a2ea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a28c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a290:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a294:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a298:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a29c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a2a0:	b303      	cbz	r3, 800a2e4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a2a2:	4668      	mov	r0, sp
 800a2a4:	1d21      	adds	r1, r4, #4
 800a2a6:	f8ad 5000 	strh.w	r5, [sp]
 800a2aa:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a2ae:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a2b2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a2b6:	f7ff ff43 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800a2ba:	4668      	mov	r0, sp
 800a2bc:	f7ff ff83 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a2c0:	b980      	cbnz	r0, 800a2e4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a2c2:	f8bd 3000 	ldrh.w	r3, [sp]
 800a2c6:	4669      	mov	r1, sp
 800a2c8:	88a2      	ldrh	r2, [r4, #4]
 800a2ca:	4620      	mov	r0, r4
 800a2cc:	1a9b      	subs	r3, r3, r2
 800a2ce:	88e2      	ldrh	r2, [r4, #6]
 800a2d0:	f8ad 3000 	strh.w	r3, [sp]
 800a2d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a2d8:	1a9b      	subs	r3, r3, r2
 800a2da:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a2de:	6823      	ldr	r3, [r4, #0]
 800a2e0:	689b      	ldr	r3, [r3, #8]
 800a2e2:	4798      	blx	r3
 800a2e4:	69a4      	ldr	r4, [r4, #24]
 800a2e6:	2c00      	cmp	r4, #0
 800a2e8:	d1d8      	bne.n	800a29c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a2ea:	b002      	add	sp, #8
 800a2ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a2f0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a2f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a2f2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a2f6:	460d      	mov	r5, r1
 800a2f8:	4616      	mov	r6, r2
 800a2fa:	b323      	cbz	r3, 800a346 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a2fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a2fe:	b314      	cbz	r4, 800a346 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a300:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a304:	b1eb      	cbz	r3, 800a342 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a306:	6828      	ldr	r0, [r5, #0]
 800a308:	466b      	mov	r3, sp
 800a30a:	6869      	ldr	r1, [r5, #4]
 800a30c:	c303      	stmia	r3!, {r0, r1}
 800a30e:	4668      	mov	r0, sp
 800a310:	1d21      	adds	r1, r4, #4
 800a312:	f7ff ff15 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800a316:	4668      	mov	r0, sp
 800a318:	f7ff ff55 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a31c:	b988      	cbnz	r0, 800a342 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a31e:	f8bd 3000 	ldrh.w	r3, [sp]
 800a322:	4669      	mov	r1, sp
 800a324:	88a2      	ldrh	r2, [r4, #4]
 800a326:	4620      	mov	r0, r4
 800a328:	1a9b      	subs	r3, r3, r2
 800a32a:	88e2      	ldrh	r2, [r4, #6]
 800a32c:	f8ad 3000 	strh.w	r3, [sp]
 800a330:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a334:	1a9b      	subs	r3, r3, r2
 800a336:	4632      	mov	r2, r6
 800a338:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a33c:	6823      	ldr	r3, [r4, #0]
 800a33e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a340:	4798      	blx	r3
 800a342:	69a4      	ldr	r4, [r4, #24]
 800a344:	e7db      	b.n	800a2fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a346:	b002      	add	sp, #8
 800a348:	bd70      	pop	{r4, r5, r6, pc}

0800a34a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800a34a:	2000      	movs	r0, #0
 800a34c:	4770      	bx	lr

0800a34e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800a34e:	2001      	movs	r0, #1
 800a350:	4770      	bx	lr

0800a352 <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_>:
 800a352:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a354:	6803      	ldr	r3, [r0, #0]
 800a356:	4604      	mov	r4, r0
 800a358:	460e      	mov	r6, r1
 800a35a:	4601      	mov	r1, r0
 800a35c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a360:	4668      	mov	r0, sp
 800a362:	4615      	mov	r5, r2
 800a364:	4798      	blx	r3
 800a366:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800a36a:	b13b      	cbz	r3, 800a37c <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_+0x2a>
 800a36c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800a370:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800a374:	4293      	cmp	r3, r2
 800a376:	bfac      	ite	ge
 800a378:	2300      	movge	r3, #0
 800a37a:	2301      	movlt	r3, #1
 800a37c:	7033      	strb	r3, [r6, #0]
 800a37e:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800a382:	b13b      	cbz	r3, 800a394 <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_+0x42>
 800a384:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a388:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800a38c:	4293      	cmp	r3, r2
 800a38e:	bfac      	ite	ge
 800a390:	2300      	movge	r3, #0
 800a392:	2301      	movlt	r3, #1
 800a394:	702b      	strb	r3, [r5, #0]
 800a396:	b002      	add	sp, #8
 800a398:	bd70      	pop	{r4, r5, r6, pc}

0800a39a <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss>:
 800a39a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a39e:	4604      	mov	r4, r0
 800a3a0:	460f      	mov	r7, r1
 800a3a2:	4616      	mov	r6, r2
 800a3a4:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800a3a6:	f100 0838 	add.w	r8, r0, #56	; 0x38
 800a3aa:	f100 0964 	add.w	r9, r0, #100	; 0x64
 800a3ae:	b15d      	cbz	r5, 800a3c8 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2e>
 800a3b0:	4545      	cmp	r5, r8
 800a3b2:	d007      	beq.n	800a3c4 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2a>
 800a3b4:	454d      	cmp	r5, r9
 800a3b6:	d005      	beq.n	800a3c4 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2a>
 800a3b8:	682b      	ldr	r3, [r5, #0]
 800a3ba:	4632      	mov	r2, r6
 800a3bc:	4639      	mov	r1, r7
 800a3be:	4628      	mov	r0, r5
 800a3c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a3c2:	4798      	blx	r3
 800a3c4:	69ad      	ldr	r5, [r5, #24]
 800a3c6:	e7f2      	b.n	800a3ae <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x14>
 800a3c8:	f8b4 3098 	ldrh.w	r3, [r4, #152]	; 0x98
 800a3cc:	441f      	add	r7, r3
 800a3ce:	f8b4 309a 	ldrh.w	r3, [r4, #154]	; 0x9a
 800a3d2:	441e      	add	r6, r3
 800a3d4:	f8a4 7098 	strh.w	r7, [r4, #152]	; 0x98
 800a3d8:	f8a4 609a 	strh.w	r6, [r4, #154]	; 0x9a
 800a3dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800a3e0 <_ZN8touchgfx19ScrollableContainerD1Ev>:
 800a3e0:	4770      	bx	lr

0800a3e2 <_ZN8touchgfx9DragEventD1Ev>:
 800a3e2:	4770      	bx	lr

0800a3e4 <_ZN8touchgfx10ClickEventD1Ev>:
 800a3e4:	4770      	bx	lr

0800a3e6 <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>:
 800a3e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3e8:	4605      	mov	r5, r0
 800a3ea:	f100 0638 	add.w	r6, r0, #56	; 0x38
 800a3ee:	4604      	mov	r4, r0
 800a3f0:	460f      	mov	r7, r1
 800a3f2:	f855 3b64 	ldr.w	r3, [r5], #100
 800a3f6:	4631      	mov	r1, r6
 800a3f8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a3fa:	4798      	blx	r3
 800a3fc:	6823      	ldr	r3, [r4, #0]
 800a3fe:	4629      	mov	r1, r5
 800a400:	4620      	mov	r0, r4
 800a402:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a404:	4798      	blx	r3
 800a406:	4639      	mov	r1, r7
 800a408:	4620      	mov	r0, r4
 800a40a:	f7ff fd15 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a40e:	4631      	mov	r1, r6
 800a410:	4620      	mov	r0, r4
 800a412:	f7ff fd11 	bl	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a416:	4629      	mov	r1, r5
 800a418:	4620      	mov	r0, r4
 800a41a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800a41e:	f7ff bd0b 	b.w	8009e38 <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a422 <_ZN8touchgfx10ClickEventD0Ev>:
 800a422:	b510      	push	{r4, lr}
 800a424:	4604      	mov	r4, r0
 800a426:	210c      	movs	r1, #12
 800a428:	f00f ffa4 	bl	801a374 <_ZdlPvj>
 800a42c:	4620      	mov	r0, r4
 800a42e:	bd10      	pop	{r4, pc}

0800a430 <_ZN8touchgfx9DragEventD0Ev>:
 800a430:	b510      	push	{r4, lr}
 800a432:	4604      	mov	r4, r0
 800a434:	2110      	movs	r1, #16
 800a436:	f00f ff9d 	bl	801a374 <_ZdlPvj>
 800a43a:	4620      	mov	r0, r4
 800a43c:	bd10      	pop	{r4, pc}

0800a43e <_ZN8touchgfx19ScrollableContainerD0Ev>:
 800a43e:	b510      	push	{r4, lr}
 800a440:	4604      	mov	r4, r0
 800a442:	21bc      	movs	r1, #188	; 0xbc
 800a444:	f00f ff96 	bl	801a374 <_ZdlPvj>
 800a448:	4620      	mov	r0, r4
 800a44a:	bd10      	pop	{r4, pc}

0800a44c <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE>:
 800a44c:	b570      	push	{r4, r5, r6, lr}
 800a44e:	b086      	sub	sp, #24
 800a450:	2300      	movs	r3, #0
 800a452:	460c      	mov	r4, r1
 800a454:	4605      	mov	r5, r0
 800a456:	aa06      	add	r2, sp, #24
 800a458:	f88d 3002 	strb.w	r3, [sp, #2]
 800a45c:	f10d 0102 	add.w	r1, sp, #2
 800a460:	f802 3d15 	strb.w	r3, [r2, #-21]!
 800a464:	6803      	ldr	r3, [r0, #0]
 800a466:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a46a:	4798      	blx	r3
 800a46c:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800a470:	b10b      	cbz	r3, 800a476 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x2a>
 800a472:	7923      	ldrb	r3, [r4, #4]
 800a474:	b133      	cbz	r3, 800a484 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x38>
 800a476:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a47a:	2b00      	cmp	r3, #0
 800a47c:	d068      	beq.n	800a550 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x104>
 800a47e:	7923      	ldrb	r3, [r4, #4]
 800a480:	2b01      	cmp	r3, #1
 800a482:	d165      	bne.n	800a550 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x104>
 800a484:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a488:	2a00      	cmp	r2, #0
 800a48a:	bfb8      	it	lt
 800a48c:	4252      	neglt	r2, r2
 800a48e:	b213      	sxth	r3, r2
 800a490:	f9b5 209c 	ldrsh.w	r2, [r5, #156]	; 0x9c
 800a494:	429a      	cmp	r2, r3
 800a496:	dc5b      	bgt.n	800a550 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x104>
 800a498:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
 800a49a:	f8b5 10b8 	ldrh.w	r1, [r5, #184]	; 0xb8
 800a49e:	429a      	cmp	r2, r3
 800a4a0:	bfa8      	it	ge
 800a4a2:	461a      	movge	r2, r3
 800a4a4:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800a4a8:	b212      	sxth	r2, r2
 800a4aa:	2a05      	cmp	r2, #5
 800a4ac:	bfb8      	it	lt
 800a4ae:	2205      	movlt	r2, #5
 800a4b0:	4351      	muls	r1, r2
 800a4b2:	3a04      	subs	r2, #4
 800a4b4:	fb91 f1f3 	sdiv	r1, r1, r3
 800a4b8:	f8a5 10a8 	strh.w	r1, [r5, #168]	; 0xa8
 800a4bc:	eb02 02c2 	add.w	r2, r2, r2, lsl #3
 800a4c0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800a4c4:	b289      	uxth	r1, r1
 800a4c6:	2b00      	cmp	r3, #0
 800a4c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a4cc:	bfcc      	ite	gt
 800a4ce:	2001      	movgt	r0, #1
 800a4d0:	4618      	movle	r0, r3
 800a4d2:	00d3      	lsls	r3, r2, #3
 800a4d4:	fb13 f300 	smulbb	r3, r3, r0
 800a4d8:	b21b      	sxth	r3, r3
 800a4da:	2b00      	cmp	r3, #0
 800a4dc:	f8a5 30ac 	strh.w	r3, [r5, #172]	; 0xac
 800a4e0:	bfb8      	it	lt
 800a4e2:	425b      	neglt	r3, r3
 800a4e4:	b21b      	sxth	r3, r3
 800a4e6:	428b      	cmp	r3, r1
 800a4e8:	bfa8      	it	ge
 800a4ea:	460b      	movge	r3, r1
 800a4ec:	4629      	mov	r1, r5
 800a4ee:	f8a5 30a8 	strh.w	r3, [r5, #168]	; 0xa8
 800a4f2:	7922      	ldrb	r2, [r4, #4]
 800a4f4:	682b      	ldr	r3, [r5, #0]
 800a4f6:	2a01      	cmp	r2, #1
 800a4f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a4fc:	d12a      	bne.n	800a554 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x108>
 800a4fe:	a801      	add	r0, sp, #4
 800a500:	4798      	blx	r3
 800a502:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800a506:	2601      	movs	r6, #1
 800a508:	f8a5 30aa 	strh.w	r3, [r5, #170]	; 0xaa
 800a50c:	f885 60b0 	strb.w	r6, [r5, #176]	; 0xb0
 800a510:	f003 feb4 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800a514:	4629      	mov	r1, r5
 800a516:	3004      	adds	r0, #4
 800a518:	f003 ff7e 	bl	800e418 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a51c:	7923      	ldrb	r3, [r4, #4]
 800a51e:	f8d5 0090 	ldr.w	r0, [r5, #144]	; 0x90
 800a522:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800a526:	b198      	cbz	r0, 800a550 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x104>
 800a528:	f895 30b6 	ldrb.w	r3, [r5, #182]	; 0xb6
 800a52c:	b983      	cbnz	r3, 800a550 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x104>
 800a52e:	4a0c      	ldr	r2, [pc, #48]	; (800a560 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x114>)
 800a530:	a903      	add	r1, sp, #12
 800a532:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a536:	9203      	str	r2, [sp, #12]
 800a538:	2202      	movs	r2, #2
 800a53a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a53e:	f88d 2010 	strb.w	r2, [sp, #16]
 800a542:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a546:	6803      	ldr	r3, [r0, #0]
 800a548:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a54a:	4798      	blx	r3
 800a54c:	f885 60b6 	strb.w	r6, [r5, #182]	; 0xb6
 800a550:	b006      	add	sp, #24
 800a552:	bd70      	pop	{r4, r5, r6, pc}
 800a554:	a803      	add	r0, sp, #12
 800a556:	4798      	blx	r3
 800a558:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a55c:	e7d3      	b.n	800a506 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0xba>
 800a55e:	bf00      	nop
 800a560:	0801c568 	.word	0x0801c568

0800a564 <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE>:
 800a564:	b470      	push	{r4, r5, r6}
 800a566:	f890 6025 	ldrb.w	r6, [r0, #37]	; 0x25
 800a56a:	461d      	mov	r5, r3
 800a56c:	b11e      	cbz	r6, 800a576 <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE+0x12>
 800a56e:	f890 6024 	ldrb.w	r6, [r0, #36]	; 0x24
 800a572:	b116      	cbz	r6, 800a57a <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE+0x16>
 800a574:	6028      	str	r0, [r5, #0]
 800a576:	bc70      	pop	{r4, r5, r6}
 800a578:	4770      	bx	lr
 800a57a:	bc70      	pop	{r4, r5, r6}
 800a57c:	f7ff bcce 	b.w	8009f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>

0800a580 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv>:
 800a580:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a582:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 800a586:	4604      	mov	r4, r0
 800a588:	2b00      	cmp	r3, #0
 800a58a:	d049      	beq.n	800a620 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa0>
 800a58c:	f8b0 00ae 	ldrh.w	r0, [r0, #174]	; 0xae
 800a590:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 800a594:	3001      	adds	r0, #1
 800a596:	b280      	uxth	r0, r0
 800a598:	4298      	cmp	r0, r3
 800a59a:	f8a4 00ae 	strh.w	r0, [r4, #174]	; 0xae
 800a59e:	d843      	bhi.n	800a628 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa8>
 800a5a0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800a5a4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800a5a8:	f005 fb70 	bl	800fc8c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800a5ac:	4605      	mov	r5, r0
 800a5ae:	b282      	uxth	r2, r0
 800a5b0:	f012 0301 	ands.w	r3, r2, #1
 800a5b4:	d006      	beq.n	800a5c4 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x44>
 800a5b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a5ba:	2800      	cmp	r0, #0
 800a5bc:	bfd8      	it	le
 800a5be:	460b      	movle	r3, r1
 800a5c0:	18d5      	adds	r5, r2, r3
 800a5c2:	b22d      	sxth	r5, r5
 800a5c4:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800a5c8:	2b01      	cmp	r3, #1
 800a5ca:	d02b      	beq.n	800a624 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa4>
 800a5cc:	6823      	ldr	r3, [r4, #0]
 800a5ce:	4621      	mov	r1, r4
 800a5d0:	4668      	mov	r0, sp
 800a5d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a5d6:	4798      	blx	r3
 800a5d8:	f8bd 6000 	ldrh.w	r6, [sp]
 800a5dc:	1bae      	subs	r6, r5, r6
 800a5de:	b236      	sxth	r6, r6
 800a5e0:	f894 2036 	ldrb.w	r2, [r4, #54]	; 0x36
 800a5e4:	b14a      	cbz	r2, 800a5fa <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x7a>
 800a5e6:	6823      	ldr	r3, [r4, #0]
 800a5e8:	4621      	mov	r1, r4
 800a5ea:	4668      	mov	r0, sp
 800a5ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a5f0:	4798      	blx	r3
 800a5f2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a5f6:	1aad      	subs	r5, r5, r2
 800a5f8:	b22a      	sxth	r2, r5
 800a5fa:	6823      	ldr	r3, [r4, #0]
 800a5fc:	4631      	mov	r1, r6
 800a5fe:	4620      	mov	r0, r4
 800a600:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a604:	4798      	blx	r3
 800a606:	f884 00b0 	strb.w	r0, [r4, #176]	; 0xb0
 800a60a:	f894 50b0 	ldrb.w	r5, [r4, #176]	; 0xb0
 800a60e:	b93d      	cbnz	r5, 800a620 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa0>
 800a610:	f003 fe34 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800a614:	4621      	mov	r1, r4
 800a616:	3004      	adds	r0, #4
 800a618:	f003 fe55 	bl	800e2c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a61c:	f8a4 50ae 	strh.w	r5, [r4, #174]	; 0xae
 800a620:	b002      	add	sp, #8
 800a622:	bd70      	pop	{r4, r5, r6, pc}
 800a624:	2600      	movs	r6, #0
 800a626:	e7db      	b.n	800a5e0 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x60>
 800a628:	2300      	movs	r3, #0
 800a62a:	f884 30b0 	strb.w	r3, [r4, #176]	; 0xb0
 800a62e:	e7ec      	b.n	800a60a <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x8a>

0800a630 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE>:
 800a630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a634:	b08b      	sub	sp, #44	; 0x2c
 800a636:	2300      	movs	r3, #0
 800a638:	4604      	mov	r4, r0
 800a63a:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a63e:	aa0a      	add	r2, sp, #40	; 0x28
 800a640:	f88d 3006 	strb.w	r3, [sp, #6]
 800a644:	f9b1 9008 	ldrsh.w	r9, [r1, #8]
 800a648:	460f      	mov	r7, r1
 800a64a:	f802 3d21 	strb.w	r3, [r2, #-33]!
 800a64e:	6803      	ldr	r3, [r0, #0]
 800a650:	f9b1 500a 	ldrsh.w	r5, [r1, #10]
 800a654:	f9b1 600c 	ldrsh.w	r6, [r1, #12]
 800a658:	f10d 0106 	add.w	r1, sp, #6
 800a65c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a660:	4798      	blx	r3
 800a662:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 800a666:	2900      	cmp	r1, #0
 800a668:	d03d      	beq.n	800a6e6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800a66a:	42a1      	cmp	r1, r4
 800a66c:	d03b      	beq.n	800a6e6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800a66e:	a802      	add	r0, sp, #8
 800a670:	f004 ff62 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a674:	4621      	mov	r1, r4
 800a676:	a804      	add	r0, sp, #16
 800a678:	f9bd b008 	ldrsh.w	fp, [sp, #8]
 800a67c:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800a680:	f004 ff5a 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a684:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800a688:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800a68c:	eba3 030b 	sub.w	r3, r3, fp
 800a690:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 800a694:	88f9      	ldrh	r1, [r7, #6]
 800a696:	4413      	add	r3, r2
 800a698:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a69c:	f89d c006 	ldrb.w	ip, [sp, #6]
 800a6a0:	eba2 020a 	sub.w	r2, r2, sl
 800a6a4:	b29b      	uxth	r3, r3
 800a6a6:	4402      	add	r2, r0
 800a6a8:	8938      	ldrh	r0, [r7, #8]
 800a6aa:	4419      	add	r1, r3
 800a6ac:	b292      	uxth	r2, r2
 800a6ae:	b209      	sxth	r1, r1
 800a6b0:	4410      	add	r0, r2
 800a6b2:	b200      	sxth	r0, r0
 800a6b4:	f1bc 0f00 	cmp.w	ip, #0
 800a6b8:	f040 808d 	bne.w	800a7d6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1a6>
 800a6bc:	f8b7 e00a 	ldrh.w	lr, [r7, #10]
 800a6c0:	4473      	add	r3, lr
 800a6c2:	b21b      	sxth	r3, r3
 800a6c4:	f89d e007 	ldrb.w	lr, [sp, #7]
 800a6c8:	f1be 0f00 	cmp.w	lr, #0
 800a6cc:	f040 80b1 	bne.w	800a832 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x202>
 800a6d0:	f8b7 e00c 	ldrh.w	lr, [r7, #12]
 800a6d4:	4472      	add	r2, lr
 800a6d6:	b212      	sxth	r2, r2
 800a6d8:	f1bc 0f00 	cmp.w	ip, #0
 800a6dc:	f000 80c8 	beq.w	800a870 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x240>
 800a6e0:	4290      	cmp	r0, r2
 800a6e2:	f040 80ae 	bne.w	800a842 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x212>
 800a6e6:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800a6ea:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	f040 8099 	bne.w	800a826 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f6>
 800a6f4:	897d      	ldrh	r5, [r7, #10]
 800a6f6:	89be      	ldrh	r6, [r7, #12]
 800a6f8:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800a6fc:	f8b4 30b4 	ldrh.w	r3, [r4, #180]	; 0xb4
 800a700:	f8b4 109e 	ldrh.w	r1, [r4, #158]	; 0x9e
 800a704:	f8b4 c0a0 	ldrh.w	ip, [r4, #160]	; 0xa0
 800a708:	4411      	add	r1, r2
 800a70a:	442a      	add	r2, r5
 800a70c:	449c      	add	ip, r3
 800a70e:	4433      	add	r3, r6
 800a710:	b292      	uxth	r2, r2
 800a712:	f89d 7006 	ldrb.w	r7, [sp, #6]
 800a716:	b29b      	uxth	r3, r3
 800a718:	b289      	uxth	r1, r1
 800a71a:	fa1f fc8c 	uxth.w	ip, ip
 800a71e:	b215      	sxth	r5, r2
 800a720:	b21e      	sxth	r6, r3
 800a722:	b15f      	cbz	r7, 800a73c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x10c>
 800a724:	1a52      	subs	r2, r2, r1
 800a726:	f9b4 709c 	ldrsh.w	r7, [r4, #156]	; 0x9c
 800a72a:	b212      	sxth	r2, r2
 800a72c:	2a00      	cmp	r2, #0
 800a72e:	bfb8      	it	lt
 800a730:	4252      	neglt	r2, r2
 800a732:	b212      	sxth	r2, r2
 800a734:	4297      	cmp	r7, r2
 800a736:	bfac      	ite	ge
 800a738:	2700      	movge	r7, #0
 800a73a:	2701      	movlt	r7, #1
 800a73c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800a740:	b152      	cbz	r2, 800a758 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x128>
 800a742:	eba3 030c 	sub.w	r3, r3, ip
 800a746:	f9b4 209c 	ldrsh.w	r2, [r4, #156]	; 0x9c
 800a74a:	b21b      	sxth	r3, r3
 800a74c:	2b00      	cmp	r3, #0
 800a74e:	bfb8      	it	lt
 800a750:	425b      	neglt	r3, r3
 800a752:	b21b      	sxth	r3, r3
 800a754:	429a      	cmp	r2, r3
 800a756:	db01      	blt.n	800a75c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x12c>
 800a758:	2f00      	cmp	r7, #0
 800a75a:	d03e      	beq.n	800a7da <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1aa>
 800a75c:	2701      	movs	r7, #1
 800a75e:	fa0f f881 	sxth.w	r8, r1
 800a762:	fa0f f98c 	sxth.w	r9, ip
 800a766:	f884 70a3 	strb.w	r7, [r4, #163]	; 0xa3
 800a76a:	b1a0      	cbz	r0, 800a796 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x166>
 800a76c:	f894 30b6 	ldrb.w	r3, [r4, #182]	; 0xb6
 800a770:	b98b      	cbnz	r3, 800a796 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x166>
 800a772:	4a41      	ldr	r2, [pc, #260]	; (800a878 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x248>)
 800a774:	a906      	add	r1, sp, #24
 800a776:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a77a:	9206      	str	r2, [sp, #24]
 800a77c:	2202      	movs	r2, #2
 800a77e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a782:	f88d 201c 	strb.w	r2, [sp, #28]
 800a786:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a78a:	6803      	ldr	r3, [r0, #0]
 800a78c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a78e:	4798      	blx	r3
 800a790:	2301      	movs	r3, #1
 800a792:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800a796:	f894 10a4 	ldrb.w	r1, [r4, #164]	; 0xa4
 800a79a:	b149      	cbz	r1, 800a7b0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800a79c:	eba5 0108 	sub.w	r1, r5, r8
 800a7a0:	b209      	sxth	r1, r1
 800a7a2:	b12f      	cbz	r7, 800a7b0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800a7a4:	2900      	cmp	r1, #0
 800a7a6:	dc40      	bgt.n	800a82a <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1fa>
 800a7a8:	bf14      	ite	ne
 800a7aa:	f04f 31ff 	movne.w	r1, #4294967295
 800a7ae:	2100      	moveq	r1, #0
 800a7b0:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800a7b4:	b14a      	cbz	r2, 800a7ca <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800a7b6:	eba6 0609 	sub.w	r6, r6, r9
 800a7ba:	b232      	sxth	r2, r6
 800a7bc:	b12f      	cbz	r7, 800a7ca <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800a7be:	2a00      	cmp	r2, #0
 800a7c0:	dc35      	bgt.n	800a82e <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1fe>
 800a7c2:	bf14      	ite	ne
 800a7c4:	f04f 32ff 	movne.w	r2, #4294967295
 800a7c8:	2200      	moveq	r2, #0
 800a7ca:	6823      	ldr	r3, [r4, #0]
 800a7cc:	4620      	mov	r0, r4
 800a7ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a7d2:	4798      	blx	r3
 800a7d4:	e024      	b.n	800a820 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800a7d6:	460b      	mov	r3, r1
 800a7d8:	e774      	b.n	800a6c4 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x94>
 800a7da:	b308      	cbz	r0, 800a820 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800a7dc:	f894 30b6 	ldrb.w	r3, [r4, #182]	; 0xb6
 800a7e0:	b9f3      	cbnz	r3, 800a820 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800a7e2:	ab0a      	add	r3, sp, #40	; 0x28
 800a7e4:	4620      	mov	r0, r4
 800a7e6:	4632      	mov	r2, r6
 800a7e8:	4629      	mov	r1, r5
 800a7ea:	f843 7d18 	str.w	r7, [r3, #-24]!
 800a7ee:	f7ff fb95 	bl	8009f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a7f2:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800a7f6:	9b04      	ldr	r3, [sp, #16]
 800a7f8:	4298      	cmp	r0, r3
 800a7fa:	d011      	beq.n	800a820 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800a7fc:	4b1e      	ldr	r3, [pc, #120]	; (800a878 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x248>)
 800a7fe:	a906      	add	r1, sp, #24
 800a800:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a804:	9306      	str	r3, [sp, #24]
 800a806:	2302      	movs	r3, #2
 800a808:	f8ad 7020 	strh.w	r7, [sp, #32]
 800a80c:	f88d 301c 	strb.w	r3, [sp, #28]
 800a810:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800a814:	6803      	ldr	r3, [r0, #0]
 800a816:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a818:	4798      	blx	r3
 800a81a:	2301      	movs	r3, #1
 800a81c:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800a820:	b00b      	add	sp, #44	; 0x2c
 800a822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a826:	2700      	movs	r7, #0
 800a828:	e79f      	b.n	800a76a <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x13a>
 800a82a:	2101      	movs	r1, #1
 800a82c:	e7c0      	b.n	800a7b0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800a82e:	2201      	movs	r2, #1
 800a830:	e7cb      	b.n	800a7ca <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800a832:	f1bc 0f00 	cmp.w	ip, #0
 800a836:	f47f af56 	bne.w	800a6e6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800a83a:	428b      	cmp	r3, r1
 800a83c:	f43f af53 	beq.w	800a6e6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800a840:	4602      	mov	r2, r0
 800a842:	f8df c038 	ldr.w	ip, [pc, #56]	; 800a87c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x24c>
 800a846:	f8ad 0020 	strh.w	r0, [sp, #32]
 800a84a:	f8cd c018 	str.w	ip, [sp, #24]
 800a84e:	f04f 0c00 	mov.w	ip, #0
 800a852:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800a856:	f8ad 101e 	strh.w	r1, [sp, #30]
 800a85a:	a906      	add	r1, sp, #24
 800a85c:	f88d c01c 	strb.w	ip, [sp, #28]
 800a860:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a864:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800a868:	6803      	ldr	r3, [r0, #0]
 800a86a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a86c:	4798      	blx	r3
 800a86e:	e73a      	b.n	800a6e6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800a870:	428b      	cmp	r3, r1
 800a872:	f43f af35 	beq.w	800a6e0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb0>
 800a876:	e7e4      	b.n	800a842 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x212>
 800a878:	0801c568 	.word	0x0801c568
 800a87c:	0801c57c 	.word	0x0801c57c

0800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800a880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a882:	4604      	mov	r4, r0
 800a884:	4608      	mov	r0, r1
 800a886:	460d      	mov	r5, r1
 800a888:	f7ff fc9d 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a88c:	b978      	cbnz	r0, 800a8ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800a88e:	4620      	mov	r0, r4
 800a890:	f7ff fc99 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a894:	f9b5 6000 	ldrsh.w	r6, [r5]
 800a898:	b150      	cbz	r0, 800a8b0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800a89a:	8026      	strh	r6, [r4, #0]
 800a89c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800a8a0:	8063      	strh	r3, [r4, #2]
 800a8a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800a8a6:	80a3      	strh	r3, [r4, #4]
 800a8a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a8ac:	80e3      	strh	r3, [r4, #6]
 800a8ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a8b0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800a8b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800a8b8:	42b1      	cmp	r1, r6
 800a8ba:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800a8be:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800a8c2:	460f      	mov	r7, r1
 800a8c4:	88ed      	ldrh	r5, [r5, #6]
 800a8c6:	bfa8      	it	ge
 800a8c8:	4637      	movge	r7, r6
 800a8ca:	4293      	cmp	r3, r2
 800a8cc:	4618      	mov	r0, r3
 800a8ce:	4466      	add	r6, ip
 800a8d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800a8d4:	bfa8      	it	ge
 800a8d6:	4610      	movge	r0, r2
 800a8d8:	442a      	add	r2, r5
 800a8da:	88e5      	ldrh	r5, [r4, #6]
 800a8dc:	4461      	add	r1, ip
 800a8de:	b236      	sxth	r6, r6
 800a8e0:	8027      	strh	r7, [r4, #0]
 800a8e2:	442b      	add	r3, r5
 800a8e4:	b209      	sxth	r1, r1
 800a8e6:	b212      	sxth	r2, r2
 800a8e8:	8060      	strh	r0, [r4, #2]
 800a8ea:	b21b      	sxth	r3, r3
 800a8ec:	428e      	cmp	r6, r1
 800a8ee:	bfac      	ite	ge
 800a8f0:	ebc7 0106 	rsbge	r1, r7, r6
 800a8f4:	ebc7 0101 	rsblt	r1, r7, r1
 800a8f8:	429a      	cmp	r2, r3
 800a8fa:	bfac      	ite	ge
 800a8fc:	ebc0 0202 	rsbge	r2, r0, r2
 800a900:	ebc0 0203 	rsblt	r2, r0, r3
 800a904:	80a1      	strh	r1, [r4, #4]
 800a906:	80e2      	strh	r2, [r4, #6]
 800a908:	e7d1      	b.n	800a8ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800a90a <_ZNK8touchgfx19ScrollableContainer16getContainedAreaEv>:
 800a90a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a90c:	4604      	mov	r4, r0
 800a90e:	2200      	movs	r2, #0
 800a910:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
 800a914:	f9b1 000a 	ldrsh.w	r0, [r1, #10]
 800a918:	680b      	ldr	r3, [r1, #0]
 800a91a:	8022      	strh	r2, [r4, #0]
 800a91c:	8062      	strh	r2, [r4, #2]
 800a91e:	80e0      	strh	r0, [r4, #6]
 800a920:	4668      	mov	r0, sp
 800a922:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a926:	80a5      	strh	r5, [r4, #4]
 800a928:	4798      	blx	r3
 800a92a:	4620      	mov	r0, r4
 800a92c:	4669      	mov	r1, sp
 800a92e:	f7ff ffa7 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800a932:	4620      	mov	r0, r4
 800a934:	b003      	add	sp, #12
 800a936:	bd30      	pop	{r4, r5, pc}

0800a938 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv>:
 800a938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a93a:	2300      	movs	r3, #0
 800a93c:	4605      	mov	r5, r0
 800a93e:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800a940:	f101 0738 	add.w	r7, r1, #56	; 0x38
 800a944:	f101 0664 	add.w	r6, r1, #100	; 0x64
 800a948:	8003      	strh	r3, [r0, #0]
 800a94a:	8043      	strh	r3, [r0, #2]
 800a94c:	8083      	strh	r3, [r0, #4]
 800a94e:	80c3      	strh	r3, [r0, #6]
 800a950:	b164      	cbz	r4, 800a96c <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x34>
 800a952:	42bc      	cmp	r4, r7
 800a954:	d008      	beq.n	800a968 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800a956:	42b4      	cmp	r4, r6
 800a958:	d006      	beq.n	800a968 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800a95a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a95e:	b11b      	cbz	r3, 800a968 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800a960:	1d21      	adds	r1, r4, #4
 800a962:	4628      	mov	r0, r5
 800a964:	f7ff ff8c 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800a968:	69a4      	ldr	r4, [r4, #24]
 800a96a:	e7f1      	b.n	800a950 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x18>
 800a96c:	4628      	mov	r0, r5
 800a96e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a970 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a970:	b570      	push	{r4, r5, r6, lr}
 800a972:	6803      	ldr	r3, [r0, #0]
 800a974:	4604      	mov	r4, r0
 800a976:	4615      	mov	r5, r2
 800a978:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a97a:	4798      	blx	r3
 800a97c:	6823      	ldr	r3, [r4, #0]
 800a97e:	4629      	mov	r1, r5
 800a980:	4620      	mov	r0, r4
 800a982:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a984:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a988:	4718      	bx	r3
	...

0800a98c <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>:
 800a98c:	b530      	push	{r4, r5, lr}
 800a98e:	2500      	movs	r5, #0
 800a990:	6283      	str	r3, [r0, #40]	; 0x28
 800a992:	8101      	strh	r1, [r0, #8]
 800a994:	8085      	strh	r5, [r0, #4]
 800a996:	80c5      	strh	r5, [r0, #6]
 800a998:	8185      	strh	r5, [r0, #12]
 800a99a:	81c5      	strh	r5, [r0, #14]
 800a99c:	8205      	strh	r5, [r0, #16]
 800a99e:	8245      	strh	r5, [r0, #18]
 800a9a0:	61c5      	str	r5, [r0, #28]
 800a9a2:	8405      	strh	r5, [r0, #32]
 800a9a4:	8445      	strh	r5, [r0, #34]	; 0x22
 800a9a6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 800a9aa:	8142      	strh	r2, [r0, #10]
 800a9ac:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800a9b0:	2501      	movs	r5, #1
 800a9b2:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800a9b6:	4d03      	ldr	r5, [pc, #12]	; (800a9c4 <_ZN8touchgfx3BoxC1EttNS_9colortypeEh+0x38>)
 800a9b8:	6005      	str	r5, [r0, #0]
 800a9ba:	f89d 500c 	ldrb.w	r5, [sp, #12]
 800a9be:	f880 5026 	strb.w	r5, [r0, #38]	; 0x26
 800a9c2:	bd30      	pop	{r4, r5, pc}
 800a9c4:	0801c75c 	.word	0x0801c75c

0800a9c8 <_ZN8touchgfx19ScrollableContainerC1Ev>:
 800a9c8:	4b2f      	ldr	r3, [pc, #188]	; (800aa88 <_ZN8touchgfx19ScrollableContainerC1Ev+0xc0>)
 800a9ca:	2278      	movs	r2, #120	; 0x78
 800a9cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a9ce:	6003      	str	r3, [r0, #0]
 800a9d0:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a9d4:	2500      	movs	r5, #0
 800a9d6:	2601      	movs	r6, #1
 800a9d8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800a9da:	2111      	movs	r1, #17
 800a9dc:	f04f 33ff 	mov.w	r3, #4294967295
 800a9e0:	4604      	mov	r4, r0
 800a9e2:	8085      	strh	r5, [r0, #4]
 800a9e4:	80c5      	strh	r5, [r0, #6]
 800a9e6:	8105      	strh	r5, [r0, #8]
 800a9e8:	8145      	strh	r5, [r0, #10]
 800a9ea:	8185      	strh	r5, [r0, #12]
 800a9ec:	81c5      	strh	r5, [r0, #14]
 800a9ee:	8205      	strh	r5, [r0, #16]
 800a9f0:	8245      	strh	r5, [r0, #18]
 800a9f2:	61c5      	str	r5, [r0, #28]
 800a9f4:	8405      	strh	r5, [r0, #32]
 800a9f6:	8445      	strh	r5, [r0, #34]	; 0x22
 800a9f8:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 800a9fc:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
 800aa00:	6285      	str	r5, [r0, #40]	; 0x28
 800aa02:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800aa06:	6303      	str	r3, [r0, #48]	; 0x30
 800aa08:	8681      	strh	r1, [r0, #52]	; 0x34
 800aa0a:	4629      	mov	r1, r5
 800aa0c:	f880 5036 	strb.w	r5, [r0, #54]	; 0x36
 800aa10:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800aa14:	9200      	str	r2, [sp, #0]
 800aa16:	3038      	adds	r0, #56	; 0x38
 800aa18:	462a      	mov	r2, r5
 800aa1a:	f7ff ffb7 	bl	800a98c <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>
 800aa1e:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
 800aa22:	462a      	mov	r2, r5
 800aa24:	4629      	mov	r1, r5
 800aa26:	9300      	str	r3, [sp, #0]
 800aa28:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800aa2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aa2e:	f7ff ffad 	bl	800a98c <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>
 800aa32:	2305      	movs	r3, #5
 800aa34:	4620      	mov	r0, r4
 800aa36:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 800aa3a:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 800aa3e:	4b13      	ldr	r3, [pc, #76]	; (800aa8c <_ZN8touchgfx19ScrollableContainerC1Ev+0xc4>)
 800aa40:	f8a4 50a0 	strh.w	r5, [r4, #160]	; 0xa0
 800aa44:	f884 50a2 	strb.w	r5, [r4, #162]	; 0xa2
 800aa48:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800aa4c:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 800aa50:	f884 60a5 	strb.w	r6, [r4, #165]	; 0xa5
 800aa54:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 800aa58:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800aa5c:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 800aa60:	f8a4 50b2 	strh.w	r5, [r4, #178]	; 0xb2
 800aa64:	f8a4 50b4 	strh.w	r5, [r4, #180]	; 0xb4
 800aa68:	f884 50b6 	strb.w	r5, [r4, #182]	; 0xb6
 800aa6c:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800aa70:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
 800aa74:	f884 5089 	strb.w	r5, [r4, #137]	; 0x89
 800aa78:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800aa7c:	e9c4 5524 	strd	r5, r5, [r4, #144]	; 0x90
 800aa80:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 800aa84:	b002      	add	sp, #8
 800aa86:	bd70      	pop	{r4, r5, r6, pc}
 800aa88:	0801c590 	.word	0x0801c590
 800aa8c:	00010007 	.word	0x00010007

0800aa90 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv>:
 800aa90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aa92:	2600      	movs	r6, #0
 800aa94:	f891 30a4 	ldrb.w	r3, [r1, #164]	; 0xa4
 800aa98:	4605      	mov	r5, r0
 800aa9a:	460c      	mov	r4, r1
 800aa9c:	8006      	strh	r6, [r0, #0]
 800aa9e:	8046      	strh	r6, [r0, #2]
 800aaa0:	8086      	strh	r6, [r0, #4]
 800aaa2:	80c6      	strh	r6, [r0, #6]
 800aaa4:	2b00      	cmp	r3, #0
 800aaa6:	d041      	beq.n	800ab2c <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x9c>
 800aaa8:	680b      	ldr	r3, [r1, #0]
 800aaaa:	4668      	mov	r0, sp
 800aaac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800aab0:	4798      	blx	r3
 800aab2:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800aab6:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	d039      	beq.n	800ab32 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0xa2>
 800aabe:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800aac2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800aac6:	429a      	cmp	r2, r3
 800aac8:	dd05      	ble.n	800aad6 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x46>
 800aaca:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800aace:	f894 602d 	ldrb.w	r6, [r4, #45]	; 0x2d
 800aad2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800aad6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800aada:	42bb      	cmp	r3, r7
 800aadc:	da26      	bge.n	800ab2c <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x9c>
 800aade:	f9bd 0000 	ldrsh.w	r0, [sp]
 800aae2:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800aae6:	4242      	negs	r2, r0
 800aae8:	4438      	add	r0, r7
 800aaea:	eb06 0641 	add.w	r6, r6, r1, lsl #1
 800aaee:	b200      	sxth	r0, r0
 800aaf0:	435a      	muls	r2, r3
 800aaf2:	1b9e      	subs	r6, r3, r6
 800aaf4:	1ac0      	subs	r0, r0, r3
 800aaf6:	4343      	muls	r3, r0
 800aaf8:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 800aafc:	fb92 f2f7 	sdiv	r2, r2, r7
 800ab00:	fb93 f3f7 	sdiv	r3, r3, r7
 800ab04:	4413      	add	r3, r2
 800ab06:	0047      	lsls	r7, r0, #1
 800ab08:	1af3      	subs	r3, r6, r3
 800ab0a:	429f      	cmp	r7, r3
 800ab0c:	dd05      	ble.n	800ab1a <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x8a>
 800ab0e:	1afb      	subs	r3, r7, r3
 800ab10:	4353      	muls	r3, r2
 800ab12:	fb93 f3f6 	sdiv	r3, r3, r6
 800ab16:	1ad2      	subs	r2, r2, r3
 800ab18:	463b      	mov	r3, r7
 800ab1a:	b289      	uxth	r1, r1
 800ab1c:	8964      	ldrh	r4, [r4, #10]
 800ab1e:	80ab      	strh	r3, [r5, #4]
 800ab20:	180e      	adds	r6, r1, r0
 800ab22:	4411      	add	r1, r2
 800ab24:	80e8      	strh	r0, [r5, #6]
 800ab26:	1ba4      	subs	r4, r4, r6
 800ab28:	8029      	strh	r1, [r5, #0]
 800ab2a:	806c      	strh	r4, [r5, #2]
 800ab2c:	4628      	mov	r0, r5
 800ab2e:	b003      	add	sp, #12
 800ab30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab32:	461e      	mov	r6, r3
 800ab34:	e7cf      	b.n	800aad6 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x46>

0800ab36 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv>:
 800ab36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab38:	2600      	movs	r6, #0
 800ab3a:	f891 30a5 	ldrb.w	r3, [r1, #165]	; 0xa5
 800ab3e:	4605      	mov	r5, r0
 800ab40:	460c      	mov	r4, r1
 800ab42:	8006      	strh	r6, [r0, #0]
 800ab44:	8046      	strh	r6, [r0, #2]
 800ab46:	8086      	strh	r6, [r0, #4]
 800ab48:	80c6      	strh	r6, [r0, #6]
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	d041      	beq.n	800abd2 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x9c>
 800ab4e:	680b      	ldr	r3, [r1, #0]
 800ab50:	4668      	mov	r0, sp
 800ab52:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ab56:	4798      	blx	r3
 800ab58:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800ab5c:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	d039      	beq.n	800abd8 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0xa2>
 800ab64:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800ab68:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ab6c:	429a      	cmp	r2, r3
 800ab6e:	dd05      	ble.n	800ab7c <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x46>
 800ab70:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ab74:	f894 602d 	ldrb.w	r6, [r4, #45]	; 0x2d
 800ab78:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800ab7c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ab80:	42bb      	cmp	r3, r7
 800ab82:	da26      	bge.n	800abd2 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x9c>
 800ab84:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 800ab88:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800ab8c:	4242      	negs	r2, r0
 800ab8e:	4438      	add	r0, r7
 800ab90:	eb06 0641 	add.w	r6, r6, r1, lsl #1
 800ab94:	b200      	sxth	r0, r0
 800ab96:	435a      	muls	r2, r3
 800ab98:	1b9e      	subs	r6, r3, r6
 800ab9a:	1ac0      	subs	r0, r0, r3
 800ab9c:	4343      	muls	r3, r0
 800ab9e:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 800aba2:	fb92 f2f7 	sdiv	r2, r2, r7
 800aba6:	fb93 f3f7 	sdiv	r3, r3, r7
 800abaa:	4413      	add	r3, r2
 800abac:	0047      	lsls	r7, r0, #1
 800abae:	1af3      	subs	r3, r6, r3
 800abb0:	429f      	cmp	r7, r3
 800abb2:	dd05      	ble.n	800abc0 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x8a>
 800abb4:	1afb      	subs	r3, r7, r3
 800abb6:	4353      	muls	r3, r2
 800abb8:	fb93 f3f6 	sdiv	r3, r3, r6
 800abbc:	1ad2      	subs	r2, r2, r3
 800abbe:	463b      	mov	r3, r7
 800abc0:	b289      	uxth	r1, r1
 800abc2:	8924      	ldrh	r4, [r4, #8]
 800abc4:	80a8      	strh	r0, [r5, #4]
 800abc6:	180e      	adds	r6, r1, r0
 800abc8:	4411      	add	r1, r2
 800abca:	80eb      	strh	r3, [r5, #6]
 800abcc:	1ba4      	subs	r4, r4, r6
 800abce:	8069      	strh	r1, [r5, #2]
 800abd0:	802c      	strh	r4, [r5, #0]
 800abd2:	4628      	mov	r0, r5
 800abd4:	b003      	add	sp, #12
 800abd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abd8:	461e      	mov	r6, r3
 800abda:	e7cf      	b.n	800ab7c <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x46>

0800abdc <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_>:
 800abdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abe0:	4617      	mov	r7, r2
 800abe2:	2200      	movs	r2, #0
 800abe4:	4604      	mov	r4, r0
 800abe6:	460e      	mov	r6, r1
 800abe8:	8002      	strh	r2, [r0, #0]
 800abea:	4698      	mov	r8, r3
 800abec:	8042      	strh	r2, [r0, #2]
 800abee:	8082      	strh	r2, [r0, #4]
 800abf0:	80c2      	strh	r2, [r0, #6]
 800abf2:	4638      	mov	r0, r7
 800abf4:	f7ff fae7 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abf8:	4605      	mov	r5, r0
 800abfa:	b998      	cbnz	r0, 800ac24 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_+0x48>
 800abfc:	4640      	mov	r0, r8
 800abfe:	f7ff fae2 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac02:	f896 202c 	ldrb.w	r2, [r6, #44]	; 0x2c
 800ac06:	f896 102d 	ldrb.w	r1, [r6, #45]	; 0x2d
 800ac0a:	b908      	cbnz	r0, 800ac10 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_+0x34>
 800ac0c:	eb01 0542 	add.w	r5, r1, r2, lsl #1
 800ac10:	8933      	ldrh	r3, [r6, #8]
 800ac12:	f9b7 7002 	ldrsh.w	r7, [r7, #2]
 800ac16:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ac1a:	8022      	strh	r2, [r4, #0]
 800ac1c:	8067      	strh	r7, [r4, #2]
 800ac1e:	1b58      	subs	r0, r3, r5
 800ac20:	80e1      	strh	r1, [r4, #6]
 800ac22:	80a0      	strh	r0, [r4, #4]
 800ac24:	4620      	mov	r0, r4
 800ac26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac2a <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_>:
 800ac2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac2e:	4604      	mov	r4, r0
 800ac30:	2000      	movs	r0, #0
 800ac32:	460f      	mov	r7, r1
 800ac34:	4616      	mov	r6, r2
 800ac36:	8020      	strh	r0, [r4, #0]
 800ac38:	4698      	mov	r8, r3
 800ac3a:	8060      	strh	r0, [r4, #2]
 800ac3c:	80a0      	strh	r0, [r4, #4]
 800ac3e:	80e0      	strh	r0, [r4, #6]
 800ac40:	4618      	mov	r0, r3
 800ac42:	f7ff fac0 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac46:	4605      	mov	r5, r0
 800ac48:	b998      	cbnz	r0, 800ac72 <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_+0x48>
 800ac4a:	4630      	mov	r0, r6
 800ac4c:	f7ff fabb 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac50:	f897 602c 	ldrb.w	r6, [r7, #44]	; 0x2c
 800ac54:	f897 102d 	ldrb.w	r1, [r7, #45]	; 0x2d
 800ac58:	b908      	cbnz	r0, 800ac5e <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_+0x34>
 800ac5a:	eb01 0546 	add.w	r5, r1, r6, lsl #1
 800ac5e:	897a      	ldrh	r2, [r7, #10]
 800ac60:	f8b8 3000 	ldrh.w	r3, [r8]
 800ac64:	eba2 0246 	sub.w	r2, r2, r6, lsl #1
 800ac68:	8066      	strh	r6, [r4, #2]
 800ac6a:	8023      	strh	r3, [r4, #0]
 800ac6c:	1b50      	subs	r0, r2, r5
 800ac6e:	80a1      	strh	r1, [r4, #4]
 800ac70:	80e0      	strh	r0, [r4, #6]
 800ac72:	4620      	mov	r0, r4
 800ac74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac78 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>:
 800ac78:	b570      	push	{r4, r5, r6, lr}
 800ac7a:	b088      	sub	sp, #32
 800ac7c:	4604      	mov	r4, r0
 800ac7e:	4601      	mov	r1, r0
 800ac80:	4668      	mov	r0, sp
 800ac82:	f104 0638 	add.w	r6, r4, #56	; 0x38
 800ac86:	f7ff ff03 	bl	800aa90 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv>
 800ac8a:	4621      	mov	r1, r4
 800ac8c:	a802      	add	r0, sp, #8
 800ac8e:	f7ff ff52 	bl	800ab36 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv>
 800ac92:	ab02      	add	r3, sp, #8
 800ac94:	466a      	mov	r2, sp
 800ac96:	4621      	mov	r1, r4
 800ac98:	a804      	add	r0, sp, #16
 800ac9a:	f7ff ff9f 	bl	800abdc <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_>
 800ac9e:	ab02      	add	r3, sp, #8
 800aca0:	466a      	mov	r2, sp
 800aca2:	4621      	mov	r1, r4
 800aca4:	a806      	add	r0, sp, #24
 800aca6:	f7ff ffc0 	bl	800ac2a <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_>
 800acaa:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800acae:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800acb2:	429a      	cmp	r2, r3
 800acb4:	da02      	bge.n	800acbc <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0x44>
 800acb6:	4630      	mov	r0, r6
 800acb8:	f004 fba3 	bl	800f402 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acbc:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800acc0:	f104 0564 	add.w	r5, r4, #100	; 0x64
 800acc4:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	; 0x68
 800acc8:	429a      	cmp	r2, r3
 800acca:	da02      	bge.n	800acd2 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0x5a>
 800accc:	4628      	mov	r0, r5
 800acce:	f004 fb98 	bl	800f402 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acd2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800acd6:	f8bd 0000 	ldrh.w	r0, [sp]
 800acda:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 800acde:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800ace2:	87a0      	strh	r0, [r4, #60]	; 0x3c
 800ace4:	4630      	mov	r0, r6
 800ace6:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800ace8:	f7ff fe42 	bl	800a970 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800acec:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800acf0:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 800acf4:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800acf8:	f8a4 0068 	strh.w	r0, [r4, #104]	; 0x68
 800acfc:	4628      	mov	r0, r5
 800acfe:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
 800ad02:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800ad06:	f7ff fe33 	bl	800a970 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ad0a:	8922      	ldrh	r2, [r4, #8]
 800ad0c:	2300      	movs	r3, #0
 800ad0e:	a804      	add	r0, sp, #16
 800ad10:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ad14:	8962      	ldrh	r2, [r4, #10]
 800ad16:	f8ad 3010 	strh.w	r3, [sp, #16]
 800ad1a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ad1e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad22:	f7ff fa50 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad26:	b920      	cbnz	r0, 800ad32 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0xba>
 800ad28:	6823      	ldr	r3, [r4, #0]
 800ad2a:	a904      	add	r1, sp, #16
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	691b      	ldr	r3, [r3, #16]
 800ad30:	4798      	blx	r3
 800ad32:	a806      	add	r0, sp, #24
 800ad34:	f7ff fa47 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad38:	b920      	cbnz	r0, 800ad44 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0xcc>
 800ad3a:	6823      	ldr	r3, [r4, #0]
 800ad3c:	a906      	add	r1, sp, #24
 800ad3e:	4620      	mov	r0, r4
 800ad40:	691b      	ldr	r3, [r3, #16]
 800ad42:	4798      	blx	r3
 800ad44:	b008      	add	sp, #32
 800ad46:	bd70      	pop	{r4, r5, r6, pc}

0800ad48 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE>:
 800ad48:	b570      	push	{r4, r5, r6, lr}
 800ad4a:	790b      	ldrb	r3, [r1, #4]
 800ad4c:	b08a      	sub	sp, #40	; 0x28
 800ad4e:	4604      	mov	r4, r0
 800ad50:	460d      	mov	r5, r1
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	d17f      	bne.n	800ae56 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x10e>
 800ad56:	2201      	movs	r2, #1
 800ad58:	f880 20a2 	strb.w	r2, [r0, #162]	; 0xa2
 800ad5c:	f890 20b0 	ldrb.w	r2, [r0, #176]	; 0xb0
 800ad60:	b14a      	cbz	r2, 800ad76 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x2e>
 800ad62:	f880 30b0 	strb.w	r3, [r0, #176]	; 0xb0
 800ad66:	f8a0 30ae 	strh.w	r3, [r0, #174]	; 0xae
 800ad6a:	f003 fa87 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800ad6e:	4621      	mov	r1, r4
 800ad70:	3004      	adds	r0, #4
 800ad72:	f003 faa8 	bl	800e2c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ad76:	4623      	mov	r3, r4
 800ad78:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ad7c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800ad80:	f853 0bb4 	ldr.w	r0, [r3], #180
 800ad84:	9301      	str	r3, [sp, #4]
 800ad86:	f104 03b2 	add.w	r3, r4, #178	; 0xb2
 800ad8a:	9300      	str	r3, [sp, #0]
 800ad8c:	f104 0390 	add.w	r3, r4, #144	; 0x90
 800ad90:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800ad92:	4620      	mov	r0, r4
 800ad94:	47b0      	blx	r6
 800ad96:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad9a:	42a3      	cmp	r3, r4
 800ad9c:	bf04      	itt	eq
 800ad9e:	2300      	moveq	r3, #0
 800ada0:	f8c4 3090 	streq.w	r3, [r4, #144]	; 0x90
 800ada4:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 800ada8:	2900      	cmp	r1, #0
 800adaa:	d03a      	beq.n	800ae22 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xda>
 800adac:	2600      	movs	r6, #0
 800adae:	a803      	add	r0, sp, #12
 800adb0:	f884 60b6 	strb.w	r6, [r4, #182]	; 0xb6
 800adb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800adb8:	f8a4 309e 	strh.w	r3, [r4, #158]	; 0x9e
 800adbc:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800adc0:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
 800adc4:	f004 fbb8 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800adc8:	4621      	mov	r1, r4
 800adca:	a805      	add	r0, sp, #20
 800adcc:	f004 fbb4 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800add0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800add4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800add8:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800addc:	1ad2      	subs	r2, r2, r3
 800adde:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800ade2:	7929      	ldrb	r1, [r5, #4]
 800ade4:	441a      	add	r2, r3
 800ade6:	88eb      	ldrh	r3, [r5, #6]
 800ade8:	f88d 1020 	strb.w	r1, [sp, #32]
 800adec:	a907      	add	r1, sp, #28
 800adee:	441a      	add	r2, r3
 800adf0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800adf4:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800adf8:	1a1b      	subs	r3, r3, r0
 800adfa:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 800adfe:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 800ae02:	4403      	add	r3, r0
 800ae04:	8928      	ldrh	r0, [r5, #8]
 800ae06:	4403      	add	r3, r0
 800ae08:	482f      	ldr	r0, [pc, #188]	; (800aec8 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x180>)
 800ae0a:	9007      	str	r0, [sp, #28]
 800ae0c:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800ae10:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ae14:	6803      	ldr	r3, [r0, #0]
 800ae16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae18:	4798      	blx	r3
 800ae1a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae1e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800ae22:	2300      	movs	r3, #0
 800ae24:	f894 20a2 	ldrb.w	r2, [r4, #162]	; 0xa2
 800ae28:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800ae2c:	b112      	cbz	r2, 800ae34 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xec>
 800ae2e:	f894 30a6 	ldrb.w	r3, [r4, #166]	; 0xa6
 800ae32:	b90b      	cbnz	r3, 800ae38 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xf0>
 800ae34:	f894 30a7 	ldrb.w	r3, [r4, #167]	; 0xa7
 800ae38:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 800ae3c:	b112      	cbz	r2, 800ae44 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xfc>
 800ae3e:	f894 30a6 	ldrb.w	r3, [r4, #166]	; 0xa6
 800ae42:	b90b      	cbnz	r3, 800ae48 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x100>
 800ae44:	f894 30a7 	ldrb.w	r3, [r4, #167]	; 0xa7
 800ae48:	f884 3089 	strb.w	r3, [r4, #137]	; 0x89
 800ae4c:	4620      	mov	r0, r4
 800ae4e:	f7ff ff13 	bl	800ac78 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 800ae52:	b00a      	add	sp, #40	; 0x28
 800ae54:	bd70      	pop	{r4, r5, r6, pc}
 800ae56:	2b02      	cmp	r3, #2
 800ae58:	d0fb      	beq.n	800ae52 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x10a>
 800ae5a:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
 800ae5e:	b361      	cbz	r1, 800aeba <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x172>
 800ae60:	a803      	add	r0, sp, #12
 800ae62:	f004 fb69 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae66:	4621      	mov	r1, r4
 800ae68:	a805      	add	r0, sp, #20
 800ae6a:	f004 fb65 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae6e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800ae72:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ae76:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800ae7a:	1ad2      	subs	r2, r2, r3
 800ae7c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800ae80:	7929      	ldrb	r1, [r5, #4]
 800ae82:	441a      	add	r2, r3
 800ae84:	88eb      	ldrh	r3, [r5, #6]
 800ae86:	f88d 1020 	strb.w	r1, [sp, #32]
 800ae8a:	a907      	add	r1, sp, #28
 800ae8c:	441a      	add	r2, r3
 800ae8e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800ae92:	1a1b      	subs	r3, r3, r0
 800ae94:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 800ae98:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 800ae9c:	4403      	add	r3, r0
 800ae9e:	8928      	ldrh	r0, [r5, #8]
 800aea0:	4403      	add	r3, r0
 800aea2:	4809      	ldr	r0, [pc, #36]	; (800aec8 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x180>)
 800aea4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800aea8:	2300      	movs	r3, #0
 800aeaa:	9007      	str	r0, [sp, #28]
 800aeac:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800aeb0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800aeb4:	6803      	ldr	r3, [r0, #0]
 800aeb6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800aeb8:	4798      	blx	r3
 800aeba:	2300      	movs	r3, #0
 800aebc:	e9c4 3324 	strd	r3, r3, [r4, #144]	; 0x90
 800aec0:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800aec4:	e7ad      	b.n	800ae22 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xda>
 800aec6:	bf00      	nop
 800aec8:	0801c568 	.word	0x0801c568

0800aecc <_ZN8touchgfx19ScrollableContainer8doScrollEss>:
 800aecc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aece:	4606      	mov	r6, r0
 800aed0:	4615      	mov	r5, r2
 800aed2:	460c      	mov	r4, r1
 800aed4:	b919      	cbnz	r1, 800aede <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x12>
 800aed6:	b912      	cbnz	r2, 800aede <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x12>
 800aed8:	2000      	movs	r0, #0
 800aeda:	b003      	add	sp, #12
 800aedc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aede:	6833      	ldr	r3, [r6, #0]
 800aee0:	4631      	mov	r1, r6
 800aee2:	4668      	mov	r0, sp
 800aee4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800aee8:	4798      	blx	r3
 800aeea:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 800aeee:	f9b6 0008 	ldrsh.w	r0, [r6, #8]
 800aef2:	f9bd 2000 	ldrsh.w	r2, [sp]
 800aef6:	4288      	cmp	r0, r1
 800aef8:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800aefc:	da2c      	bge.n	800af58 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x8c>
 800aefe:	2c00      	cmp	r4, #0
 800af00:	dd20      	ble.n	800af44 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x78>
 800af02:	1913      	adds	r3, r2, r4
 800af04:	2b00      	cmp	r3, #0
 800af06:	dd01      	ble.n	800af0c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 800af08:	4252      	negs	r2, r2
 800af0a:	b214      	sxth	r4, r2
 800af0c:	f9b6 200a 	ldrsh.w	r2, [r6, #10]
 800af10:	4297      	cmp	r7, r2
 800af12:	dd2c      	ble.n	800af6e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xa2>
 800af14:	2d00      	cmp	r5, #0
 800af16:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800af1a:	dd1f      	ble.n	800af5c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x90>
 800af1c:	195a      	adds	r2, r3, r5
 800af1e:	2a00      	cmp	r2, #0
 800af20:	dd04      	ble.n	800af2c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 800af22:	425b      	negs	r3, r3
 800af24:	b21d      	sxth	r5, r3
 800af26:	b90c      	cbnz	r4, 800af2c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 800af28:	2d00      	cmp	r5, #0
 800af2a:	d0d5      	beq.n	800aed8 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xc>
 800af2c:	6833      	ldr	r3, [r6, #0]
 800af2e:	462a      	mov	r2, r5
 800af30:	4621      	mov	r1, r4
 800af32:	4630      	mov	r0, r6
 800af34:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af38:	4798      	blx	r3
 800af3a:	4630      	mov	r0, r6
 800af3c:	f7ff fe9c 	bl	800ac78 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 800af40:	2001      	movs	r0, #1
 800af42:	e7ca      	b.n	800aeda <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xe>
 800af44:	d0e2      	beq.n	800af0c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 800af46:	440a      	add	r2, r1
 800af48:	b292      	uxth	r2, r2
 800af4a:	fa04 f382 	sxtah	r3, r4, r2
 800af4e:	4283      	cmp	r3, r0
 800af50:	dadc      	bge.n	800af0c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 800af52:	1a84      	subs	r4, r0, r2
 800af54:	b224      	sxth	r4, r4
 800af56:	e7d9      	b.n	800af0c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 800af58:	2400      	movs	r4, #0
 800af5a:	e7d7      	b.n	800af0c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 800af5c:	d007      	beq.n	800af6e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xa2>
 800af5e:	443b      	add	r3, r7
 800af60:	b29b      	uxth	r3, r3
 800af62:	fa05 f183 	sxtah	r1, r5, r3
 800af66:	4291      	cmp	r1, r2
 800af68:	dae0      	bge.n	800af2c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 800af6a:	1ad3      	subs	r3, r2, r3
 800af6c:	e7da      	b.n	800af24 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x58>
 800af6e:	2c00      	cmp	r4, #0
 800af70:	d0b2      	beq.n	800aed8 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xc>
 800af72:	2500      	movs	r5, #0
 800af74:	e7da      	b.n	800af2c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>

0800af76 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv>:
 800af76:	b513      	push	{r0, r1, r4, lr}
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	4601      	mov	r1, r0
 800af7c:	4604      	mov	r4, r0
 800af7e:	4668      	mov	r0, sp
 800af80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800af84:	4798      	blx	r3
 800af86:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 800af8a:	f9bd 1000 	ldrsh.w	r1, [sp]
 800af8e:	2800      	cmp	r0, #0
 800af90:	dd20      	ble.n	800afd4 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x5e>
 800af92:	4602      	mov	r2, r0
 800af94:	2900      	cmp	r1, #0
 800af96:	dc0e      	bgt.n	800afb6 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x40>
 800af98:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800af9c:	f9b4 0008 	ldrsh.w	r0, [r4, #8]
 800afa0:	440b      	add	r3, r1
 800afa2:	b21b      	sxth	r3, r3
 800afa4:	4298      	cmp	r0, r3
 800afa6:	dd04      	ble.n	800afb2 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x3c>
 800afa8:	1a1b      	subs	r3, r3, r0
 800afaa:	4299      	cmp	r1, r3
 800afac:	bfb8      	it	lt
 800afae:	4619      	movlt	r1, r3
 800afb0:	b909      	cbnz	r1, 800afb6 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x40>
 800afb2:	b1f2      	cbz	r2, 800aff2 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x7c>
 800afb4:	2100      	movs	r1, #0
 800afb6:	6823      	ldr	r3, [r4, #0]
 800afb8:	4252      	negs	r2, r2
 800afba:	4249      	negs	r1, r1
 800afbc:	4620      	mov	r0, r4
 800afbe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afc2:	b212      	sxth	r2, r2
 800afc4:	b209      	sxth	r1, r1
 800afc6:	4798      	blx	r3
 800afc8:	4620      	mov	r0, r4
 800afca:	b002      	add	sp, #8
 800afcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afd0:	f7ff be52 	b.w	800ac78 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 800afd4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800afd8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800afdc:	4403      	add	r3, r0
 800afde:	b21b      	sxth	r3, r3
 800afe0:	429a      	cmp	r2, r3
 800afe2:	dd04      	ble.n	800afee <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x78>
 800afe4:	1a9a      	subs	r2, r3, r2
 800afe6:	4282      	cmp	r2, r0
 800afe8:	bfb8      	it	lt
 800afea:	4602      	movlt	r2, r0
 800afec:	e7d2      	b.n	800af94 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x1e>
 800afee:	2200      	movs	r2, #0
 800aff0:	e7d0      	b.n	800af94 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x1e>
 800aff2:	b002      	add	sp, #8
 800aff4:	bd10      	pop	{r4, pc}

0800aff6 <_ZN8touchgfx19ScrollableContainer18setScrollbarsColorENS_9colortypeE>:
 800aff6:	6301      	str	r1, [r0, #48]	; 0x30
 800aff8:	6601      	str	r1, [r0, #96]	; 0x60
 800affa:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800affe:	4770      	bx	lr

0800b000 <_ZN8touchgfx19ScrollableContainer18setScrollbarsAlphaEh>:
 800b000:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 800b004:	f880 105e 	strb.w	r1, [r0, #94]	; 0x5e
 800b008:	f880 108a 	strb.w	r1, [r0, #138]	; 0x8a
 800b00c:	4770      	bx	lr

0800b00e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b00e:	6803      	ldr	r3, [r0, #0]
 800b010:	b513      	push	{r0, r1, r4, lr}
 800b012:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b016:	2300      	movs	r3, #0
 800b018:	e9cd 3300 	strd	r3, r3, [sp]
 800b01c:	466b      	mov	r3, sp
 800b01e:	47a0      	blx	r4
 800b020:	b002      	add	sp, #8
 800b022:	bd10      	pop	{r4, pc}

0800b024 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b024:	2301      	movs	r3, #1
 800b026:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b02a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800b02e:	4770      	bx	lr

0800b030 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b030:	2301      	movs	r3, #1
 800b032:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b036:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800b03a:	4770      	bx	lr

0800b03c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b03c:	6843      	ldr	r3, [r0, #4]
 800b03e:	2201      	movs	r2, #1
 800b040:	725a      	strb	r2, [r3, #9]
 800b042:	6840      	ldr	r0, [r0, #4]
 800b044:	6803      	ldr	r3, [r0, #0]
 800b046:	691b      	ldr	r3, [r3, #16]
 800b048:	4718      	bx	r3

0800b04a <_ZN8touchgfx3HAL8flushDMAEv>:
 800b04a:	6840      	ldr	r0, [r0, #4]
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	689b      	ldr	r3, [r3, #8]
 800b050:	4718      	bx	r3

0800b052 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b052:	b530      	push	{r4, r5, lr}
 800b054:	b08b      	sub	sp, #44	; 0x2c
 800b056:	6804      	ldr	r4, [r0, #0]
 800b058:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b05c:	9509      	str	r5, [sp, #36]	; 0x24
 800b05e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b062:	9508      	str	r5, [sp, #32]
 800b064:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b068:	9507      	str	r5, [sp, #28]
 800b06a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b06e:	9506      	str	r5, [sp, #24]
 800b070:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b074:	9505      	str	r5, [sp, #20]
 800b076:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b07a:	9504      	str	r5, [sp, #16]
 800b07c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b080:	9503      	str	r5, [sp, #12]
 800b082:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b086:	9502      	str	r5, [sp, #8]
 800b088:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b08c:	e9cd 3500 	strd	r3, r5, [sp]
 800b090:	4613      	mov	r3, r2
 800b092:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b094:	2200      	movs	r2, #0
 800b096:	47a0      	blx	r4
 800b098:	b00b      	add	sp, #44	; 0x2c
 800b09a:	bd30      	pop	{r4, r5, pc}

0800b09c <_ZN8touchgfx3HAL10beginFrameEv>:
 800b09c:	4b04      	ldr	r3, [pc, #16]	; (800b0b0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b09e:	781b      	ldrb	r3, [r3, #0]
 800b0a0:	b123      	cbz	r3, 800b0ac <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b0a2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800b0a6:	f080 0001 	eor.w	r0, r0, #1
 800b0aa:	4770      	bx	lr
 800b0ac:	2001      	movs	r0, #1
 800b0ae:	4770      	bx	lr
 800b0b0:	24006bd6 	.word	0x24006bd6

0800b0b4 <_ZN8touchgfx3HAL8endFrameEv>:
 800b0b4:	b510      	push	{r4, lr}
 800b0b6:	4604      	mov	r4, r0
 800b0b8:	6840      	ldr	r0, [r0, #4]
 800b0ba:	6803      	ldr	r3, [r0, #0]
 800b0bc:	689b      	ldr	r3, [r3, #8]
 800b0be:	4798      	blx	r3
 800b0c0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800b0c4:	b113      	cbz	r3, 800b0cc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b0c6:	2301      	movs	r3, #1
 800b0c8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800b0cc:	bd10      	pop	{r4, pc}

0800b0ce <_ZN8touchgfx3HAL10initializeEv>:
 800b0ce:	b510      	push	{r4, lr}
 800b0d0:	4604      	mov	r4, r0
 800b0d2:	f7f6 fab9 	bl	8001648 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b0d6:	f7f6 f979 	bl	80013cc <_ZN8touchgfx4GPIO4initEv>
 800b0da:	6860      	ldr	r0, [r4, #4]
 800b0dc:	6803      	ldr	r3, [r0, #0]
 800b0de:	68db      	ldr	r3, [r3, #12]
 800b0e0:	4798      	blx	r3
 800b0e2:	68e0      	ldr	r0, [r4, #12]
 800b0e4:	6803      	ldr	r3, [r0, #0]
 800b0e6:	689b      	ldr	r3, [r3, #8]
 800b0e8:	4798      	blx	r3
 800b0ea:	6823      	ldr	r3, [r4, #0]
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b0f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b0f4:	4718      	bx	r3
	...

0800b0f8 <_ZN8touchgfx3HAL4tickEv>:
 800b0f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b0fa:	6803      	ldr	r3, [r0, #0]
 800b0fc:	4604      	mov	r4, r0
 800b0fe:	4d5b      	ldr	r5, [pc, #364]	; (800b26c <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b100:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b104:	4798      	blx	r3
 800b106:	2800      	cmp	r0, #0
 800b108:	f000 8095 	beq.w	800b236 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b10c:	2001      	movs	r0, #1
 800b10e:	2600      	movs	r6, #0
 800b110:	f7f6 f8ba 	bl	8001288 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b114:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800b118:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b11c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b120:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800b124:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800b128:	b133      	cbz	r3, 800b138 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b12a:	6823      	ldr	r3, [r4, #0]
 800b12c:	4620      	mov	r0, r4
 800b12e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b132:	4798      	blx	r3
 800b134:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800b138:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b13c:	2601      	movs	r6, #1
 800b13e:	6862      	ldr	r2, [r4, #4]
 800b140:	f083 0301 	eor.w	r3, r3, #1
 800b144:	702e      	strb	r6, [r5, #0]
 800b146:	7253      	strb	r3, [r2, #9]
 800b148:	f003 f898 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800b14c:	6803      	ldr	r3, [r0, #0]
 800b14e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b150:	4798      	blx	r3
 800b152:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800b156:	b90b      	cbnz	r3, 800b15c <_ZN8touchgfx3HAL4tickEv+0x64>
 800b158:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800b15c:	f003 f88e 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800b160:	6803      	ldr	r3, [r0, #0]
 800b162:	695b      	ldr	r3, [r3, #20]
 800b164:	4798      	blx	r3
 800b166:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800b168:	6803      	ldr	r3, [r0, #0]
 800b16a:	691b      	ldr	r3, [r3, #16]
 800b16c:	4798      	blx	r3
 800b16e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800b172:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800b176:	3b01      	subs	r3, #1
 800b178:	b2db      	uxtb	r3, r3
 800b17a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b17e:	b10a      	cbz	r2, 800b184 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b180:	2b00      	cmp	r3, #0
 800b182:	d1eb      	bne.n	800b15c <_ZN8touchgfx3HAL4tickEv+0x64>
 800b184:	4a3a      	ldr	r2, [pc, #232]	; (800b270 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b186:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800b18a:	7813      	ldrb	r3, [r2, #0]
 800b18c:	3301      	adds	r3, #1
 800b18e:	b25b      	sxtb	r3, r3
 800b190:	4299      	cmp	r1, r3
 800b192:	7013      	strb	r3, [r2, #0]
 800b194:	dc10      	bgt.n	800b1b8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b196:	2300      	movs	r3, #0
 800b198:	68e0      	ldr	r0, [r4, #12]
 800b19a:	a902      	add	r1, sp, #8
 800b19c:	7013      	strb	r3, [r2, #0]
 800b19e:	aa03      	add	r2, sp, #12
 800b1a0:	6803      	ldr	r3, [r0, #0]
 800b1a2:	68db      	ldr	r3, [r3, #12]
 800b1a4:	4798      	blx	r3
 800b1a6:	6823      	ldr	r3, [r4, #0]
 800b1a8:	2800      	cmp	r0, #0
 800b1aa:	d050      	beq.n	800b24e <_ZN8touchgfx3HAL4tickEv+0x156>
 800b1ac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b1b0:	4620      	mov	r0, r4
 800b1b2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b1b6:	4798      	blx	r3
 800b1b8:	2300      	movs	r3, #0
 800b1ba:	6960      	ldr	r0, [r4, #20]
 800b1bc:	f88d 3007 	strb.w	r3, [sp, #7]
 800b1c0:	b158      	cbz	r0, 800b1da <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b1c2:	6803      	ldr	r3, [r0, #0]
 800b1c4:	f10d 0107 	add.w	r1, sp, #7
 800b1c8:	68db      	ldr	r3, [r3, #12]
 800b1ca:	4798      	blx	r3
 800b1cc:	b128      	cbz	r0, 800b1da <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b1ce:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800b1d0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b1d4:	6803      	ldr	r3, [r0, #0]
 800b1d6:	68db      	ldr	r3, [r3, #12]
 800b1d8:	4798      	blx	r3
 800b1da:	f104 001c 	add.w	r0, r4, #28
 800b1de:	f00e fff5 	bl	801a1cc <_ZN8touchgfx8Gestures4tickEv>
 800b1e2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800b1e6:	b30b      	cbz	r3, 800b22c <_ZN8touchgfx3HAL4tickEv+0x134>
 800b1e8:	6920      	ldr	r0, [r4, #16]
 800b1ea:	6803      	ldr	r3, [r0, #0]
 800b1ec:	691b      	ldr	r3, [r3, #16]
 800b1ee:	4798      	blx	r3
 800b1f0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800b1f2:	4606      	mov	r6, r0
 800b1f4:	b903      	cbnz	r3, 800b1f8 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b1f6:	6760      	str	r0, [r4, #116]	; 0x74
 800b1f8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800b1fa:	4a1e      	ldr	r2, [pc, #120]	; (800b274 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b1fc:	1af3      	subs	r3, r6, r3
 800b1fe:	4293      	cmp	r3, r2
 800b200:	d914      	bls.n	800b22c <_ZN8touchgfx3HAL4tickEv+0x134>
 800b202:	6920      	ldr	r0, [r4, #16]
 800b204:	6803      	ldr	r3, [r0, #0]
 800b206:	699b      	ldr	r3, [r3, #24]
 800b208:	4798      	blx	r3
 800b20a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800b20c:	2264      	movs	r2, #100	; 0x64
 800b20e:	1af3      	subs	r3, r6, r3
 800b210:	fbb3 f3f2 	udiv	r3, r3, r2
 800b214:	fbb0 f0f3 	udiv	r0, r0, r3
 800b218:	2800      	cmp	r0, #0
 800b21a:	dc1d      	bgt.n	800b258 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b21c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800b220:	6920      	ldr	r0, [r4, #16]
 800b222:	2100      	movs	r1, #0
 800b224:	6803      	ldr	r3, [r0, #0]
 800b226:	69db      	ldr	r3, [r3, #28]
 800b228:	4798      	blx	r3
 800b22a:	6766      	str	r6, [r4, #116]	; 0x74
 800b22c:	f003 f826 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800b230:	6803      	ldr	r3, [r0, #0]
 800b232:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b234:	4798      	blx	r3
 800b236:	6823      	ldr	r3, [r4, #0]
 800b238:	4620      	mov	r0, r4
 800b23a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b23e:	4798      	blx	r3
 800b240:	2001      	movs	r0, #1
 800b242:	f7f6 f853 	bl	80012ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b246:	2300      	movs	r3, #0
 800b248:	702b      	strb	r3, [r5, #0]
 800b24a:	b004      	add	sp, #16
 800b24c:	bd70      	pop	{r4, r5, r6, pc}
 800b24e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b252:	4620      	mov	r0, r4
 800b254:	4798      	blx	r3
 800b256:	e7af      	b.n	800b1b8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b258:	2863      	cmp	r0, #99	; 0x63
 800b25a:	bfcb      	itete	gt
 800b25c:	2300      	movgt	r3, #0
 800b25e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b262:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800b266:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800b26a:	e7d9      	b.n	800b220 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b26c:	24006bdc 	.word	0x24006bdc
 800b270:	24006bdd 	.word	0x24006bdd
 800b274:	05f5e100 	.word	0x05f5e100

0800b278 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b278:	b510      	push	{r4, lr}
 800b27a:	4604      	mov	r4, r0
 800b27c:	f7f6 fa14 	bl	80016a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b280:	2200      	movs	r2, #0
 800b282:	6863      	ldr	r3, [r4, #4]
 800b284:	729a      	strb	r2, [r3, #10]
 800b286:	bd10      	pop	{r4, pc}

0800b288 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b288:	65c1      	str	r1, [r0, #92]	; 0x5c
 800b28a:	301c      	adds	r0, #28
 800b28c:	f00e bf9c 	b.w	801a1c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b290 <_ZN8touchgfx3HAL5touchEll>:
 800b290:	b530      	push	{r4, r5, lr}
 800b292:	b087      	sub	sp, #28
 800b294:	4604      	mov	r4, r0
 800b296:	a804      	add	r0, sp, #16
 800b298:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b29c:	f002 fe1c 	bl	800ded8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b2a0:	9b04      	ldr	r3, [sp, #16]
 800b2a2:	a906      	add	r1, sp, #24
 800b2a4:	a803      	add	r0, sp, #12
 800b2a6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b2aa:	9b05      	ldr	r3, [sp, #20]
 800b2ac:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b2b0:	f002 fe64 	bl	800df7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b2b4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800b2b8:	f104 001c 	add.w	r0, r4, #28
 800b2bc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b2c0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b2c4:	b189      	cbz	r1, 800b2ea <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b2c6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800b2ca:	9300      	str	r3, [sp, #0]
 800b2cc:	4613      	mov	r3, r2
 800b2ce:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800b2d2:	462a      	mov	r2, r5
 800b2d4:	f00e ff88 	bl	801a1e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b2d8:	b128      	cbz	r0, 800b2e6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800b2da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b2de:	6623      	str	r3, [r4, #96]	; 0x60
 800b2e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b2e4:	6663      	str	r3, [r4, #100]	; 0x64
 800b2e6:	b007      	add	sp, #28
 800b2e8:	bd30      	pop	{r4, r5, pc}
 800b2ea:	f00e ffbd 	bl	801a268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b2ee:	2301      	movs	r3, #1
 800b2f0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800b2f4:	e7f1      	b.n	800b2da <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b2f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b2f6:	b510      	push	{r4, lr}
 800b2f8:	2b00      	cmp	r3, #0
 800b2fa:	d046      	beq.n	800b38a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2fc:	ea81 0002 	eor.w	r0, r1, r2
 800b300:	07c4      	lsls	r4, r0, #31
 800b302:	d508      	bpl.n	800b316 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b304:	440b      	add	r3, r1
 800b306:	3a01      	subs	r2, #1
 800b308:	428b      	cmp	r3, r1
 800b30a:	d93e      	bls.n	800b38a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b30c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b310:	f801 0b01 	strb.w	r0, [r1], #1
 800b314:	e7f8      	b.n	800b308 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b316:	07d0      	lsls	r0, r2, #31
 800b318:	bf42      	ittt	mi
 800b31a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b31e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b322:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b326:	2b01      	cmp	r3, #1
 800b328:	d911      	bls.n	800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b32a:	ea81 0402 	eor.w	r4, r1, r2
 800b32e:	4610      	mov	r0, r2
 800b330:	07a4      	lsls	r4, r4, #30
 800b332:	d022      	beq.n	800b37a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b334:	f023 0401 	bic.w	r4, r3, #1
 800b338:	440c      	add	r4, r1
 800b33a:	428c      	cmp	r4, r1
 800b33c:	4602      	mov	r2, r0
 800b33e:	d904      	bls.n	800b34a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b340:	8812      	ldrh	r2, [r2, #0]
 800b342:	3002      	adds	r0, #2
 800b344:	f821 2b02 	strh.w	r2, [r1], #2
 800b348:	e7f7      	b.n	800b33a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b34a:	f003 0301 	and.w	r3, r3, #1
 800b34e:	f023 0003 	bic.w	r0, r3, #3
 800b352:	4408      	add	r0, r1
 800b354:	4288      	cmp	r0, r1
 800b356:	4614      	mov	r4, r2
 800b358:	d904      	bls.n	800b364 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b35a:	6824      	ldr	r4, [r4, #0]
 800b35c:	3204      	adds	r2, #4
 800b35e:	f841 4b04 	str.w	r4, [r1], #4
 800b362:	e7f7      	b.n	800b354 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b364:	f003 0303 	and.w	r3, r3, #3
 800b368:	3a01      	subs	r2, #1
 800b36a:	440b      	add	r3, r1
 800b36c:	428b      	cmp	r3, r1
 800b36e:	d90c      	bls.n	800b38a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b370:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b374:	f801 0b01 	strb.w	r0, [r1], #1
 800b378:	e7f8      	b.n	800b36c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b37a:	0790      	lsls	r0, r2, #30
 800b37c:	d0e7      	beq.n	800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b37e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b382:	3b02      	subs	r3, #2
 800b384:	f821 0b02 	strh.w	r0, [r1], #2
 800b388:	e7e1      	b.n	800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b38a:	2001      	movs	r0, #1
 800b38c:	bd10      	pop	{r4, pc}

0800b38e <_ZN8touchgfx3HAL7noTouchEv>:
 800b38e:	b510      	push	{r4, lr}
 800b390:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800b394:	4604      	mov	r4, r0
 800b396:	b153      	cbz	r3, 800b3ae <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b398:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800b39c:	2101      	movs	r1, #1
 800b39e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800b3a2:	301c      	adds	r0, #28
 800b3a4:	f00e ff60 	bl	801a268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b3a8:	2300      	movs	r3, #0
 800b3aa:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800b3ae:	bd10      	pop	{r4, pc}

0800b3b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b3b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3b4:	b085      	sub	sp, #20
 800b3b6:	4604      	mov	r4, r0
 800b3b8:	2000      	movs	r0, #0
 800b3ba:	4699      	mov	r9, r3
 800b3bc:	ad04      	add	r5, sp, #16
 800b3be:	460f      	mov	r7, r1
 800b3c0:	4690      	mov	r8, r2
 800b3c2:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b3c6:	69a0      	ldr	r0, [r4, #24]
 800b3c8:	6806      	ldr	r6, [r0, #0]
 800b3ca:	9501      	str	r5, [sp, #4]
 800b3cc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b3d0:	9500      	str	r5, [sp, #0]
 800b3d2:	6835      	ldr	r5, [r6, #0]
 800b3d4:	47a8      	blx	r5
 800b3d6:	4d10      	ldr	r5, [pc, #64]	; (800b418 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b3d8:	4606      	mov	r6, r0
 800b3da:	f8a5 9000 	strh.w	r9, [r5]
 800b3de:	f7f7 f845 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b3e2:	6803      	ldr	r3, [r0, #0]
 800b3e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3e6:	4798      	blx	r3
 800b3e8:	b128      	cbz	r0, 800b3f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b3ea:	2801      	cmp	r0, #1
 800b3ec:	d00b      	beq.n	800b406 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b3ee:	4630      	mov	r0, r6
 800b3f0:	b005      	add	sp, #20
 800b3f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3f6:	882b      	ldrh	r3, [r5, #0]
 800b3f8:	fb08 7203 	mla	r2, r8, r3, r7
 800b3fc:	9b03      	ldr	r3, [sp, #12]
 800b3fe:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b402:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b404:	e7f3      	b.n	800b3ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b406:	882a      	ldrh	r2, [r5, #0]
 800b408:	9b03      	ldr	r3, [sp, #12]
 800b40a:	fb08 7202 	mla	r2, r8, r2, r7
 800b40e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b412:	1a9a      	subs	r2, r3, r2
 800b414:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b416:	e7ea      	b.n	800b3ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b418:	24006bd2 	.word	0x24006bd2

0800b41c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b41c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b41e:	b08b      	sub	sp, #44	; 0x2c
 800b420:	4617      	mov	r7, r2
 800b422:	4604      	mov	r4, r0
 800b424:	460e      	mov	r6, r1
 800b426:	461d      	mov	r5, r3
 800b428:	f7f7 f820 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b42c:	6803      	ldr	r3, [r0, #0]
 800b42e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b430:	4798      	blx	r3
 800b432:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b436:	9007      	str	r0, [sp, #28]
 800b438:	4631      	mov	r1, r6
 800b43a:	6822      	ldr	r2, [r4, #0]
 800b43c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b440:	4b0c      	ldr	r3, [pc, #48]	; (800b474 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b442:	4620      	mov	r0, r4
 800b444:	881b      	ldrh	r3, [r3, #0]
 800b446:	9306      	str	r3, [sp, #24]
 800b448:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b44c:	9305      	str	r3, [sp, #20]
 800b44e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b452:	9304      	str	r3, [sp, #16]
 800b454:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b458:	9303      	str	r3, [sp, #12]
 800b45a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b45e:	9302      	str	r3, [sp, #8]
 800b460:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b464:	e9cd 5300 	strd	r5, r3, [sp]
 800b468:	463b      	mov	r3, r7
 800b46a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b46c:	2200      	movs	r2, #0
 800b46e:	47a8      	blx	r5
 800b470:	b00b      	add	sp, #44	; 0x2c
 800b472:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b474:	24006bd2 	.word	0x24006bd2

0800b478 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b47c:	4698      	mov	r8, r3
 800b47e:	6803      	ldr	r3, [r0, #0]
 800b480:	b08b      	sub	sp, #44	; 0x2c
 800b482:	4617      	mov	r7, r2
 800b484:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b486:	460e      	mov	r6, r1
 800b488:	4b13      	ldr	r3, [pc, #76]	; (800b4d8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b48a:	4604      	mov	r4, r0
 800b48c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b490:	f7f6 ffec 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b494:	6803      	ldr	r3, [r0, #0]
 800b496:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b498:	4798      	blx	r3
 800b49a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b49e:	2200      	movs	r2, #0
 800b4a0:	4631      	mov	r1, r6
 800b4a2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b4a6:	2302      	movs	r3, #2
 800b4a8:	4620      	mov	r0, r4
 800b4aa:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b4ae:	2301      	movs	r3, #1
 800b4b0:	9305      	str	r3, [sp, #20]
 800b4b2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b4b6:	9304      	str	r3, [sp, #16]
 800b4b8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b4bc:	9303      	str	r3, [sp, #12]
 800b4be:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b4c2:	9302      	str	r3, [sp, #8]
 800b4c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4c8:	e9cd 8300 	strd	r8, r3, [sp]
 800b4cc:	463b      	mov	r3, r7
 800b4ce:	47a8      	blx	r5
 800b4d0:	b00b      	add	sp, #44	; 0x2c
 800b4d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4d6:	bf00      	nop
 800b4d8:	24006bd2 	.word	0x24006bd2

0800b4dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b4dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4e0:	4698      	mov	r8, r3
 800b4e2:	6803      	ldr	r3, [r0, #0]
 800b4e4:	b087      	sub	sp, #28
 800b4e6:	460e      	mov	r6, r1
 800b4e8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b4ea:	4617      	mov	r7, r2
 800b4ec:	4b0f      	ldr	r3, [pc, #60]	; (800b52c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b4ee:	4604      	mov	r4, r0
 800b4f0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b4f4:	f7f6 ffba 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b4f8:	6803      	ldr	r3, [r0, #0]
 800b4fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4fc:	4798      	blx	r3
 800b4fe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b502:	463a      	mov	r2, r7
 800b504:	4631      	mov	r1, r6
 800b506:	f8cd 900c 	str.w	r9, [sp, #12]
 800b50a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b50e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b512:	4620      	mov	r0, r4
 800b514:	9302      	str	r3, [sp, #8]
 800b516:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b51a:	9301      	str	r3, [sp, #4]
 800b51c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b520:	9300      	str	r3, [sp, #0]
 800b522:	4643      	mov	r3, r8
 800b524:	47a8      	blx	r5
 800b526:	b007      	add	sp, #28
 800b528:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b52c:	24006bd2 	.word	0x24006bd2

0800b530 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b534:	4604      	mov	r4, r0
 800b536:	b08f      	sub	sp, #60	; 0x3c
 800b538:	4610      	mov	r0, r2
 800b53a:	460d      	mov	r5, r1
 800b53c:	4691      	mov	r9, r2
 800b53e:	461e      	mov	r6, r3
 800b540:	f005 fb56 	bl	8010bf0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b544:	2800      	cmp	r0, #0
 800b546:	f000 809d 	beq.w	800b684 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b54a:	6823      	ldr	r3, [r4, #0]
 800b54c:	4620      	mov	r0, r4
 800b54e:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b6e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b552:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b558:	4798      	blx	r3
 800b55a:	6823      	ldr	r3, [r4, #0]
 800b55c:	4620      	mov	r0, r4
 800b55e:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800b6ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b564:	4798      	blx	r3
 800b566:	f8bb 3000 	ldrh.w	r3, [fp]
 800b56a:	4f5c      	ldr	r7, [pc, #368]	; (800b6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b56c:	9301      	str	r3, [sp, #4]
 800b56e:	f8ba 3000 	ldrh.w	r3, [sl]
 800b572:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b576:	4640      	mov	r0, r8
 800b578:	9302      	str	r3, [sp, #8]
 800b57a:	883b      	ldrh	r3, [r7, #0]
 800b57c:	9303      	str	r3, [sp, #12]
 800b57e:	4b58      	ldr	r3, [pc, #352]	; (800b6e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b580:	881a      	ldrh	r2, [r3, #0]
 800b582:	9305      	str	r3, [sp, #20]
 800b584:	9204      	str	r2, [sp, #16]
 800b586:	f005 fc77 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b58a:	8038      	strh	r0, [r7, #0]
 800b58c:	4640      	mov	r0, r8
 800b58e:	f005 fca7 	bl	8010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b592:	9b05      	ldr	r3, [sp, #20]
 800b594:	b280      	uxth	r0, r0
 800b596:	8018      	strh	r0, [r3, #0]
 800b598:	4b52      	ldr	r3, [pc, #328]	; (800b6e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b59a:	781b      	ldrb	r3, [r3, #0]
 800b59c:	2b00      	cmp	r3, #0
 800b59e:	d174      	bne.n	800b68a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b5a0:	883b      	ldrh	r3, [r7, #0]
 800b5a2:	f8aa 0000 	strh.w	r0, [sl]
 800b5a6:	f8ab 3000 	strh.w	r3, [fp]
 800b5aa:	4648      	mov	r0, r9
 800b5ac:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b5b0:	f005 fb1e 	bl	8010bf0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b5b4:	2200      	movs	r2, #0
 800b5b6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b5ba:	4611      	mov	r1, r2
 800b5bc:	4628      	mov	r0, r5
 800b5be:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b5c2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b5c6:	f7f7 f84d 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
 800b5ca:	2301      	movs	r3, #1
 800b5cc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b5d0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b5d4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b5d8:	2b00      	cmp	r3, #0
 800b5da:	dd5c      	ble.n	800b696 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5dc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	dd58      	ble.n	800b696 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5e4:	462a      	mov	r2, r5
 800b5e6:	ab0a      	add	r3, sp, #40	; 0x28
 800b5e8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b5ec:	6851      	ldr	r1, [r2, #4]
 800b5ee:	c303      	stmia	r3!, {r0, r1}
 800b5f0:	4631      	mov	r1, r6
 800b5f2:	a80a      	add	r0, sp, #40	; 0x28
 800b5f4:	f7fe fda4 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800b5f8:	4b38      	ldr	r3, [pc, #224]	; (800b6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5fa:	2100      	movs	r1, #0
 800b5fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b600:	4b37      	ldr	r3, [pc, #220]	; (800b6e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b602:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b606:	aa0a      	add	r2, sp, #40	; 0x28
 800b608:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b60c:	910c      	str	r1, [sp, #48]	; 0x30
 800b60e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b612:	ab08      	add	r3, sp, #32
 800b614:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b618:	e883 0003 	stmia.w	r3, {r0, r1}
 800b61c:	4618      	mov	r0, r3
 800b61e:	a90c      	add	r1, sp, #48	; 0x30
 800b620:	f7fe fd8e 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800b624:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b626:	2b00      	cmp	r3, #0
 800b628:	d13c      	bne.n	800b6a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b62a:	2000      	movs	r0, #0
 800b62c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800b630:	2600      	movs	r6, #0
 800b632:	696b      	ldr	r3, [r5, #20]
 800b634:	a908      	add	r1, sp, #32
 800b636:	682a      	ldr	r2, [r5, #0]
 800b638:	4628      	mov	r0, r5
 800b63a:	9305      	str	r3, [sp, #20]
 800b63c:	616e      	str	r6, [r5, #20]
 800b63e:	6892      	ldr	r2, [r2, #8]
 800b640:	4790      	blx	r2
 800b642:	9b05      	ldr	r3, [sp, #20]
 800b644:	4652      	mov	r2, sl
 800b646:	4649      	mov	r1, r9
 800b648:	616b      	str	r3, [r5, #20]
 800b64a:	4628      	mov	r0, r5
 800b64c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800b650:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b654:	f7f7 f806 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
 800b658:	9a01      	ldr	r2, [sp, #4]
 800b65a:	4b23      	ldr	r3, [pc, #140]	; (800b6e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b65c:	4620      	mov	r0, r4
 800b65e:	801a      	strh	r2, [r3, #0]
 800b660:	9a02      	ldr	r2, [sp, #8]
 800b662:	4b22      	ldr	r3, [pc, #136]	; (800b6ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b664:	801a      	strh	r2, [r3, #0]
 800b666:	9a03      	ldr	r2, [sp, #12]
 800b668:	4b1c      	ldr	r3, [pc, #112]	; (800b6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b66a:	801a      	strh	r2, [r3, #0]
 800b66c:	4b1c      	ldr	r3, [pc, #112]	; (800b6e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b66e:	9a04      	ldr	r2, [sp, #16]
 800b670:	801a      	strh	r2, [r3, #0]
 800b672:	6823      	ldr	r3, [r4, #0]
 800b674:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b67a:	4798      	blx	r3
 800b67c:	6823      	ldr	r3, [r4, #0]
 800b67e:	4620      	mov	r0, r4
 800b680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b682:	4798      	blx	r3
 800b684:	b00f      	add	sp, #60	; 0x3c
 800b686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b68a:	883b      	ldrh	r3, [r7, #0]
 800b68c:	f8ab 0000 	strh.w	r0, [fp]
 800b690:	f8aa 3000 	strh.w	r3, [sl]
 800b694:	e789      	b.n	800b5aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b696:	462a      	mov	r2, r5
 800b698:	ab0a      	add	r3, sp, #40	; 0x28
 800b69a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b69e:	6851      	ldr	r1, [r2, #4]
 800b6a0:	c303      	stmia	r3!, {r0, r1}
 800b6a2:	e7a9      	b.n	800b5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b6a4:	a807      	add	r0, sp, #28
 800b6a6:	f005 fd1f 	bl	80110e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b6aa:	4606      	mov	r6, r0
 800b6ac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b6ae:	6803      	ldr	r3, [r0, #0]
 800b6b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6b2:	4798      	blx	r3
 800b6b4:	4286      	cmp	r6, r0
 800b6b6:	d1b8      	bne.n	800b62a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b6b8:	f7f6 fed8 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b6bc:	6803      	ldr	r3, [r0, #0]
 800b6be:	4606      	mov	r6, r0
 800b6c0:	a807      	add	r0, sp, #28
 800b6c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b6c4:	9305      	str	r3, [sp, #20]
 800b6c6:	f005 fd0f 	bl	80110e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b6ca:	9b05      	ldr	r3, [sp, #20]
 800b6cc:	4601      	mov	r1, r0
 800b6ce:	4630      	mov	r0, r6
 800b6d0:	4798      	blx	r3
 800b6d2:	f080 0001 	eor.w	r0, r0, #1
 800b6d6:	b2c0      	uxtb	r0, r0
 800b6d8:	e7a8      	b.n	800b62c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b6da:	bf00      	nop
 800b6dc:	24006bcc 	.word	0x24006bcc
 800b6e0:	24006bce 	.word	0x24006bce
 800b6e4:	24006bd0 	.word	0x24006bd0
 800b6e8:	24006bd2 	.word	0x24006bd2
 800b6ec:	24006bd4 	.word	0x24006bd4

0800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b6f0:	4b07      	ldr	r3, [pc, #28]	; (800b710 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b6f2:	b510      	push	{r4, lr}
 800b6f4:	781b      	ldrb	r3, [r3, #0]
 800b6f6:	4604      	mov	r4, r0
 800b6f8:	b13b      	cbz	r3, 800b70a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b6fa:	6803      	ldr	r3, [r0, #0]
 800b6fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b6fe:	4798      	blx	r3
 800b700:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b702:	4283      	cmp	r3, r0
 800b704:	d101      	bne.n	800b70a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b706:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b708:	bd10      	pop	{r4, pc}
 800b70a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b70c:	e7fc      	b.n	800b708 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b70e:	bf00      	nop
 800b710:	24006bd6 	.word	0x24006bd6

0800b714 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b718:	461d      	mov	r5, r3
 800b71a:	b08a      	sub	sp, #40	; 0x28
 800b71c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b720:	4690      	mov	r8, r2
 800b722:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b726:	2400      	movs	r4, #0
 800b728:	4607      	mov	r7, r0
 800b72a:	fb06 8505 	mla	r5, r6, r5, r8
 800b72e:	9404      	str	r4, [sp, #16]
 800b730:	f88d 4020 	strb.w	r4, [sp, #32]
 800b734:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b738:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b73c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b740:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b744:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b748:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b74c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b750:	f7ff ffce 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b754:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b758:	6878      	ldr	r0, [r7, #4]
 800b75a:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b75e:	a901      	add	r1, sp, #4
 800b760:	9505      	str	r5, [sp, #20]
 800b762:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b766:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b76a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b76e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b772:	6803      	ldr	r3, [r0, #0]
 800b774:	685b      	ldr	r3, [r3, #4]
 800b776:	4798      	blx	r3
 800b778:	b00a      	add	sp, #40	; 0x28
 800b77a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b77e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b77e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b782:	b08b      	sub	sp, #44	; 0x2c
 800b784:	2400      	movs	r4, #0
 800b786:	4691      	mov	r9, r2
 800b788:	461d      	mov	r5, r3
 800b78a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b78e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b792:	4688      	mov	r8, r1
 800b794:	4607      	mov	r7, r0
 800b796:	9404      	str	r4, [sp, #16]
 800b798:	fb06 9505 	mla	r5, r6, r5, r9
 800b79c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7a0:	f7ff ffa6 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b7a8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b7ac:	6878      	ldr	r0, [r7, #4]
 800b7ae:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7b2:	a901      	add	r1, sp, #4
 800b7b4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b7b8:	9505      	str	r5, [sp, #20]
 800b7ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7be:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b7c2:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b7c6:	f8cd 8010 	str.w	r8, [sp, #16]
 800b7ca:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b7ce:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b7d2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b7d6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b7da:	6803      	ldr	r3, [r0, #0]
 800b7dc:	685b      	ldr	r3, [r3, #4]
 800b7de:	4798      	blx	r3
 800b7e0:	b00b      	add	sp, #44	; 0x2c
 800b7e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b7e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b7e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7ec:	b08a      	sub	sp, #40	; 0x28
 800b7ee:	4698      	mov	r8, r3
 800b7f0:	2300      	movs	r3, #0
 800b7f2:	4606      	mov	r6, r0
 800b7f4:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b7f8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b7fc:	2d0b      	cmp	r5, #11
 800b7fe:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b802:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b806:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b80a:	9304      	str	r3, [sp, #16]
 800b80c:	d137      	bne.n	800b87e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b80e:	2380      	movs	r3, #128	; 0x80
 800b810:	f88d 0020 	strb.w	r0, [sp, #32]
 800b814:	4630      	mov	r0, r6
 800b816:	9203      	str	r2, [sp, #12]
 800b818:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b81c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b820:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b824:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b828:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b82c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b830:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b834:	f7ff ff5c 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b838:	2c0b      	cmp	r4, #11
 800b83a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b83e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b842:	bf94      	ite	ls
 800b844:	4b19      	ldrls	r3, [pc, #100]	; (800b8ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b846:	2100      	movhi	r1, #0
 800b848:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b84c:	bf98      	it	ls
 800b84e:	5d19      	ldrbls	r1, [r3, r4]
 800b850:	fb02 8307 	mla	r3, r2, r7, r8
 800b854:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b858:	10c9      	asrs	r1, r1, #3
 800b85a:	fb01 0003 	mla	r0, r1, r3, r0
 800b85e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b862:	a901      	add	r1, sp, #4
 800b864:	9005      	str	r0, [sp, #20]
 800b866:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b86a:	2300      	movs	r3, #0
 800b86c:	6870      	ldr	r0, [r6, #4]
 800b86e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b872:	6803      	ldr	r3, [r0, #0]
 800b874:	685b      	ldr	r3, [r3, #4]
 800b876:	4798      	blx	r3
 800b878:	b00a      	add	sp, #40	; 0x28
 800b87a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b87e:	2d02      	cmp	r5, #2
 800b880:	d109      	bne.n	800b896 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b882:	28ff      	cmp	r0, #255	; 0xff
 800b884:	d105      	bne.n	800b892 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b886:	f1bc 0f00 	cmp.w	ip, #0
 800b88a:	bf14      	ite	ne
 800b88c:	2340      	movne	r3, #64	; 0x40
 800b88e:	2320      	moveq	r3, #32
 800b890:	e7be      	b.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b892:	2340      	movs	r3, #64	; 0x40
 800b894:	e7bc      	b.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b896:	28ff      	cmp	r0, #255	; 0xff
 800b898:	d105      	bne.n	800b8a6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b89a:	f1bc 0f00 	cmp.w	ip, #0
 800b89e:	bf14      	ite	ne
 800b8a0:	2304      	movne	r3, #4
 800b8a2:	2301      	moveq	r3, #1
 800b8a4:	e7b4      	b.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8a6:	2304      	movs	r3, #4
 800b8a8:	e7b2      	b.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8aa:	bf00      	nop
 800b8ac:	0801c624 	.word	0x0801c624

0800b8b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8b4:	b08b      	sub	sp, #44	; 0x2c
 800b8b6:	461d      	mov	r5, r3
 800b8b8:	2400      	movs	r4, #0
 800b8ba:	4688      	mov	r8, r1
 800b8bc:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b8c0:	4693      	mov	fp, r2
 800b8c2:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b8c6:	4607      	mov	r7, r0
 800b8c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b8cc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b8d0:	9404      	str	r4, [sp, #16]
 800b8d2:	bf14      	ite	ne
 800b8d4:	2308      	movne	r3, #8
 800b8d6:	2302      	moveq	r3, #2
 800b8d8:	fb05 b50a 	mla	r5, r5, sl, fp
 800b8dc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b8e0:	f7ff ff06 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8e4:	2e0b      	cmp	r6, #11
 800b8e6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b8ea:	a901      	add	r1, sp, #4
 800b8ec:	bf98      	it	ls
 800b8ee:	4b13      	ldrls	r3, [pc, #76]	; (800b93c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b8f0:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b8f4:	bf98      	it	ls
 800b8f6:	5d9c      	ldrbls	r4, [r3, r6]
 800b8f8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b8fc:	10e4      	asrs	r4, r4, #3
 800b8fe:	f8cd 8010 	str.w	r8, [sp, #16]
 800b902:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b906:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b90a:	fb04 0405 	mla	r4, r4, r5, r0
 800b90e:	6878      	ldr	r0, [r7, #4]
 800b910:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b914:	2300      	movs	r3, #0
 800b916:	9405      	str	r4, [sp, #20]
 800b918:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b91c:	f88d 9020 	strb.w	r9, [sp, #32]
 800b920:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b924:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b928:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b92c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b930:	6803      	ldr	r3, [r0, #0]
 800b932:	685b      	ldr	r3, [r3, #4]
 800b934:	4798      	blx	r3
 800b936:	b00b      	add	sp, #44	; 0x2c
 800b938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b93c:	0801c624 	.word	0x0801c624

0800b940 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b944:	461e      	mov	r6, r3
 800b946:	4b0a      	ldr	r3, [pc, #40]	; (800b970 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b948:	460f      	mov	r7, r1
 800b94a:	4690      	mov	r8, r2
 800b94c:	881d      	ldrh	r5, [r3, #0]
 800b94e:	f7f6 fd8d 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b952:	6803      	ldr	r3, [r0, #0]
 800b954:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b956:	4798      	blx	r3
 800b958:	280b      	cmp	r0, #11
 800b95a:	bf96      	itet	ls
 800b95c:	4b05      	ldrls	r3, [pc, #20]	; (800b974 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b95e:	2400      	movhi	r4, #0
 800b960:	5c1c      	ldrbls	r4, [r3, r0]
 800b962:	fb08 7005 	mla	r0, r8, r5, r7
 800b966:	10e4      	asrs	r4, r4, #3
 800b968:	fb04 6000 	mla	r0, r4, r0, r6
 800b96c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b970:	24006bd2 	.word	0x24006bd2
 800b974:	0801c624 	.word	0x0801c624

0800b978 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b978:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b97a:	b08b      	sub	sp, #44	; 0x2c
 800b97c:	461f      	mov	r7, r3
 800b97e:	4604      	mov	r4, r0
 800b980:	4616      	mov	r6, r2
 800b982:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b986:	2500      	movs	r5, #0
 800b988:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b98c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b990:	9504      	str	r5, [sp, #16]
 800b992:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b996:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b99a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b99e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b9a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b9a6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b9aa:	f88d 3020 	strb.w	r3, [sp, #32]
 800b9ae:	f7ff fe9f 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9b2:	463a      	mov	r2, r7
 800b9b4:	4631      	mov	r1, r6
 800b9b6:	4603      	mov	r3, r0
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	f7ff ffc1 	bl	800b940 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9be:	4b0e      	ldr	r3, [pc, #56]	; (800b9f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b9c0:	9005      	str	r0, [sp, #20]
 800b9c2:	881b      	ldrh	r3, [r3, #0]
 800b9c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b9c8:	f7f6 fd50 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800b9cc:	6803      	ldr	r3, [r0, #0]
 800b9ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9d0:	4798      	blx	r3
 800b9d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b9d4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b9d8:	a901      	add	r1, sp, #4
 800b9da:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b9de:	9304      	str	r3, [sp, #16]
 800b9e0:	6860      	ldr	r0, [r4, #4]
 800b9e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b9e6:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b9ea:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b9ee:	6803      	ldr	r3, [r0, #0]
 800b9f0:	685b      	ldr	r3, [r3, #4]
 800b9f2:	4798      	blx	r3
 800b9f4:	b00b      	add	sp, #44	; 0x2c
 800b9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9f8:	24006bd2 	.word	0x24006bd2

0800b9fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b9fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9fe:	b08d      	sub	sp, #52	; 0x34
 800ba00:	2501      	movs	r5, #1
 800ba02:	4604      	mov	r4, r0
 800ba04:	466b      	mov	r3, sp
 800ba06:	9503      	str	r5, [sp, #12]
 800ba08:	e883 0006 	stmia.w	r3, {r1, r2}
 800ba0c:	2300      	movs	r3, #0
 800ba0e:	f8bd 6000 	ldrh.w	r6, [sp]
 800ba12:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ba16:	9306      	str	r3, [sp, #24]
 800ba18:	6803      	ldr	r3, [r0, #0]
 800ba1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba1c:	4798      	blx	r3
 800ba1e:	463a      	mov	r2, r7
 800ba20:	4631      	mov	r1, r6
 800ba22:	4603      	mov	r3, r0
 800ba24:	4620      	mov	r0, r4
 800ba26:	f7ff ff8b 	bl	800b940 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba2a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ba2c:	9004      	str	r0, [sp, #16]
 800ba2e:	9307      	str	r3, [sp, #28]
 800ba30:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba34:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba38:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba3c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ba40:	4b0e      	ldr	r3, [pc, #56]	; (800ba7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ba42:	881b      	ldrh	r3, [r3, #0]
 800ba44:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ba48:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ba4c:	f7f6 fd0e 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800ba50:	6803      	ldr	r3, [r0, #0]
 800ba52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba54:	4798      	blx	r3
 800ba56:	23ff      	movs	r3, #255	; 0xff
 800ba58:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ba5c:	a903      	add	r1, sp, #12
 800ba5e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba62:	6860      	ldr	r0, [r4, #4]
 800ba64:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba68:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ba6c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ba70:	6803      	ldr	r3, [r0, #0]
 800ba72:	685b      	ldr	r3, [r3, #4]
 800ba74:	4798      	blx	r3
 800ba76:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ba78:	b00d      	add	sp, #52	; 0x34
 800ba7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba7c:	24006bd2 	.word	0x24006bd2

0800ba80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ba80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba84:	b08c      	sub	sp, #48	; 0x30
 800ba86:	461e      	mov	r6, r3
 800ba88:	2300      	movs	r3, #0
 800ba8a:	4604      	mov	r4, r0
 800ba8c:	466d      	mov	r5, sp
 800ba8e:	9306      	str	r3, [sp, #24]
 800ba90:	6803      	ldr	r3, [r0, #0]
 800ba92:	e885 0006 	stmia.w	r5, {r1, r2}
 800ba96:	2501      	movs	r5, #1
 800ba98:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba9c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800baa0:	9503      	str	r5, [sp, #12]
 800baa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800baa4:	4798      	blx	r3
 800baa6:	4642      	mov	r2, r8
 800baa8:	4639      	mov	r1, r7
 800baaa:	4603      	mov	r3, r0
 800baac:	4620      	mov	r0, r4
 800baae:	f7ff ff47 	bl	800b940 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bab2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bab6:	9004      	str	r0, [sp, #16]
 800bab8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800babc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bac0:	9607      	str	r6, [sp, #28]
 800bac2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bac6:	4b10      	ldr	r3, [pc, #64]	; (800bb08 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bac8:	881b      	ldrh	r3, [r3, #0]
 800baca:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bace:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bad0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bad4:	f7f6 fcca 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800bad8:	6803      	ldr	r3, [r0, #0]
 800bada:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800badc:	4798      	blx	r3
 800bade:	23ff      	movs	r3, #255	; 0xff
 800bae0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bae4:	a903      	add	r1, sp, #12
 800bae6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800baea:	6860      	ldr	r0, [r4, #4]
 800baec:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800baf0:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800baf4:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800baf8:	6803      	ldr	r3, [r0, #0]
 800bafa:	685b      	ldr	r3, [r3, #4]
 800bafc:	4798      	blx	r3
 800bafe:	4630      	mov	r0, r6
 800bb00:	b00c      	add	sp, #48	; 0x30
 800bb02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb06:	bf00      	nop
 800bb08:	24006bd2 	.word	0x24006bd2

0800bb0c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bb0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb0e:	b085      	sub	sp, #20
 800bb10:	4605      	mov	r5, r0
 800bb12:	ac02      	add	r4, sp, #8
 800bb14:	e884 0006 	stmia.w	r4, {r1, r2}
 800bb18:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bb1c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bb20:	f7ff fde6 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb24:	4631      	mov	r1, r6
 800bb26:	4603      	mov	r3, r0
 800bb28:	463a      	mov	r2, r7
 800bb2a:	4628      	mov	r0, r5
 800bb2c:	f7ff ff08 	bl	800b940 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb30:	4a05      	ldr	r2, [pc, #20]	; (800bb48 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bb32:	682b      	ldr	r3, [r5, #0]
 800bb34:	8812      	ldrh	r2, [r2, #0]
 800bb36:	9200      	str	r2, [sp, #0]
 800bb38:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bb3a:	4603      	mov	r3, r0
 800bb3c:	4628      	mov	r0, r5
 800bb3e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bb42:	47b0      	blx	r6
 800bb44:	b005      	add	sp, #20
 800bb46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb48:	24006bd2 	.word	0x24006bd2

0800bb4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bb4c:	b570      	push	{r4, r5, r6, lr}
 800bb4e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800bb52:	4604      	mov	r4, r0
 800bb54:	b19b      	cbz	r3, 800bb7e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bb56:	2002      	movs	r0, #2
 800bb58:	f7f5 fbfa 	bl	8001350 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bb5c:	2300      	movs	r3, #0
 800bb5e:	4620      	mov	r0, r4
 800bb60:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800bb64:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800bb68:	6823      	ldr	r3, [r4, #0]
 800bb6a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bb6e:	f7ff fdbf 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb72:	4601      	mov	r1, r0
 800bb74:	4620      	mov	r0, r4
 800bb76:	462b      	mov	r3, r5
 800bb78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb7c:	4718      	bx	r3
 800bb7e:	bd70      	pop	{r4, r5, r6, pc}

0800bb80 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800bb80:	b570      	push	{r4, r5, r6, lr}
 800bb82:	4605      	mov	r5, r0
 800bb84:	460c      	mov	r4, r1
 800bb86:	2003      	movs	r0, #3
 800bb88:	b149      	cbz	r1, 800bb9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800bb8a:	f7f5 fb7d 	bl	8001288 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800bb8e:	6928      	ldr	r0, [r5, #16]
 800bb90:	b168      	cbz	r0, 800bbae <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800bb92:	6803      	ldr	r3, [r0, #0]
 800bb94:	2101      	movs	r1, #1
 800bb96:	695b      	ldr	r3, [r3, #20]
 800bb98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb9c:	4718      	bx	r3
 800bb9e:	f7f5 fba5 	bl	80012ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800bba2:	6928      	ldr	r0, [r5, #16]
 800bba4:	b118      	cbz	r0, 800bbae <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800bba6:	6803      	ldr	r3, [r0, #0]
 800bba8:	4621      	mov	r1, r4
 800bbaa:	695b      	ldr	r3, [r3, #20]
 800bbac:	e7f4      	b.n	800bb98 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800bbae:	bd70      	pop	{r4, r5, r6, pc}

0800bbb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bbb0:	b538      	push	{r3, r4, r5, lr}
 800bbb2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800bbb6:	4604      	mov	r4, r0
 800bbb8:	460d      	mov	r5, r1
 800bbba:	428b      	cmp	r3, r1
 800bbbc:	d006      	beq.n	800bbcc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bbbe:	6803      	ldr	r3, [r0, #0]
 800bbc0:	b929      	cbnz	r1, 800bbce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bbc2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bbc6:	4798      	blx	r3
 800bbc8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800bbcc:	bd38      	pop	{r3, r4, r5, pc}
 800bbce:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bbd2:	e7f8      	b.n	800bbc6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bbd4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bbd4:	4b0d      	ldr	r3, [pc, #52]	; (800bc0c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bbd6:	b510      	push	{r4, lr}
 800bbd8:	781b      	ldrb	r3, [r3, #0]
 800bbda:	4604      	mov	r4, r0
 800bbdc:	b95b      	cbnz	r3, 800bbf6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbde:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bbe2:	2b02      	cmp	r3, #2
 800bbe4:	d007      	beq.n	800bbf6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbe6:	6840      	ldr	r0, [r0, #4]
 800bbe8:	f000 f912 	bl	800be10 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bbec:	b118      	cbz	r0, 800bbf6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbee:	6862      	ldr	r2, [r4, #4]
 800bbf0:	7a53      	ldrb	r3, [r2, #9]
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	d0fc      	beq.n	800bbf0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bbf6:	f7f5 fd4f 	bl	8001698 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bbfa:	4620      	mov	r0, r4
 800bbfc:	2100      	movs	r1, #0
 800bbfe:	f7ff ffd7 	bl	800bbb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc02:	4620      	mov	r0, r4
 800bc04:	f7ff fd74 	bl	800b6f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc08:	bd10      	pop	{r4, pc}
 800bc0a:	bf00      	nop
 800bc0c:	24006bd6 	.word	0x24006bd6

0800bc10 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bc10:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bc14:	1a13      	subs	r3, r2, r0
 800bc16:	4258      	negs	r0, r3
 800bc18:	4158      	adcs	r0, r3
 800bc1a:	4770      	bx	lr

0800bc1c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bc1c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bc20:	1a9b      	subs	r3, r3, r2
 800bc22:	2b00      	cmp	r3, #0
 800bc24:	bfdc      	itt	le
 800bc26:	6882      	ldrle	r2, [r0, #8]
 800bc28:	189b      	addle	r3, r3, r2
 800bc2a:	2b01      	cmp	r3, #1
 800bc2c:	bfcc      	ite	gt
 800bc2e:	2000      	movgt	r0, #0
 800bc30:	2001      	movle	r0, #1
 800bc32:	4770      	bx	lr

0800bc34 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bc34:	6902      	ldr	r2, [r0, #16]
 800bc36:	6843      	ldr	r3, [r0, #4]
 800bc38:	2024      	movs	r0, #36	; 0x24
 800bc3a:	fb00 3002 	mla	r0, r0, r2, r3
 800bc3e:	4770      	bx	lr

0800bc40 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bc40:	6803      	ldr	r3, [r0, #0]
 800bc42:	691b      	ldr	r3, [r3, #16]
 800bc44:	4718      	bx	r3

0800bc46 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bc46:	2301      	movs	r3, #1
 800bc48:	b570      	push	{r4, r5, r6, lr}
 800bc4a:	7203      	strb	r3, [r0, #8]
 800bc4c:	4604      	mov	r4, r0
 800bc4e:	6840      	ldr	r0, [r0, #4]
 800bc50:	6803      	ldr	r3, [r0, #0]
 800bc52:	699b      	ldr	r3, [r3, #24]
 800bc54:	4798      	blx	r3
 800bc56:	6803      	ldr	r3, [r0, #0]
 800bc58:	4605      	mov	r5, r0
 800bc5a:	2b40      	cmp	r3, #64	; 0x40
 800bc5c:	d00c      	beq.n	800bc78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc5e:	d810      	bhi.n	800bc82 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bc60:	2b04      	cmp	r3, #4
 800bc62:	d01d      	beq.n	800bca0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bc64:	d804      	bhi.n	800bc70 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bc66:	2b01      	cmp	r3, #1
 800bc68:	d006      	beq.n	800bc78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc6a:	2b02      	cmp	r3, #2
 800bc6c:	d02c      	beq.n	800bcc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bc6e:	bd70      	pop	{r4, r5, r6, pc}
 800bc70:	2b08      	cmp	r3, #8
 800bc72:	d01d      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bc74:	2b20      	cmp	r3, #32
 800bc76:	d1fa      	bne.n	800bc6e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bc78:	6823      	ldr	r3, [r4, #0]
 800bc7a:	4620      	mov	r0, r4
 800bc7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc7e:	4798      	blx	r3
 800bc80:	e013      	b.n	800bcaa <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bc82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bc86:	d0f7      	beq.n	800bc78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc88:	d804      	bhi.n	800bc94 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bc8a:	2b80      	cmp	r3, #128	; 0x80
 800bc8c:	d0f4      	beq.n	800bc78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc8e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bc92:	e7f0      	b.n	800bc76 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bc94:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bc98:	d0ee      	beq.n	800bc78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc9a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc9e:	e7e5      	b.n	800bc6c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bca0:	6823      	ldr	r3, [r4, #0]
 800bca2:	7f01      	ldrb	r1, [r0, #28]
 800bca4:	4620      	mov	r0, r4
 800bca6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bca8:	4798      	blx	r3
 800bcaa:	6823      	ldr	r3, [r4, #0]
 800bcac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bcae:	e006      	b.n	800bcbe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bcb0:	6823      	ldr	r3, [r4, #0]
 800bcb2:	7f01      	ldrb	r1, [r0, #28]
 800bcb4:	4620      	mov	r0, r4
 800bcb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcb8:	4798      	blx	r3
 800bcba:	6823      	ldr	r3, [r4, #0]
 800bcbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bcbe:	4629      	mov	r1, r5
 800bcc0:	4620      	mov	r0, r4
 800bcc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcc6:	4718      	bx	r3
 800bcc8:	6823      	ldr	r3, [r4, #0]
 800bcca:	4620      	mov	r0, r4
 800bccc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bcce:	4798      	blx	r3
 800bcd0:	e7f3      	b.n	800bcba <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bcd2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bcd2:	4770      	bx	lr

0800bcd4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bcd4:	4770      	bx	lr

0800bcd6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bcd6:	4770      	bx	lr

0800bcd8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bcd8:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bcdc:	b510      	push	{r4, lr}
 800bcde:	1ad2      	subs	r2, r2, r3
 800bce0:	2a00      	cmp	r2, #0
 800bce2:	bfdc      	itt	le
 800bce4:	6884      	ldrle	r4, [r0, #8]
 800bce6:	1912      	addle	r2, r2, r4
 800bce8:	2a01      	cmp	r2, #1
 800bcea:	dd16      	ble.n	800bd1a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bcec:	6842      	ldr	r2, [r0, #4]
 800bcee:	2424      	movs	r4, #36	; 0x24
 800bcf0:	fb04 2303 	mla	r3, r4, r3, r2
 800bcf4:	f101 0220 	add.w	r2, r1, #32
 800bcf8:	f851 4b04 	ldr.w	r4, [r1], #4
 800bcfc:	4291      	cmp	r1, r2
 800bcfe:	f843 4b04 	str.w	r4, [r3], #4
 800bd02:	d1f9      	bne.n	800bcf8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bd04:	780a      	ldrb	r2, [r1, #0]
 800bd06:	701a      	strb	r2, [r3, #0]
 800bd08:	68c3      	ldr	r3, [r0, #12]
 800bd0a:	6882      	ldr	r2, [r0, #8]
 800bd0c:	f3bf 8f5b 	dmb	ish
 800bd10:	3301      	adds	r3, #1
 800bd12:	429a      	cmp	r2, r3
 800bd14:	bfd8      	it	le
 800bd16:	1a9b      	suble	r3, r3, r2
 800bd18:	60c3      	str	r3, [r0, #12]
 800bd1a:	bd10      	pop	{r4, pc}

0800bd1c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bd1c:	6903      	ldr	r3, [r0, #16]
 800bd1e:	6882      	ldr	r2, [r0, #8]
 800bd20:	f3bf 8f5b 	dmb	ish
 800bd24:	3301      	adds	r3, #1
 800bd26:	429a      	cmp	r2, r3
 800bd28:	bfd8      	it	le
 800bd2a:	1a9b      	suble	r3, r3, r2
 800bd2c:	6103      	str	r3, [r0, #16]
 800bd2e:	4770      	bx	lr

0800bd30 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bd30:	b570      	push	{r4, r5, r6, lr}
 800bd32:	4604      	mov	r4, r0
 800bd34:	460e      	mov	r6, r1
 800bd36:	6860      	ldr	r0, [r4, #4]
 800bd38:	6803      	ldr	r3, [r0, #0]
 800bd3a:	685b      	ldr	r3, [r3, #4]
 800bd3c:	4798      	blx	r3
 800bd3e:	2800      	cmp	r0, #0
 800bd40:	d1f9      	bne.n	800bd36 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bd42:	4d0d      	ldr	r5, [pc, #52]	; (800bd78 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bd44:	6828      	ldr	r0, [r5, #0]
 800bd46:	6803      	ldr	r3, [r0, #0]
 800bd48:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd4a:	4798      	blx	r3
 800bd4c:	f7f5 fcb2 	bl	80016b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bd50:	6828      	ldr	r0, [r5, #0]
 800bd52:	2101      	movs	r1, #1
 800bd54:	f7ff ff2c 	bl	800bbb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd58:	6860      	ldr	r0, [r4, #4]
 800bd5a:	4631      	mov	r1, r6
 800bd5c:	6803      	ldr	r3, [r0, #0]
 800bd5e:	689b      	ldr	r3, [r3, #8]
 800bd60:	4798      	blx	r3
 800bd62:	6823      	ldr	r3, [r4, #0]
 800bd64:	4620      	mov	r0, r4
 800bd66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd68:	4798      	blx	r3
 800bd6a:	6828      	ldr	r0, [r5, #0]
 800bd6c:	6803      	ldr	r3, [r0, #0]
 800bd6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd72:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bd74:	4718      	bx	r3
 800bd76:	bf00      	nop
 800bd78:	24006bd8 	.word	0x24006bd8

0800bd7c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bd7c:	b508      	push	{r3, lr}
 800bd7e:	f7f5 fc8b 	bl	8001698 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bd86:	f7f5 bc8f 	b.w	80016a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bd8a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bd8a:	b510      	push	{r4, lr}
 800bd8c:	4604      	mov	r4, r0
 800bd8e:	2114      	movs	r1, #20
 800bd90:	f00e faf0 	bl	801a374 <_ZdlPvj>
 800bd94:	4620      	mov	r0, r4
 800bd96:	bd10      	pop	{r4, pc}

0800bd98 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd98:	b510      	push	{r4, lr}
 800bd9a:	4604      	mov	r4, r0
 800bd9c:	6840      	ldr	r0, [r0, #4]
 800bd9e:	6803      	ldr	r3, [r0, #0]
 800bda0:	681b      	ldr	r3, [r3, #0]
 800bda2:	4798      	blx	r3
 800bda4:	b948      	cbnz	r0, 800bdba <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bda6:	7a63      	ldrb	r3, [r4, #9]
 800bda8:	b13b      	cbz	r3, 800bdba <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bdaa:	7a23      	ldrb	r3, [r4, #8]
 800bdac:	b92b      	cbnz	r3, 800bdba <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bdae:	6823      	ldr	r3, [r4, #0]
 800bdb0:	4620      	mov	r0, r4
 800bdb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdb8:	4718      	bx	r3
 800bdba:	bd10      	pop	{r4, pc}

0800bdbc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bdbc:	b570      	push	{r4, r5, r6, lr}
 800bdbe:	4604      	mov	r4, r0
 800bdc0:	6840      	ldr	r0, [r0, #4]
 800bdc2:	6803      	ldr	r3, [r0, #0]
 800bdc4:	681b      	ldr	r3, [r3, #0]
 800bdc6:	4798      	blx	r3
 800bdc8:	4605      	mov	r5, r0
 800bdca:	b930      	cbnz	r0, 800bdda <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bdcc:	7a23      	ldrb	r3, [r4, #8]
 800bdce:	b123      	cbz	r3, 800bdda <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bdd0:	6860      	ldr	r0, [r4, #4]
 800bdd2:	6803      	ldr	r3, [r0, #0]
 800bdd4:	695b      	ldr	r3, [r3, #20]
 800bdd6:	4798      	blx	r3
 800bdd8:	7225      	strb	r5, [r4, #8]
 800bdda:	6860      	ldr	r0, [r4, #4]
 800bddc:	6803      	ldr	r3, [r0, #0]
 800bdde:	681b      	ldr	r3, [r3, #0]
 800bde0:	4798      	blx	r3
 800bde2:	b928      	cbnz	r0, 800bdf0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bde4:	6823      	ldr	r3, [r4, #0]
 800bde6:	4620      	mov	r0, r4
 800bde8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdee:	4718      	bx	r3
 800bdf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdf4:	f7f5 bc66 	b.w	80016c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bdf8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bdf8:	b510      	push	{r4, lr}
 800bdfa:	6082      	str	r2, [r0, #8]
 800bdfc:	2200      	movs	r2, #0
 800bdfe:	4c03      	ldr	r4, [pc, #12]	; (800be0c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800be00:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800be04:	e9c0 4100 	strd	r4, r1, [r0]
 800be08:	bd10      	pop	{r4, pc}
 800be0a:	bf00      	nop
 800be0c:	0801c638 	.word	0x0801c638

0800be10 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800be10:	6840      	ldr	r0, [r0, #4]
 800be12:	6803      	ldr	r3, [r0, #0]
 800be14:	681b      	ldr	r3, [r3, #0]
 800be16:	4718      	bx	r3

0800be18 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800be18:	b508      	push	{r3, lr}
 800be1a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800be1e:	b10b      	cbz	r3, 800be24 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800be20:	f7f5 fffc 	bl	8001e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800be24:	bd08      	pop	{r3, pc}

0800be26 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800be26:	6803      	ldr	r3, [r0, #0]
 800be28:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800be2c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800be2e:	4718      	bx	r3

0800be30 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800be30:	4770      	bx	lr

0800be32 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800be32:	b510      	push	{r4, lr}
 800be34:	4604      	mov	r4, r0
 800be36:	212c      	movs	r1, #44	; 0x2c
 800be38:	f00e fa9c 	bl	801a374 <_ZdlPvj>
 800be3c:	4620      	mov	r0, r4
 800be3e:	bd10      	pop	{r4, pc}

0800be40 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800be40:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800be44:	2bff      	cmp	r3, #255	; 0xff
 800be46:	b510      	push	{r4, lr}
 800be48:	d104      	bne.n	800be54 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800be4a:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800be4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800be50:	429a      	cmp	r2, r3
 800be52:	d105      	bne.n	800be60 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800be54:	2300      	movs	r3, #0
 800be56:	8003      	strh	r3, [r0, #0]
 800be58:	8043      	strh	r3, [r0, #2]
 800be5a:	8083      	strh	r3, [r0, #4]
 800be5c:	80c3      	strh	r3, [r0, #6]
 800be5e:	bd10      	pop	{r4, pc}
 800be60:	2300      	movs	r3, #0
 800be62:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800be66:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800be6a:	8003      	strh	r3, [r0, #0]
 800be6c:	8043      	strh	r3, [r0, #2]
 800be6e:	8084      	strh	r4, [r0, #4]
 800be70:	80c2      	strh	r2, [r0, #6]
 800be72:	e7f4      	b.n	800be5e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800be74 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800be74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be78:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800be7c:	b087      	sub	sp, #28
 800be7e:	4604      	mov	r4, r0
 800be80:	4689      	mov	r9, r1
 800be82:	b363      	cbz	r3, 800bede <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800be84:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800be86:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800be8a:	429a      	cmp	r2, r3
 800be8c:	d027      	beq.n	800bede <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800be8e:	ad06      	add	r5, sp, #24
 800be90:	2700      	movs	r7, #0
 800be92:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800be96:	4628      	mov	r0, r5
 800be98:	f004 ffee 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be9c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bea0:	a904      	add	r1, sp, #16
 800bea2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800bea6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800beaa:	4620      	mov	r0, r4
 800beac:	6823      	ldr	r3, [r4, #0]
 800beae:	9704      	str	r7, [sp, #16]
 800beb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800beb2:	4798      	blx	r3
 800beb4:	f7f6 fada 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800beb8:	6803      	ldr	r3, [r0, #0]
 800beba:	4606      	mov	r6, r0
 800bebc:	4628      	mov	r0, r5
 800bebe:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800bec2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800bec4:	f8ad 300c 	strh.w	r3, [sp, #12]
 800bec8:	f005 f88a 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800becc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bed0:	4601      	mov	r1, r0
 800bed2:	9701      	str	r7, [sp, #4]
 800bed4:	aa04      	add	r2, sp, #16
 800bed6:	9300      	str	r3, [sp, #0]
 800bed8:	4630      	mov	r0, r6
 800beda:	464b      	mov	r3, r9
 800bedc:	47c0      	blx	r8
 800bede:	b007      	add	sp, #28
 800bee0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800bee4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800bee4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bee6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800beea:	460d      	mov	r5, r1
 800beec:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bef0:	2100      	movs	r1, #0
 800bef2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bef6:	4604      	mov	r4, r0
 800bef8:	6803      	ldr	r3, [r0, #0]
 800befa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800befe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bf00:	9100      	str	r1, [sp, #0]
 800bf02:	4669      	mov	r1, sp
 800bf04:	4798      	blx	r3
 800bf06:	4621      	mov	r1, r4
 800bf08:	a802      	add	r0, sp, #8
 800bf0a:	f003 fb15 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bf0e:	f7f6 faad 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 800bf12:	6803      	ldr	r3, [r0, #0]
 800bf14:	aa02      	add	r2, sp, #8
 800bf16:	4669      	mov	r1, sp
 800bf18:	695e      	ldr	r6, [r3, #20]
 800bf1a:	462b      	mov	r3, r5
 800bf1c:	47b0      	blx	r6
 800bf1e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf22:	2800      	cmp	r0, #0
 800bf24:	bf08      	it	eq
 800bf26:	461d      	moveq	r5, r3
 800bf28:	84e5      	strh	r5, [r4, #38]	; 0x26
 800bf2a:	b004      	add	sp, #16
 800bf2c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800bf30 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800bf30:	2200      	movs	r2, #0
 800bf32:	8082      	strh	r2, [r0, #4]
 800bf34:	80c2      	strh	r2, [r0, #6]
 800bf36:	8102      	strh	r2, [r0, #8]
 800bf38:	8142      	strh	r2, [r0, #10]
 800bf3a:	8182      	strh	r2, [r0, #12]
 800bf3c:	81c2      	strh	r2, [r0, #14]
 800bf3e:	8202      	strh	r2, [r0, #16]
 800bf40:	8242      	strh	r2, [r0, #18]
 800bf42:	61c2      	str	r2, [r0, #28]
 800bf44:	8402      	strh	r2, [r0, #32]
 800bf46:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf48:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf4c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf50:	2201      	movs	r2, #1
 800bf52:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800bf56:	4a04      	ldr	r2, [pc, #16]	; (800bf68 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800bf58:	6002      	str	r2, [r0, #0]
 800bf5a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bf5e:	84c2      	strh	r2, [r0, #38]	; 0x26
 800bf60:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800bf64:	4770      	bx	lr
 800bf66:	bf00      	nop
 800bf68:	0801c65c 	.word	0x0801c65c

0800bf6c <_ZN8touchgfx8TextArea8setWidthEs>:
 800bf6c:	b530      	push	{r4, r5, lr}
 800bf6e:	b085      	sub	sp, #20
 800bf70:	6803      	ldr	r3, [r0, #0]
 800bf72:	4604      	mov	r4, r0
 800bf74:	8101      	strh	r1, [r0, #8]
 800bf76:	466d      	mov	r5, sp
 800bf78:	4601      	mov	r1, r0
 800bf7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bf7e:	343c      	adds	r4, #60	; 0x3c
 800bf80:	4628      	mov	r0, r5
 800bf82:	4798      	blx	r3
 800bf84:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800bf88:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800bf8c:	b005      	add	sp, #20
 800bf8e:	bd30      	pop	{r4, r5, pc}

0800bf90 <_ZN8touchgfx8TextArea9setHeightEs>:
 800bf90:	b530      	push	{r4, r5, lr}
 800bf92:	b085      	sub	sp, #20
 800bf94:	6803      	ldr	r3, [r0, #0]
 800bf96:	4604      	mov	r4, r0
 800bf98:	8141      	strh	r1, [r0, #10]
 800bf9a:	466d      	mov	r5, sp
 800bf9c:	4601      	mov	r1, r0
 800bf9e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bfa2:	343c      	adds	r4, #60	; 0x3c
 800bfa4:	4628      	mov	r0, r5
 800bfa6:	4798      	blx	r3
 800bfa8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800bfac:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800bfb0:	b005      	add	sp, #20
 800bfb2:	bd30      	pop	{r4, r5, pc}

0800bfb4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800bfb4:	2200      	movs	r2, #0
 800bfb6:	8002      	strh	r2, [r0, #0]
 800bfb8:	8042      	strh	r2, [r0, #2]
 800bfba:	8082      	strh	r2, [r0, #4]
 800bfbc:	80c2      	strh	r2, [r0, #6]
 800bfbe:	4770      	bx	lr

0800bfc0 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800bfc0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800bfc4:	4770      	bx	lr
	...

0800bfc8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800bfc8:	b570      	push	{r4, r5, r6, lr}
 800bfca:	6803      	ldr	r3, [r0, #0]
 800bfcc:	4604      	mov	r4, r0
 800bfce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bfd0:	460d      	mov	r5, r1
 800bfd2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800bfd4:	4b08      	ldr	r3, [pc, #32]	; (800bff8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800bfd6:	681b      	ldr	r3, [r3, #0]
 800bfd8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bfdc:	4b07      	ldr	r3, [pc, #28]	; (800bffc <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800bfde:	681b      	ldr	r3, [r3, #0]
 800bfe0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800bfe4:	6803      	ldr	r3, [r0, #0]
 800bfe6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfe8:	4798      	blx	r3
 800bfea:	1a29      	subs	r1, r5, r0
 800bfec:	4633      	mov	r3, r6
 800bfee:	4620      	mov	r0, r4
 800bff0:	b209      	sxth	r1, r1
 800bff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bff6:	4718      	bx	r3
 800bff8:	24006c28 	.word	0x24006c28
 800bffc:	24006c30 	.word	0x24006c30

0800c000 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800c000:	b570      	push	{r4, r5, r6, lr}
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	4604      	mov	r4, r0
 800c006:	4615      	mov	r5, r2
 800c008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c00a:	4798      	blx	r3
 800c00c:	6823      	ldr	r3, [r4, #0]
 800c00e:	4629      	mov	r1, r5
 800c010:	4620      	mov	r0, r4
 800c012:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c014:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c018:	4718      	bx	r3

0800c01a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800c01a:	2000      	movs	r0, #0
 800c01c:	4770      	bx	lr

0800c01e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800c01e:	2000      	movs	r0, #0
 800c020:	4770      	bx	lr
	...

0800c024 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800c024:	4b07      	ldr	r3, [pc, #28]	; (800c044 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800c026:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c028:	881b      	ldrh	r3, [r3, #0]
 800c02a:	4293      	cmp	r3, r2
 800c02c:	bf81      	itttt	hi
 800c02e:	4b06      	ldrhi	r3, [pc, #24]	; (800c048 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800c030:	681b      	ldrhi	r3, [r3, #0]
 800c032:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800c036:	7858      	ldrbhi	r0, [r3, #1]
 800c038:	bf8c      	ite	hi
 800c03a:	f000 0003 	andhi.w	r0, r0, #3
 800c03e:	2000      	movls	r0, #0
 800c040:	4770      	bx	lr
 800c042:	bf00      	nop
 800c044:	24006c2c 	.word	0x24006c2c
 800c048:	24006c28 	.word	0x24006c28

0800c04c <_ZN8touchgfx8TextAreaD1Ev>:
 800c04c:	4770      	bx	lr
	...

0800c050 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800c050:	4b11      	ldr	r3, [pc, #68]	; (800c098 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800c052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c056:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c058:	4604      	mov	r4, r0
 800c05a:	881b      	ldrh	r3, [r3, #0]
 800c05c:	428b      	cmp	r3, r1
 800c05e:	d918      	bls.n	800c092 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800c060:	6803      	ldr	r3, [r0, #0]
 800c062:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800c064:	4b0d      	ldr	r3, [pc, #52]	; (800c09c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800c066:	6818      	ldr	r0, [r3, #0]
 800c068:	f7f6 fe64 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c06c:	6823      	ldr	r3, [r4, #0]
 800c06e:	4606      	mov	r6, r0
 800c070:	4620      	mov	r0, r4
 800c072:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c074:	4798      	blx	r3
 800c076:	6823      	ldr	r3, [r4, #0]
 800c078:	4607      	mov	r7, r0
 800c07a:	4620      	mov	r0, r4
 800c07c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c080:	4798      	blx	r3
 800c082:	463a      	mov	r2, r7
 800c084:	4603      	mov	r3, r0
 800c086:	4631      	mov	r1, r6
 800c088:	4620      	mov	r0, r4
 800c08a:	46ac      	mov	ip, r5
 800c08c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c090:	4760      	bx	ip
 800c092:	2000      	movs	r0, #0
 800c094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c098:	24006c2c 	.word	0x24006c2c
 800c09c:	24006c34 	.word	0x24006c34

0800c0a0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c0a0:	4b18      	ldr	r3, [pc, #96]	; (800c104 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800c0a2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c0a6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c0a8:	4604      	mov	r4, r0
 800c0aa:	881b      	ldrh	r3, [r3, #0]
 800c0ac:	428b      	cmp	r3, r1
 800c0ae:	d926      	bls.n	800c0fe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800c0b0:	4b15      	ldr	r3, [pc, #84]	; (800c108 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c0b8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c0bc:	4b13      	ldr	r3, [pc, #76]	; (800c10c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c0be:	7855      	ldrb	r5, [r2, #1]
 800c0c0:	681b      	ldr	r3, [r3, #0]
 800c0c2:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800c0c6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800c0ca:	6833      	ldr	r3, [r6, #0]
 800c0cc:	69df      	ldr	r7, [r3, #28]
 800c0ce:	4b10      	ldr	r3, [pc, #64]	; (800c110 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800c0d0:	6818      	ldr	r0, [r3, #0]
 800c0d2:	f7f6 fe2f 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c0d6:	6823      	ldr	r3, [r4, #0]
 800c0d8:	4680      	mov	r8, r0
 800c0da:	4620      	mov	r0, r4
 800c0dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c0de:	4798      	blx	r3
 800c0e0:	6823      	ldr	r3, [r4, #0]
 800c0e2:	4681      	mov	r9, r0
 800c0e4:	4620      	mov	r0, r4
 800c0e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c0ea:	4798      	blx	r3
 800c0ec:	464b      	mov	r3, r9
 800c0ee:	9000      	str	r0, [sp, #0]
 800c0f0:	4642      	mov	r2, r8
 800c0f2:	4629      	mov	r1, r5
 800c0f4:	4630      	mov	r0, r6
 800c0f6:	47b8      	blx	r7
 800c0f8:	b003      	add	sp, #12
 800c0fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c0fe:	2000      	movs	r0, #0
 800c100:	e7fa      	b.n	800c0f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800c102:	bf00      	nop
 800c104:	24006c2c 	.word	0x24006c2c
 800c108:	24006c28 	.word	0x24006c28
 800c10c:	24006c30 	.word	0x24006c30
 800c110:	24006c34 	.word	0x24006c34

0800c114 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c114:	b40e      	push	{r1, r2, r3}
 800c116:	4b30      	ldr	r3, [pc, #192]	; (800c1d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800c118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c11c:	881a      	ldrh	r2, [r3, #0]
 800c11e:	b09d      	sub	sp, #116	; 0x74
 800c120:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c122:	4604      	mov	r4, r0
 800c124:	429a      	cmp	r2, r3
 800c126:	d954      	bls.n	800c1d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800c128:	aa26      	add	r2, sp, #152	; 0x98
 800c12a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800c1dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800c12e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800c1e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800c132:	9202      	str	r2, [sp, #8]
 800c134:	f8d9 2000 	ldr.w	r2, [r9]
 800c138:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c13c:	f8d8 3000 	ldr.w	r3, [r8]
 800c140:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800c144:	682b      	ldr	r3, [r5, #0]
 800c146:	4628      	mov	r0, r5
 800c148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c14a:	4798      	blx	r3
 800c14c:	4606      	mov	r6, r0
 800c14e:	b207      	sxth	r7, r0
 800c150:	a803      	add	r0, sp, #12
 800c152:	f003 fdce 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800c156:	682b      	ldr	r3, [r5, #0]
 800c158:	4628      	mov	r0, r5
 800c15a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c15c:	4798      	blx	r3
 800c15e:	682b      	ldr	r3, [r5, #0]
 800c160:	4682      	mov	sl, r0
 800c162:	4628      	mov	r0, r5
 800c164:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c166:	4798      	blx	r3
 800c168:	4653      	mov	r3, sl
 800c16a:	9000      	str	r0, [sp, #0]
 800c16c:	a803      	add	r0, sp, #12
 800c16e:	9a02      	ldr	r2, [sp, #8]
 800c170:	9925      	ldr	r1, [sp, #148]	; 0x94
 800c172:	f003 fe19 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c176:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c178:	f8d9 3000 	ldr.w	r3, [r9]
 800c17c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800c180:	8925      	ldrh	r5, [r4, #8]
 800c182:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800c186:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800c18a:	eba5 050c 	sub.w	r5, r5, ip
 800c18e:	784a      	ldrb	r2, [r1, #1]
 800c190:	f8d8 3000 	ldr.w	r3, [r8]
 800c194:	b22d      	sxth	r5, r5
 800c196:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800c19a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800c19e:	9500      	str	r5, [sp, #0]
 800c1a0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800c1a4:	a803      	add	r0, sp, #12
 800c1a6:	f001 fc1d 	bl	800d9e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800c1aa:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800c1ae:	b203      	sxth	r3, r0
 800c1b0:	18b9      	adds	r1, r7, r2
 800c1b2:	2900      	cmp	r1, #0
 800c1b4:	dd0b      	ble.n	800c1ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800c1b6:	3b01      	subs	r3, #1
 800c1b8:	fb13 f302 	smulbb	r3, r3, r2
 800c1bc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800c1c0:	b21f      	sxth	r7, r3
 800c1c2:	4638      	mov	r0, r7
 800c1c4:	b01d      	add	sp, #116	; 0x74
 800c1c6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c1ca:	b003      	add	sp, #12
 800c1cc:	4770      	bx	lr
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	dcf7      	bgt.n	800c1c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800c1d2:	2700      	movs	r7, #0
 800c1d4:	e7f5      	b.n	800c1c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800c1d6:	bf00      	nop
 800c1d8:	24006c2c 	.word	0x24006c2c
 800c1dc:	24006c28 	.word	0x24006c28
 800c1e0:	24006c30 	.word	0x24006c30

0800c1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800c1e4:	4bbd      	ldr	r3, [pc, #756]	; (800c4dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800c1e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1ea:	460c      	mov	r4, r1
 800c1ec:	881b      	ldrh	r3, [r3, #0]
 800c1ee:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800c1f0:	b0a9      	sub	sp, #164	; 0xa4
 800c1f2:	4680      	mov	r8, r0
 800c1f4:	428b      	cmp	r3, r1
 800c1f6:	d809      	bhi.n	800c20c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800c1f8:	2300      	movs	r3, #0
 800c1fa:	f04f 32ff 	mov.w	r2, #4294967295
 800c1fe:	6083      	str	r3, [r0, #8]
 800c200:	e9c0 3200 	strd	r3, r2, [r0]
 800c204:	4640      	mov	r0, r8
 800c206:	b029      	add	sp, #164	; 0xa4
 800c208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c20c:	4eb4      	ldr	r6, [pc, #720]	; (800c4e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800c20e:	6833      	ldr	r3, [r6, #0]
 800c210:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800c214:	4bb3      	ldr	r3, [pc, #716]	; (800c4e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800c216:	681b      	ldr	r3, [r3, #0]
 800c218:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800c21c:	4bb2      	ldr	r3, [pc, #712]	; (800c4e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800c21e:	6818      	ldr	r0, [r3, #0]
 800c220:	f7f6 fd88 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c224:	682b      	ldr	r3, [r5, #0]
 800c226:	4681      	mov	r9, r0
 800c228:	4628      	mov	r0, r5
 800c22a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c22c:	4798      	blx	r3
 800c22e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800c230:	b203      	sxth	r3, r0
 800c232:	4682      	mov	sl, r0
 800c234:	4407      	add	r7, r0
 800c236:	a80f      	add	r0, sp, #60	; 0x3c
 800c238:	9304      	str	r3, [sp, #16]
 800c23a:	b2bb      	uxth	r3, r7
 800c23c:	9303      	str	r3, [sp, #12]
 800c23e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800c242:	2b00      	cmp	r3, #0
 800c244:	f040 80a5 	bne.w	800c392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800c248:	f003 fd53 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800c24c:	682b      	ldr	r3, [r5, #0]
 800c24e:	4628      	mov	r0, r5
 800c250:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c252:	4798      	blx	r3
 800c254:	682b      	ldr	r3, [r5, #0]
 800c256:	4606      	mov	r6, r0
 800c258:	4628      	mov	r0, r5
 800c25a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c25c:	4798      	blx	r3
 800c25e:	6823      	ldr	r3, [r4, #0]
 800c260:	4607      	mov	r7, r0
 800c262:	4620      	mov	r0, r4
 800c264:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c266:	4798      	blx	r3
 800c268:	6823      	ldr	r3, [r4, #0]
 800c26a:	4683      	mov	fp, r0
 800c26c:	4620      	mov	r0, r4
 800c26e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c272:	4798      	blx	r3
 800c274:	463b      	mov	r3, r7
 800c276:	4649      	mov	r1, r9
 800c278:	4632      	mov	r2, r6
 800c27a:	2600      	movs	r6, #0
 800c27c:	e9cd b000 	strd	fp, r0, [sp]
 800c280:	a80f      	add	r0, sp, #60	; 0x3c
 800c282:	4637      	mov	r7, r6
 800c284:	f003 fda5 	bl	800fdd2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800c288:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c28c:	f8df b250 	ldr.w	fp, [pc, #592]	; 800c4e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800c290:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c294:	bf0c      	ite	eq
 800c296:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800c29a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800c29e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c2a0:	4629      	mov	r1, r5
 800c2a2:	f8db 3000 	ldr.w	r3, [fp]
 800c2a6:	a80f      	add	r0, sp, #60	; 0x3c
 800c2a8:	3701      	adds	r7, #1
 800c2aa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c2ae:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c2b2:	b2bf      	uxth	r7, r7
 800c2b4:	785b      	ldrb	r3, [r3, #1]
 800c2b6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c2ba:	f001 f8ae 	bl	800d41a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c2be:	9b03      	ldr	r3, [sp, #12]
 800c2c0:	4286      	cmp	r6, r0
 800c2c2:	eba9 0903 	sub.w	r9, r9, r3
 800c2c6:	bfb8      	it	lt
 800c2c8:	4606      	movlt	r6, r0
 800c2ca:	a80f      	add	r0, sp, #60	; 0x3c
 800c2cc:	fa0f f989 	sxth.w	r9, r9
 800c2d0:	b236      	sxth	r6, r6
 800c2d2:	f003 fd35 	bl	800fd40 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800c2d6:	b918      	cbnz	r0, 800c2e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800c2d8:	7a2b      	ldrb	r3, [r5, #8]
 800c2da:	444b      	add	r3, r9
 800c2dc:	2b00      	cmp	r3, #0
 800c2de:	dcde      	bgt.n	800c29e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800c2e0:	9b03      	ldr	r3, [sp, #12]
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	9a04      	ldr	r2, [sp, #16]
 800c2e6:	fb13 f707 	smulbb	r7, r3, r7
 800c2ea:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c2ec:	f895 9009 	ldrb.w	r9, [r5, #9]
 800c2f0:	1aff      	subs	r7, r7, r3
 800c2f2:	b2bf      	uxth	r7, r7
 800c2f4:	b23b      	sxth	r3, r7
 800c2f6:	429a      	cmp	r2, r3
 800c2f8:	bfa8      	it	ge
 800c2fa:	4657      	movge	r7, sl
 800c2fc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c300:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c304:	6823      	ldr	r3, [r4, #0]
 800c306:	444f      	add	r7, r9
 800c308:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c30a:	bf08      	it	eq
 800c30c:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800c310:	fa1f f987 	uxth.w	r9, r7
 800c314:	bf18      	it	ne
 800c316:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800c31a:	4798      	blx	r3
 800c31c:	2801      	cmp	r0, #1
 800c31e:	fa0f f789 	sxth.w	r7, r9
 800c322:	b2b3      	uxth	r3, r6
 800c324:	f000 80e2 	beq.w	800c4ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800c328:	2802      	cmp	r0, #2
 800c32a:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800c32e:	f000 80e3 	beq.w	800c4f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800c332:	7aea      	ldrb	r2, [r5, #11]
 800c334:	b236      	sxth	r6, r6
 800c336:	7b2d      	ldrb	r5, [r5, #12]
 800c338:	1ab6      	subs	r6, r6, r2
 800c33a:	442a      	add	r2, r5
 800c33c:	fa1f fa86 	uxth.w	sl, r6
 800c340:	4413      	add	r3, r2
 800c342:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c346:	fa0f fb8a 	sxth.w	fp, sl
 800c34a:	b29b      	uxth	r3, r3
 800c34c:	2a02      	cmp	r2, #2
 800c34e:	b21e      	sxth	r6, r3
 800c350:	f000 80d6 	beq.w	800c500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800c354:	2a03      	cmp	r2, #3
 800c356:	f000 80de 	beq.w	800c516 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800c35a:	2a01      	cmp	r2, #1
 800c35c:	f040 80e6 	bne.w	800c52c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800c360:	8925      	ldrh	r5, [r4, #8]
 800c362:	4633      	mov	r3, r6
 800c364:	463e      	mov	r6, r7
 800c366:	eba5 0909 	sub.w	r9, r5, r9
 800c36a:	461f      	mov	r7, r3
 800c36c:	465d      	mov	r5, fp
 800c36e:	fa0f fb89 	sxth.w	fp, r9
 800c372:	4b5d      	ldr	r3, [pc, #372]	; (800c4e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800c374:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c376:	6818      	ldr	r0, [r3, #0]
 800c378:	f7f6 fcdc 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c37c:	f8a8 b000 	strh.w	fp, [r8]
 800c380:	f8a8 5002 	strh.w	r5, [r8, #2]
 800c384:	f8a8 6004 	strh.w	r6, [r8, #4]
 800c388:	f8a8 7006 	strh.w	r7, [r8, #6]
 800c38c:	f8c8 0008 	str.w	r0, [r8, #8]
 800c390:	e738      	b.n	800c204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800c392:	f003 fcae 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800c396:	682b      	ldr	r3, [r5, #0]
 800c398:	4628      	mov	r0, r5
 800c39a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c39c:	4798      	blx	r3
 800c39e:	682b      	ldr	r3, [r5, #0]
 800c3a0:	4607      	mov	r7, r0
 800c3a2:	4628      	mov	r0, r5
 800c3a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c3a6:	4798      	blx	r3
 800c3a8:	6823      	ldr	r3, [r4, #0]
 800c3aa:	4683      	mov	fp, r0
 800c3ac:	4620      	mov	r0, r4
 800c3ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c3b0:	4798      	blx	r3
 800c3b2:	6822      	ldr	r2, [r4, #0]
 800c3b4:	9005      	str	r0, [sp, #20]
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800c3bc:	4790      	blx	r2
 800c3be:	9b05      	ldr	r3, [sp, #20]
 800c3c0:	463a      	mov	r2, r7
 800c3c2:	4649      	mov	r1, r9
 800c3c4:	9001      	str	r0, [sp, #4]
 800c3c6:	a80f      	add	r0, sp, #60	; 0x3c
 800c3c8:	9300      	str	r3, [sp, #0]
 800c3ca:	465b      	mov	r3, fp
 800c3cc:	f003 fd01 	bl	800fdd2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800c3d0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c3d4:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800c3d8:	af0f      	add	r7, sp, #60	; 0x3c
 800c3da:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c3de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3e2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c3e4:	bf0a      	itet	eq
 800c3e6:	464a      	moveq	r2, r9
 800c3e8:	461a      	movne	r2, r3
 800c3ea:	4699      	moveq	r9, r3
 800c3ec:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800c3f0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800c3f4:	1ad2      	subs	r2, r2, r3
 800c3f6:	6833      	ldr	r3, [r6, #0]
 800c3f8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800c3fc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c400:	7859      	ldrb	r1, [r3, #1]
 800c402:	2300      	movs	r3, #0
 800c404:	9707      	str	r7, [sp, #28]
 800c406:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800c40a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c40e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c412:	f88d 1020 	strb.w	r1, [sp, #32]
 800c416:	9509      	str	r5, [sp, #36]	; 0x24
 800c418:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800c41c:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800c420:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800c424:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c428:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800c42c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c430:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800c434:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c438:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800c43c:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800c440:	b350      	cbz	r0, 800c498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800c442:	682b      	ldr	r3, [r5, #0]
 800c444:	4628      	mov	r0, r5
 800c446:	695b      	ldr	r3, [r3, #20]
 800c448:	4798      	blx	r3
 800c44a:	4607      	mov	r7, r0
 800c44c:	b320      	cbz	r0, 800c498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800c44e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c450:	4639      	mov	r1, r7
 800c452:	6803      	ldr	r3, [r0, #0]
 800c454:	68db      	ldr	r3, [r3, #12]
 800c456:	4798      	blx	r3
 800c458:	4606      	mov	r6, r0
 800c45a:	b1e8      	cbz	r0, 800c498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800c45c:	7b43      	ldrb	r3, [r0, #13]
 800c45e:	7a82      	ldrb	r2, [r0, #10]
 800c460:	005b      	lsls	r3, r3, #1
 800c462:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c466:	4313      	orrs	r3, r2
 800c468:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800c46c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800c470:	2b06      	cmp	r3, #6
 800c472:	d111      	bne.n	800c498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800c474:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c476:	4632      	mov	r2, r6
 800c478:	4639      	mov	r1, r7
 800c47a:	6803      	ldr	r3, [r0, #0]
 800c47c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c47e:	4798      	blx	r3
 800c480:	7b73      	ldrb	r3, [r6, #13]
 800c482:	005b      	lsls	r3, r3, #1
 800c484:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c488:	7ab3      	ldrb	r3, [r6, #10]
 800c48a:	4313      	orrs	r3, r2
 800c48c:	4418      	add	r0, r3
 800c48e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c492:	4418      	add	r0, r3
 800c494:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800c498:	2600      	movs	r6, #0
 800c49a:	4637      	mov	r7, r6
 800c49c:	a806      	add	r0, sp, #24
 800c49e:	3701      	adds	r7, #1
 800c4a0:	f001 f99d 	bl	800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c4a4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800c4a8:	9b03      	ldr	r3, [sp, #12]
 800c4aa:	b2bf      	uxth	r7, r7
 800c4ac:	4286      	cmp	r6, r0
 800c4ae:	eba9 0903 	sub.w	r9, r9, r3
 800c4b2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c4b6:	bfb8      	it	lt
 800c4b8:	4606      	movlt	r6, r0
 800c4ba:	fa0f f989 	sxth.w	r9, r9
 800c4be:	b236      	sxth	r6, r6
 800c4c0:	2b00      	cmp	r3, #0
 800c4c2:	f43f af0d 	beq.w	800c2e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800c4c6:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800c4ca:	2b00      	cmp	r3, #0
 800c4cc:	f47f af08 	bne.w	800c2e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800c4d0:	7a2b      	ldrb	r3, [r5, #8]
 800c4d2:	444b      	add	r3, r9
 800c4d4:	2b00      	cmp	r3, #0
 800c4d6:	dce1      	bgt.n	800c49c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800c4d8:	e702      	b.n	800c2e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800c4da:	bf00      	nop
 800c4dc:	24006c2c 	.word	0x24006c2c
 800c4e0:	24006c28 	.word	0x24006c28
 800c4e4:	24006c30 	.word	0x24006c30
 800c4e8:	24006c34 	.word	0x24006c34
 800c4ec:	ebaa 0606 	sub.w	r6, sl, r6
 800c4f0:	2002      	movs	r0, #2
 800c4f2:	fb96 f6f0 	sdiv	r6, r6, r0
 800c4f6:	e71c      	b.n	800c332 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800c4f8:	441e      	add	r6, r3
 800c4fa:	ebaa 0606 	sub.w	r6, sl, r6
 800c4fe:	e718      	b.n	800c332 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800c500:	8925      	ldrh	r5, [r4, #8]
 800c502:	1aed      	subs	r5, r5, r3
 800c504:	eba5 050a 	sub.w	r5, r5, sl
 800c508:	fa0f fb85 	sxth.w	fp, r5
 800c50c:	8965      	ldrh	r5, [r4, #10]
 800c50e:	eba5 0509 	sub.w	r5, r5, r9
 800c512:	b22d      	sxth	r5, r5
 800c514:	e72d      	b.n	800c372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800c516:	8965      	ldrh	r5, [r4, #10]
 800c518:	f04f 0b00 	mov.w	fp, #0
 800c51c:	1aed      	subs	r5, r5, r3
 800c51e:	4633      	mov	r3, r6
 800c520:	463e      	mov	r6, r7
 800c522:	eba5 050a 	sub.w	r5, r5, sl
 800c526:	461f      	mov	r7, r3
 800c528:	b22d      	sxth	r5, r5
 800c52a:	e722      	b.n	800c372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800c52c:	2500      	movs	r5, #0
 800c52e:	e720      	b.n	800c372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800c530 <_ZN8touchgfx8TextAreaD0Ev>:
 800c530:	b510      	push	{r4, lr}
 800c532:	4604      	mov	r4, r0
 800c534:	2148      	movs	r1, #72	; 0x48
 800c536:	f00d ff1d 	bl	801a374 <_ZdlPvj>
 800c53a:	4620      	mov	r0, r4
 800c53c:	bd10      	pop	{r4, pc}
	...

0800c540 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800c540:	b513      	push	{r0, r1, r4, lr}
 800c542:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c546:	4604      	mov	r4, r0
 800c548:	b1fb      	cbz	r3, 800c58a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800c54a:	4b16      	ldr	r3, [pc, #88]	; (800c5a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800c54c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c54e:	881b      	ldrh	r3, [r3, #0]
 800c550:	428b      	cmp	r3, r1
 800c552:	d91a      	bls.n	800c58a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800c554:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c558:	2b00      	cmp	r3, #0
 800c55a:	dd16      	ble.n	800c58a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800c55c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c560:	2b00      	cmp	r3, #0
 800c562:	dd12      	ble.n	800c58a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800c564:	4b10      	ldr	r3, [pc, #64]	; (800c5a8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800c566:	6818      	ldr	r0, [r3, #0]
 800c568:	f7f6 fbe4 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c56c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800c570:	6822      	ldr	r2, [r4, #0]
 800c572:	2b00      	cmp	r3, #0
 800c574:	db06      	blt.n	800c584 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800c576:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c57a:	2b00      	cmp	r3, #0
 800c57c:	db02      	blt.n	800c584 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800c57e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c580:	4298      	cmp	r0, r3
 800c582:	d004      	beq.n	800c58e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800c584:	6953      	ldr	r3, [r2, #20]
 800c586:	4620      	mov	r0, r4
 800c588:	4798      	blx	r3
 800c58a:	b002      	add	sp, #8
 800c58c:	bd10      	pop	{r4, pc}
 800c58e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800c592:	466b      	mov	r3, sp
 800c594:	6912      	ldr	r2, [r2, #16]
 800c596:	c903      	ldmia	r1, {r0, r1}
 800c598:	e883 0003 	stmia.w	r3, {r0, r1}
 800c59c:	4619      	mov	r1, r3
 800c59e:	4620      	mov	r0, r4
 800c5a0:	4790      	blx	r2
 800c5a2:	e7f2      	b.n	800c58a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800c5a4:	24006c2c 	.word	0x24006c2c
 800c5a8:	24006c34 	.word	0x24006c34

0800c5ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800c5ac:	4b45      	ldr	r3, [pc, #276]	; (800c6c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800c5ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c5b4:	b08e      	sub	sp, #56	; 0x38
 800c5b6:	881b      	ldrh	r3, [r3, #0]
 800c5b8:	4604      	mov	r4, r0
 800c5ba:	4293      	cmp	r3, r2
 800c5bc:	d97e      	bls.n	800c6bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800c5be:	6808      	ldr	r0, [r1, #0]
 800c5c0:	ab05      	add	r3, sp, #20
 800c5c2:	6849      	ldr	r1, [r1, #4]
 800c5c4:	4d40      	ldr	r5, [pc, #256]	; (800c6c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800c5c6:	c303      	stmia	r3!, {r0, r1}
 800c5c8:	4611      	mov	r1, r2
 800c5ca:	6828      	ldr	r0, [r5, #0]
 800c5cc:	f7f6 fbb2 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c5d0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800c5d4:	2b00      	cmp	r3, #0
 800c5d6:	db11      	blt.n	800c5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800c5d8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c5dc:	2b00      	cmp	r3, #0
 800c5de:	db0d      	blt.n	800c5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800c5e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c5e2:	4298      	cmp	r0, r3
 800c5e4:	d10a      	bne.n	800c5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800c5e6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800c5ea:	ab09      	add	r3, sp, #36	; 0x24
 800c5ec:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c5f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800c5f4:	4619      	mov	r1, r3
 800c5f6:	a805      	add	r0, sp, #20
 800c5f8:	f7fd fda2 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800c5fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c600:	2b00      	cmp	r3, #0
 800c602:	dd5b      	ble.n	800c6bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800c604:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c608:	2b00      	cmp	r3, #0
 800c60a:	dd57      	ble.n	800c6bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800c60c:	4f2f      	ldr	r7, [pc, #188]	; (800c6cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800c60e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c610:	683b      	ldr	r3, [r7, #0]
 800c612:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c616:	4b2e      	ldr	r3, [pc, #184]	; (800c6d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800c618:	681b      	ldr	r3, [r3, #0]
 800c61a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800c61e:	2e00      	cmp	r6, #0
 800c620:	d04c      	beq.n	800c6bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800c622:	6823      	ldr	r3, [r4, #0]
 800c624:	4620      	mov	r0, r4
 800c626:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800c62a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c62c:	4798      	blx	r3
 800c62e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c630:	683b      	ldr	r3, [r7, #0]
 800c632:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800c636:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c63a:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800c63e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800c642:	785b      	ldrb	r3, [r3, #1]
 800c644:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800c648:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c64c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c64e:	9609      	str	r6, [sp, #36]	; 0x24
 800c650:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c654:	4b1f      	ldr	r3, [pc, #124]	; (800c6d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800c656:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800c65a:	681b      	ldr	r3, [r3, #0]
 800c65c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800c660:	910b      	str	r1, [sp, #44]	; 0x2c
 800c662:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800c666:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800c66a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800c66e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800c672:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800c676:	b10a      	cbz	r2, 800c67c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800c678:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800c67a:	b906      	cbnz	r6, 800c67e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800c67c:	689e      	ldr	r6, [r3, #8]
 800c67e:	af07      	add	r7, sp, #28
 800c680:	4621      	mov	r1, r4
 800c682:	4638      	mov	r0, r7
 800c684:	f002 ff58 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c688:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c68a:	6828      	ldr	r0, [r5, #0]
 800c68c:	f7f6 fb52 	bl	8002d34 <_ZNK8touchgfx5Texts7getTextEt>
 800c690:	6823      	ldr	r3, [r4, #0]
 800c692:	4605      	mov	r5, r0
 800c694:	4620      	mov	r0, r4
 800c696:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c698:	4798      	blx	r3
 800c69a:	6823      	ldr	r3, [r4, #0]
 800c69c:	4680      	mov	r8, r0
 800c69e:	4620      	mov	r0, r4
 800c6a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c6a4:	4798      	blx	r3
 800c6a6:	ab09      	add	r3, sp, #36	; 0x24
 800c6a8:	9501      	str	r5, [sp, #4]
 800c6aa:	9300      	str	r3, [sp, #0]
 800c6ac:	ab05      	add	r3, sp, #20
 800c6ae:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800c6b2:	4630      	mov	r0, r6
 800c6b4:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c6b8:	f7f6 faee 	bl	8002c98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c6bc:	b00e      	add	sp, #56	; 0x38
 800c6be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c6c2:	bf00      	nop
 800c6c4:	24006c2c 	.word	0x24006c2c
 800c6c8:	24006c34 	.word	0x24006c34
 800c6cc:	24006c28 	.word	0x24006c28
 800c6d0:	24006c30 	.word	0x24006c30
 800c6d4:	24006bd8 	.word	0x24006bd8

0800c6d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c6d8:	b538      	push	{r3, r4, r5, lr}
 800c6da:	4b0e      	ldr	r3, [pc, #56]	; (800c714 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c6dc:	4604      	mov	r4, r0
 800c6de:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c6e0:	881b      	ldrh	r3, [r3, #0]
 800c6e2:	429a      	cmp	r2, r3
 800c6e4:	d214      	bcs.n	800c710 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c6e6:	6803      	ldr	r3, [r0, #0]
 800c6e8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c6ea:	4798      	blx	r3
 800c6ec:	6823      	ldr	r3, [r4, #0]
 800c6ee:	4605      	mov	r5, r0
 800c6f0:	4620      	mov	r0, r4
 800c6f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c6f4:	4798      	blx	r3
 800c6f6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c6fa:	b22d      	sxth	r5, r5
 800c6fc:	4601      	mov	r1, r0
 800c6fe:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c702:	bf06      	itte	eq
 800c704:	4602      	moveq	r2, r0
 800c706:	4629      	moveq	r1, r5
 800c708:	462a      	movne	r2, r5
 800c70a:	4620      	mov	r0, r4
 800c70c:	f7fe f930 	bl	800a970 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c710:	bd38      	pop	{r3, r4, r5, pc}
 800c712:	bf00      	nop
 800c714:	24006c2c 	.word	0x24006c2c

0800c718 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c718:	b530      	push	{r4, r5, lr}
 800c71a:	888b      	ldrh	r3, [r1, #4]
 800c71c:	b085      	sub	sp, #20
 800c71e:	4604      	mov	r4, r0
 800c720:	8583      	strh	r3, [r0, #44]	; 0x2c
 800c722:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c726:	b923      	cbnz	r3, 800c732 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c728:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c72c:	b90b      	cbnz	r3, 800c732 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c72e:	f7ff ffd3 	bl	800c6d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c732:	6823      	ldr	r3, [r4, #0]
 800c734:	466d      	mov	r5, sp
 800c736:	4621      	mov	r1, r4
 800c738:	343c      	adds	r4, #60	; 0x3c
 800c73a:	4628      	mov	r0, r5
 800c73c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c740:	4798      	blx	r3
 800c742:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c746:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c74a:	b005      	add	sp, #20
 800c74c:	bd30      	pop	{r4, r5, pc}

0800c74e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c74e:	2300      	movs	r3, #0
 800c750:	8083      	strh	r3, [r0, #4]
 800c752:	80c3      	strh	r3, [r0, #6]
 800c754:	8003      	strh	r3, [r0, #0]
 800c756:	8043      	strh	r3, [r0, #2]
 800c758:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c75c:	2bff      	cmp	r3, #255	; 0xff
 800c75e:	bf01      	itttt	eq
 800c760:	890b      	ldrheq	r3, [r1, #8]
 800c762:	8083      	strheq	r3, [r0, #4]
 800c764:	894b      	ldrheq	r3, [r1, #10]
 800c766:	80c3      	strheq	r3, [r0, #6]
 800c768:	4770      	bx	lr
	...

0800c76c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c76c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c76e:	4604      	mov	r4, r0
 800c770:	466b      	mov	r3, sp
 800c772:	6808      	ldr	r0, [r1, #0]
 800c774:	6849      	ldr	r1, [r1, #4]
 800c776:	c303      	stmia	r3!, {r0, r1}
 800c778:	6823      	ldr	r3, [r4, #0]
 800c77a:	4669      	mov	r1, sp
 800c77c:	4620      	mov	r0, r4
 800c77e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c780:	4798      	blx	r3
 800c782:	4b08      	ldr	r3, [pc, #32]	; (800c7a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c784:	681b      	ldr	r3, [r3, #0]
 800c786:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800c78a:	b10a      	cbz	r2, 800c790 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c78c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c78e:	b900      	cbnz	r0, 800c792 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c790:	6898      	ldr	r0, [r3, #8]
 800c792:	6803      	ldr	r3, [r0, #0]
 800c794:	4669      	mov	r1, sp
 800c796:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c798:	6a1d      	ldr	r5, [r3, #32]
 800c79a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c79e:	47a8      	blx	r5
 800c7a0:	b003      	add	sp, #12
 800c7a2:	bd30      	pop	{r4, r5, pc}
 800c7a4:	24006bd8 	.word	0x24006bd8

0800c7a8 <_ZN8touchgfx3BoxD1Ev>:
 800c7a8:	4770      	bx	lr

0800c7aa <_ZN8touchgfx3BoxD0Ev>:
 800c7aa:	b510      	push	{r4, lr}
 800c7ac:	4604      	mov	r4, r0
 800c7ae:	212c      	movs	r1, #44	; 0x2c
 800c7b0:	f00d fde0 	bl	801a374 <_ZdlPvj>
 800c7b4:	4620      	mov	r0, r4
 800c7b6:	bd10      	pop	{r4, pc}

0800c7b8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c7b8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800c7bc:	b12a      	cbz	r2, 800c7ca <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c7be:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c7c2:	b112      	cbz	r2, 800c7ca <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c7c4:	6803      	ldr	r3, [r0, #0]
 800c7c6:	695b      	ldr	r3, [r3, #20]
 800c7c8:	4718      	bx	r3
 800c7ca:	4770      	bx	lr

0800c7cc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c7cc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c7d0:	4770      	bx	lr

0800c7d2 <_ZN8touchgfx6ButtonD1Ev>:
 800c7d2:	4770      	bx	lr

0800c7d4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c7d4:	b570      	push	{r4, r5, r6, lr}
 800c7d6:	880b      	ldrh	r3, [r1, #0]
 800c7d8:	4605      	mov	r5, r0
 800c7da:	4604      	mov	r4, r0
 800c7dc:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c7de:	8813      	ldrh	r3, [r2, #0]
 800c7e0:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c7e4:	4628      	mov	r0, r5
 800c7e6:	f004 fb47 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c7ea:	4606      	mov	r6, r0
 800c7ec:	4628      	mov	r0, r5
 800c7ee:	f004 fb77 	bl	8010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c7f2:	6823      	ldr	r3, [r4, #0]
 800c7f4:	4605      	mov	r5, r0
 800c7f6:	4631      	mov	r1, r6
 800c7f8:	4620      	mov	r0, r4
 800c7fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7fc:	4798      	blx	r3
 800c7fe:	6823      	ldr	r3, [r4, #0]
 800c800:	4629      	mov	r1, r5
 800c802:	4620      	mov	r0, r4
 800c804:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c806:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c80a:	4718      	bx	r3

0800c80c <_ZN8touchgfx6ButtonD0Ev>:
 800c80c:	b510      	push	{r4, lr}
 800c80e:	4604      	mov	r4, r0
 800c810:	2134      	movs	r1, #52	; 0x34
 800c812:	f00d fdaf 	bl	801a374 <_ZdlPvj>
 800c816:	4620      	mov	r0, r4
 800c818:	bd10      	pop	{r4, pc}

0800c81a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c81a:	b510      	push	{r4, lr}
 800c81c:	4604      	mov	r4, r0
 800c81e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c820:	b150      	cbz	r0, 800c838 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c822:	6803      	ldr	r3, [r0, #0]
 800c824:	68db      	ldr	r3, [r3, #12]
 800c826:	4798      	blx	r3
 800c828:	b130      	cbz	r0, 800c838 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c82a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c82c:	4621      	mov	r1, r4
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c834:	689b      	ldr	r3, [r3, #8]
 800c836:	4718      	bx	r3
 800c838:	bd10      	pop	{r4, pc}

0800c83a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c83a:	b510      	push	{r4, lr}
 800c83c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800c840:	4604      	mov	r4, r0
 800c842:	2bff      	cmp	r3, #255	; 0xff
 800c844:	d006      	beq.n	800c854 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c846:	2300      	movs	r3, #0
 800c848:	8003      	strh	r3, [r0, #0]
 800c84a:	8043      	strh	r3, [r0, #2]
 800c84c:	8083      	strh	r3, [r0, #4]
 800c84e:	80c3      	strh	r3, [r0, #6]
 800c850:	4620      	mov	r0, r4
 800c852:	bd10      	pop	{r4, pc}
 800c854:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c858:	b11b      	cbz	r3, 800c862 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c85a:	3130      	adds	r1, #48	; 0x30
 800c85c:	f004 fb74 	bl	8010f48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c860:	e7f6      	b.n	800c850 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c862:	312e      	adds	r1, #46	; 0x2e
 800c864:	e7fa      	b.n	800c85c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800c868 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c86c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c870:	b08a      	sub	sp, #40	; 0x28
 800c872:	4604      	mov	r4, r0
 800c874:	4688      	mov	r8, r1
 800c876:	2b00      	cmp	r3, #0
 800c878:	d066      	beq.n	800c948 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c87a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c87c:	a805      	add	r0, sp, #20
 800c87e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c882:	f004 faf9 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c886:	4607      	mov	r7, r0
 800c888:	a805      	add	r0, sp, #20
 800c88a:	f004 fb29 	bl	8010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c88e:	f9b8 6000 	ldrsh.w	r6, [r8]
 800c892:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800c896:	2300      	movs	r3, #0
 800c898:	4432      	add	r2, r6
 800c89a:	9306      	str	r3, [sp, #24]
 800c89c:	b292      	uxth	r2, r2
 800c89e:	fa0f fc82 	sxth.w	ip, r2
 800c8a2:	459c      	cmp	ip, r3
 800c8a4:	dd52      	ble.n	800c94c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c8a6:	42b7      	cmp	r7, r6
 800c8a8:	dd50      	ble.n	800c94c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c8aa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800c8ae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800c8b2:	442b      	add	r3, r5
 800c8b4:	b29b      	uxth	r3, r3
 800c8b6:	b219      	sxth	r1, r3
 800c8b8:	2900      	cmp	r1, #0
 800c8ba:	dd47      	ble.n	800c94c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c8bc:	42a8      	cmp	r0, r5
 800c8be:	dd45      	ble.n	800c94c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c8c0:	4567      	cmp	r7, ip
 800c8c2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800c8c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c8ca:	bfb8      	it	lt
 800c8cc:	b2ba      	uxthlt	r2, r7
 800c8ce:	4288      	cmp	r0, r1
 800c8d0:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c8d4:	bfb8      	it	lt
 800c8d6:	b283      	uxthlt	r3, r0
 800c8d8:	1b92      	subs	r2, r2, r6
 800c8da:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c8de:	1b5b      	subs	r3, r3, r5
 800c8e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c8e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c8e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c8ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c8f0:	429a      	cmp	r2, r3
 800c8f2:	d026      	beq.n	800c942 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c8f4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	dd22      	ble.n	800c942 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c8fc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c900:	2b00      	cmp	r3, #0
 800c902:	dd1e      	ble.n	800c942 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c904:	2300      	movs	r3, #0
 800c906:	a908      	add	r1, sp, #32
 800c908:	4620      	mov	r0, r4
 800c90a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c90e:	6823      	ldr	r3, [r4, #0]
 800c910:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c912:	4798      	blx	r3
 800c914:	4b0f      	ldr	r3, [pc, #60]	; (800c954 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800c916:	681b      	ldr	r3, [r3, #0]
 800c918:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800c91c:	b10a      	cbz	r2, 800c922 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800c91e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c920:	b900      	cbnz	r0, 800c924 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800c922:	6898      	ldr	r0, [r3, #8]
 800c924:	2501      	movs	r5, #1
 800c926:	6801      	ldr	r1, [r0, #0]
 800c928:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c92c:	9502      	str	r5, [sp, #8]
 800c92e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c932:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c936:	9401      	str	r4, [sp, #4]
 800c938:	ac06      	add	r4, sp, #24
 800c93a:	9400      	str	r4, [sp, #0]
 800c93c:	688c      	ldr	r4, [r1, #8]
 800c93e:	a905      	add	r1, sp, #20
 800c940:	47a0      	blx	r4
 800c942:	b00a      	add	sp, #40	; 0x28
 800c944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c948:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c94a:	e797      	b.n	800c87c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c94c:	2300      	movs	r3, #0
 800c94e:	9307      	str	r3, [sp, #28]
 800c950:	e7ca      	b.n	800c8e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800c952:	bf00      	nop
 800c954:	24006bd8 	.word	0x24006bd8

0800c958 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800c958:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800c95c:	b12a      	cbz	r2, 800c96a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c95e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c962:	b112      	cbz	r2, 800c96a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c964:	6803      	ldr	r3, [r0, #0]
 800c966:	695b      	ldr	r3, [r3, #20]
 800c968:	4718      	bx	r3
 800c96a:	4770      	bx	lr

0800c96c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c96c:	b510      	push	{r4, lr}
 800c96e:	6803      	ldr	r3, [r0, #0]
 800c970:	460c      	mov	r4, r1
 800c972:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c974:	4798      	blx	r3
 800c976:	1b03      	subs	r3, r0, r4
 800c978:	4258      	negs	r0, r3
 800c97a:	4158      	adcs	r0, r3
 800c97c:	bd10      	pop	{r4, pc}
	...

0800c980 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c980:	4b01      	ldr	r3, [pc, #4]	; (800c988 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c982:	6019      	str	r1, [r3, #0]
 800c984:	4770      	bx	lr
 800c986:	bf00      	nop
 800c988:	24006be0 	.word	0x24006be0

0800c98c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c98c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c990:	4696      	mov	lr, r2
 800c992:	b097      	sub	sp, #92	; 0x5c
 800c994:	4605      	mov	r5, r0
 800c996:	4614      	mov	r4, r2
 800c998:	460e      	mov	r6, r1
 800c99a:	461f      	mov	r7, r3
 800c99c:	f10d 0c1c 	add.w	ip, sp, #28
 800c9a0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800c9a4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800c9a8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800c9ac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c9b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c9b4:	f8de 3000 	ldr.w	r3, [lr]
 800c9b8:	f104 0e14 	add.w	lr, r4, #20
 800c9bc:	f8cc 3000 	str.w	r3, [ip]
 800c9c0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c9c4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c9c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c9cc:	f8de 3000 	ldr.w	r3, [lr]
 800c9d0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c9d4:	f8cc 3000 	str.w	r3, [ip]
 800c9d8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c9dc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c9e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c9e4:	f8de 3000 	ldr.w	r3, [lr]
 800c9e8:	4631      	mov	r1, r6
 800c9ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c9ec:	4628      	mov	r0, r5
 800c9ee:	f8cc 3000 	str.w	r3, [ip]
 800c9f2:	682b      	ldr	r3, [r5, #0]
 800c9f4:	9201      	str	r2, [sp, #4]
 800c9f6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c9f8:	f8cd 8008 	str.w	r8, [sp, #8]
 800c9fc:	9200      	str	r2, [sp, #0]
 800c9fe:	aa07      	add	r2, sp, #28
 800ca00:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ca04:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800ca08:	463b      	mov	r3, r7
 800ca0a:	47d8      	blx	fp
 800ca0c:	46a6      	mov	lr, r4
 800ca0e:	f10d 0c1c 	add.w	ip, sp, #28
 800ca12:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ca16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ca1a:	f8de 3000 	ldr.w	r3, [lr]
 800ca1e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ca22:	343c      	adds	r4, #60	; 0x3c
 800ca24:	f8cc 3000 	str.w	r3, [ip]
 800ca28:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ca2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ca30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ca34:	f8de 3000 	ldr.w	r3, [lr]
 800ca38:	f8cc 3000 	str.w	r3, [ip]
 800ca3c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ca40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ca42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ca46:	6823      	ldr	r3, [r4, #0]
 800ca48:	4631      	mov	r1, r6
 800ca4a:	4628      	mov	r0, r5
 800ca4c:	f8cc 3000 	str.w	r3, [ip]
 800ca50:	682b      	ldr	r3, [r5, #0]
 800ca52:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ca56:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ca58:	f8cd 8008 	str.w	r8, [sp, #8]
 800ca5c:	9201      	str	r2, [sp, #4]
 800ca5e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ca60:	9200      	str	r2, [sp, #0]
 800ca62:	aa07      	add	r2, sp, #28
 800ca64:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800ca66:	463b      	mov	r3, r7
 800ca68:	47a0      	blx	r4
 800ca6a:	b017      	add	sp, #92	; 0x5c
 800ca6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ca70 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ca70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca74:	b08d      	sub	sp, #52	; 0x34
 800ca76:	4688      	mov	r8, r1
 800ca78:	f8d3 c000 	ldr.w	ip, [r3]
 800ca7c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ca7e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ca82:	680f      	ldr	r7, [r1, #0]
 800ca84:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ca88:	eba7 070c 	sub.w	r7, r7, ip
 800ca8c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ca90:	edd3 6a07 	vldr	s13, [r3, #28]
 800ca94:	42bc      	cmp	r4, r7
 800ca96:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ca98:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ca9c:	bfa8      	it	ge
 800ca9e:	463c      	movge	r4, r7
 800caa0:	f9b1 9000 	ldrsh.w	r9, [r1]
 800caa4:	f9ba 1000 	ldrsh.w	r1, [sl]
 800caa8:	ee07 4a90 	vmov	s15, r4
 800caac:	eb09 0e0c 	add.w	lr, r9, ip
 800cab0:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800cab4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800cab8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800cabc:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800cac0:	4571      	cmp	r1, lr
 800cac2:	ee25 4a04 	vmul.f32	s8, s10, s8
 800cac6:	ee65 4a24 	vmul.f32	s9, s10, s9
 800caca:	ee25 5a27 	vmul.f32	s10, s10, s15
 800cace:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800cad2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800cad6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800cada:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800cade:	ee36 0a84 	vadd.f32	s0, s13, s8
 800cae2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800cae6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800caea:	f340 808c 	ble.w	800cc06 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800caee:	eba1 060e 	sub.w	r6, r1, lr
 800caf2:	fb96 f5f4 	sdiv	r5, r6, r4
 800caf6:	ee07 5a10 	vmov	s14, r5
 800cafa:	2d00      	cmp	r5, #0
 800cafc:	fb04 6615 	mls	r6, r4, r5, r6
 800cb00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800cb04:	eea7 0a04 	vfma.f32	s0, s14, s8
 800cb08:	eee7 0a24 	vfma.f32	s1, s14, s9
 800cb0c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800cb10:	dd12      	ble.n	800cb38 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800cb12:	ee70 6a44 	vsub.f32	s13, s0, s8
 800cb16:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800cb1a:	ee31 2a45 	vsub.f32	s4, s2, s10
 800cb1e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800cb22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cb26:	bf14      	ite	ne
 800cb28:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800cb2c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800cb30:	ee61 1a87 	vmul.f32	s3, s3, s14
 800cb34:	ee22 2a07 	vmul.f32	s4, s4, s14
 800cb38:	fb05 f204 	mul.w	r2, r5, r4
 800cb3c:	1abf      	subs	r7, r7, r2
 800cb3e:	4494      	add	ip, r2
 800cb40:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800cb44:	4411      	add	r1, r2
 800cb46:	eb09 020c 	add.w	r2, r9, ip
 800cb4a:	b209      	sxth	r1, r1
 800cb4c:	443a      	add	r2, r7
 800cb4e:	428a      	cmp	r2, r1
 800cb50:	bfc4      	itt	gt
 800cb52:	eba1 0209 	subgt.w	r2, r1, r9
 800cb56:	eba2 070c 	subgt.w	r7, r2, ip
 800cb5a:	2f00      	cmp	r7, #0
 800cb5c:	dd50      	ble.n	800cc00 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800cb5e:	fb97 f1f4 	sdiv	r1, r7, r4
 800cb62:	fb04 7211 	mls	r2, r4, r1, r7
 800cb66:	b90a      	cbnz	r2, 800cb6c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800cb68:	3901      	subs	r1, #1
 800cb6a:	4622      	mov	r2, r4
 800cb6c:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800cb70:	6840      	ldr	r0, [r0, #4]
 800cb72:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800cb76:	44b6      	add	lr, r6
 800cb78:	f8d0 a000 	ldr.w	sl, [r0]
 800cb7c:	2900      	cmp	r1, #0
 800cb7e:	bfcc      	ite	gt
 800cb80:	46a1      	movgt	r9, r4
 800cb82:	4691      	movle	r9, r2
 800cb84:	900b      	str	r0, [sp, #44]	; 0x2c
 800cb86:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800cb88:	fb04 e505 	mla	r5, r4, r5, lr
 800cb8c:	eef0 6a42 	vmov.f32	s13, s4
 800cb90:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800cb94:	9008      	str	r0, [sp, #32]
 800cb96:	eeb0 7a61 	vmov.f32	s14, s3
 800cb9a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800cb9c:	695b      	ldr	r3, [r3, #20]
 800cb9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cba2:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800cba6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800cbaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800cbac:	445b      	add	r3, fp
 800cbae:	9307      	str	r3, [sp, #28]
 800cbb0:	ee16 3a90 	vmov	r3, s13
 800cbb4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800cbb8:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800cbbc:	ee21 3a23 	vmul.f32	s6, s2, s7
 800cbc0:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800cbc4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800cbc8:	ee17 7a90 	vmov	r7, s15
 800cbcc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800cbd0:	fb97 f7f4 	sdiv	r7, r7, r4
 800cbd4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800cbd8:	ee17 ca90 	vmov	ip, s15
 800cbdc:	fb9c fcf4 	sdiv	ip, ip, r4
 800cbe0:	fb0c 3306 	mla	r3, ip, r6, r3
 800cbe4:	9302      	str	r3, [sp, #8]
 800cbe6:	ee17 3a10 	vmov	r3, s14
 800cbea:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800cbee:	fb07 3706 	mla	r7, r7, r6, r3
 800cbf2:	eba9 0306 	sub.w	r3, r9, r6
 800cbf6:	e9cd 4700 	strd	r4, r7, [sp]
 800cbfa:	f8da 4008 	ldr.w	r4, [sl, #8]
 800cbfe:	47a0      	blx	r4
 800cc00:	b00d      	add	sp, #52	; 0x34
 800cc02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc06:	2500      	movs	r5, #0
 800cc08:	462e      	mov	r6, r5
 800cc0a:	e799      	b.n	800cb40 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800cc0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800cc0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc10:	b0db      	sub	sp, #364	; 0x16c
 800cc12:	461d      	mov	r5, r3
 800cc14:	4614      	mov	r4, r2
 800cc16:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800cc1a:	910f      	str	r1, [sp, #60]	; 0x3c
 800cc1c:	4629      	mov	r1, r5
 800cc1e:	930a      	str	r3, [sp, #40]	; 0x28
 800cc20:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800cc24:	9009      	str	r0, [sp, #36]	; 0x24
 800cc26:	930b      	str	r3, [sp, #44]	; 0x2c
 800cc28:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800cc2c:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800cc30:	9310      	str	r3, [sp, #64]	; 0x40
 800cc32:	6803      	ldr	r3, [r0, #0]
 800cc34:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800cc36:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800cc3a:	47b8      	blx	r7
 800cc3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cc3e:	6058      	str	r0, [r3, #4]
 800cc40:	2800      	cmp	r0, #0
 800cc42:	f000 83a1 	beq.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cc46:	682b      	ldr	r3, [r5, #0]
 800cc48:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800cc4c:	ed94 7a02 	vldr	s14, [r4, #8]
 800cc50:	9314      	str	r3, [sp, #80]	; 0x50
 800cc52:	686b      	ldr	r3, [r5, #4]
 800cc54:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800cc58:	9315      	str	r3, [sp, #84]	; 0x54
 800cc5a:	4bc1      	ldr	r3, [pc, #772]	; (800cf60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800cc5c:	7819      	ldrb	r1, [r3, #0]
 800cc5e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800cc62:	2900      	cmp	r1, #0
 800cc64:	bf16      	itet	ne
 800cc66:	4619      	movne	r1, r3
 800cc68:	4611      	moveq	r1, r2
 800cc6a:	4613      	movne	r3, r2
 800cc6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc70:	9116      	str	r1, [sp, #88]	; 0x58
 800cc72:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800cc76:	f240 8387 	bls.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cc7a:	ed94 7a07 	vldr	s14, [r4, #28]
 800cc7e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800cc82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc86:	f240 837f 	bls.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cc8a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800cc8e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800cc92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc96:	f240 8377 	bls.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cc9a:	6822      	ldr	r2, [r4, #0]
 800cc9c:	4bb1      	ldr	r3, [pc, #708]	; (800cf64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800cc9e:	429a      	cmp	r2, r3
 800cca0:	f2c0 8372 	blt.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cca4:	49b0      	ldr	r1, [pc, #704]	; (800cf68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800cca6:	6963      	ldr	r3, [r4, #20]
 800cca8:	428a      	cmp	r2, r1
 800ccaa:	f300 836d 	bgt.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ccae:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ccb2:	48ae      	ldr	r0, [pc, #696]	; (800cf6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ccb4:	33ff      	adds	r3, #255	; 0xff
 800ccb6:	4283      	cmp	r3, r0
 800ccb8:	f200 8366 	bhi.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ccbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ccbe:	4dac      	ldr	r5, [pc, #688]	; (800cf70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ccc0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ccc4:	33ff      	adds	r3, #255	; 0xff
 800ccc6:	42ab      	cmp	r3, r5
 800ccc8:	f200 835e 	bhi.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cccc:	6862      	ldr	r2, [r4, #4]
 800ccce:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ccd2:	33ff      	adds	r3, #255	; 0xff
 800ccd4:	4283      	cmp	r3, r0
 800ccd6:	f200 8357 	bhi.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ccda:	69a1      	ldr	r1, [r4, #24]
 800ccdc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800cce0:	33ff      	adds	r3, #255	; 0xff
 800cce2:	4283      	cmp	r3, r0
 800cce4:	f200 8350 	bhi.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cce8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ccea:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ccee:	30ff      	adds	r0, #255	; 0xff
 800ccf0:	42a8      	cmp	r0, r5
 800ccf2:	f200 8349 	bhi.w	800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ccf6:	428a      	cmp	r2, r1
 800ccf8:	f280 8110 	bge.w	800cf1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ccfc:	429a      	cmp	r2, r3
 800ccfe:	f300 8119 	bgt.w	800cf34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800cd02:	4299      	cmp	r1, r3
 800cd04:	f280 811d 	bge.w	800cf42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800cd08:	2502      	movs	r5, #2
 800cd0a:	2701      	movs	r7, #1
 800cd0c:	46a9      	mov	r9, r5
 800cd0e:	46b8      	mov	r8, r7
 800cd10:	f04f 0a00 	mov.w	sl, #0
 800cd14:	4621      	mov	r1, r4
 800cd16:	a849      	add	r0, sp, #292	; 0x124
 800cd18:	f003 fd36 	bl	8010788 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800cd1c:	4622      	mov	r2, r4
 800cd1e:	4653      	mov	r3, sl
 800cd20:	a949      	add	r1, sp, #292	; 0x124
 800cd22:	f8cd 9000 	str.w	r9, [sp]
 800cd26:	a819      	add	r0, sp, #100	; 0x64
 800cd28:	f003 fe5e 	bl	80109e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800cd2c:	4622      	mov	r2, r4
 800cd2e:	4653      	mov	r3, sl
 800cd30:	a949      	add	r1, sp, #292	; 0x124
 800cd32:	f8cd 8000 	str.w	r8, [sp]
 800cd36:	a829      	add	r0, sp, #164	; 0xa4
 800cd38:	f003 fe56 	bl	80109e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800cd3c:	4643      	mov	r3, r8
 800cd3e:	4622      	mov	r2, r4
 800cd40:	a949      	add	r1, sp, #292	; 0x124
 800cd42:	f8cd 9000 	str.w	r9, [sp]
 800cd46:	a839      	add	r0, sp, #228	; 0xe4
 800cd48:	f003 fe4e 	bl	80109e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800cd4c:	42af      	cmp	r7, r5
 800cd4e:	af12      	add	r7, sp, #72	; 0x48
 800cd50:	bfb7      	itett	lt
 800cd52:	2300      	movlt	r3, #0
 800cd54:	2301      	movge	r3, #1
 800cd56:	ad29      	addlt	r5, sp, #164	; 0xa4
 800cd58:	ac19      	addlt	r4, sp, #100	; 0x64
 800cd5a:	bfb1      	iteee	lt
 800cd5c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800cd5e:	ad19      	addge	r5, sp, #100	; 0x64
 800cd60:	930e      	strge	r3, [sp, #56]	; 0x38
 800cd62:	ac29      	addge	r4, sp, #164	; 0xa4
 800cd64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cd66:	e893 0003 	ldmia.w	r3, {r0, r1}
 800cd6a:	e887 0003 	stmia.w	r7, {r0, r1}
 800cd6e:	b928      	cbnz	r0, 800cd7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800cd70:	4b80      	ldr	r3, [pc, #512]	; (800cf74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800cd72:	6818      	ldr	r0, [r3, #0]
 800cd74:	6803      	ldr	r3, [r0, #0]
 800cd76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd78:	4798      	blx	r3
 800cd7a:	6038      	str	r0, [r7, #0]
 800cd7c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cd7e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cd82:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cd86:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800cd88:	930c      	str	r3, [sp, #48]	; 0x30
 800cd8a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cd8c:	6963      	ldr	r3, [r4, #20]
 800cd8e:	440b      	add	r3, r1
 800cd90:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cd94:	4408      	add	r0, r1
 800cd96:	b200      	sxth	r0, r0
 800cd98:	4283      	cmp	r3, r0
 800cd9a:	900d      	str	r0, [sp, #52]	; 0x34
 800cd9c:	f280 80dd 	bge.w	800cf5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800cda0:	428b      	cmp	r3, r1
 800cda2:	da08      	bge.n	800cdb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cda4:	2a00      	cmp	r2, #0
 800cda6:	dd06      	ble.n	800cdb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cda8:	1acb      	subs	r3, r1, r3
 800cdaa:	429a      	cmp	r2, r3
 800cdac:	f2c0 80e4 	blt.w	800cf78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800cdb0:	2b00      	cmp	r3, #0
 800cdb2:	f300 80e2 	bgt.w	800cf7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800cdb6:	6967      	ldr	r7, [r4, #20]
 800cdb8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cdbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cdbe:	443b      	add	r3, r7
 800cdc0:	461f      	mov	r7, r3
 800cdc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cdc4:	1bdf      	subs	r7, r3, r7
 800cdc6:	4297      	cmp	r7, r2
 800cdc8:	bfa8      	it	ge
 800cdca:	4617      	movge	r7, r2
 800cdcc:	2f00      	cmp	r7, #0
 800cdce:	f340 8166 	ble.w	800d09e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800cdd2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cdd4:	6829      	ldr	r1, [r5, #0]
 800cdd6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdda:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cdde:	4411      	add	r1, r2
 800cde0:	6820      	ldr	r0, [r4, #0]
 800cde2:	4299      	cmp	r1, r3
 800cde4:	dd1a      	ble.n	800ce1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cde6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cdea:	4402      	add	r2, r0
 800cdec:	440b      	add	r3, r1
 800cdee:	b21b      	sxth	r3, r3
 800cdf0:	429a      	cmp	r2, r3
 800cdf2:	dc13      	bgt.n	800ce1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cdf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cdf6:	a912      	add	r1, sp, #72	; 0x48
 800cdf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cdfa:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cdfc:	681b      	ldr	r3, [r3, #0]
 800cdfe:	9206      	str	r2, [sp, #24]
 800ce00:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ce02:	9500      	str	r5, [sp, #0]
 800ce04:	9205      	str	r2, [sp, #20]
 800ce06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ce08:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ce0c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ce0e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce12:	aa49      	add	r2, sp, #292	; 0x124
 800ce14:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ce18:	4623      	mov	r3, r4
 800ce1a:	47c8      	blx	r9
 800ce1c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ce20:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ce24:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ce28:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce2c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ce30:	68a1      	ldr	r1, [r4, #8]
 800ce32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce36:	ed94 6a08 	vldr	s12, [r4, #32]
 800ce3a:	edd4 6a07 	vldr	s13, [r4, #28]
 800ce3e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ce42:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ce46:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce4a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ce4e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce52:	441a      	add	r2, r3
 800ce54:	6963      	ldr	r3, [r4, #20]
 800ce56:	3301      	adds	r3, #1
 800ce58:	6022      	str	r2, [r4, #0]
 800ce5a:	6163      	str	r3, [r4, #20]
 800ce5c:	69a3      	ldr	r3, [r4, #24]
 800ce5e:	3b01      	subs	r3, #1
 800ce60:	61a3      	str	r3, [r4, #24]
 800ce62:	6923      	ldr	r3, [r4, #16]
 800ce64:	440b      	add	r3, r1
 800ce66:	68e1      	ldr	r1, [r4, #12]
 800ce68:	428b      	cmp	r3, r1
 800ce6a:	6123      	str	r3, [r4, #16]
 800ce6c:	db15      	blt.n	800ce9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ce6e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ce72:	3201      	adds	r2, #1
 800ce74:	1a5b      	subs	r3, r3, r1
 800ce76:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ce7a:	6022      	str	r2, [r4, #0]
 800ce7c:	6123      	str	r3, [r4, #16]
 800ce7e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce82:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ce86:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ce8a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ce8e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ce92:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ce96:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce9a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ce9e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cea2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cea6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ceaa:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ceae:	68a9      	ldr	r1, [r5, #8]
 800ceb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ceb4:	ed95 6a08 	vldr	s12, [r5, #32]
 800ceb8:	edd5 6a07 	vldr	s13, [r5, #28]
 800cebc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cec0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cec4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cec8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cecc:	edc5 6a07 	vstr	s13, [r5, #28]
 800ced0:	441a      	add	r2, r3
 800ced2:	696b      	ldr	r3, [r5, #20]
 800ced4:	3301      	adds	r3, #1
 800ced6:	602a      	str	r2, [r5, #0]
 800ced8:	616b      	str	r3, [r5, #20]
 800ceda:	69ab      	ldr	r3, [r5, #24]
 800cedc:	3b01      	subs	r3, #1
 800cede:	61ab      	str	r3, [r5, #24]
 800cee0:	692b      	ldr	r3, [r5, #16]
 800cee2:	440b      	add	r3, r1
 800cee4:	68e9      	ldr	r1, [r5, #12]
 800cee6:	428b      	cmp	r3, r1
 800cee8:	612b      	str	r3, [r5, #16]
 800ceea:	db15      	blt.n	800cf18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ceec:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cef0:	3201      	adds	r2, #1
 800cef2:	1a5b      	subs	r3, r3, r1
 800cef4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cef8:	602a      	str	r2, [r5, #0]
 800cefa:	612b      	str	r3, [r5, #16]
 800cefc:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf00:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cf04:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf08:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf0c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cf10:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf14:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf18:	3f01      	subs	r7, #1
 800cf1a:	e757      	b.n	800cdcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cf1c:	4299      	cmp	r1, r3
 800cf1e:	dc13      	bgt.n	800cf48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cf20:	429a      	cmp	r2, r3
 800cf22:	da14      	bge.n	800cf4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cf24:	2502      	movs	r5, #2
 800cf26:	2703      	movs	r7, #3
 800cf28:	f04f 0800 	mov.w	r8, #0
 800cf2c:	46a9      	mov	r9, r5
 800cf2e:	f04f 0a01 	mov.w	sl, #1
 800cf32:	e6ef      	b.n	800cd14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cf34:	2501      	movs	r5, #1
 800cf36:	2700      	movs	r7, #0
 800cf38:	46a9      	mov	r9, r5
 800cf3a:	46b8      	mov	r8, r7
 800cf3c:	f04f 0a02 	mov.w	sl, #2
 800cf40:	e6e8      	b.n	800cd14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cf42:	2501      	movs	r5, #1
 800cf44:	2702      	movs	r7, #2
 800cf46:	e6e1      	b.n	800cd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cf48:	2500      	movs	r5, #0
 800cf4a:	2701      	movs	r7, #1
 800cf4c:	e7f4      	b.n	800cf38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cf4e:	2702      	movs	r7, #2
 800cf50:	2503      	movs	r5, #3
 800cf52:	f04f 0900 	mov.w	r9, #0
 800cf56:	46b8      	mov	r8, r7
 800cf58:	e7e9      	b.n	800cf2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cf5a:	4613      	mov	r3, r2
 800cf5c:	e728      	b.n	800cdb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cf5e:	bf00      	nop
 800cf60:	24006bd0 	.word	0x24006bd0
 800cf64:	fffd8f01 	.word	0xfffd8f01
 800cf68:	00027100 	.word	0x00027100
 800cf6c:	0004e1ff 	.word	0x0004e1ff
 800cf70:	0004e1fe 	.word	0x0004e1fe
 800cf74:	24006bd8 	.word	0x24006bd8
 800cf78:	4613      	mov	r3, r2
 800cf7a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800cf7c:	469e      	mov	lr, r3
 800cf7e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800cf80:	469c      	mov	ip, r3
 800cf82:	9111      	str	r1, [sp, #68]	; 0x44
 800cf84:	f04f 0900 	mov.w	r9, #0
 800cf88:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800cf8c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800cf90:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800cf94:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cf98:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800cf9c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800cfa0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800cfa4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800cfa8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800cfac:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800cfb0:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800cfb4:	f1bc 0f00 	cmp.w	ip, #0
 800cfb8:	d147      	bne.n	800d04a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cfba:	eb03 0c07 	add.w	ip, r3, r7
 800cfbe:	1ad7      	subs	r7, r2, r3
 800cfc0:	f1b9 0f00 	cmp.w	r9, #0
 800cfc4:	d009      	beq.n	800cfda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cfc6:	9029      	str	r0, [sp, #164]	; 0xa4
 800cfc8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cfcc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cfd0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cfd4:	912d      	str	r1, [sp, #180]	; 0xb4
 800cfd6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800cfda:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cfdc:	f04f 0800 	mov.w	r8, #0
 800cfe0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cfe4:	9111      	str	r1, [sp, #68]	; 0x44
 800cfe6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cfea:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cfee:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cff2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cff6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cffa:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cffe:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800d002:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800d006:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800d00a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800d00e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800d012:	f1be 0f00 	cmp.w	lr, #0
 800d016:	d031      	beq.n	800d07c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800d018:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800d01a:	4450      	add	r0, sl
 800d01c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800d020:	4431      	add	r1, r6
 800d022:	ee37 7a04 	vadd.f32	s14, s14, s8
 800d026:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800d02a:	4549      	cmp	r1, r9
 800d02c:	db08      	blt.n	800d040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800d02e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800d032:	3001      	adds	r0, #1
 800d034:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800d038:	eba1 0109 	sub.w	r1, r1, r9
 800d03c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d040:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d044:	f04f 0801 	mov.w	r8, #1
 800d048:	e7e3      	b.n	800d012 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800d04a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800d04c:	4450      	add	r0, sl
 800d04e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800d052:	4431      	add	r1, r6
 800d054:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d058:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d05c:	4541      	cmp	r1, r8
 800d05e:	db08      	blt.n	800d072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800d060:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d064:	3001      	adds	r0, #1
 800d066:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d06a:	eba1 0108 	sub.w	r1, r1, r8
 800d06e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d072:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d076:	f04f 0901 	mov.w	r9, #1
 800d07a:	e79b      	b.n	800cfb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800d07c:	449c      	add	ip, r3
 800d07e:	1aff      	subs	r7, r7, r3
 800d080:	f1b8 0f00 	cmp.w	r8, #0
 800d084:	d009      	beq.n	800d09a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800d086:	9019      	str	r0, [sp, #100]	; 0x64
 800d088:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800d08c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800d090:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800d094:	911d      	str	r1, [sp, #116]	; 0x74
 800d096:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800d09a:	1ad2      	subs	r2, r2, r3
 800d09c:	e68b      	b.n	800cdb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d09e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d0a0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800d0a2:	2b00      	cmp	r3, #0
 800d0a4:	f000 80d1 	beq.w	800d24a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800d0a8:	ad19      	add	r5, sp, #100	; 0x64
 800d0aa:	ac39      	add	r4, sp, #228	; 0xe4
 800d0ac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d0ae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800d0b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800d0b6:	930c      	str	r3, [sp, #48]	; 0x30
 800d0b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d0ba:	6963      	ldr	r3, [r4, #20]
 800d0bc:	440b      	add	r3, r1
 800d0be:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800d0c2:	4408      	add	r0, r1
 800d0c4:	b200      	sxth	r0, r0
 800d0c6:	4283      	cmp	r3, r0
 800d0c8:	900d      	str	r0, [sp, #52]	; 0x34
 800d0ca:	f280 80c1 	bge.w	800d250 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800d0ce:	428b      	cmp	r3, r1
 800d0d0:	da08      	bge.n	800d0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d0d2:	2a00      	cmp	r2, #0
 800d0d4:	dd06      	ble.n	800d0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d0d6:	1acb      	subs	r3, r1, r3
 800d0d8:	429a      	cmp	r2, r3
 800d0da:	f2c0 80bb 	blt.w	800d254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800d0de:	2b00      	cmp	r3, #0
 800d0e0:	f300 80b9 	bgt.w	800d256 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800d0e4:	6967      	ldr	r7, [r4, #20]
 800d0e6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800d0ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d0ec:	443b      	add	r3, r7
 800d0ee:	461f      	mov	r7, r3
 800d0f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0f2:	1bdf      	subs	r7, r3, r7
 800d0f4:	4297      	cmp	r7, r2
 800d0f6:	bfa8      	it	ge
 800d0f8:	4617      	movge	r7, r2
 800d0fa:	2f00      	cmp	r7, #0
 800d0fc:	f340 813c 	ble.w	800d378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800d100:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d102:	6829      	ldr	r1, [r5, #0]
 800d104:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d108:	f9bb 3000 	ldrsh.w	r3, [fp]
 800d10c:	4411      	add	r1, r2
 800d10e:	6820      	ldr	r0, [r4, #0]
 800d110:	4299      	cmp	r1, r3
 800d112:	dd1a      	ble.n	800d14a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800d114:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800d118:	4402      	add	r2, r0
 800d11a:	440b      	add	r3, r1
 800d11c:	b21b      	sxth	r3, r3
 800d11e:	429a      	cmp	r2, r3
 800d120:	dc13      	bgt.n	800d14a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800d122:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d124:	a912      	add	r1, sp, #72	; 0x48
 800d126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d128:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d12a:	681b      	ldr	r3, [r3, #0]
 800d12c:	9206      	str	r2, [sp, #24]
 800d12e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d130:	9500      	str	r5, [sp, #0]
 800d132:	9205      	str	r2, [sp, #20]
 800d134:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d136:	e9cd b203 	strd	fp, r2, [sp, #12]
 800d13a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800d13c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800d140:	aa49      	add	r2, sp, #292	; 0x124
 800d142:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800d146:	4623      	mov	r3, r4
 800d148:	47c8      	blx	r9
 800d14a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800d14e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800d152:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800d156:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d15a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800d15e:	68a1      	ldr	r1, [r4, #8]
 800d160:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d164:	ed94 6a08 	vldr	s12, [r4, #32]
 800d168:	edd4 6a07 	vldr	s13, [r4, #28]
 800d16c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800d170:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d174:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800d178:	e9d4 2300 	ldrd	r2, r3, [r4]
 800d17c:	edc4 6a07 	vstr	s13, [r4, #28]
 800d180:	441a      	add	r2, r3
 800d182:	6963      	ldr	r3, [r4, #20]
 800d184:	3301      	adds	r3, #1
 800d186:	6022      	str	r2, [r4, #0]
 800d188:	6163      	str	r3, [r4, #20]
 800d18a:	69a3      	ldr	r3, [r4, #24]
 800d18c:	3b01      	subs	r3, #1
 800d18e:	61a3      	str	r3, [r4, #24]
 800d190:	6923      	ldr	r3, [r4, #16]
 800d192:	440b      	add	r3, r1
 800d194:	68e1      	ldr	r1, [r4, #12]
 800d196:	428b      	cmp	r3, r1
 800d198:	6123      	str	r3, [r4, #16]
 800d19a:	db15      	blt.n	800d1c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800d19c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800d1a0:	3201      	adds	r2, #1
 800d1a2:	1a5b      	subs	r3, r3, r1
 800d1a4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d1a8:	6022      	str	r2, [r4, #0]
 800d1aa:	6123      	str	r3, [r4, #16]
 800d1ac:	edc4 6a07 	vstr	s13, [r4, #28]
 800d1b0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800d1b4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d1b8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800d1bc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800d1c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d1c4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800d1c8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800d1cc:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800d1d0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800d1d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d1d8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800d1dc:	68a9      	ldr	r1, [r5, #8]
 800d1de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d1e2:	ed95 6a08 	vldr	s12, [r5, #32]
 800d1e6:	edd5 6a07 	vldr	s13, [r5, #28]
 800d1ea:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800d1ee:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d1f2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800d1f6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800d1fa:	edc5 6a07 	vstr	s13, [r5, #28]
 800d1fe:	441a      	add	r2, r3
 800d200:	696b      	ldr	r3, [r5, #20]
 800d202:	3301      	adds	r3, #1
 800d204:	602a      	str	r2, [r5, #0]
 800d206:	616b      	str	r3, [r5, #20]
 800d208:	69ab      	ldr	r3, [r5, #24]
 800d20a:	3b01      	subs	r3, #1
 800d20c:	61ab      	str	r3, [r5, #24]
 800d20e:	692b      	ldr	r3, [r5, #16]
 800d210:	440b      	add	r3, r1
 800d212:	68e9      	ldr	r1, [r5, #12]
 800d214:	428b      	cmp	r3, r1
 800d216:	612b      	str	r3, [r5, #16]
 800d218:	db15      	blt.n	800d246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800d21a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800d21e:	3201      	adds	r2, #1
 800d220:	1a5b      	subs	r3, r3, r1
 800d222:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d226:	602a      	str	r2, [r5, #0]
 800d228:	612b      	str	r3, [r5, #16]
 800d22a:	edc5 6a07 	vstr	s13, [r5, #28]
 800d22e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800d232:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d236:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800d23a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800d23e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d242:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800d246:	3f01      	subs	r7, #1
 800d248:	e757      	b.n	800d0fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800d24a:	ad39      	add	r5, sp, #228	; 0xe4
 800d24c:	ac19      	add	r4, sp, #100	; 0x64
 800d24e:	e72d      	b.n	800d0ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800d250:	4613      	mov	r3, r2
 800d252:	e744      	b.n	800d0de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800d254:	4613      	mov	r3, r2
 800d256:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800d258:	469e      	mov	lr, r3
 800d25a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800d25e:	461f      	mov	r7, r3
 800d260:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800d264:	f04f 0900 	mov.w	r9, #0
 800d268:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800d26c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800d270:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800d274:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800d278:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800d27c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800d27e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800d282:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800d286:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800d28a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800d28e:	960e      	str	r6, [sp, #56]	; 0x38
 800d290:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800d294:	2f00      	cmp	r7, #0
 800d296:	d146      	bne.n	800d326 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800d298:	449c      	add	ip, r3
 800d29a:	1ad7      	subs	r7, r2, r3
 800d29c:	f1b9 0f00 	cmp.w	r9, #0
 800d2a0:	d009      	beq.n	800d2b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800d2a2:	9039      	str	r0, [sp, #228]	; 0xe4
 800d2a4:	913d      	str	r1, [sp, #244]	; 0xf4
 800d2a6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800d2aa:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800d2ae:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800d2b2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800d2b6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800d2b8:	f04f 0800 	mov.w	r8, #0
 800d2bc:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800d2c0:	910e      	str	r1, [sp, #56]	; 0x38
 800d2c2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800d2c6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800d2ca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800d2ce:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800d2d2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800d2d6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800d2da:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800d2de:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800d2e2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800d2e6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800d2ea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800d2ee:	f1be 0f00 	cmp.w	lr, #0
 800d2f2:	d030      	beq.n	800d356 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800d2f4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d2f6:	4450      	add	r0, sl
 800d2f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800d2fc:	4431      	add	r1, r6
 800d2fe:	ee37 7a04 	vadd.f32	s14, s14, s8
 800d302:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800d306:	4549      	cmp	r1, r9
 800d308:	db08      	blt.n	800d31c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800d30a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800d30e:	3001      	adds	r0, #1
 800d310:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800d314:	eba1 0109 	sub.w	r1, r1, r9
 800d318:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d31c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d320:	f04f 0801 	mov.w	r8, #1
 800d324:	e7e3      	b.n	800d2ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800d326:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d328:	4450      	add	r0, sl
 800d32a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800d32e:	4431      	add	r1, r6
 800d330:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d334:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d338:	4541      	cmp	r1, r8
 800d33a:	db08      	blt.n	800d34e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d33c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d340:	3001      	adds	r0, #1
 800d342:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d346:	eba1 0108 	sub.w	r1, r1, r8
 800d34a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d34e:	3f01      	subs	r7, #1
 800d350:	f04f 0901 	mov.w	r9, #1
 800d354:	e79e      	b.n	800d294 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d356:	449c      	add	ip, r3
 800d358:	1aff      	subs	r7, r7, r3
 800d35a:	f1b8 0f00 	cmp.w	r8, #0
 800d35e:	d009      	beq.n	800d374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d360:	9019      	str	r0, [sp, #100]	; 0x64
 800d362:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800d366:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800d36a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800d36e:	911d      	str	r1, [sp, #116]	; 0x74
 800d370:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800d374:	1ad2      	subs	r2, r2, r3
 800d376:	e6b5      	b.n	800d0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d378:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d37a:	681b      	ldr	r3, [r3, #0]
 800d37c:	b923      	cbnz	r3, 800d388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d37e:	4b04      	ldr	r3, [pc, #16]	; (800d390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d380:	6818      	ldr	r0, [r3, #0]
 800d382:	6803      	ldr	r3, [r0, #0]
 800d384:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d386:	4798      	blx	r3
 800d388:	b05b      	add	sp, #364	; 0x16c
 800d38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d38e:	bf00      	nop
 800d390:	24006bd8 	.word	0x24006bd8

0800d394 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800d394:	b570      	push	{r4, r5, r6, lr}
 800d396:	4604      	mov	r4, r0
 800d398:	2500      	movs	r5, #0
 800d39a:	9805      	ldr	r0, [sp, #20]
 800d39c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800d3a0:	6061      	str	r1, [r4, #4]
 800d3a2:	8263      	strh	r3, [r4, #18]
 800d3a4:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800d3a8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d3ac:	8025      	strh	r5, [r4, #0]
 800d3ae:	7221      	strb	r1, [r4, #8]
 800d3b0:	7266      	strb	r6, [r4, #9]
 800d3b2:	60e0      	str	r0, [r4, #12]
 800d3b4:	8222      	strh	r2, [r4, #16]
 800d3b6:	82a3      	strh	r3, [r4, #20]
 800d3b8:	82e5      	strh	r5, [r4, #22]
 800d3ba:	8325      	strh	r5, [r4, #24]
 800d3bc:	8365      	strh	r5, [r4, #26]
 800d3be:	83a5      	strh	r5, [r4, #28]
 800d3c0:	83e5      	strh	r5, [r4, #30]
 800d3c2:	8425      	strh	r5, [r4, #32]
 800d3c4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800d3c8:	b32e      	cbz	r6, 800d416 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d3ca:	6803      	ldr	r3, [r0, #0]
 800d3cc:	695b      	ldr	r3, [r3, #20]
 800d3ce:	4798      	blx	r3
 800d3d0:	4606      	mov	r6, r0
 800d3d2:	b300      	cbz	r0, 800d416 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d3d4:	68e0      	ldr	r0, [r4, #12]
 800d3d6:	4631      	mov	r1, r6
 800d3d8:	6803      	ldr	r3, [r0, #0]
 800d3da:	68db      	ldr	r3, [r3, #12]
 800d3dc:	4798      	blx	r3
 800d3de:	4605      	mov	r5, r0
 800d3e0:	b1c8      	cbz	r0, 800d416 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d3e2:	7b43      	ldrb	r3, [r0, #13]
 800d3e4:	7a82      	ldrb	r2, [r0, #10]
 800d3e6:	005b      	lsls	r3, r3, #1
 800d3e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d3ec:	4313      	orrs	r3, r2
 800d3ee:	8423      	strh	r3, [r4, #32]
 800d3f0:	7a63      	ldrb	r3, [r4, #9]
 800d3f2:	2b06      	cmp	r3, #6
 800d3f4:	d10f      	bne.n	800d416 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d3f6:	68e0      	ldr	r0, [r4, #12]
 800d3f8:	462a      	mov	r2, r5
 800d3fa:	4631      	mov	r1, r6
 800d3fc:	6803      	ldr	r3, [r0, #0]
 800d3fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d400:	4798      	blx	r3
 800d402:	7b6b      	ldrb	r3, [r5, #13]
 800d404:	005b      	lsls	r3, r3, #1
 800d406:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d40a:	7aab      	ldrb	r3, [r5, #10]
 800d40c:	4313      	orrs	r3, r2
 800d40e:	4418      	add	r0, r3
 800d410:	8c23      	ldrh	r3, [r4, #32]
 800d412:	4418      	add	r0, r3
 800d414:	8420      	strh	r0, [r4, #32]
 800d416:	4620      	mov	r0, r4
 800d418:	bd70      	pop	{r4, r5, r6, pc}

0800d41a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d41a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d41e:	2400      	movs	r4, #0
 800d420:	b085      	sub	sp, #20
 800d422:	4681      	mov	r9, r0
 800d424:	4688      	mov	r8, r1
 800d426:	4692      	mov	sl, r2
 800d428:	469b      	mov	fp, r3
 800d42a:	4627      	mov	r7, r4
 800d42c:	4625      	mov	r5, r4
 800d42e:	4626      	mov	r6, r4
 800d430:	4554      	cmp	r4, sl
 800d432:	da2a      	bge.n	800d48a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d434:	2300      	movs	r3, #0
 800d436:	9303      	str	r3, [sp, #12]
 800d438:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d43c:	429d      	cmp	r5, r3
 800d43e:	d004      	beq.n	800d44a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d440:	f242 030b 	movw	r3, #8203	; 0x200b
 800d444:	429d      	cmp	r5, r3
 800d446:	bf18      	it	ne
 800d448:	462f      	movne	r7, r5
 800d44a:	ab03      	add	r3, sp, #12
 800d44c:	4642      	mov	r2, r8
 800d44e:	4659      	mov	r1, fp
 800d450:	4648      	mov	r0, r9
 800d452:	f002 ffaf 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d456:	4605      	mov	r5, r0
 800d458:	b1b8      	cbz	r0, 800d48a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d45a:	280a      	cmp	r0, #10
 800d45c:	d015      	beq.n	800d48a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d45e:	9a03      	ldr	r2, [sp, #12]
 800d460:	b18a      	cbz	r2, 800d486 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d462:	7b50      	ldrb	r0, [r2, #13]
 800d464:	4639      	mov	r1, r7
 800d466:	7a93      	ldrb	r3, [r2, #10]
 800d468:	0040      	lsls	r0, r0, #1
 800d46a:	8895      	ldrh	r5, [r2, #4]
 800d46c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d470:	4303      	orrs	r3, r0
 800d472:	4640      	mov	r0, r8
 800d474:	9301      	str	r3, [sp, #4]
 800d476:	f8d8 3000 	ldr.w	r3, [r8]
 800d47a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d47c:	4798      	blx	r3
 800d47e:	9b01      	ldr	r3, [sp, #4]
 800d480:	4418      	add	r0, r3
 800d482:	4406      	add	r6, r0
 800d484:	b2b6      	uxth	r6, r6
 800d486:	3401      	adds	r4, #1
 800d488:	e7d2      	b.n	800d430 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d48a:	4630      	mov	r0, r6
 800d48c:	b005      	add	sp, #20
 800d48e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d492 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d492:	2a02      	cmp	r2, #2
 800d494:	b530      	push	{r4, r5, lr}
 800d496:	d011      	beq.n	800d4bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d498:	2a03      	cmp	r2, #3
 800d49a:	d01c      	beq.n	800d4d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d49c:	2a01      	cmp	r2, #1
 800d49e:	d10c      	bne.n	800d4ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d4a0:	888b      	ldrh	r3, [r1, #4]
 800d4a2:	8801      	ldrh	r1, [r0, #0]
 800d4a4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d4a8:	1a5b      	subs	r3, r3, r1
 800d4aa:	8844      	ldrh	r4, [r0, #2]
 800d4ac:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d4b0:	1a9b      	subs	r3, r3, r2
 800d4b2:	8004      	strh	r4, [r0, #0]
 800d4b4:	8081      	strh	r1, [r0, #4]
 800d4b6:	8043      	strh	r3, [r0, #2]
 800d4b8:	80c2      	strh	r2, [r0, #6]
 800d4ba:	bd30      	pop	{r4, r5, pc}
 800d4bc:	88cb      	ldrh	r3, [r1, #6]
 800d4be:	8842      	ldrh	r2, [r0, #2]
 800d4c0:	1a9b      	subs	r3, r3, r2
 800d4c2:	88c2      	ldrh	r2, [r0, #6]
 800d4c4:	1a9b      	subs	r3, r3, r2
 800d4c6:	888a      	ldrh	r2, [r1, #4]
 800d4c8:	8801      	ldrh	r1, [r0, #0]
 800d4ca:	8043      	strh	r3, [r0, #2]
 800d4cc:	1a52      	subs	r2, r2, r1
 800d4ce:	8881      	ldrh	r1, [r0, #4]
 800d4d0:	1a52      	subs	r2, r2, r1
 800d4d2:	8002      	strh	r2, [r0, #0]
 800d4d4:	e7f1      	b.n	800d4ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d4d6:	88cb      	ldrh	r3, [r1, #6]
 800d4d8:	8841      	ldrh	r1, [r0, #2]
 800d4da:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d4de:	1a5b      	subs	r3, r3, r1
 800d4e0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d4e4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d4e8:	1a9b      	subs	r3, r3, r2
 800d4ea:	8045      	strh	r5, [r0, #2]
 800d4ec:	8082      	strh	r2, [r0, #4]
 800d4ee:	8003      	strh	r3, [r0, #0]
 800d4f0:	80c4      	strh	r4, [r0, #6]
 800d4f2:	e7e2      	b.n	800d4ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d4f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4f8:	b09f      	sub	sp, #124	; 0x7c
 800d4fa:	9116      	str	r1, [sp, #88]	; 0x58
 800d4fc:	9317      	str	r3, [sp, #92]	; 0x5c
 800d4fe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d500:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d502:	8809      	ldrh	r1, [r1, #0]
 800d504:	889b      	ldrh	r3, [r3, #4]
 800d506:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d50a:	440b      	add	r3, r1
 800d50c:	9212      	str	r2, [sp, #72]	; 0x48
 800d50e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d512:	b21b      	sxth	r3, r3
 800d514:	9011      	str	r0, [sp, #68]	; 0x44
 800d516:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d51a:	9310      	str	r3, [sp, #64]	; 0x40
 800d51c:	f8d8 3000 	ldr.w	r3, [r8]
 800d520:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800d524:	7b19      	ldrb	r1, [r3, #12]
 800d526:	7adb      	ldrb	r3, [r3, #11]
 800d528:	9114      	str	r1, [sp, #80]	; 0x50
 800d52a:	9315      	str	r3, [sp, #84]	; 0x54
 800d52c:	2a00      	cmp	r2, #0
 800d52e:	d06a      	beq.n	800d606 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d530:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d534:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d536:	2b06      	cmp	r3, #6
 800d538:	bf14      	ite	ne
 800d53a:	2301      	movne	r3, #1
 800d53c:	2302      	moveq	r3, #2
 800d53e:	4413      	add	r3, r2
 800d540:	f04f 0900 	mov.w	r9, #0
 800d544:	930f      	str	r3, [sp, #60]	; 0x3c
 800d546:	464c      	mov	r4, r9
 800d548:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d54c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d550:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d554:	4293      	cmp	r3, r2
 800d556:	f280 808f 	bge.w	800d678 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800d55a:	2300      	movs	r3, #0
 800d55c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800d560:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800d564:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d568:	429c      	cmp	r4, r3
 800d56a:	d006      	beq.n	800d57a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800d56c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d56e:	f242 020b 	movw	r2, #8203	; 0x200b
 800d572:	4294      	cmp	r4, r2
 800d574:	bf18      	it	ne
 800d576:	4623      	movne	r3, r4
 800d578:	930d      	str	r3, [sp, #52]	; 0x34
 800d57a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d57c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d57e:	f8d8 2000 	ldr.w	r2, [r8]
 800d582:	428b      	cmp	r3, r1
 800d584:	db41      	blt.n	800d60a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800d586:	6813      	ldr	r3, [r2, #0]
 800d588:	4610      	mov	r0, r2
 800d58a:	695b      	ldr	r3, [r3, #20]
 800d58c:	4798      	blx	r3
 800d58e:	4604      	mov	r4, r0
 800d590:	f8d8 0000 	ldr.w	r0, [r8]
 800d594:	aa1d      	add	r2, sp, #116	; 0x74
 800d596:	4621      	mov	r1, r4
 800d598:	6803      	ldr	r3, [r0, #0]
 800d59a:	689d      	ldr	r5, [r3, #8]
 800d59c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d5a0:	47a8      	blx	r5
 800d5a2:	901c      	str	r0, [sp, #112]	; 0x70
 800d5a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d5a8:	429c      	cmp	r4, r3
 800d5aa:	f000 80ec 	beq.w	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d5ae:	f242 030b 	movw	r3, #8203	; 0x200b
 800d5b2:	429c      	cmp	r4, r3
 800d5b4:	f000 80e7 	beq.w	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d5b8:	2c00      	cmp	r4, #0
 800d5ba:	f000 80f9 	beq.w	800d7b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800d5be:	2c0a      	cmp	r4, #10
 800d5c0:	d060      	beq.n	800d684 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800d5c2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d5c4:	b36a      	cbz	r2, 800d622 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800d5c6:	8894      	ldrh	r4, [r2, #4]
 800d5c8:	f1bb 0f00 	cmp.w	fp, #0
 800d5cc:	d03b      	beq.n	800d646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800d5ce:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d5d2:	f1bb 0f01 	cmp.w	fp, #1
 800d5d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d5da:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d5de:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d5e2:	ea49 0903 	orr.w	r9, r9, r3
 800d5e6:	d134      	bne.n	800d652 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800d5e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5ea:	eba6 0609 	sub.w	r6, r6, r9
 800d5ee:	2b00      	cmp	r3, #0
 800d5f0:	d14f      	bne.n	800d692 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800d5f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d5f4:	eb09 0306 	add.w	r3, r9, r6
 800d5f8:	4413      	add	r3, r2
 800d5fa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d5fc:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d600:	4293      	cmp	r3, r2
 800d602:	da51      	bge.n	800d6a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800d604:	e038      	b.n	800d678 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800d606:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d608:	e79a      	b.n	800d540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800d60a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d60e:	4659      	mov	r1, fp
 800d610:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d612:	9301      	str	r3, [sp, #4]
 800d614:	ab1d      	add	r3, sp, #116	; 0x74
 800d616:	9300      	str	r3, [sp, #0]
 800d618:	ab1c      	add	r3, sp, #112	; 0x70
 800d61a:	f002 ff14 	bl	8010446 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d61e:	4604      	mov	r4, r0
 800d620:	e7c0      	b.n	800d5a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800d622:	f8d8 0000 	ldr.w	r0, [r8]
 800d626:	6803      	ldr	r3, [r0, #0]
 800d628:	691b      	ldr	r3, [r3, #16]
 800d62a:	4798      	blx	r3
 800d62c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d630:	4298      	cmp	r0, r3
 800d632:	f000 80a8 	beq.w	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d636:	f242 030b 	movw	r3, #8203	; 0x200b
 800d63a:	4298      	cmp	r0, r3
 800d63c:	f000 80a3 	beq.w	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d640:	f1bb 0f00 	cmp.w	fp, #0
 800d644:	d100      	bne.n	800d648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800d646:	444e      	add	r6, r9
 800d648:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d64a:	2a00      	cmp	r2, #0
 800d64c:	d1bf      	bne.n	800d5ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d64e:	4691      	mov	r9, r2
 800d650:	e099      	b.n	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d652:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d654:	2b00      	cmp	r3, #0
 800d656:	f000 80ad 	beq.w	800d7b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 800d65a:	f1bb 0f00 	cmp.w	fp, #0
 800d65e:	d118      	bne.n	800d692 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800d660:	f8d8 0000 	ldr.w	r0, [r8]
 800d664:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d666:	6803      	ldr	r3, [r0, #0]
 800d668:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d66a:	4798      	blx	r3
 800d66c:	4406      	add	r6, r0
 800d66e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d670:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d672:	1af3      	subs	r3, r6, r3
 800d674:	4293      	cmp	r3, r2
 800d676:	dd17      	ble.n	800d6a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800d678:	2c00      	cmp	r4, #0
 800d67a:	f000 8099 	beq.w	800d7b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800d67e:	2c0a      	cmp	r4, #10
 800d680:	f040 8087 	bne.w	800d792 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800d684:	240a      	movs	r4, #10
 800d686:	fab4 f084 	clz	r0, r4
 800d68a:	0940      	lsrs	r0, r0, #5
 800d68c:	b01f      	add	sp, #124	; 0x7c
 800d68e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d692:	f8d8 0000 	ldr.w	r0, [r8]
 800d696:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d698:	6803      	ldr	r3, [r0, #0]
 800d69a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d69c:	4798      	blx	r3
 800d69e:	f1bb 0f01 	cmp.w	fp, #1
 800d6a2:	eba6 0600 	sub.w	r6, r6, r0
 800d6a6:	d0a4      	beq.n	800d5f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800d6a8:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d6aa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d6ac:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d6b0:	f9b3 7000 	ldrsh.w	r7, [r3]
 800d6b4:	7b43      	ldrb	r3, [r0, #13]
 800d6b6:	4431      	add	r1, r6
 800d6b8:	015b      	lsls	r3, r3, #5
 800d6ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d6be:	7983      	ldrb	r3, [r0, #6]
 800d6c0:	4313      	orrs	r3, r2
 800d6c2:	440b      	add	r3, r1
 800d6c4:	42bb      	cmp	r3, r7
 800d6c6:	db5e      	blt.n	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d6c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d6ca:	4299      	cmp	r1, r3
 800d6cc:	da5b      	bge.n	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d6ce:	f8d8 0000 	ldr.w	r0, [r8]
 800d6d2:	42b7      	cmp	r7, r6
 800d6d4:	6803      	ldr	r3, [r0, #0]
 800d6d6:	bfcc      	ite	gt
 800d6d8:	1bbf      	subgt	r7, r7, r6
 800d6da:	2700      	movle	r7, #0
 800d6dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d6de:	bfc8      	it	gt
 800d6e0:	b2bf      	uxthgt	r7, r7
 800d6e2:	4798      	blx	r3
 800d6e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d6e6:	7b5a      	ldrb	r2, [r3, #13]
 800d6e8:	00d1      	lsls	r1, r2, #3
 800d6ea:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800d6ee:	7a19      	ldrb	r1, [r3, #8]
 800d6f0:	4329      	orrs	r1, r5
 800d6f2:	0655      	lsls	r5, r2, #25
 800d6f4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800d6f6:	bf48      	it	mi
 800d6f8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d6fc:	4405      	add	r5, r0
 800d6fe:	bf48      	it	mi
 800d700:	b209      	sxthmi	r1, r1
 800d702:	1a6d      	subs	r5, r5, r1
 800d704:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d706:	b2ad      	uxth	r5, r5
 800d708:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d70c:	fa0f fa85 	sxth.w	sl, r5
 800d710:	4551      	cmp	r1, sl
 800d712:	dd3c      	ble.n	800d78e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800d714:	0112      	lsls	r2, r2, #4
 800d716:	79d8      	ldrb	r0, [r3, #7]
 800d718:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d71c:	4302      	orrs	r2, r0
 800d71e:	4492      	add	sl, r2
 800d720:	4551      	cmp	r1, sl
 800d722:	dc30      	bgt.n	800d786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d724:	1b4d      	subs	r5, r1, r5
 800d726:	468a      	mov	sl, r1
 800d728:	b22d      	sxth	r5, r5
 800d72a:	9319      	str	r3, [sp, #100]	; 0x64
 800d72c:	b2ad      	uxth	r5, r5
 800d72e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d730:	f8d8 0000 	ldr.w	r0, [r8]
 800d734:	681a      	ldr	r2, [r3, #0]
 800d736:	6801      	ldr	r1, [r0, #0]
 800d738:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800d73a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d73c:	9313      	str	r3, [sp, #76]	; 0x4c
 800d73e:	9218      	str	r2, [sp, #96]	; 0x60
 800d740:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800d742:	4788      	blx	r1
 800d744:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d748:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d74a:	910b      	str	r1, [sp, #44]	; 0x2c
 800d74c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d750:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d752:	910a      	str	r1, [sp, #40]	; 0x28
 800d754:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d758:	9109      	str	r1, [sp, #36]	; 0x24
 800d75a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d75e:	9305      	str	r3, [sp, #20]
 800d760:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d762:	9206      	str	r2, [sp, #24]
 800d764:	9304      	str	r3, [sp, #16]
 800d766:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d768:	f8cd a004 	str.w	sl, [sp, #4]
 800d76c:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800d770:	4437      	add	r7, r6
 800d772:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d774:	b23f      	sxth	r7, r7
 800d776:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d77a:	9700      	str	r7, [sp, #0]
 800d77c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d77e:	681a      	ldr	r2, [r3, #0]
 800d780:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d782:	685b      	ldr	r3, [r3, #4]
 800d784:	47a8      	blx	r5
 800d786:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d788:	3301      	adds	r3, #1
 800d78a:	930e      	str	r3, [sp, #56]	; 0x38
 800d78c:	e6e0      	b.n	800d550 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800d78e:	2500      	movs	r5, #0
 800d790:	e7cb      	b.n	800d72a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800d792:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d794:	3501      	adds	r5, #1
 800d796:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d798:	429d      	cmp	r5, r3
 800d79a:	f6bf af74 	bge.w	800d686 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800d79e:	4659      	mov	r1, fp
 800d7a0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d7a2:	f7f5 fa35 	bl	8002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d7a6:	4604      	mov	r4, r0
 800d7a8:	b110      	cbz	r0, 800d7b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800d7aa:	280a      	cmp	r0, #10
 800d7ac:	d1f2      	bne.n	800d794 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 800d7ae:	e769      	b.n	800d684 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800d7b0:	2400      	movs	r4, #0
 800d7b2:	e768      	b.n	800d686 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800d7b4:	f1bb 0f00 	cmp.w	fp, #0
 800d7b8:	f43f af59 	beq.w	800d66e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800d7bc:	e774      	b.n	800d6a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800d7be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d7be:	b530      	push	{r4, r5, lr}
 800d7c0:	8ac4      	ldrh	r4, [r0, #22]
 800d7c2:	8b45      	ldrh	r5, [r0, #26]
 800d7c4:	8343      	strh	r3, [r0, #26]
 800d7c6:	442c      	add	r4, r5
 800d7c8:	1ae4      	subs	r4, r4, r3
 800d7ca:	8b83      	ldrh	r3, [r0, #28]
 800d7cc:	82c4      	strh	r4, [r0, #22]
 800d7ce:	8b04      	ldrh	r4, [r0, #24]
 800d7d0:	4422      	add	r2, r4
 800d7d2:	440c      	add	r4, r1
 800d7d4:	1a59      	subs	r1, r3, r1
 800d7d6:	83c2      	strh	r2, [r0, #30]
 800d7d8:	8304      	strh	r4, [r0, #24]
 800d7da:	8381      	strh	r1, [r0, #28]
 800d7dc:	bd30      	pop	{r4, r5, pc}

0800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800d7de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7e2:	4604      	mov	r4, r0
 800d7e4:	8a47      	ldrh	r7, [r0, #18]
 800d7e6:	68c0      	ldr	r0, [r0, #12]
 800d7e8:	b085      	sub	sp, #20
 800d7ea:	6803      	ldr	r3, [r0, #0]
 800d7ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d7ee:	4798      	blx	r3
 800d7f0:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800d7f4:	7a63      	ldrb	r3, [r4, #9]
 800d7f6:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800d7fa:	3b01      	subs	r3, #1
 800d7fc:	42b7      	cmp	r7, r6
 800d7fe:	bfac      	ite	ge
 800d800:	f04f 0900 	movge.w	r9, #0
 800d804:	f04f 0901 	movlt.w	r9, #1
 800d808:	2b05      	cmp	r3, #5
 800d80a:	d804      	bhi.n	800d816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800d80c:	e8df f003 	tbb	[pc, r3]
 800d810:	470f0854 	.word	0x470f0854
 800d814:	4c4c      	.short	0x4c4c
 800d816:	2500      	movs	r5, #0
 800d818:	46a9      	mov	r9, r5
 800d81a:	462e      	mov	r6, r5
 800d81c:	462f      	mov	r7, r5
 800d81e:	e00e      	b.n	800d83e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d820:	42b7      	cmp	r7, r6
 800d822:	f04f 0500 	mov.w	r5, #0
 800d826:	bfb4      	ite	lt
 800d828:	2600      	movlt	r6, #0
 800d82a:	2601      	movge	r6, #1
 800d82c:	e7f6      	b.n	800d81c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d82e:	42b7      	cmp	r7, r6
 800d830:	464d      	mov	r5, r9
 800d832:	f04f 0900 	mov.w	r9, #0
 800d836:	bfb4      	ite	lt
 800d838:	2600      	movlt	r6, #0
 800d83a:	2601      	movge	r6, #1
 800d83c:	464f      	mov	r7, r9
 800d83e:	f04f 0800 	mov.w	r8, #0
 800d842:	f8a4 8016 	strh.w	r8, [r4, #22]
 800d846:	f8a4 8018 	strh.w	r8, [r4, #24]
 800d84a:	f8cd 8004 	str.w	r8, [sp, #4]
 800d84e:	2300      	movs	r3, #0
 800d850:	9303      	str	r3, [sp, #12]
 800d852:	8823      	ldrh	r3, [r4, #0]
 800d854:	2b20      	cmp	r3, #32
 800d856:	d033      	beq.n	800d8c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800d858:	f242 010b 	movw	r1, #8203	; 0x200b
 800d85c:	1a5a      	subs	r2, r3, r1
 800d85e:	f1d2 0a00 	rsbs	sl, r2, #0
 800d862:	eb4a 0a02 	adc.w	sl, sl, r2
 800d866:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d86a:	4293      	cmp	r3, r2
 800d86c:	d008      	beq.n	800d880 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d86e:	428b      	cmp	r3, r1
 800d870:	9a01      	ldr	r2, [sp, #4]
 800d872:	bf0e      	itee	eq
 800d874:	f04f 0a01 	moveq.w	sl, #1
 800d878:	461a      	movne	r2, r3
 800d87a:	f04f 0a00 	movne.w	sl, #0
 800d87e:	9201      	str	r2, [sp, #4]
 800d880:	ab03      	add	r3, sp, #12
 800d882:	68e2      	ldr	r2, [r4, #12]
 800d884:	7a21      	ldrb	r1, [r4, #8]
 800d886:	6860      	ldr	r0, [r4, #4]
 800d888:	f002 fd94 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d88c:	8020      	strh	r0, [r4, #0]
 800d88e:	b9d8      	cbnz	r0, 800d8c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800d890:	8ba2      	ldrh	r2, [r4, #28]
 800d892:	2300      	movs	r3, #0
 800d894:	4611      	mov	r1, r2
 800d896:	4620      	mov	r0, r4
 800d898:	f7ff ff91 	bl	800d7be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d89c:	e06e      	b.n	800d97c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d89e:	2500      	movs	r5, #0
 800d8a0:	2701      	movs	r7, #1
 800d8a2:	46a9      	mov	r9, r5
 800d8a4:	462e      	mov	r6, r5
 800d8a6:	e7ca      	b.n	800d83e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d8a8:	42b7      	cmp	r7, r6
 800d8aa:	f04f 0500 	mov.w	r5, #0
 800d8ae:	bfb4      	ite	lt
 800d8b0:	2700      	movlt	r7, #0
 800d8b2:	2701      	movge	r7, #1
 800d8b4:	462e      	mov	r6, r5
 800d8b6:	e7c2      	b.n	800d83e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d8b8:	2500      	movs	r5, #0
 800d8ba:	2601      	movs	r6, #1
 800d8bc:	46a9      	mov	r9, r5
 800d8be:	e7ad      	b.n	800d81c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d8c0:	9301      	str	r3, [sp, #4]
 800d8c2:	f04f 0a01 	mov.w	sl, #1
 800d8c6:	e7db      	b.n	800d880 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d8c8:	8b63      	ldrh	r3, [r4, #26]
 800d8ca:	280a      	cmp	r0, #10
 800d8cc:	f103 0301 	add.w	r3, r3, #1
 800d8d0:	8363      	strh	r3, [r4, #26]
 800d8d2:	d0dd      	beq.n	800d890 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800d8d4:	9a03      	ldr	r2, [sp, #12]
 800d8d6:	bb62      	cbnz	r2, 800d932 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800d8d8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d8dc:	4298      	cmp	r0, r3
 800d8de:	d003      	beq.n	800d8e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d8e0:	f242 030b 	movw	r3, #8203	; 0x200b
 800d8e4:	4298      	cmp	r0, r3
 800d8e6:	d1b2      	bne.n	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d8e8:	8823      	ldrh	r3, [r4, #0]
 800d8ea:	8ba1      	ldrh	r1, [r4, #28]
 800d8ec:	2b20      	cmp	r3, #32
 800d8ee:	d003      	beq.n	800d8f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800d8f0:	f242 000b 	movw	r0, #8203	; 0x200b
 800d8f4:	4283      	cmp	r3, r0
 800d8f6:	d131      	bne.n	800d95c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800d8f8:	f1ba 0f00 	cmp.w	sl, #0
 800d8fc:	bf0a      	itet	eq
 800d8fe:	4688      	moveq	r8, r1
 800d900:	4650      	movne	r0, sl
 800d902:	2001      	moveq	r0, #1
 800d904:	440a      	add	r2, r1
 800d906:	8b23      	ldrh	r3, [r4, #24]
 800d908:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d90c:	b292      	uxth	r2, r2
 800d90e:	83a2      	strh	r2, [r4, #28]
 800d910:	4413      	add	r3, r2
 800d912:	f1b9 0f00 	cmp.w	r9, #0
 800d916:	d102      	bne.n	800d91e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800d918:	2d00      	cmp	r5, #0
 800d91a:	d042      	beq.n	800d9a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800d91c:	b300      	cbz	r0, 800d960 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800d91e:	8c21      	ldrh	r1, [r4, #32]
 800d920:	4419      	add	r1, r3
 800d922:	458c      	cmp	ip, r1
 800d924:	da37      	bge.n	800d996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d926:	8ae1      	ldrh	r1, [r4, #22]
 800d928:	2900      	cmp	r1, #0
 800d92a:	d034      	beq.n	800d996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d92c:	4563      	cmp	r3, ip
 800d92e:	dd8e      	ble.n	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d930:	e01d      	b.n	800d96e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800d932:	8893      	ldrh	r3, [r2, #4]
 800d934:	9901      	ldr	r1, [sp, #4]
 800d936:	8023      	strh	r3, [r4, #0]
 800d938:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800d93c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800d940:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800d944:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800d948:	ea4b 0b00 	orr.w	fp, fp, r0
 800d94c:	68e0      	ldr	r0, [r4, #12]
 800d94e:	6803      	ldr	r3, [r0, #0]
 800d950:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d952:	4798      	blx	r3
 800d954:	eb0b 0200 	add.w	r2, fp, r0
 800d958:	b292      	uxth	r2, r2
 800d95a:	e7c5      	b.n	800d8e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d95c:	2000      	movs	r0, #0
 800d95e:	e7d1      	b.n	800d904 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800d960:	4563      	cmp	r3, ip
 800d962:	f77f af74 	ble.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d966:	8ae3      	ldrh	r3, [r4, #22]
 800d968:	2b00      	cmp	r3, #0
 800d96a:	f43f af70 	beq.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d96e:	2301      	movs	r3, #1
 800d970:	8c22      	ldrh	r2, [r4, #32]
 800d972:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800d976:	8be3      	ldrh	r3, [r4, #30]
 800d978:	4413      	add	r3, r2
 800d97a:	83e3      	strh	r3, [r4, #30]
 800d97c:	68e0      	ldr	r0, [r4, #12]
 800d97e:	6803      	ldr	r3, [r0, #0]
 800d980:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d982:	4798      	blx	r3
 800d984:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800d988:	4418      	add	r0, r3
 800d98a:	8a63      	ldrh	r3, [r4, #18]
 800d98c:	1a18      	subs	r0, r3, r0
 800d98e:	8260      	strh	r0, [r4, #18]
 800d990:	b005      	add	sp, #20
 800d992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d996:	2300      	movs	r3, #0
 800d998:	4611      	mov	r1, r2
 800d99a:	4620      	mov	r0, r4
 800d99c:	f7ff ff0f 	bl	800d7be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d9a0:	e755      	b.n	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9a2:	4563      	cmp	r3, ip
 800d9a4:	dd14      	ble.n	800d9d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800d9a6:	b117      	cbz	r7, 800d9ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800d9a8:	2301      	movs	r3, #1
 800d9aa:	460a      	mov	r2, r1
 800d9ac:	e772      	b.n	800d894 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800d9ae:	2e00      	cmp	r6, #0
 800d9b0:	f43f af4d 	beq.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9b4:	2800      	cmp	r0, #0
 800d9b6:	f47f af4a 	bne.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9ba:	f1ba 0f00 	cmp.w	sl, #0
 800d9be:	d002      	beq.n	800d9c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800d9c0:	2301      	movs	r3, #1
 800d9c2:	4642      	mov	r2, r8
 800d9c4:	e767      	b.n	800d896 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800d9c6:	8ae3      	ldrh	r3, [r4, #22]
 800d9c8:	2b00      	cmp	r3, #0
 800d9ca:	f43f af40 	beq.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9ce:	e7d5      	b.n	800d97c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d9d0:	2800      	cmp	r0, #0
 800d9d2:	f47f af3c 	bne.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9d6:	f1ba 0f00 	cmp.w	sl, #0
 800d9da:	f43f af38 	beq.w	800d84e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d9de:	2301      	movs	r3, #1
 800d9e0:	4642      	mov	r2, r8
 800d9e2:	e7da      	b.n	800d99a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800d9e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d9e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9e6:	4605      	mov	r5, r0
 800d9e8:	b08f      	sub	sp, #60	; 0x3c
 800d9ea:	4617      	mov	r7, r2
 800d9ec:	461c      	mov	r4, r3
 800d9ee:	460e      	mov	r6, r1
 800d9f0:	b1d1      	cbz	r1, 800da28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d9f2:	681b      	ldr	r3, [r3, #0]
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d9f8:	4798      	blx	r3
 800d9fa:	4240      	negs	r0, r0
 800d9fc:	9603      	str	r6, [sp, #12]
 800d9fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800da02:	b200      	sxth	r0, r0
 800da04:	9700      	str	r7, [sp, #0]
 800da06:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800da0a:	4629      	mov	r1, r5
 800da0c:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800da10:	2401      	movs	r4, #1
 800da12:	a805      	add	r0, sp, #20
 800da14:	f7ff fcbe 	bl	800d394 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800da18:	a805      	add	r0, sp, #20
 800da1a:	f7ff fee0 	bl	800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800da1e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800da22:	b163      	cbz	r3, 800da3e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800da24:	3401      	adds	r4, #1
 800da26:	e7f7      	b.n	800da18 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800da28:	2401      	movs	r4, #1
 800da2a:	f002 fd8f 	bl	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800da2e:	280a      	cmp	r0, #10
 800da30:	4628      	mov	r0, r5
 800da32:	bf08      	it	eq
 800da34:	3401      	addeq	r4, #1
 800da36:	f002 fd89 	bl	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800da3a:	2800      	cmp	r0, #0
 800da3c:	d1f7      	bne.n	800da2e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800da3e:	b2a0      	uxth	r0, r4
 800da40:	b00f      	add	sp, #60	; 0x3c
 800da42:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800da44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800da44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da48:	b0e3      	sub	sp, #396	; 0x18c
 800da4a:	461c      	mov	r4, r3
 800da4c:	4683      	mov	fp, r0
 800da4e:	4688      	mov	r8, r1
 800da50:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800da52:	2b00      	cmp	r3, #0
 800da54:	f000 8112 	beq.w	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800da58:	6823      	ldr	r3, [r4, #0]
 800da5a:	2b00      	cmp	r3, #0
 800da5c:	f000 810e 	beq.w	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800da60:	7ba3      	ldrb	r3, [r4, #14]
 800da62:	2b00      	cmp	r3, #0
 800da64:	f000 810a 	beq.w	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800da68:	ad0a      	add	r5, sp, #40	; 0x28
 800da6a:	6810      	ldr	r0, [r2, #0]
 800da6c:	6851      	ldr	r1, [r2, #4]
 800da6e:	462b      	mov	r3, r5
 800da70:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800da74:	c303      	stmia	r3!, {r0, r1}
 800da76:	2100      	movs	r1, #0
 800da78:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800da7c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800da80:	4628      	mov	r0, r5
 800da82:	910c      	str	r1, [sp, #48]	; 0x30
 800da84:	a90c      	add	r1, sp, #48	; 0x30
 800da86:	79a2      	ldrb	r2, [r4, #6]
 800da88:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800da8c:	f7ff fd01 	bl	800d492 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800da90:	a90c      	add	r1, sp, #48	; 0x30
 800da92:	79a2      	ldrb	r2, [r4, #6]
 800da94:	4608      	mov	r0, r1
 800da96:	f7ff fcfc 	bl	800d492 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800da9a:	a817      	add	r0, sp, #92	; 0x5c
 800da9c:	f002 f929 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800daa0:	6820      	ldr	r0, [r4, #0]
 800daa2:	6803      	ldr	r3, [r0, #0]
 800daa4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800daa6:	4798      	blx	r3
 800daa8:	4606      	mov	r6, r0
 800daaa:	6820      	ldr	r0, [r4, #0]
 800daac:	6803      	ldr	r3, [r0, #0]
 800daae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dab0:	4798      	blx	r3
 800dab2:	4633      	mov	r3, r6
 800dab4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800dab6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800dab8:	9000      	str	r0, [sp, #0]
 800daba:	a817      	add	r0, sp, #92	; 0x5c
 800dabc:	f002 f974 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dac0:	6820      	ldr	r0, [r4, #0]
 800dac2:	f894 a004 	ldrb.w	sl, [r4, #4]
 800dac6:	6803      	ldr	r3, [r0, #0]
 800dac8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800daca:	4798      	blx	r3
 800dacc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800dad0:	6823      	ldr	r3, [r4, #0]
 800dad2:	4607      	mov	r7, r0
 800dad4:	4406      	add	r6, r0
 800dad6:	a830      	add	r0, sp, #192	; 0xc0
 800dad8:	f893 9009 	ldrb.w	r9, [r3, #9]
 800dadc:	f002 f909 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800dae0:	7c23      	ldrb	r3, [r4, #16]
 800dae2:	b17b      	cbz	r3, 800db04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800dae4:	6820      	ldr	r0, [r4, #0]
 800dae6:	6803      	ldr	r3, [r0, #0]
 800dae8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800daea:	4798      	blx	r3
 800daec:	9009      	str	r0, [sp, #36]	; 0x24
 800daee:	6820      	ldr	r0, [r4, #0]
 800daf0:	6802      	ldr	r2, [r0, #0]
 800daf2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800daf4:	4790      	blx	r2
 800daf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800daf8:	9000      	str	r0, [sp, #0]
 800dafa:	a830      	add	r0, sp, #192	; 0xc0
 800dafc:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800dafe:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800db00:	f002 f952 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800db04:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800db08:	a80e      	add	r0, sp, #56	; 0x38
 800db0a:	7be2      	ldrb	r2, [r4, #15]
 800db0c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800db10:	1a8a      	subs	r2, r1, r2
 800db12:	7c21      	ldrb	r1, [r4, #16]
 800db14:	9103      	str	r1, [sp, #12]
 800db16:	b292      	uxth	r2, r2
 800db18:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800db1c:	9102      	str	r1, [sp, #8]
 800db1e:	6821      	ldr	r1, [r4, #0]
 800db20:	9101      	str	r1, [sp, #4]
 800db22:	7961      	ldrb	r1, [r4, #5]
 800db24:	9100      	str	r1, [sp, #0]
 800db26:	a930      	add	r1, sp, #192	; 0xc0
 800db28:	f7ff fc34 	bl	800d394 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800db2c:	2e00      	cmp	r6, #0
 800db2e:	dc5b      	bgt.n	800dbe8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800db30:	af17      	add	r7, sp, #92	; 0x5c
 800db32:	f04f 0900 	mov.w	r9, #0
 800db36:	7c23      	ldrb	r3, [r4, #16]
 800db38:	2b00      	cmp	r3, #0
 800db3a:	f000 80b1 	beq.w	800dca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800db3e:	a80e      	add	r0, sp, #56	; 0x38
 800db40:	f7ff fe4d 	bl	800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800db44:	f1ba 0f00 	cmp.w	sl, #0
 800db48:	f000 80a5 	beq.w	800dc96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800db4c:	7c23      	ldrb	r3, [r4, #16]
 800db4e:	2264      	movs	r2, #100	; 0x64
 800db50:	4639      	mov	r1, r7
 800db52:	a849      	add	r0, sp, #292	; 0x124
 800db54:	9309      	str	r3, [sp, #36]	; 0x24
 800db56:	f00c fefd 	bl	801a954 <memcpy>
 800db5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800db5c:	2b00      	cmp	r3, #0
 800db5e:	f000 80a7 	beq.w	800dcb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800db62:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800db66:	7922      	ldrb	r2, [r4, #4]
 800db68:	2a01      	cmp	r2, #1
 800db6a:	f040 808a 	bne.w	800dc82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800db6e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800db72:	1ac0      	subs	r0, r0, r3
 800db74:	2302      	movs	r3, #2
 800db76:	fb90 f0f3 	sdiv	r0, r0, r3
 800db7a:	b200      	sxth	r0, r0
 800db7c:	7c23      	ldrb	r3, [r4, #16]
 800db7e:	2b00      	cmp	r3, #0
 800db80:	f000 808b 	beq.w	800dc9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800db84:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800db88:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800db8c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800db90:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800db94:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800db98:	2100      	movs	r1, #0
 800db9a:	4410      	add	r0, r2
 800db9c:	4642      	mov	r2, r8
 800db9e:	b200      	sxth	r0, r0
 800dba0:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800dba4:	9000      	str	r0, [sp, #0]
 800dba6:	4658      	mov	r0, fp
 800dba8:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800dbac:	f7ff fca2 	bl	800d4f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800dbb0:	2800      	cmp	r0, #0
 800dbb2:	d163      	bne.n	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800dbb4:	b2b2      	uxth	r2, r6
 800dbb6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800dbba:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800dbbe:	4413      	add	r3, r2
 800dbc0:	1a8a      	subs	r2, r1, r2
 800dbc2:	b21b      	sxth	r3, r3
 800dbc4:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800dbc8:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800dbcc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dbd0:	2a00      	cmp	r2, #0
 800dbd2:	d153      	bne.n	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800dbd4:	6822      	ldr	r2, [r4, #0]
 800dbd6:	8869      	ldrh	r1, [r5, #2]
 800dbd8:	7a12      	ldrb	r2, [r2, #8]
 800dbda:	1a9b      	subs	r3, r3, r2
 800dbdc:	88ea      	ldrh	r2, [r5, #6]
 800dbde:	440a      	add	r2, r1
 800dbe0:	b212      	sxth	r2, r2
 800dbe2:	4293      	cmp	r3, r2
 800dbe4:	dda7      	ble.n	800db36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800dbe6:	e049      	b.n	800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800dbe8:	7c23      	ldrb	r3, [r4, #16]
 800dbea:	444f      	add	r7, r9
 800dbec:	b1c3      	cbz	r3, 800dc20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800dbee:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800dbf2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800dbf6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dbfa:	443b      	add	r3, r7
 800dbfc:	4293      	cmp	r3, r2
 800dbfe:	da97      	bge.n	800db30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800dc00:	a80e      	add	r0, sp, #56	; 0x38
 800dc02:	f7ff fdec 	bl	800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800dc06:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800dc0a:	3b01      	subs	r3, #1
 800dc0c:	b29b      	uxth	r3, r3
 800dc0e:	454b      	cmp	r3, r9
 800dc10:	9309      	str	r3, [sp, #36]	; 0x24
 800dc12:	d021      	beq.n	800dc58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800dc14:	7961      	ldrb	r1, [r4, #5]
 800dc16:	a817      	add	r0, sp, #92	; 0x5c
 800dc18:	f7f4 fffa 	bl	8002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc1e:	e7f4      	b.n	800dc0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800dc20:	fa1f f986 	uxth.w	r9, r6
 800dc24:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800dc28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dc2c:	443b      	add	r3, r7
 800dc2e:	4293      	cmp	r3, r2
 800dc30:	f6bf af7e 	bge.w	800db30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800dc34:	a817      	add	r0, sp, #92	; 0x5c
 800dc36:	f002 fc89 	bl	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dc3a:	b1f8      	cbz	r0, 800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800dc3c:	280a      	cmp	r0, #10
 800dc3e:	d1f1      	bne.n	800dc24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800dc40:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800dc44:	444b      	add	r3, r9
 800dc46:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dc4a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dc4e:	eba3 0309 	sub.w	r3, r3, r9
 800dc52:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dc56:	e7e5      	b.n	800dc24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800dc58:	b2b3      	uxth	r3, r6
 800dc5a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800dc5e:	441a      	add	r2, r3
 800dc60:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800dc64:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800dc68:	1ad3      	subs	r3, r2, r3
 800dc6a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dc6e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dc72:	b11b      	cbz	r3, 800dc7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800dc74:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 800dc78:	2b00      	cmp	r3, #0
 800dc7a:	d0ba      	beq.n	800dbf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800dc7c:	b063      	add	sp, #396	; 0x18c
 800dc7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc82:	2a02      	cmp	r2, #2
 800dc84:	d105      	bne.n	800dc92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800dc86:	7be2      	ldrb	r2, [r4, #15]
 800dc88:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800dc8c:	1a80      	subs	r0, r0, r2
 800dc8e:	1ac0      	subs	r0, r0, r3
 800dc90:	e773      	b.n	800db7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800dc92:	2000      	movs	r0, #0
 800dc94:	e772      	b.n	800db7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800dc96:	7be0      	ldrb	r0, [r4, #15]
 800dc98:	e770      	b.n	800db7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800dc9a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dc9e:	e773      	b.n	800db88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800dca0:	f1ba 0f00 	cmp.w	sl, #0
 800dca4:	d0f7      	beq.n	800dc96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800dca6:	2264      	movs	r2, #100	; 0x64
 800dca8:	4639      	mov	r1, r7
 800dcaa:	a849      	add	r0, sp, #292	; 0x124
 800dcac:	f00c fe52 	bl	801a954 <memcpy>
 800dcb0:	2300      	movs	r3, #0
 800dcb2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dcb6:	6821      	ldr	r1, [r4, #0]
 800dcb8:	a849      	add	r0, sp, #292	; 0x124
 800dcba:	f7ff fbae 	bl	800d41a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800dcbe:	b203      	sxth	r3, r0
 800dcc0:	e751      	b.n	800db66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800dcc2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800dcc2:	2b03      	cmp	r3, #3
 800dcc4:	d818      	bhi.n	800dcf8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800dcc6:	e8df f003 	tbb	[pc, r3]
 800dcca:	0602      	.short	0x0602
 800dccc:	130d      	.short	0x130d
 800dcce:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dcd2:	1850      	adds	r0, r2, r1
 800dcd4:	4770      	bx	lr
 800dcd6:	8803      	ldrh	r3, [r0, #0]
 800dcd8:	8880      	ldrh	r0, [r0, #4]
 800dcda:	4418      	add	r0, r3
 800dcdc:	b200      	sxth	r0, r0
 800dcde:	1a80      	subs	r0, r0, r2
 800dce0:	3801      	subs	r0, #1
 800dce2:	4770      	bx	lr
 800dce4:	8803      	ldrh	r3, [r0, #0]
 800dce6:	8880      	ldrh	r0, [r0, #4]
 800dce8:	4418      	add	r0, r3
 800dcea:	b200      	sxth	r0, r0
 800dcec:	1a40      	subs	r0, r0, r1
 800dcee:	e7f7      	b.n	800dce0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800dcf0:	f9b0 0000 	ldrsh.w	r0, [r0]
 800dcf4:	4410      	add	r0, r2
 800dcf6:	4770      	bx	lr
 800dcf8:	2000      	movs	r0, #0
 800dcfa:	4770      	bx	lr

0800dcfc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800dcfc:	2b03      	cmp	r3, #3
 800dcfe:	d817      	bhi.n	800dd30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800dd00:	e8df f003 	tbb	[pc, r3]
 800dd04:	10090602 	.word	0x10090602
 800dd08:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800dd0c:	1850      	adds	r0, r2, r1
 800dd0e:	4770      	bx	lr
 800dd10:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dd14:	e7fa      	b.n	800dd0c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800dd16:	8843      	ldrh	r3, [r0, #2]
 800dd18:	88c0      	ldrh	r0, [r0, #6]
 800dd1a:	4418      	add	r0, r3
 800dd1c:	b200      	sxth	r0, r0
 800dd1e:	1a80      	subs	r0, r0, r2
 800dd20:	3801      	subs	r0, #1
 800dd22:	4770      	bx	lr
 800dd24:	8843      	ldrh	r3, [r0, #2]
 800dd26:	88c0      	ldrh	r0, [r0, #6]
 800dd28:	4418      	add	r0, r3
 800dd2a:	b200      	sxth	r0, r0
 800dd2c:	1a40      	subs	r0, r0, r1
 800dd2e:	e7f7      	b.n	800dd20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800dd30:	2000      	movs	r0, #0
 800dd32:	4770      	bx	lr

0800dd34 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800dd34:	4b01      	ldr	r3, [pc, #4]	; (800dd3c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800dd36:	2200      	movs	r2, #0
 800dd38:	601a      	str	r2, [r3, #0]
 800dd3a:	4770      	bx	lr
 800dd3c:	24006be0 	.word	0x24006be0

0800dd40 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800dd40:	4603      	mov	r3, r0
 800dd42:	b1c8      	cbz	r0, 800dd78 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800dd44:	0c02      	lsrs	r2, r0, #16
 800dd46:	0412      	lsls	r2, r2, #16
 800dd48:	b9a2      	cbnz	r2, 800dd74 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800dd4a:	0403      	lsls	r3, r0, #16
 800dd4c:	2010      	movs	r0, #16
 800dd4e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800dd52:	bf04      	itt	eq
 800dd54:	021b      	lsleq	r3, r3, #8
 800dd56:	3008      	addeq	r0, #8
 800dd58:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800dd5c:	bf04      	itt	eq
 800dd5e:	011b      	lsleq	r3, r3, #4
 800dd60:	3004      	addeq	r0, #4
 800dd62:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800dd66:	bf04      	itt	eq
 800dd68:	009b      	lsleq	r3, r3, #2
 800dd6a:	3002      	addeq	r0, #2
 800dd6c:	2b00      	cmp	r3, #0
 800dd6e:	db04      	blt.n	800dd7a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800dd70:	3001      	adds	r0, #1
 800dd72:	4770      	bx	lr
 800dd74:	2000      	movs	r0, #0
 800dd76:	e7ea      	b.n	800dd4e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800dd78:	2020      	movs	r0, #32
 800dd7a:	4770      	bx	lr

0800dd7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800dd7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd80:	b087      	sub	sp, #28
 800dd82:	460d      	mov	r5, r1
 800dd84:	4616      	mov	r6, r2
 800dd86:	4698      	mov	r8, r3
 800dd88:	4601      	mov	r1, r0
 800dd8a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800dd8e:	b120      	cbz	r0, 800dd9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dd90:	b11a      	cbz	r2, 800dd9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dd92:	2d1f      	cmp	r5, #31
 800dd94:	d801      	bhi.n	800dd9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dd96:	2b1f      	cmp	r3, #31
 800dd98:	d904      	bls.n	800dda4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800dd9a:	2000      	movs	r0, #0
 800dd9c:	6038      	str	r0, [r7, #0]
 800dd9e:	b007      	add	sp, #28
 800dda0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dda4:	b97d      	cbnz	r5, 800ddc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800dda6:	b143      	cbz	r3, 800ddba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800dda8:	4602      	mov	r2, r0
 800ddaa:	462b      	mov	r3, r5
 800ddac:	4641      	mov	r1, r8
 800ddae:	4630      	mov	r0, r6
 800ddb0:	e9cd 4700 	strd	r4, r7, [sp]
 800ddb4:	f7ff ffe2 	bl	800dd7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ddb8:	e7f1      	b.n	800dd9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ddba:	f04f 33ff 	mov.w	r3, #4294967295
 800ddbe:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ddc2:	603b      	str	r3, [r7, #0]
 800ddc4:	e7eb      	b.n	800dd9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ddc6:	fa32 fa05 	lsrs.w	sl, r2, r5
 800ddca:	d106      	bne.n	800ddda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800ddcc:	4346      	muls	r6, r0
 800ddce:	fbb6 f0f4 	udiv	r0, r6, r4
 800ddd2:	fb04 6610 	mls	r6, r4, r0, r6
 800ddd6:	603e      	str	r6, [r7, #0]
 800ddd8:	e7e1      	b.n	800dd9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ddda:	2201      	movs	r2, #1
 800dddc:	fa00 fb05 	lsl.w	fp, r0, r5
 800dde0:	40aa      	lsls	r2, r5
 800dde2:	fbbb f9f4 	udiv	r9, fp, r4
 800dde6:	3a01      	subs	r2, #1
 800dde8:	fb0a f309 	mul.w	r3, sl, r9
 800ddec:	fb04 b919 	mls	r9, r4, r9, fp
 800ddf0:	4016      	ands	r6, r2
 800ddf2:	9303      	str	r3, [sp, #12]
 800ddf4:	4630      	mov	r0, r6
 800ddf6:	f7ff ffa3 	bl	800dd40 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ddfa:	462b      	mov	r3, r5
 800ddfc:	460a      	mov	r2, r1
 800ddfe:	4601      	mov	r1, r0
 800de00:	4630      	mov	r0, r6
 800de02:	e9cd 4700 	strd	r4, r7, [sp]
 800de06:	f7ff ffb9 	bl	800dd7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800de0a:	4606      	mov	r6, r0
 800de0c:	4648      	mov	r0, r9
 800de0e:	eb05 0108 	add.w	r1, r5, r8
 800de12:	f7ff ff95 	bl	800dd40 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800de16:	ab05      	add	r3, sp, #20
 800de18:	464a      	mov	r2, r9
 800de1a:	e9cd 4300 	strd	r4, r3, [sp]
 800de1e:	4603      	mov	r3, r0
 800de20:	4650      	mov	r0, sl
 800de22:	f7ff ffab 	bl	800dd7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800de26:	6839      	ldr	r1, [r7, #0]
 800de28:	9a05      	ldr	r2, [sp, #20]
 800de2a:	9b03      	ldr	r3, [sp, #12]
 800de2c:	4411      	add	r1, r2
 800de2e:	fbb1 f2f4 	udiv	r2, r1, r4
 800de32:	18d3      	adds	r3, r2, r3
 800de34:	fb04 1412 	mls	r4, r4, r2, r1
 800de38:	441e      	add	r6, r3
 800de3a:	603c      	str	r4, [r7, #0]
 800de3c:	4430      	add	r0, r6
 800de3e:	e7ae      	b.n	800dd9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800de40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800de40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de44:	b085      	sub	sp, #20
 800de46:	f1b0 0900 	subs.w	r9, r0, #0
 800de4a:	461d      	mov	r5, r3
 800de4c:	4617      	mov	r7, r2
 800de4e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800de50:	bfbb      	ittet	lt
 800de52:	f1c9 0900 	rsblt	r9, r9, #0
 800de56:	f04f 36ff 	movlt.w	r6, #4294967295
 800de5a:	2601      	movge	r6, #1
 800de5c:	6823      	ldrlt	r3, [r4, #0]
 800de5e:	bfbc      	itt	lt
 800de60:	425b      	neglt	r3, r3
 800de62:	6023      	strlt	r3, [r4, #0]
 800de64:	2a00      	cmp	r2, #0
 800de66:	da04      	bge.n	800de72 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800de68:	6823      	ldr	r3, [r4, #0]
 800de6a:	4257      	negs	r7, r2
 800de6c:	4276      	negs	r6, r6
 800de6e:	425b      	negs	r3, r3
 800de70:	6023      	str	r3, [r4, #0]
 800de72:	2d00      	cmp	r5, #0
 800de74:	4638      	mov	r0, r7
 800de76:	bfba      	itte	lt
 800de78:	426d      	neglt	r5, r5
 800de7a:	f04f 38ff 	movlt.w	r8, #4294967295
 800de7e:	f04f 0801 	movge.w	r8, #1
 800de82:	f7ff ff5d 	bl	800dd40 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800de86:	ab03      	add	r3, sp, #12
 800de88:	463a      	mov	r2, r7
 800de8a:	e9cd 5300 	strd	r5, r3, [sp]
 800de8e:	4603      	mov	r3, r0
 800de90:	4648      	mov	r0, r9
 800de92:	f7ff ff73 	bl	800dd7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800de96:	6823      	ldr	r3, [r4, #0]
 800de98:	9a03      	ldr	r2, [sp, #12]
 800de9a:	4546      	cmp	r6, r8
 800de9c:	441a      	add	r2, r3
 800de9e:	fb92 f3f5 	sdiv	r3, r2, r5
 800dea2:	4418      	add	r0, r3
 800dea4:	fb05 2313 	mls	r3, r5, r3, r2
 800dea8:	bf18      	it	ne
 800deaa:	4240      	negne	r0, r0
 800deac:	1c72      	adds	r2, r6, #1
 800deae:	6023      	str	r3, [r4, #0]
 800deb0:	d105      	bne.n	800debe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800deb2:	2b00      	cmp	r3, #0
 800deb4:	f1c3 0200 	rsb	r2, r3, #0
 800deb8:	db0b      	blt.n	800ded2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800deba:	6022      	str	r2, [r4, #0]
 800debc:	e006      	b.n	800decc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800debe:	2e01      	cmp	r6, #1
 800dec0:	d104      	bne.n	800decc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dec2:	2b00      	cmp	r3, #0
 800dec4:	da02      	bge.n	800decc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dec6:	442b      	add	r3, r5
 800dec8:	3801      	subs	r0, #1
 800deca:	6023      	str	r3, [r4, #0]
 800decc:	b005      	add	sp, #20
 800dece:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ded2:	3801      	subs	r0, #1
 800ded4:	1b52      	subs	r2, r2, r5
 800ded6:	e7f0      	b.n	800deba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800ded8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ded8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800dedc:	4c1c      	ldr	r4, [pc, #112]	; (800df50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800dede:	4605      	mov	r5, r0
 800dee0:	6807      	ldr	r7, [r0, #0]
 800dee2:	69a3      	ldr	r3, [r4, #24]
 800dee4:	b92b      	cbnz	r3, 800def2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800dee6:	6840      	ldr	r0, [r0, #4]
 800dee8:	e9c5 7000 	strd	r7, r0, [r5]
 800deec:	b004      	add	sp, #16
 800deee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800def2:	f04f 0802 	mov.w	r8, #2
 800def6:	68a2      	ldr	r2, [r4, #8]
 800def8:	ae04      	add	r6, sp, #16
 800defa:	6820      	ldr	r0, [r4, #0]
 800defc:	fb93 f1f8 	sdiv	r1, r3, r8
 800df00:	440a      	add	r2, r1
 800df02:	69e1      	ldr	r1, [r4, #28]
 800df04:	f846 2d04 	str.w	r2, [r6, #-4]!
 800df08:	463a      	mov	r2, r7
 800df0a:	9600      	str	r6, [sp, #0]
 800df0c:	f7ff ff98 	bl	800de40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800df10:	69a3      	ldr	r3, [r4, #24]
 800df12:	4607      	mov	r7, r0
 800df14:	686a      	ldr	r2, [r5, #4]
 800df16:	6a21      	ldr	r1, [r4, #32]
 800df18:	9600      	str	r6, [sp, #0]
 800df1a:	6860      	ldr	r0, [r4, #4]
 800df1c:	f7ff ff90 	bl	800de40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800df20:	69a3      	ldr	r3, [r4, #24]
 800df22:	6962      	ldr	r2, [r4, #20]
 800df24:	4407      	add	r7, r0
 800df26:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800df28:	9600      	str	r6, [sp, #0]
 800df2a:	68e0      	ldr	r0, [r4, #12]
 800df2c:	fb93 f8f8 	sdiv	r8, r3, r8
 800df30:	4442      	add	r2, r8
 800df32:	9203      	str	r2, [sp, #12]
 800df34:	682a      	ldr	r2, [r5, #0]
 800df36:	f7ff ff83 	bl	800de40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800df3a:	4680      	mov	r8, r0
 800df3c:	9600      	str	r6, [sp, #0]
 800df3e:	69a3      	ldr	r3, [r4, #24]
 800df40:	686a      	ldr	r2, [r5, #4]
 800df42:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800df44:	6920      	ldr	r0, [r4, #16]
 800df46:	f7ff ff7b 	bl	800de40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800df4a:	4440      	add	r0, r8
 800df4c:	e7cc      	b.n	800dee8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800df4e:	bf00      	nop
 800df50:	24006be4 	.word	0x24006be4

0800df54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800df54:	4b07      	ldr	r3, [pc, #28]	; (800df74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800df56:	781b      	ldrb	r3, [r3, #0]
 800df58:	2b01      	cmp	r3, #1
 800df5a:	d109      	bne.n	800df70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800df5c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800df60:	f9b0 2000 	ldrsh.w	r2, [r0]
 800df64:	8003      	strh	r3, [r0, #0]
 800df66:	4b04      	ldr	r3, [pc, #16]	; (800df78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800df68:	881b      	ldrh	r3, [r3, #0]
 800df6a:	3b01      	subs	r3, #1
 800df6c:	1a9b      	subs	r3, r3, r2
 800df6e:	800b      	strh	r3, [r1, #0]
 800df70:	4770      	bx	lr
 800df72:	bf00      	nop
 800df74:	24006bd0 	.word	0x24006bd0
 800df78:	24006bcc 	.word	0x24006bcc

0800df7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800df7c:	4b07      	ldr	r3, [pc, #28]	; (800df9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800df7e:	b510      	push	{r4, lr}
 800df80:	781b      	ldrb	r3, [r3, #0]
 800df82:	2b01      	cmp	r3, #1
 800df84:	d108      	bne.n	800df98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800df86:	4b06      	ldr	r3, [pc, #24]	; (800dfa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800df88:	880c      	ldrh	r4, [r1, #0]
 800df8a:	881b      	ldrh	r3, [r3, #0]
 800df8c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800df90:	3b01      	subs	r3, #1
 800df92:	1b1b      	subs	r3, r3, r4
 800df94:	8003      	strh	r3, [r0, #0]
 800df96:	800a      	strh	r2, [r1, #0]
 800df98:	bd10      	pop	{r4, pc}
 800df9a:	bf00      	nop
 800df9c:	24006bd0 	.word	0x24006bd0
 800dfa0:	24006bcc 	.word	0x24006bcc

0800dfa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dfa4:	4b0a      	ldr	r3, [pc, #40]	; (800dfd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dfa6:	b510      	push	{r4, lr}
 800dfa8:	781b      	ldrb	r3, [r3, #0]
 800dfaa:	2b01      	cmp	r3, #1
 800dfac:	d10e      	bne.n	800dfcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dfae:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dfb2:	8843      	ldrh	r3, [r0, #2]
 800dfb4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dfb8:	18ca      	adds	r2, r1, r3
 800dfba:	4b06      	ldr	r3, [pc, #24]	; (800dfd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800dfbc:	8044      	strh	r4, [r0, #2]
 800dfbe:	881b      	ldrh	r3, [r3, #0]
 800dfc0:	1a9b      	subs	r3, r3, r2
 800dfc2:	8003      	strh	r3, [r0, #0]
 800dfc4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dfc8:	8081      	strh	r1, [r0, #4]
 800dfca:	80c3      	strh	r3, [r0, #6]
 800dfcc:	bd10      	pop	{r4, pc}
 800dfce:	bf00      	nop
 800dfd0:	24006bd0 	.word	0x24006bd0
 800dfd4:	24006bcc 	.word	0x24006bcc

0800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dfd8:	4b08      	ldr	r3, [pc, #32]	; (800dffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800dfda:	781b      	ldrb	r3, [r3, #0]
 800dfdc:	2b01      	cmp	r3, #1
 800dfde:	d10c      	bne.n	800dffa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800dfe0:	8803      	ldrh	r3, [r0, #0]
 800dfe2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dfe6:	8842      	ldrh	r2, [r0, #2]
 800dfe8:	8002      	strh	r2, [r0, #0]
 800dfea:	185a      	adds	r2, r3, r1
 800dfec:	4b04      	ldr	r3, [pc, #16]	; (800e000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dfee:	881b      	ldrh	r3, [r3, #0]
 800dff0:	1a9b      	subs	r3, r3, r2
 800dff2:	8043      	strh	r3, [r0, #2]
 800dff4:	88c3      	ldrh	r3, [r0, #6]
 800dff6:	80c1      	strh	r1, [r0, #6]
 800dff8:	8083      	strh	r3, [r0, #4]
 800dffa:	4770      	bx	lr
 800dffc:	24006bd0 	.word	0x24006bd0
 800e000:	24006bcc 	.word	0x24006bcc

0800e004 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800e004:	4b07      	ldr	r3, [pc, #28]	; (800e024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800e006:	b510      	push	{r4, lr}
 800e008:	781b      	ldrb	r3, [r3, #0]
 800e00a:	2b01      	cmp	r3, #1
 800e00c:	d108      	bne.n	800e020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800e00e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e012:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e016:	8003      	strh	r3, [r0, #0]
 800e018:	8893      	ldrh	r3, [r2, #4]
 800e01a:	3b01      	subs	r3, #1
 800e01c:	1b1b      	subs	r3, r3, r4
 800e01e:	800b      	strh	r3, [r1, #0]
 800e020:	bd10      	pop	{r4, pc}
 800e022:	bf00      	nop
 800e024:	24006bd0 	.word	0x24006bd0

0800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800e028:	4b0a      	ldr	r3, [pc, #40]	; (800e054 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800e02a:	460a      	mov	r2, r1
 800e02c:	b510      	push	{r4, lr}
 800e02e:	781b      	ldrb	r3, [r3, #0]
 800e030:	2b01      	cmp	r3, #1
 800e032:	d10d      	bne.n	800e050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800e034:	8881      	ldrh	r1, [r0, #4]
 800e036:	8803      	ldrh	r3, [r0, #0]
 800e038:	440b      	add	r3, r1
 800e03a:	4601      	mov	r1, r0
 800e03c:	3b01      	subs	r3, #1
 800e03e:	f821 3b02 	strh.w	r3, [r1], #2
 800e042:	f7ff ffdf 	bl	800e004 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e046:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e04a:	88c2      	ldrh	r2, [r0, #6]
 800e04c:	80c3      	strh	r3, [r0, #6]
 800e04e:	8082      	strh	r2, [r0, #4]
 800e050:	bd10      	pop	{r4, pc}
 800e052:	bf00      	nop
 800e054:	24006bd0 	.word	0x24006bd0

0800e058 <_ZN8touchgfx11Application13requestRedrawEv>:
 800e058:	4b06      	ldr	r3, [pc, #24]	; (800e074 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800e05a:	2100      	movs	r1, #0
 800e05c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e060:	4b05      	ldr	r3, [pc, #20]	; (800e078 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800e062:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800e066:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e06a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800e06e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800e072:	4770      	bx	lr
 800e074:	24006bcc 	.word	0x24006bcc
 800e078:	24006bce 	.word	0x24006bce

0800e07c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800e07c:	4b03      	ldr	r3, [pc, #12]	; (800e08c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800e07e:	6818      	ldr	r0, [r3, #0]
 800e080:	b110      	cbz	r0, 800e088 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800e082:	6803      	ldr	r3, [r0, #0]
 800e084:	699b      	ldr	r3, [r3, #24]
 800e086:	4718      	bx	r3
 800e088:	4770      	bx	lr
 800e08a:	bf00      	nop
 800e08c:	24006c14 	.word	0x24006c14

0800e090 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800e090:	4770      	bx	lr
	...

0800e094 <_ZN8touchgfx11Application4drawEv>:
 800e094:	4b09      	ldr	r3, [pc, #36]	; (800e0bc <_ZN8touchgfx11Application4drawEv+0x28>)
 800e096:	b507      	push	{r0, r1, r2, lr}
 800e098:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e09c:	2100      	movs	r1, #0
 800e09e:	4b08      	ldr	r3, [pc, #32]	; (800e0c0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800e0a0:	9100      	str	r1, [sp, #0]
 800e0a2:	4669      	mov	r1, sp
 800e0a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e0a8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e0ac:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e0b0:	6803      	ldr	r3, [r0, #0]
 800e0b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e0b4:	4798      	blx	r3
 800e0b6:	b003      	add	sp, #12
 800e0b8:	f85d fb04 	ldr.w	pc, [sp], #4
 800e0bc:	24006bcc 	.word	0x24006bcc
 800e0c0:	24006bce 	.word	0x24006bce

0800e0c4 <_ZN8touchgfx11Application10invalidateEv>:
 800e0c4:	4b09      	ldr	r3, [pc, #36]	; (800e0ec <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800e0c6:	b082      	sub	sp, #8
 800e0c8:	2100      	movs	r1, #0
 800e0ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e0ce:	4b08      	ldr	r3, [pc, #32]	; (800e0f0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800e0d0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e0d4:	aa02      	add	r2, sp, #8
 800e0d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e0da:	9100      	str	r1, [sp, #0]
 800e0dc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e0e0:	6803      	ldr	r3, [r0, #0]
 800e0e2:	e912 0006 	ldmdb	r2, {r1, r2}
 800e0e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e0e8:	b002      	add	sp, #8
 800e0ea:	4718      	bx	r3
 800e0ec:	24006bcc 	.word	0x24006bcc
 800e0f0:	24006bce 	.word	0x24006bce

0800e0f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800e0f4:	4b03      	ldr	r3, [pc, #12]	; (800e104 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800e0f6:	6818      	ldr	r0, [r3, #0]
 800e0f8:	b110      	cbz	r0, 800e100 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800e0fa:	6803      	ldr	r3, [r0, #0]
 800e0fc:	69db      	ldr	r3, [r3, #28]
 800e0fe:	4718      	bx	r3
 800e100:	4770      	bx	lr
 800e102:	bf00      	nop
 800e104:	24006c14 	.word	0x24006c14

0800e108 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800e108:	4b03      	ldr	r3, [pc, #12]	; (800e118 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800e10a:	6818      	ldr	r0, [r3, #0]
 800e10c:	b110      	cbz	r0, 800e114 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800e10e:	6803      	ldr	r3, [r0, #0]
 800e110:	6a1b      	ldr	r3, [r3, #32]
 800e112:	4718      	bx	r3
 800e114:	4770      	bx	lr
 800e116:	bf00      	nop
 800e118:	24006c14 	.word	0x24006c14

0800e11c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800e11c:	2300      	movs	r3, #0
 800e11e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800e122:	4770      	bx	lr

0800e124 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800e124:	4b03      	ldr	r3, [pc, #12]	; (800e134 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800e126:	6818      	ldr	r0, [r3, #0]
 800e128:	b110      	cbz	r0, 800e130 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800e12a:	6803      	ldr	r3, [r0, #0]
 800e12c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e12e:	4718      	bx	r3
 800e130:	4770      	bx	lr
 800e132:	bf00      	nop
 800e134:	24006c14 	.word	0x24006c14

0800e138 <_ZN8touchgfx11ApplicationD1Ev>:
 800e138:	4770      	bx	lr

0800e13a <_ZN8touchgfx11ApplicationD0Ev>:
 800e13a:	b510      	push	{r4, lr}
 800e13c:	4604      	mov	r4, r0
 800e13e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800e142:	f00c f917 	bl	801a374 <_ZdlPvj>
 800e146:	4620      	mov	r0, r4
 800e148:	bd10      	pop	{r4, pc}

0800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e14a:	b510      	push	{r4, lr}
 800e14c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e150:	888a      	ldrh	r2, [r1, #4]
 800e152:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e156:	4422      	add	r2, r4
 800e158:	b212      	sxth	r2, r2
 800e15a:	4293      	cmp	r3, r2
 800e15c:	da15      	bge.n	800e18a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e15e:	8882      	ldrh	r2, [r0, #4]
 800e160:	4413      	add	r3, r2
 800e162:	b21b      	sxth	r3, r3
 800e164:	429c      	cmp	r4, r3
 800e166:	da10      	bge.n	800e18a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e168:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e16c:	88c9      	ldrh	r1, [r1, #6]
 800e16e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e172:	4419      	add	r1, r3
 800e174:	b209      	sxth	r1, r1
 800e176:	428a      	cmp	r2, r1
 800e178:	da07      	bge.n	800e18a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e17a:	88c0      	ldrh	r0, [r0, #6]
 800e17c:	4410      	add	r0, r2
 800e17e:	b200      	sxth	r0, r0
 800e180:	4283      	cmp	r3, r0
 800e182:	bfac      	ite	ge
 800e184:	2000      	movge	r0, #0
 800e186:	2001      	movlt	r0, #1
 800e188:	bd10      	pop	{r4, pc}
 800e18a:	2000      	movs	r0, #0
 800e18c:	e7fc      	b.n	800e188 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e18e <_ZN8touchgfx4Rect10restrictToEss>:
 800e18e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e192:	2b00      	cmp	r3, #0
 800e194:	b510      	push	{r4, lr}
 800e196:	da04      	bge.n	800e1a2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800e198:	8884      	ldrh	r4, [r0, #4]
 800e19a:	4423      	add	r3, r4
 800e19c:	8083      	strh	r3, [r0, #4]
 800e19e:	2300      	movs	r3, #0
 800e1a0:	8003      	strh	r3, [r0, #0]
 800e1a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e1a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e1aa:	1b09      	subs	r1, r1, r4
 800e1ac:	428b      	cmp	r3, r1
 800e1ae:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e1b2:	bfc8      	it	gt
 800e1b4:	8081      	strhgt	r1, [r0, #4]
 800e1b6:	2b00      	cmp	r3, #0
 800e1b8:	da04      	bge.n	800e1c4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800e1ba:	88c1      	ldrh	r1, [r0, #6]
 800e1bc:	440b      	add	r3, r1
 800e1be:	80c3      	strh	r3, [r0, #6]
 800e1c0:	2300      	movs	r3, #0
 800e1c2:	8043      	strh	r3, [r0, #2]
 800e1c4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800e1c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800e1cc:	1a52      	subs	r2, r2, r1
 800e1ce:	4293      	cmp	r3, r2
 800e1d0:	bfc8      	it	gt
 800e1d2:	80c2      	strhgt	r2, [r0, #6]
 800e1d4:	bd10      	pop	{r4, pc}
	...

0800e1d8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e1d8:	4b10      	ldr	r3, [pc, #64]	; (800e21c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800e1da:	b510      	push	{r4, lr}
 800e1dc:	460c      	mov	r4, r1
 800e1de:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1e2:	4b0f      	ldr	r3, [pc, #60]	; (800e220 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e1ea:	f7ff ffd0 	bl	800e18e <_ZN8touchgfx4Rect10restrictToEss>
 800e1ee:	4b0d      	ldr	r3, [pc, #52]	; (800e224 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800e1f0:	6818      	ldr	r0, [r3, #0]
 800e1f2:	b190      	cbz	r0, 800e21a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800e1f4:	6803      	ldr	r3, [r0, #0]
 800e1f6:	4621      	mov	r1, r4
 800e1f8:	689b      	ldr	r3, [r3, #8]
 800e1fa:	4798      	blx	r3
 800e1fc:	4b0a      	ldr	r3, [pc, #40]	; (800e228 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800e1fe:	6818      	ldr	r0, [r3, #0]
 800e200:	b118      	cbz	r0, 800e20a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800e202:	6803      	ldr	r3, [r0, #0]
 800e204:	4621      	mov	r1, r4
 800e206:	689b      	ldr	r3, [r3, #8]
 800e208:	4798      	blx	r3
 800e20a:	4b08      	ldr	r3, [pc, #32]	; (800e22c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800e20c:	4621      	mov	r1, r4
 800e20e:	6818      	ldr	r0, [r3, #0]
 800e210:	6803      	ldr	r3, [r0, #0]
 800e212:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e216:	69db      	ldr	r3, [r3, #28]
 800e218:	4718      	bx	r3
 800e21a:	bd10      	pop	{r4, pc}
 800e21c:	24006bce 	.word	0x24006bce
 800e220:	24006bcc 	.word	0x24006bcc
 800e224:	24006c14 	.word	0x24006c14
 800e228:	24006c10 	.word	0x24006c10
 800e22c:	24006bd8 	.word	0x24006bd8

0800e230 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800e230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e232:	4606      	mov	r6, r0
 800e234:	4608      	mov	r0, r1
 800e236:	460f      	mov	r7, r1
 800e238:	f7fb ffc5 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e23c:	b9e8      	cbnz	r0, 800e27a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e23e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800e242:	f9b6 4000 	ldrsh.w	r4, [r6]
 800e246:	42a5      	cmp	r5, r4
 800e248:	db17      	blt.n	800e27a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e24a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800e24e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800e252:	429a      	cmp	r2, r3
 800e254:	db11      	blt.n	800e27a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e256:	88b9      	ldrh	r1, [r7, #4]
 800e258:	440d      	add	r5, r1
 800e25a:	88b1      	ldrh	r1, [r6, #4]
 800e25c:	440c      	add	r4, r1
 800e25e:	b22d      	sxth	r5, r5
 800e260:	b224      	sxth	r4, r4
 800e262:	42a5      	cmp	r5, r4
 800e264:	dc09      	bgt.n	800e27a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e266:	88f8      	ldrh	r0, [r7, #6]
 800e268:	4410      	add	r0, r2
 800e26a:	88f2      	ldrh	r2, [r6, #6]
 800e26c:	4413      	add	r3, r2
 800e26e:	b200      	sxth	r0, r0
 800e270:	b21b      	sxth	r3, r3
 800e272:	4298      	cmp	r0, r3
 800e274:	bfcc      	ite	gt
 800e276:	2000      	movgt	r0, #0
 800e278:	2001      	movle	r0, #1
 800e27a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e27c <_ZN8touchgfx11Application11getInstanceEv>:
 800e27c:	4b01      	ldr	r3, [pc, #4]	; (800e284 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e27e:	6818      	ldr	r0, [r3, #0]
 800e280:	4770      	bx	lr
 800e282:	bf00      	nop
 800e284:	24006c24 	.word	0x24006c24

0800e288 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800e288:	2300      	movs	r3, #0
 800e28a:	b510      	push	{r4, lr}
 800e28c:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800e290:	4604      	mov	r4, r0
 800e292:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800e296:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800e29a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800e29e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800e2a2:	429a      	cmp	r2, r3
 800e2a4:	d90e      	bls.n	800e2c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800e2a6:	18e2      	adds	r2, r4, r3
 800e2a8:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800e2ac:	b122      	cbz	r2, 800e2b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800e2ae:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800e2b2:	6803      	ldr	r3, [r0, #0]
 800e2b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e2b6:	4798      	blx	r3
 800e2b8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800e2bc:	3301      	adds	r3, #1
 800e2be:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800e2c2:	e7ea      	b.n	800e29a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800e2c4:	bd10      	pop	{r4, pc}

0800e2c6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800e2c6:	b530      	push	{r4, r5, lr}
 800e2c8:	2200      	movs	r2, #0
 800e2ca:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 800e2ce:	b293      	uxth	r3, r2
 800e2d0:	429d      	cmp	r5, r3
 800e2d2:	d90e      	bls.n	800e2f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800e2d4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800e2d8:	428b      	cmp	r3, r1
 800e2da:	d10b      	bne.n	800e2f4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800e2dc:	1884      	adds	r4, r0, r2
 800e2de:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800e2e2:	b13b      	cbz	r3, 800e2f4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800e2e4:	3b01      	subs	r3, #1
 800e2e6:	b2db      	uxtb	r3, r3
 800e2e8:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 800e2ec:	b90b      	cbnz	r3, 800e2f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800e2ee:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800e2f2:	bd30      	pop	{r4, r5, pc}
 800e2f4:	3201      	adds	r2, #1
 800e2f6:	e7ea      	b.n	800e2ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800e2f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800e2f8:	2300      	movs	r3, #0
 800e2fa:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800e2fe:	30a4      	adds	r0, #164	; 0xa4
 800e300:	f820 3c24 	strh.w	r3, [r0, #-36]
 800e304:	f802 3b01 	strb.w	r3, [r2], #1
 800e308:	4282      	cmp	r2, r0
 800e30a:	d1fb      	bne.n	800e304 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800e30c:	4770      	bx	lr
	...

0800e310 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e310:	b570      	push	{r4, r5, r6, lr}
 800e312:	4c0b      	ldr	r4, [pc, #44]	; (800e340 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800e314:	4605      	mov	r5, r0
 800e316:	460e      	mov	r6, r1
 800e318:	6820      	ldr	r0, [r4, #0]
 800e31a:	b110      	cbz	r0, 800e322 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800e31c:	6803      	ldr	r3, [r0, #0]
 800e31e:	695b      	ldr	r3, [r3, #20]
 800e320:	4798      	blx	r3
 800e322:	1d28      	adds	r0, r5, #4
 800e324:	f7ff ffe8 	bl	800e2f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e328:	6026      	str	r6, [r4, #0]
 800e32a:	6833      	ldr	r3, [r6, #0]
 800e32c:	4630      	mov	r0, r6
 800e32e:	68db      	ldr	r3, [r3, #12]
 800e330:	4798      	blx	r3
 800e332:	682b      	ldr	r3, [r5, #0]
 800e334:	4628      	mov	r0, r5
 800e336:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e338:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e33c:	4718      	bx	r3
 800e33e:	bf00      	nop
 800e340:	24006c14 	.word	0x24006c14

0800e344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800e344:	2300      	movs	r3, #0
 800e346:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800e34a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800e34e:	461a      	mov	r2, r3
 800e350:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e352:	461c      	mov	r4, r3
 800e354:	461d      	mov	r5, r3
 800e356:	459c      	cmp	ip, r3
 800e358:	dd1a      	ble.n	800e390 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800e35a:	18c6      	adds	r6, r0, r3
 800e35c:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800e360:	b16e      	cbz	r6, 800e37e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800e362:	429a      	cmp	r2, r3
 800e364:	d008      	beq.n	800e378 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800e366:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800e36a:	fa1f fe82 	uxth.w	lr, r2
 800e36e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800e372:	1887      	adds	r7, r0, r2
 800e374:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800e378:	3201      	adds	r2, #1
 800e37a:	3301      	adds	r3, #1
 800e37c:	e7eb      	b.n	800e356 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800e37e:	4299      	cmp	r1, r3
 800e380:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800e384:	bfa8      	it	ge
 800e386:	3501      	addge	r5, #1
 800e388:	429e      	cmp	r6, r3
 800e38a:	bfc8      	it	gt
 800e38c:	3401      	addgt	r4, #1
 800e38e:	e7f4      	b.n	800e37a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800e390:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800e394:	1b49      	subs	r1, r1, r5
 800e396:	1b1b      	subs	r3, r3, r4
 800e398:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800e39c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800e3a0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800e3a4:	4293      	cmp	r3, r2
 800e3a6:	dd03      	ble.n	800e3b0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800e3a8:	3b01      	subs	r3, #1
 800e3aa:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800e3ae:	e7f7      	b.n	800e3a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800e3b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e3b4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e3b4:	b570      	push	{r4, r5, r6, lr}
 800e3b6:	4d16      	ldr	r5, [pc, #88]	; (800e410 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800e3b8:	4604      	mov	r4, r0
 800e3ba:	6828      	ldr	r0, [r5, #0]
 800e3bc:	b140      	cbz	r0, 800e3d0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e3be:	7a03      	ldrb	r3, [r0, #8]
 800e3c0:	b933      	cbnz	r3, 800e3d0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e3c2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800e3c6:	6803      	ldr	r3, [r0, #0]
 800e3c8:	689b      	ldr	r3, [r3, #8]
 800e3ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e3ce:	4718      	bx	r3
 800e3d0:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800e3d4:	4e0f      	ldr	r6, [pc, #60]	; (800e414 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800e3d6:	b973      	cbnz	r3, 800e3f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e3d8:	b168      	cbz	r0, 800e3f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e3da:	7a03      	ldrb	r3, [r0, #8]
 800e3dc:	b15b      	cbz	r3, 800e3f6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e3de:	6830      	ldr	r0, [r6, #0]
 800e3e0:	b110      	cbz	r0, 800e3e8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800e3e2:	6803      	ldr	r3, [r0, #0]
 800e3e4:	691b      	ldr	r3, [r3, #16]
 800e3e6:	4798      	blx	r3
 800e3e8:	6828      	ldr	r0, [r5, #0]
 800e3ea:	6803      	ldr	r3, [r0, #0]
 800e3ec:	68db      	ldr	r3, [r3, #12]
 800e3ee:	4798      	blx	r3
 800e3f0:	2301      	movs	r3, #1
 800e3f2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800e3f6:	3404      	adds	r4, #4
 800e3f8:	4620      	mov	r0, r4
 800e3fa:	f7ff ff45 	bl	800e288 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800e3fe:	4620      	mov	r0, r4
 800e400:	f7ff ffa0 	bl	800e344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800e404:	6830      	ldr	r0, [r6, #0]
 800e406:	b110      	cbz	r0, 800e40e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800e408:	6803      	ldr	r3, [r0, #0]
 800e40a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e40c:	e7dd      	b.n	800e3ca <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800e40e:	bd70      	pop	{r4, r5, r6, pc}
 800e410:	24006c18 	.word	0x24006c18
 800e414:	24006c14 	.word	0x24006c14

0800e418 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800e418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e41a:	2300      	movs	r3, #0
 800e41c:	4604      	mov	r4, r0
 800e41e:	460d      	mov	r5, r1
 800e420:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 800e424:	4618      	mov	r0, r3
 800e426:	b29a      	uxth	r2, r3
 800e428:	4291      	cmp	r1, r2
 800e42a:	d912      	bls.n	800e452 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
 800e42c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800e430:	18e6      	adds	r6, r4, r3
 800e432:	42af      	cmp	r7, r5
 800e434:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 800e438:	d105      	bne.n	800e446 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800e43a:	2aff      	cmp	r2, #255	; 0xff
 800e43c:	d002      	beq.n	800e444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800e43e:	3201      	adds	r2, #1
 800e440:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 800e444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e446:	2a00      	cmp	r2, #0
 800e448:	f103 0301 	add.w	r3, r3, #1
 800e44c:	bf08      	it	eq
 800e44e:	2001      	moveq	r0, #1
 800e450:	e7e9      	b.n	800e426 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800e452:	b120      	cbz	r0, 800e45e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 800e454:	2920      	cmp	r1, #32
 800e456:	d102      	bne.n	800e45e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 800e458:	4620      	mov	r0, r4
 800e45a:	f7ff ff73 	bl	800e344 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800e45e:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 800e462:	2b1f      	cmp	r3, #31
 800e464:	d8ee      	bhi.n	800e444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800e466:	18e2      	adds	r2, r4, r3
 800e468:	2101      	movs	r1, #1
 800e46a:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 800e46e:	185a      	adds	r2, r3, r1
 800e470:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 800e474:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800e478:	e7e4      	b.n	800e444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800e47a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e47a:	4603      	mov	r3, r0
 800e47c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e480:	2200      	movs	r2, #0
 800e482:	801a      	strh	r2, [r3, #0]
 800e484:	3308      	adds	r3, #8
 800e486:	f823 2c06 	strh.w	r2, [r3, #-6]
 800e48a:	f823 2c04 	strh.w	r2, [r3, #-4]
 800e48e:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e492:	428b      	cmp	r3, r1
 800e494:	d1f5      	bne.n	800e482 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e496:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e49a:	4770      	bx	lr

0800e49c <_ZN8touchgfx11ApplicationC1Ev>:
 800e49c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e49e:	4b1d      	ldr	r3, [pc, #116]	; (800e514 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e4a0:	4606      	mov	r6, r0
 800e4a2:	4604      	mov	r4, r0
 800e4a4:	2500      	movs	r5, #0
 800e4a6:	f846 3b04 	str.w	r3, [r6], #4
 800e4aa:	22a8      	movs	r2, #168	; 0xa8
 800e4ac:	2100      	movs	r1, #0
 800e4ae:	4630      	mov	r0, r6
 800e4b0:	f00c f981 	bl	801a7b6 <memset>
 800e4b4:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800e4b8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800e4bc:	4f16      	ldr	r7, [pc, #88]	; (800e518 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e4be:	f7ff ffdc 	bl	800e47a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e4c2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800e4c6:	f7ff ffd8 	bl	800e47a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e4ca:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800e4ce:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800e4d2:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800e4d6:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800e4da:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800e4de:	490f      	ldr	r1, [pc, #60]	; (800e51c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e4e0:	480f      	ldr	r0, [pc, #60]	; (800e520 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e4e2:	f00b fe1f 	bl	801a124 <CRC_Lock>
 800e4e6:	4b0f      	ldr	r3, [pc, #60]	; (800e524 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800e4e8:	b158      	cbz	r0, 800e502 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800e4ea:	801d      	strh	r5, [r3, #0]
 800e4ec:	2300      	movs	r3, #0
 800e4ee:	4a0e      	ldr	r2, [pc, #56]	; (800e528 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800e4f0:	4630      	mov	r0, r6
 800e4f2:	6013      	str	r3, [r2, #0]
 800e4f4:	4a0d      	ldr	r2, [pc, #52]	; (800e52c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800e4f6:	603b      	str	r3, [r7, #0]
 800e4f8:	6013      	str	r3, [r2, #0]
 800e4fa:	f7ff fefd 	bl	800e2f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e4fe:	4620      	mov	r0, r4
 800e500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e502:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e506:	2002      	movs	r0, #2
 800e508:	801a      	strh	r2, [r3, #0]
 800e50a:	6038      	str	r0, [r7, #0]
 800e50c:	f001 fa44 	bl	800f998 <_ZN8touchgfx6Screen4drawEv>
 800e510:	e7ec      	b.n	800e4ec <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800e512:	bf00      	nop
 800e514:	0801c838 	.word	0x0801c838
 800e518:	24006c14 	.word	0x24006c14
 800e51c:	b5e8b5cd 	.word	0xb5e8b5cd
 800e520:	f407a5c2 	.word	0xf407a5c2
 800e524:	24000050 	.word	0x24000050
 800e528:	24006c24 	.word	0x24006c24
 800e52c:	24006c18 	.word	0x24006c18

0800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e530:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e534:	3b01      	subs	r3, #1
 800e536:	b29b      	uxth	r3, r3
 800e538:	428b      	cmp	r3, r1
 800e53a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800e53e:	b510      	push	{r4, lr}
 800e540:	d908      	bls.n	800e554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800e542:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e546:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e54a:	681a      	ldr	r2, [r3, #0]
 800e54c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e550:	685a      	ldr	r2, [r3, #4]
 800e552:	6062      	str	r2, [r4, #4]
 800e554:	bd10      	pop	{r4, pc}
	...

0800e558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e55c:	b08f      	sub	sp, #60	; 0x3c
 800e55e:	4b8f      	ldr	r3, [pc, #572]	; (800e79c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800e560:	4683      	mov	fp, r0
 800e562:	ac0a      	add	r4, sp, #40	; 0x28
 800e564:	e884 0006 	stmia.w	r4, {r1, r2}
 800e568:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e56c:	4620      	mov	r0, r4
 800e56e:	4b8c      	ldr	r3, [pc, #560]	; (800e7a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800e570:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e574:	f7ff fe0b 	bl	800e18e <_ZN8touchgfx4Rect10restrictToEss>
 800e578:	4620      	mov	r0, r4
 800e57a:	f7fb fe24 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e57e:	2800      	cmp	r0, #0
 800e580:	d16a      	bne.n	800e658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e582:	9403      	str	r4, [sp, #12]
 800e584:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800e588:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800e58c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800e590:	9301      	str	r3, [sp, #4]
 800e592:	35a4      	adds	r5, #164	; 0xa4
 800e594:	b15c      	cbz	r4, 800e5ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e596:	4629      	mov	r1, r5
 800e598:	9803      	ldr	r0, [sp, #12]
 800e59a:	f7ff fe49 	bl	800e230 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e59e:	3c01      	subs	r4, #1
 800e5a0:	b118      	cbz	r0, 800e5aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800e5a2:	b2a1      	uxth	r1, r4
 800e5a4:	9801      	ldr	r0, [sp, #4]
 800e5a6:	f7ff ffc3 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e5aa:	3d08      	subs	r5, #8
 800e5ac:	e7f2      	b.n	800e594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800e5ae:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 800e5b2:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e5b6:	f8cd a010 	str.w	sl, [sp, #16]
 800e5ba:	9302      	str	r3, [sp, #8]
 800e5bc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800e5c0:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800e5c4:	9306      	str	r3, [sp, #24]
 800e5c6:	445c      	add	r4, fp
 800e5c8:	2500      	movs	r5, #0
 800e5ca:	4626      	mov	r6, r4
 800e5cc:	f8cd a014 	str.w	sl, [sp, #20]
 800e5d0:	462f      	mov	r7, r5
 800e5d2:	9b05      	ldr	r3, [sp, #20]
 800e5d4:	2b00      	cmp	r3, #0
 800e5d6:	d073      	beq.n	800e6c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e5d8:	9903      	ldr	r1, [sp, #12]
 800e5da:	4630      	mov	r0, r6
 800e5dc:	f7ff fdb5 	bl	800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e5e0:	b350      	cbz	r0, 800e638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e5e2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800e5e6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800e5ea:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 800e5ee:	45e6      	cmp	lr, ip
 800e5f0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800e5f4:	db33      	blt.n	800e65e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e5f6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800e5fa:	88b3      	ldrh	r3, [r6, #4]
 800e5fc:	4472      	add	r2, lr
 800e5fe:	4463      	add	r3, ip
 800e600:	b212      	sxth	r2, r2
 800e602:	b21b      	sxth	r3, r3
 800e604:	429a      	cmp	r2, r3
 800e606:	dc2a      	bgt.n	800e65e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e608:	fa1f f289 	uxth.w	r2, r9
 800e60c:	88f3      	ldrh	r3, [r6, #6]
 800e60e:	45c8      	cmp	r8, r9
 800e610:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800e614:	4413      	add	r3, r2
 800e616:	fa1f fc88 	uxth.w	ip, r8
 800e61a:	b29b      	uxth	r3, r3
 800e61c:	fa0f fe83 	sxth.w	lr, r3
 800e620:	db0f      	blt.n	800e642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e622:	eba3 030c 	sub.w	r3, r3, ip
 800e626:	1ac9      	subs	r1, r1, r3
 800e628:	b209      	sxth	r1, r1
 800e62a:	2900      	cmp	r1, #0
 800e62c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e630:	dd12      	ble.n	800e658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e632:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800e636:	4605      	mov	r5, r0
 800e638:	9b05      	ldr	r3, [sp, #20]
 800e63a:	3e08      	subs	r6, #8
 800e63c:	3b01      	subs	r3, #1
 800e63e:	9305      	str	r3, [sp, #20]
 800e640:	e7c7      	b.n	800e5d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e642:	4461      	add	r1, ip
 800e644:	b209      	sxth	r1, r1
 800e646:	4571      	cmp	r1, lr
 800e648:	dc38      	bgt.n	800e6bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e64a:	eba2 020c 	sub.w	r2, r2, ip
 800e64e:	b212      	sxth	r2, r2
 800e650:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e654:	2a00      	cmp	r2, #0
 800e656:	dcee      	bgt.n	800e636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e658:	b00f      	add	sp, #60	; 0x3c
 800e65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e65e:	45c8      	cmp	r8, r9
 800e660:	db2c      	blt.n	800e6bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e662:	88f3      	ldrh	r3, [r6, #6]
 800e664:	4499      	add	r9, r3
 800e666:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e66a:	4498      	add	r8, r3
 800e66c:	fa0f f989 	sxth.w	r9, r9
 800e670:	fa0f f888 	sxth.w	r8, r8
 800e674:	45c1      	cmp	r9, r8
 800e676:	db21      	blt.n	800e6bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e678:	fa1f f28c 	uxth.w	r2, ip
 800e67c:	88b3      	ldrh	r3, [r6, #4]
 800e67e:	45e6      	cmp	lr, ip
 800e680:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e684:	4413      	add	r3, r2
 800e686:	fa1f f88e 	uxth.w	r8, lr
 800e68a:	b29b      	uxth	r3, r3
 800e68c:	fa0f f983 	sxth.w	r9, r3
 800e690:	db0a      	blt.n	800e6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800e692:	eba3 0308 	sub.w	r3, r3, r8
 800e696:	1ac9      	subs	r1, r1, r3
 800e698:	b209      	sxth	r1, r1
 800e69a:	2900      	cmp	r1, #0
 800e69c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800e6a0:	ddda      	ble.n	800e658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e6a2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800e6a6:	e7c6      	b.n	800e636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e6a8:	4441      	add	r1, r8
 800e6aa:	b209      	sxth	r1, r1
 800e6ac:	4549      	cmp	r1, r9
 800e6ae:	dc05      	bgt.n	800e6bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e6b0:	eba2 0208 	sub.w	r2, r2, r8
 800e6b4:	b212      	sxth	r2, r2
 800e6b6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e6ba:	e7cb      	b.n	800e654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e6bc:	4607      	mov	r7, r0
 800e6be:	e7bb      	b.n	800e638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e6c0:	2d00      	cmp	r5, #0
 800e6c2:	d181      	bne.n	800e5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800e6c4:	2f00      	cmp	r7, #0
 800e6c6:	f000 81dd 	beq.w	800ea84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e6ca:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800e6ce:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800e6d2:	b2b3      	uxth	r3, r6
 800e6d4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800e6d8:	9305      	str	r3, [sp, #20]
 800e6da:	9a05      	ldr	r2, [sp, #20]
 800e6dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e6e0:	4413      	add	r3, r2
 800e6e2:	b2ba      	uxth	r2, r7
 800e6e4:	4492      	add	sl, r2
 800e6e6:	b29b      	uxth	r3, r3
 800e6e8:	fa1f fa8a 	uxth.w	sl, sl
 800e6ec:	fa0f f883 	sxth.w	r8, r3
 800e6f0:	fa0f f98a 	sxth.w	r9, sl
 800e6f4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e6f8:	9b04      	ldr	r3, [sp, #16]
 800e6fa:	2b00      	cmp	r3, #0
 800e6fc:	d052      	beq.n	800e7a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e6fe:	9903      	ldr	r1, [sp, #12]
 800e700:	4620      	mov	r0, r4
 800e702:	f7ff fd22 	bl	800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e706:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e70a:	b1c0      	cbz	r0, 800e73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e70c:	f9b4 e000 	ldrsh.w	lr, [r4]
 800e710:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e714:	4576      	cmp	r6, lr
 800e716:	dc22      	bgt.n	800e75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e718:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e71c:	44f4      	add	ip, lr
 800e71e:	fa0f fc8c 	sxth.w	ip, ip
 800e722:	45e0      	cmp	r8, ip
 800e724:	db1b      	blt.n	800e75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e726:	428f      	cmp	r7, r1
 800e728:	fa1f fc81 	uxth.w	ip, r1
 800e72c:	88e1      	ldrh	r1, [r4, #6]
 800e72e:	dc0d      	bgt.n	800e74c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e730:	ebaa 0c0c 	sub.w	ip, sl, ip
 800e734:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e738:	eba1 010c 	sub.w	r1, r1, ip
 800e73c:	80e1      	strh	r1, [r4, #6]
 800e73e:	4628      	mov	r0, r5
 800e740:	9904      	ldr	r1, [sp, #16]
 800e742:	3c08      	subs	r4, #8
 800e744:	4605      	mov	r5, r0
 800e746:	3901      	subs	r1, #1
 800e748:	9104      	str	r1, [sp, #16]
 800e74a:	e7d3      	b.n	800e6f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800e74c:	4461      	add	r1, ip
 800e74e:	b209      	sxth	r1, r1
 800e750:	4549      	cmp	r1, r9
 800e752:	dcf5      	bgt.n	800e740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e754:	eba2 0c0c 	sub.w	ip, r2, ip
 800e758:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e75c:	e7ef      	b.n	800e73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e75e:	428f      	cmp	r7, r1
 800e760:	dcee      	bgt.n	800e740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e762:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800e766:	4461      	add	r1, ip
 800e768:	b209      	sxth	r1, r1
 800e76a:	4589      	cmp	r9, r1
 800e76c:	dbe8      	blt.n	800e740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e76e:	4576      	cmp	r6, lr
 800e770:	fa1f fc8e 	uxth.w	ip, lr
 800e774:	88a1      	ldrh	r1, [r4, #4]
 800e776:	dc07      	bgt.n	800e788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800e778:	eba3 0c0c 	sub.w	ip, r3, ip
 800e77c:	f8a4 8000 	strh.w	r8, [r4]
 800e780:	eba1 010c 	sub.w	r1, r1, ip
 800e784:	80a1      	strh	r1, [r4, #4]
 800e786:	e7da      	b.n	800e73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e788:	4461      	add	r1, ip
 800e78a:	b209      	sxth	r1, r1
 800e78c:	4588      	cmp	r8, r1
 800e78e:	dbd7      	blt.n	800e740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e790:	9905      	ldr	r1, [sp, #20]
 800e792:	eba1 0c0c 	sub.w	ip, r1, ip
 800e796:	f8a4 c004 	strh.w	ip, [r4, #4]
 800e79a:	e7d0      	b.n	800e73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e79c:	24006bce 	.word	0x24006bce
 800e7a0:	24006bcc 	.word	0x24006bcc
 800e7a4:	2d00      	cmp	r5, #0
 800e7a6:	f000 816d 	beq.w	800ea84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e7aa:	9b06      	ldr	r3, [sp, #24]
 800e7ac:	445b      	add	r3, fp
 800e7ae:	461c      	mov	r4, r3
 800e7b0:	9b02      	ldr	r3, [sp, #8]
 800e7b2:	3301      	adds	r3, #1
 800e7b4:	f000 8166 	beq.w	800ea84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e7b8:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800e7bc:	9803      	ldr	r0, [sp, #12]
 800e7be:	4629      	mov	r1, r5
 800e7c0:	f7ff fd36 	bl	800e230 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e7c4:	b120      	cbz	r0, 800e7d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800e7c6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e7ca:	9801      	ldr	r0, [sp, #4]
 800e7cc:	f7ff feb0 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e7d0:	9903      	ldr	r1, [sp, #12]
 800e7d2:	4628      	mov	r0, r5
 800e7d4:	f7ff fcb9 	bl	800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e7d8:	2800      	cmp	r0, #0
 800e7da:	f000 809c 	beq.w	800e916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e7de:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800e7e2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800e7e6:	fa1f f189 	uxth.w	r1, r9
 800e7ea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800e7ee:	9309      	str	r3, [sp, #36]	; 0x24
 800e7f0:	eb01 0c03 	add.w	ip, r1, r3
 800e7f4:	b283      	uxth	r3, r0
 800e7f6:	4548      	cmp	r0, r9
 800e7f8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800e7fc:	fa1f fa8c 	uxth.w	sl, ip
 800e800:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800e804:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800e808:	eb03 050c 	add.w	r5, r3, ip
 800e80c:	b2ad      	uxth	r5, r5
 800e80e:	9505      	str	r5, [sp, #20]
 800e810:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800e814:	9504      	str	r5, [sp, #16]
 800e816:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800e81a:	f340 8099 	ble.w	800e950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800e81e:	1a5b      	subs	r3, r3, r1
 800e820:	4596      	cmp	lr, r2
 800e822:	fa0f f08a 	sxth.w	r0, sl
 800e826:	b29b      	uxth	r3, r3
 800e828:	b21e      	sxth	r6, r3
 800e82a:	dd2e      	ble.n	800e88a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800e82c:	9f02      	ldr	r7, [sp, #8]
 800e82e:	fa1f fe8e 	uxth.w	lr, lr
 800e832:	b292      	uxth	r2, r2
 800e834:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800e838:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e83c:	9f04      	ldr	r7, [sp, #16]
 800e83e:	ebae 0102 	sub.w	r1, lr, r2
 800e842:	44a6      	add	lr, r4
 800e844:	1a3f      	subs	r7, r7, r0
 800e846:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800e84a:	b289      	uxth	r1, r1
 800e84c:	4402      	add	r2, r0
 800e84e:	fa0f fe8e 	sxth.w	lr, lr
 800e852:	b20d      	sxth	r5, r1
 800e854:	b212      	sxth	r2, r2
 800e856:	436f      	muls	r7, r5
 800e858:	ebae 0202 	sub.w	r2, lr, r2
 800e85c:	4372      	muls	r2, r6
 800e85e:	4297      	cmp	r7, r2
 800e860:	db09      	blt.n	800e876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800e862:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800e866:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800e86a:	449c      	add	ip, r3
 800e86c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800e870:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800e874:	e686      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e876:	4421      	add	r1, r4
 800e878:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800e87c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800e880:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e884:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800e888:	e67c      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e88a:	9f04      	ldr	r7, [sp, #16]
 800e88c:	42b8      	cmp	r0, r7
 800e88e:	da27      	bge.n	800e8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e890:	9902      	ldr	r1, [sp, #8]
 800e892:	1a3f      	subs	r7, r7, r0
 800e894:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 800e898:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800e89c:	eb05 010e 	add.w	r1, r5, lr
 800e8a0:	fa1f f881 	uxth.w	r8, r1
 800e8a4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 800e8a8:	4411      	add	r1, r2
 800e8aa:	fa0f f988 	sxth.w	r9, r8
 800e8ae:	eba2 020e 	sub.w	r2, r2, lr
 800e8b2:	eba1 0108 	sub.w	r1, r1, r8
 800e8b6:	4372      	muls	r2, r6
 800e8b8:	b289      	uxth	r1, r1
 800e8ba:	fa0f f881 	sxth.w	r8, r1
 800e8be:	fb08 f707 	mul.w	r7, r8, r7
 800e8c2:	42ba      	cmp	r2, r7
 800e8c4:	dc06      	bgt.n	800e8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800e8c6:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 800e8ca:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 800e8ce:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 800e8d2:	e7ca      	b.n	800e86a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800e8d4:	4429      	add	r1, r5
 800e8d6:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 800e8da:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e8de:	e651      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e8e0:	9805      	ldr	r0, [sp, #20]
 800e8e2:	2d06      	cmp	r5, #6
 800e8e4:	ebaa 0000 	sub.w	r0, sl, r0
 800e8e8:	b280      	uxth	r0, r0
 800e8ea:	fa0f fe80 	sxth.w	lr, r0
 800e8ee:	d817      	bhi.n	800e920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800e8f0:	9b04      	ldr	r3, [sp, #16]
 800e8f2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800e8f6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800e8fa:	1c6b      	adds	r3, r5, #1
 800e8fc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 800e900:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800e904:	9b01      	ldr	r3, [sp, #4]
 800e906:	9801      	ldr	r0, [sp, #4]
 800e908:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e90c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e910:	805a      	strh	r2, [r3, #2]
 800e912:	809e      	strh	r6, [r3, #4]
 800e914:	80d9      	strh	r1, [r3, #6]
 800e916:	9b02      	ldr	r3, [sp, #8]
 800e918:	3c08      	subs	r4, #8
 800e91a:	3b01      	subs	r3, #1
 800e91c:	9302      	str	r3, [sp, #8]
 800e91e:	e747      	b.n	800e7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800e920:	9a02      	ldr	r2, [sp, #8]
 800e922:	45b6      	cmp	lr, r6
 800e924:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e928:	db0d      	blt.n	800e946 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e92a:	449c      	add	ip, r3
 800e92c:	445a      	add	r2, fp
 800e92e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800e932:	fa1f fc8c 	uxth.w	ip, ip
 800e936:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 800e93a:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800e93e:	448c      	add	ip, r1
 800e940:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 800e944:	e61e      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e946:	445a      	add	r2, fp
 800e948:	4484      	add	ip, r0
 800e94a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 800e94e:	e78f      	b.n	800e870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e950:	fa1f f18e 	uxth.w	r1, lr
 800e954:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800e958:	b293      	uxth	r3, r2
 800e95a:	4596      	cmp	lr, r2
 800e95c:	eb01 0806 	add.w	r8, r1, r6
 800e960:	9306      	str	r3, [sp, #24]
 800e962:	fa1f f888 	uxth.w	r8, r8
 800e966:	9f06      	ldr	r7, [sp, #24]
 800e968:	fa0f f388 	sxth.w	r3, r8
 800e96c:	9307      	str	r3, [sp, #28]
 800e96e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800e972:	443b      	add	r3, r7
 800e974:	b29b      	uxth	r3, r3
 800e976:	9308      	str	r3, [sp, #32]
 800e978:	da24      	bge.n	800e9c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800e97a:	9905      	ldr	r1, [sp, #20]
 800e97c:	eba3 0308 	sub.w	r3, r3, r8
 800e980:	eba2 020e 	sub.w	r2, r2, lr
 800e984:	eba9 0000 	sub.w	r0, r9, r0
 800e988:	ebaa 0401 	sub.w	r4, sl, r1
 800e98c:	b29b      	uxth	r3, r3
 800e98e:	b2a4      	uxth	r4, r4
 800e990:	b219      	sxth	r1, r3
 800e992:	b225      	sxth	r5, r4
 800e994:	4348      	muls	r0, r1
 800e996:	436a      	muls	r2, r5
 800e998:	4282      	cmp	r2, r0
 800e99a:	9a02      	ldr	r2, [sp, #8]
 800e99c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e9a0:	445a      	add	r2, fp
 800e9a2:	dc06      	bgt.n	800e9b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800e9a4:	9b07      	ldr	r3, [sp, #28]
 800e9a6:	44a4      	add	ip, r4
 800e9a8:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 800e9ac:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 800e9b0:	e75e      	b.n	800e870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e9b2:	9904      	ldr	r1, [sp, #16]
 800e9b4:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 800e9b8:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 800e9bc:	4433      	add	r3, r6
 800e9be:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e9c2:	e5df      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e9c4:	9f06      	ldr	r7, [sp, #24]
 800e9c6:	9b04      	ldr	r3, [sp, #16]
 800e9c8:	1bc9      	subs	r1, r1, r7
 800e9ca:	fa0f f78a 	sxth.w	r7, sl
 800e9ce:	b289      	uxth	r1, r1
 800e9d0:	429f      	cmp	r7, r3
 800e9d2:	fa0f fe81 	sxth.w	lr, r1
 800e9d6:	dd23      	ble.n	800ea20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800e9d8:	9a05      	ldr	r2, [sp, #20]
 800e9da:	eba9 0000 	sub.w	r0, r9, r0
 800e9de:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e9e2:	ebaa 0202 	sub.w	r2, sl, r2
 800e9e6:	9d07      	ldr	r5, [sp, #28]
 800e9e8:	fb0e f000 	mul.w	r0, lr, r0
 800e9ec:	b292      	uxth	r2, r2
 800e9ee:	eba5 0a03 	sub.w	sl, r5, r3
 800e9f2:	9b02      	ldr	r3, [sp, #8]
 800e9f4:	b214      	sxth	r4, r2
 800e9f6:	00db      	lsls	r3, r3, #3
 800e9f8:	fb04 fa0a 	mul.w	sl, r4, sl
 800e9fc:	445b      	add	r3, fp
 800e9fe:	4550      	cmp	r0, sl
 800ea00:	db03      	blt.n	800ea0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800ea02:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 800ea06:	4494      	add	ip, r2
 800ea08:	e732      	b.n	800e870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800ea0a:	9a04      	ldr	r2, [sp, #16]
 800ea0c:	4431      	add	r1, r6
 800ea0e:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 800ea12:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 800ea16:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 800ea1a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800ea1e:	e75c      	b.n	800e8da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800ea20:	9b08      	ldr	r3, [sp, #32]
 800ea22:	2d06      	cmp	r5, #6
 800ea24:	eba3 0308 	sub.w	r3, r3, r8
 800ea28:	b29b      	uxth	r3, r3
 800ea2a:	b218      	sxth	r0, r3
 800ea2c:	d813      	bhi.n	800ea56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800ea2e:	9b07      	ldr	r3, [sp, #28]
 800ea30:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 800ea34:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 800ea38:	1c6b      	adds	r3, r5, #1
 800ea3a:	9901      	ldr	r1, [sp, #4]
 800ea3c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800ea40:	9b01      	ldr	r3, [sp, #4]
 800ea42:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800ea46:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ea4a:	805a      	strh	r2, [r3, #2]
 800ea4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ea4e:	f8a3 e006 	strh.w	lr, [r3, #6]
 800ea52:	809a      	strh	r2, [r3, #4]
 800ea54:	e75f      	b.n	800e916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800ea56:	9c02      	ldr	r4, [sp, #8]
 800ea58:	4570      	cmp	r0, lr
 800ea5a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ea5e:	db0d      	blt.n	800ea7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800ea60:	4431      	add	r1, r6
 800ea62:	9b06      	ldr	r3, [sp, #24]
 800ea64:	445c      	add	r4, fp
 800ea66:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800ea6a:	b289      	uxth	r1, r1
 800ea6c:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 800ea70:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800ea74:	4419      	add	r1, r3
 800ea76:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 800ea7a:	e583      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ea7c:	445c      	add	r4, fp
 800ea7e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 800ea82:	e79b      	b.n	800e9bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800ea84:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800ea88:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800ea8c:	1e65      	subs	r5, r4, #1
 800ea8e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800ea92:	b2ad      	uxth	r5, r5
 800ea94:	42b5      	cmp	r5, r6
 800ea96:	d044      	beq.n	800eb22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800ea98:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 800ea9c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 800eaa0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800eaa4:	4282      	cmp	r2, r0
 800eaa6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 800eaaa:	d11f      	bne.n	800eaec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800eaac:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 800eab0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800eab4:	459c      	cmp	ip, r3
 800eab6:	d119      	bne.n	800eaec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800eab8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 800eabc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800eac0:	19d8      	adds	r0, r3, r7
 800eac2:	b200      	sxth	r0, r0
 800eac4:	4288      	cmp	r0, r1
 800eac6:	d109      	bne.n	800eadc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800eac8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800eacc:	4413      	add	r3, r2
 800eace:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800ead2:	4629      	mov	r1, r5
 800ead4:	9801      	ldr	r0, [sp, #4]
 800ead6:	f7ff fd2b 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eada:	e003      	b.n	800eae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800eadc:	4411      	add	r1, r2
 800eade:	b209      	sxth	r1, r1
 800eae0:	42b9      	cmp	r1, r7
 800eae2:	d0f3      	beq.n	800eacc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800eae4:	3d01      	subs	r5, #1
 800eae6:	3c08      	subs	r4, #8
 800eae8:	b2ad      	uxth	r5, r5
 800eaea:	e7d3      	b.n	800ea94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800eaec:	42b9      	cmp	r1, r7
 800eaee:	d1f9      	bne.n	800eae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800eaf0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 800eaf4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800eaf8:	4299      	cmp	r1, r3
 800eafa:	d1f3      	bne.n	800eae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800eafc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800eb00:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800eb04:	181f      	adds	r7, r3, r0
 800eb06:	b23f      	sxth	r7, r7
 800eb08:	42ba      	cmp	r2, r7
 800eb0a:	d105      	bne.n	800eb18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800eb0c:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 800eb10:	440b      	add	r3, r1
 800eb12:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800eb16:	e7dc      	b.n	800ead2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800eb18:	440a      	add	r2, r1
 800eb1a:	b212      	sxth	r2, r2
 800eb1c:	4290      	cmp	r0, r2
 800eb1e:	d1e1      	bne.n	800eae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800eb20:	e7f6      	b.n	800eb10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800eb22:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 800eb26:	2e07      	cmp	r6, #7
 800eb28:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800eb2c:	d812      	bhi.n	800eb54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800eb2e:	1c75      	adds	r5, r6, #1
 800eb30:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800eb34:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800eb38:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 800eb3c:	9d01      	ldr	r5, [sp, #4]
 800eb3e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800eb42:	442c      	add	r4, r5
 800eb44:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800eb48:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800eb4c:	8061      	strh	r1, [r4, #2]
 800eb4e:	80a2      	strh	r2, [r4, #4]
 800eb50:	80e3      	strh	r3, [r4, #6]
 800eb52:	e581      	b.n	800e658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800eb54:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800eb58:	3e01      	subs	r6, #1
 800eb5a:	445c      	add	r4, fp
 800eb5c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800eb60:	f04f 37ff 	mov.w	r7, #4294967295
 800eb64:	2500      	movs	r5, #0
 800eb66:	9305      	str	r3, [sp, #20]
 800eb68:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800eb6c:	1e72      	subs	r2, r6, #1
 800eb6e:	9302      	str	r3, [sp, #8]
 800eb70:	4691      	mov	r9, r2
 800eb72:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800eb76:	9304      	str	r3, [sp, #16]
 800eb78:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 800eb7c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800eb80:	6818      	ldr	r0, [r3, #0]
 800eb82:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800eb86:	9207      	str	r2, [sp, #28]
 800eb88:	bf16      	itet	ne
 800eb8a:	9905      	ldrne	r1, [sp, #20]
 800eb8c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800eb90:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800eb94:	9306      	str	r3, [sp, #24]
 800eb96:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800eb9a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800eb9e:	fb18 f801 	smulbb	r8, r8, r1
 800eba2:	6859      	ldr	r1, [r3, #4]
 800eba4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800eba8:	4671      	mov	r1, lr
 800ebaa:	a80c      	add	r0, sp, #48	; 0x30
 800ebac:	f7fb fe68 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ebb0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800ebb4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800ebb8:	f04f 0c08 	mov.w	ip, #8
 800ebbc:	9b04      	ldr	r3, [sp, #16]
 800ebbe:	9a02      	ldr	r2, [sp, #8]
 800ebc0:	fb10 f001 	smulbb	r0, r0, r1
 800ebc4:	fb02 8803 	mla	r8, r2, r3, r8
 800ebc8:	eba0 0108 	sub.w	r1, r0, r8
 800ebcc:	fb90 f0fc 	sdiv	r0, r0, ip
 800ebd0:	4288      	cmp	r0, r1
 800ebd2:	dc20      	bgt.n	800ec16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800ebd4:	4551      	cmp	r1, sl
 800ebd6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ebda:	da03      	bge.n	800ebe4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 800ebdc:	b1d9      	cbz	r1, 800ec16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800ebde:	468a      	mov	sl, r1
 800ebe0:	464f      	mov	r7, r9
 800ebe2:	4635      	mov	r5, r6
 800ebe4:	f109 39ff 	add.w	r9, r9, #4294967295
 800ebe8:	f119 0f02 	cmn.w	r9, #2
 800ebec:	d1c6      	bne.n	800eb7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800ebee:	4616      	mov	r6, r2
 800ebf0:	3201      	adds	r2, #1
 800ebf2:	f1a4 0408 	sub.w	r4, r4, #8
 800ebf6:	d1b7      	bne.n	800eb68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800ebf8:	9b01      	ldr	r3, [sp, #4]
 800ebfa:	b2ac      	uxth	r4, r5
 800ebfc:	00ed      	lsls	r5, r5, #3
 800ebfe:	1958      	adds	r0, r3, r5
 800ec00:	1c7b      	adds	r3, r7, #1
 800ec02:	d10b      	bne.n	800ec1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 800ec04:	4601      	mov	r1, r0
 800ec06:	9803      	ldr	r0, [sp, #12]
 800ec08:	f7fb fe3a 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ec0c:	4621      	mov	r1, r4
 800ec0e:	9801      	ldr	r0, [sp, #4]
 800ec10:	f7ff fc8e 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ec14:	e4b6      	b.n	800e584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ec16:	464f      	mov	r7, r9
 800ec18:	4635      	mov	r5, r6
 800ec1a:	e7ed      	b.n	800ebf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 800ec1c:	9b01      	ldr	r3, [sp, #4]
 800ec1e:	00ff      	lsls	r7, r7, #3
 800ec20:	445d      	add	r5, fp
 800ec22:	19d9      	adds	r1, r3, r7
 800ec24:	445f      	add	r7, fp
 800ec26:	f7fb fe2b 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ec2a:	9b03      	ldr	r3, [sp, #12]
 800ec2c:	cb03      	ldmia	r3!, {r0, r1}
 800ec2e:	9b03      	ldr	r3, [sp, #12]
 800ec30:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 800ec34:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 800ec38:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800ec3c:	6869      	ldr	r1, [r5, #4]
 800ec3e:	c303      	stmia	r3!, {r0, r1}
 800ec40:	e7e4      	b.n	800ec0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 800ec42:	bf00      	nop

0800ec44 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800ec44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec48:	f500 7698 	add.w	r6, r0, #304	; 0x130
 800ec4c:	b09b      	sub	sp, #108	; 0x6c
 800ec4e:	4604      	mov	r4, r0
 800ec50:	4630      	mov	r0, r6
 800ec52:	f7fb fab8 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec56:	4605      	mov	r5, r0
 800ec58:	b948      	cbnz	r0, 800ec6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800ec5a:	6823      	ldr	r3, [r4, #0]
 800ec5c:	4620      	mov	r0, r4
 800ec5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ec60:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ec64:	4798      	blx	r3
 800ec66:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800ec6a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800ec6e:	4bc5      	ldr	r3, [pc, #788]	; (800ef84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 800ec70:	681b      	ldr	r3, [r3, #0]
 800ec72:	2b00      	cmp	r3, #0
 800ec74:	d03f      	beq.n	800ecf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800ec76:	4dc4      	ldr	r5, [pc, #784]	; (800ef88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800ec78:	4628      	mov	r0, r5
 800ec7a:	f7fb faa4 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec7e:	4606      	mov	r6, r0
 800ec80:	2800      	cmp	r0, #0
 800ec82:	d138      	bne.n	800ecf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800ec84:	4628      	mov	r0, r5
 800ec86:	f7ff f98d 	bl	800dfa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ec8a:	6823      	ldr	r3, [r4, #0]
 800ec8c:	6829      	ldr	r1, [r5, #0]
 800ec8e:	4620      	mov	r0, r4
 800ec90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ec92:	686a      	ldr	r2, [r5, #4]
 800ec94:	4798      	blx	r3
 800ec96:	802e      	strh	r6, [r5, #0]
 800ec98:	806e      	strh	r6, [r5, #2]
 800ec9a:	80ae      	strh	r6, [r5, #4]
 800ec9c:	80ee      	strh	r6, [r5, #6]
 800ec9e:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 800eca2:	4dba      	ldr	r5, [pc, #744]	; (800ef8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800eca4:	4640      	mov	r0, r8
 800eca6:	f7ff fbe8 	bl	800e47a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ecaa:	882e      	ldrh	r6, [r5, #0]
 800ecac:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800ecb0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800ecb4:	4633      	mov	r3, r6
 800ecb6:	42bb      	cmp	r3, r7
 800ecb8:	d224      	bcs.n	800ed04 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ecba:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800ecbe:	2907      	cmp	r1, #7
 800ecc0:	d816      	bhi.n	800ecf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800ecc2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800ecc6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800ecca:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800ecce:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800ecd2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800ecd6:	1c4a      	adds	r2, r1, #1
 800ecd8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800ecdc:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800ece0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800ece4:	f8a2 a002 	strh.w	sl, [r2, #2]
 800ece8:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ecec:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ecf0:	3301      	adds	r3, #1
 800ecf2:	b29b      	uxth	r3, r3
 800ecf4:	e7df      	b.n	800ecb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800ecf6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800ecfa:	2b00      	cmp	r3, #0
 800ecfc:	d1cf      	bne.n	800ec9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800ecfe:	b01b      	add	sp, #108	; 0x6c
 800ed00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed04:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 800ed08:	42b3      	cmp	r3, r6
 800ed0a:	d90c      	bls.n	800ed26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800ed0c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800ed10:	6822      	ldr	r2, [r4, #0]
 800ed12:	3601      	adds	r6, #1
 800ed14:	4620      	mov	r0, r4
 800ed16:	6c17      	ldr	r7, [r2, #64]	; 0x40
 800ed18:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 800ed1c:	b2b6      	uxth	r6, r6
 800ed1e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 800ed22:	47b8      	blx	r7
 800ed24:	e7ee      	b.n	800ed04 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ed26:	4a9a      	ldr	r2, [pc, #616]	; (800ef90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800ed28:	6813      	ldr	r3, [r2, #0]
 800ed2a:	4691      	mov	r9, r2
 800ed2c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800ed30:	2b01      	cmp	r3, #1
 800ed32:	f040 80e0 	bne.w	800eef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 800ed36:	8829      	ldrh	r1, [r5, #0]
 800ed38:	2600      	movs	r6, #0
 800ed3a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800ed3e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800ed42:	33ae      	adds	r3, #174	; 0xae
 800ed44:	428f      	cmp	r7, r1
 800ed46:	f103 0308 	add.w	r3, r3, #8
 800ed4a:	dd0a      	ble.n	800ed62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800ed4c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800ed50:	3101      	adds	r1, #1
 800ed52:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800ed56:	4402      	add	r2, r0
 800ed58:	b212      	sxth	r2, r2
 800ed5a:	4296      	cmp	r6, r2
 800ed5c:	bfb8      	it	lt
 800ed5e:	4616      	movlt	r6, r2
 800ed60:	e7f0      	b.n	800ed44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800ed62:	4b8c      	ldr	r3, [pc, #560]	; (800ef94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800ed64:	f8df 9228 	ldr.w	r9, [pc, #552]	; 800ef90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 800ed68:	881b      	ldrh	r3, [r3, #0]
 800ed6a:	2b0f      	cmp	r3, #15
 800ed6c:	bf8c      	ite	hi
 800ed6e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800ed72:	f04f 0b01 	movls.w	fp, #1
 800ed76:	2300      	movs	r3, #0
 800ed78:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800ed7c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800ed80:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800ed84:	4b82      	ldr	r3, [pc, #520]	; (800ef90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800ed86:	4438      	add	r0, r7
 800ed88:	b207      	sxth	r7, r0
 800ed8a:	6818      	ldr	r0, [r3, #0]
 800ed8c:	42b7      	cmp	r7, r6
 800ed8e:	6803      	ldr	r3, [r0, #0]
 800ed90:	f280 8083 	bge.w	800ee9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800ed94:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ed98:	4798      	blx	r3
 800ed9a:	eb07 030b 	add.w	r3, r7, fp
 800ed9e:	4298      	cmp	r0, r3
 800eda0:	da07      	bge.n	800edb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800eda2:	42b0      	cmp	r0, r6
 800eda4:	da05      	bge.n	800edb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800eda6:	4287      	cmp	r7, r0
 800eda8:	dd6c      	ble.n	800ee84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800edaa:	2f00      	cmp	r7, #0
 800edac:	dd6a      	ble.n	800ee84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800edae:	4630      	mov	r0, r6
 800edb0:	e004      	b.n	800edbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 800edb2:	4287      	cmp	r7, r0
 800edb4:	dcfb      	bgt.n	800edae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 800edb6:	42b0      	cmp	r0, r6
 800edb8:	bfa8      	it	ge
 800edba:	4630      	movge	r0, r6
 800edbc:	4b76      	ldr	r3, [pc, #472]	; (800ef98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800edbe:	1bc0      	subs	r0, r0, r7
 800edc0:	2200      	movs	r2, #0
 800edc2:	f8ad 7016 	strh.w	r7, [sp, #22]
 800edc6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800edca:	882f      	ldrh	r7, [r5, #0]
 800edcc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800edd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800edd4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800edd8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800eddc:	42bb      	cmp	r3, r7
 800edde:	d9cd      	bls.n	800ed7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800ede0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800ede4:	ab07      	add	r3, sp, #28
 800ede6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800edea:	6851      	ldr	r1, [r2, #4]
 800edec:	c303      	stmia	r3!, {r0, r1}
 800edee:	a905      	add	r1, sp, #20
 800edf0:	a807      	add	r0, sp, #28
 800edf2:	f7ff f9aa 	bl	800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800edf6:	2800      	cmp	r0, #0
 800edf8:	d04c      	beq.n	800ee94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800edfa:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800edfe:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800ee02:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800ee06:	4686      	mov	lr, r0
 800ee08:	4290      	cmp	r0, r2
 800ee0a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800ee0e:	4450      	add	r0, sl
 800ee10:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800ee14:	bfb8      	it	lt
 800ee16:	4696      	movlt	lr, r2
 800ee18:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ee1c:	4452      	add	r2, sl
 800ee1e:	b280      	uxth	r0, r0
 800ee20:	4299      	cmp	r1, r3
 800ee22:	468c      	mov	ip, r1
 800ee24:	b292      	uxth	r2, r2
 800ee26:	9302      	str	r3, [sp, #8]
 800ee28:	bfb8      	it	lt
 800ee2a:	469c      	movlt	ip, r3
 800ee2c:	b203      	sxth	r3, r0
 800ee2e:	fa0f fa82 	sxth.w	sl, r2
 800ee32:	f8ad e01c 	strh.w	lr, [sp, #28]
 800ee36:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ee3a:	4553      	cmp	r3, sl
 800ee3c:	bfb8      	it	lt
 800ee3e:	4602      	movlt	r2, r0
 800ee40:	9b02      	ldr	r3, [sp, #8]
 800ee42:	eba2 020e 	sub.w	r2, r2, lr
 800ee46:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ee4a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800ee4e:	4411      	add	r1, r2
 800ee50:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ee54:	4413      	add	r3, r2
 800ee56:	b289      	uxth	r1, r1
 800ee58:	b29b      	uxth	r3, r3
 800ee5a:	b208      	sxth	r0, r1
 800ee5c:	b21a      	sxth	r2, r3
 800ee5e:	4290      	cmp	r0, r2
 800ee60:	bfb8      	it	lt
 800ee62:	460b      	movlt	r3, r1
 800ee64:	eba3 030c 	sub.w	r3, r3, ip
 800ee68:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ee6c:	a807      	add	r0, sp, #28
 800ee6e:	f7fb f9aa 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee72:	b920      	cbnz	r0, 800ee7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800ee74:	6823      	ldr	r3, [r4, #0]
 800ee76:	a907      	add	r1, sp, #28
 800ee78:	4620      	mov	r0, r4
 800ee7a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ee7c:	4798      	blx	r3
 800ee7e:	3701      	adds	r7, #1
 800ee80:	b2bf      	uxth	r7, r7
 800ee82:	e7a9      	b.n	800edd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800ee84:	f8d9 0000 	ldr.w	r0, [r9]
 800ee88:	2101      	movs	r1, #1
 800ee8a:	6803      	ldr	r3, [r0, #0]
 800ee8c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ee90:	4798      	blx	r3
 800ee92:	e773      	b.n	800ed7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800ee94:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ee98:	e7e8      	b.n	800ee6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800ee9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee9c:	4798      	blx	r3
 800ee9e:	4b3f      	ldr	r3, [pc, #252]	; (800ef9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800eea0:	781b      	ldrb	r3, [r3, #0]
 800eea2:	2b00      	cmp	r3, #0
 800eea4:	f43f af2b 	beq.w	800ecfe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800eea8:	2300      	movs	r3, #0
 800eeaa:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800eeae:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 800eeb2:	882b      	ldrh	r3, [r5, #0]
 800eeb4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800eeb8:	42ab      	cmp	r3, r5
 800eeba:	f4bf af20 	bcs.w	800ecfe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800eebe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 800eec2:	2907      	cmp	r1, #7
 800eec4:	d814      	bhi.n	800eef0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 800eec6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800eeca:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800eece:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800eed2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800eed6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800eeda:	1c4a      	adds	r2, r1, #1
 800eedc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 800eee0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800eee4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800eee8:	f8a2 c002 	strh.w	ip, [r2, #2]
 800eeec:	8097      	strh	r7, [r2, #4]
 800eeee:	80d6      	strh	r6, [r2, #6]
 800eef0:	3301      	adds	r3, #1
 800eef2:	b29b      	uxth	r3, r3
 800eef4:	e7e0      	b.n	800eeb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800eef6:	2b02      	cmp	r3, #2
 800eef8:	f040 8133 	bne.w	800f162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 800eefc:	4b28      	ldr	r3, [pc, #160]	; (800efa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800eefe:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 800ef02:	781b      	ldrb	r3, [r3, #0]
 800ef04:	2b01      	cmp	r3, #1
 800ef06:	f000 8098 	beq.w	800f03a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ef0a:	882a      	ldrh	r2, [r5, #0]
 800ef0c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 800ef10:	3201      	adds	r2, #1
 800ef12:	b292      	uxth	r2, r2
 800ef14:	2900      	cmp	r1, #0
 800ef16:	d0c2      	beq.n	800ee9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ef18:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 800ef1c:	4694      	mov	ip, r2
 800ef1e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800ef22:	f04f 0900 	mov.w	r9, #0
 800ef26:	441e      	add	r6, r3
 800ef28:	b236      	sxth	r6, r6
 800ef2a:	fa1f f38c 	uxth.w	r3, ip
 800ef2e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800ef32:	4299      	cmp	r1, r3
 800ef34:	f240 80be 	bls.w	800f0b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 800ef38:	4427      	add	r7, r4
 800ef3a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800ef3e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 800ef42:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 800ef46:	4283      	cmp	r3, r0
 800ef48:	f340 80a0 	ble.w	800f08c <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800ef4c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 800ef50:	46e1      	mov	r9, ip
 800ef52:	4406      	add	r6, r0
 800ef54:	b236      	sxth	r6, r6
 800ef56:	429e      	cmp	r6, r3
 800ef58:	bfa8      	it	ge
 800ef5a:	461e      	movge	r6, r3
 800ef5c:	f10c 0c01 	add.w	ip, ip, #1
 800ef60:	e7e3      	b.n	800ef2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 800ef62:	d10a      	bne.n	800ef7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800ef64:	4562      	cmp	r2, ip
 800ef66:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 800ef6a:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 800ef6e:	bfb8      	it	lt
 800ef70:	4662      	movlt	r2, ip
 800ef72:	4288      	cmp	r0, r1
 800ef74:	bfb8      	it	lt
 800ef76:	461f      	movlt	r7, r3
 800ef78:	e086      	b.n	800f088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ef7a:	428a      	cmp	r2, r1
 800ef7c:	bfb8      	it	lt
 800ef7e:	460a      	movlt	r2, r1
 800ef80:	e082      	b.n	800f088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ef82:	bf00      	nop
 800ef84:	24006c10 	.word	0x24006c10
 800ef88:	24006c1c 	.word	0x24006c1c
 800ef8c:	24000050 	.word	0x24000050
 800ef90:	24006bd8 	.word	0x24006bd8
 800ef94:	24006bce 	.word	0x24006bce
 800ef98:	24006bcc 	.word	0x24006bcc
 800ef9c:	24006bd6 	.word	0x24006bd6
 800efa0:	24006bd0 	.word	0x24006bd0
 800efa4:	19a1      	adds	r1, r4, r6
 800efa6:	ab07      	add	r3, sp, #28
 800efa8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800efac:	6849      	ldr	r1, [r1, #4]
 800efae:	c303      	stmia	r3!, {r0, r1}
 800efb0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800efb4:	a807      	add	r0, sp, #28
 800efb6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800efba:	2b13      	cmp	r3, #19
 800efbc:	440b      	add	r3, r1
 800efbe:	bfd8      	it	le
 800efc0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800efc4:	1a9b      	subs	r3, r3, r2
 800efc6:	f8ad 201c 	strh.w	r2, [sp, #28]
 800efca:	f8ad 3020 	strh.w	r3, [sp, #32]
 800efce:	f7ff f803 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800efd2:	a807      	add	r0, sp, #28
 800efd4:	f7fb f8f7 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800efd8:	bb78      	cbnz	r0, 800f03a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800efda:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800efde:	4426      	add	r6, r4
 800efe0:	f8d9 0000 	ldr.w	r0, [r9]
 800efe4:	f1bc 0f14 	cmp.w	ip, #20
 800efe8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800efec:	f8d0 e000 	ldr.w	lr, [r0]
 800eff0:	bfa8      	it	ge
 800eff2:	f04f 0c14 	movge.w	ip, #20
 800eff6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800effa:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800effe:	fa1f fc8c 	uxth.w	ip, ip
 800f002:	f8cd c000 	str.w	ip, [sp]
 800f006:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 800f00a:	47d8      	blx	fp
 800f00c:	4683      	mov	fp, r0
 800f00e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800f012:	a807      	add	r0, sp, #28
 800f014:	f7fe ffc6 	bl	800dfa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800f018:	6823      	ldr	r3, [r4, #0]
 800f01a:	4620      	mov	r0, r4
 800f01c:	a907      	add	r1, sp, #28
 800f01e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f020:	4798      	blx	r3
 800f022:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 800f026:	eba0 000b 	sub.w	r0, r0, fp
 800f02a:	b200      	sxth	r0, r0
 800f02c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 800f030:	b918      	cbnz	r0, 800f03a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800f032:	b2b9      	uxth	r1, r7
 800f034:	4650      	mov	r0, sl
 800f036:	f7ff fa7b 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f03a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 800f03e:	f1bb 0f00 	cmp.w	fp, #0
 800f042:	f43f af2c 	beq.w	800ee9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800f046:	882b      	ldrh	r3, [r5, #0]
 800f048:	2700      	movs	r7, #0
 800f04a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800f04e:	3301      	adds	r3, #1
 800f050:	b29b      	uxth	r3, r3
 800f052:	b299      	uxth	r1, r3
 800f054:	00fe      	lsls	r6, r7, #3
 800f056:	458b      	cmp	fp, r1
 800f058:	d9a4      	bls.n	800efa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 800f05a:	4426      	add	r6, r4
 800f05c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800f060:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 800f064:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 800f068:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 800f06c:	4408      	add	r0, r1
 800f06e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 800f072:	4461      	add	r1, ip
 800f074:	b200      	sxth	r0, r0
 800f076:	b209      	sxth	r1, r1
 800f078:	4288      	cmp	r0, r1
 800f07a:	f6bf af72 	bge.w	800ef62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 800f07e:	4584      	cmp	ip, r0
 800f080:	4662      	mov	r2, ip
 800f082:	461f      	mov	r7, r3
 800f084:	bfb8      	it	lt
 800f086:	4602      	movlt	r2, r0
 800f088:	3301      	adds	r3, #1
 800f08a:	e7e2      	b.n	800f052 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 800f08c:	d10e      	bne.n	800f0ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 800f08e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 800f092:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 800f096:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 800f09a:	4473      	add	r3, lr
 800f09c:	b21b      	sxth	r3, r3
 800f09e:	429e      	cmp	r6, r3
 800f0a0:	bfa8      	it	ge
 800f0a2:	461e      	movge	r6, r3
 800f0a4:	4287      	cmp	r7, r0
 800f0a6:	bfb8      	it	lt
 800f0a8:	46e1      	movlt	r9, ip
 800f0aa:	e757      	b.n	800ef5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800f0ac:	4286      	cmp	r6, r0
 800f0ae:	bfa8      	it	ge
 800f0b0:	4606      	movge	r6, r0
 800f0b2:	e753      	b.n	800ef5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800f0b4:	eb0a 0007 	add.w	r0, sl, r7
 800f0b8:	4427      	add	r7, r4
 800f0ba:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 800f0be:	f1bb 0f13 	cmp.w	fp, #19
 800f0c2:	bfdc      	itt	le
 800f0c4:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 800f0c8:	445e      	addle	r6, fp
 800f0ca:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800f0ce:	bfd8      	it	le
 800f0d0:	b236      	sxthle	r6, r6
 800f0d2:	f7fb f878 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f0d6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800f0da:	2800      	cmp	r0, #0
 800f0dc:	f47f af1a 	bne.w	800ef14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 800f0e0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 800f0e4:	fa1f fb8b 	uxth.w	fp, fp
 800f0e8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800f0ec:	1ab6      	subs	r6, r6, r2
 800f0ee:	4829      	ldr	r0, [pc, #164]	; (800f194 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 800f0f0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 800f0f4:	2e14      	cmp	r6, #20
 800f0f6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 800f0fa:	6800      	ldr	r0, [r0, #0]
 800f0fc:	bfa8      	it	ge
 800f0fe:	2614      	movge	r6, #20
 800f100:	f8ad 101c 	strh.w	r1, [sp, #28]
 800f104:	f8ad 201e 	strh.w	r2, [sp, #30]
 800f108:	b289      	uxth	r1, r1
 800f10a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f10e:	b2b6      	uxth	r6, r6
 800f110:	f8d0 c000 	ldr.w	ip, [r0]
 800f114:	b292      	uxth	r2, r2
 800f116:	455e      	cmp	r6, fp
 800f118:	bf94      	ite	ls
 800f11a:	9600      	strls	r6, [sp, #0]
 800f11c:	f8cd b000 	strhi.w	fp, [sp]
 800f120:	b29b      	uxth	r3, r3
 800f122:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 800f126:	47b0      	blx	r6
 800f128:	6823      	ldr	r3, [r4, #0]
 800f12a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800f12e:	a907      	add	r1, sp, #28
 800f130:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f132:	4620      	mov	r0, r4
 800f134:	4798      	blx	r3
 800f136:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800f13a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 800f13e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 800f142:	1a5b      	subs	r3, r3, r1
 800f144:	440a      	add	r2, r1
 800f146:	b21b      	sxth	r3, r3
 800f148:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 800f14c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 800f150:	2b00      	cmp	r3, #0
 800f152:	f47f aeda 	bne.w	800ef0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800f156:	fa1f f189 	uxth.w	r1, r9
 800f15a:	4650      	mov	r0, sl
 800f15c:	f7ff f9e8 	bl	800e530 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f160:	e6d3      	b.n	800ef0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800f162:	882e      	ldrh	r6, [r5, #0]
 800f164:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800f168:	42b3      	cmp	r3, r6
 800f16a:	f67f ae98 	bls.w	800ee9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800f16e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800f172:	ab07      	add	r3, sp, #28
 800f174:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800f178:	6851      	ldr	r1, [r2, #4]
 800f17a:	c303      	stmia	r3!, {r0, r1}
 800f17c:	a807      	add	r0, sp, #28
 800f17e:	f7fb f822 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f182:	b920      	cbnz	r0, 800f18e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 800f184:	6823      	ldr	r3, [r4, #0]
 800f186:	a907      	add	r1, sp, #28
 800f188:	4620      	mov	r0, r4
 800f18a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f18c:	4798      	blx	r3
 800f18e:	3601      	adds	r6, #1
 800f190:	b2b6      	uxth	r6, r6
 800f192:	e7e7      	b.n	800f164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 800f194:	24006bd8 	.word	0x24006bd8

0800f198 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800f198:	4b03      	ldr	r3, [pc, #12]	; (800f1a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800f19a:	2200      	movs	r2, #0
 800f19c:	801a      	strh	r2, [r3, #0]
 800f19e:	805a      	strh	r2, [r3, #2]
 800f1a0:	809a      	strh	r2, [r3, #4]
 800f1a2:	80da      	strh	r2, [r3, #6]
 800f1a4:	4770      	bx	lr
 800f1a6:	bf00      	nop
 800f1a8:	24006c1c 	.word	0x24006c1c

0800f1ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800f1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1b0:	b09d      	sub	sp, #116	; 0x74
 800f1b2:	4606      	mov	r6, r0
 800f1b4:	4614      	mov	r4, r2
 800f1b6:	468a      	mov	sl, r1
 800f1b8:	a803      	add	r0, sp, #12
 800f1ba:	461d      	mov	r5, r3
 800f1bc:	f000 fd99 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800f1c0:	6833      	ldr	r3, [r6, #0]
 800f1c2:	4630      	mov	r0, r6
 800f1c4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800f1c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f1ca:	4798      	blx	r3
 800f1cc:	6833      	ldr	r3, [r6, #0]
 800f1ce:	4607      	mov	r7, r0
 800f1d0:	4630      	mov	r0, r6
 800f1d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f1d4:	4798      	blx	r3
 800f1d6:	462a      	mov	r2, r5
 800f1d8:	2500      	movs	r5, #0
 800f1da:	4621      	mov	r1, r4
 800f1dc:	9000      	str	r0, [sp, #0]
 800f1de:	463b      	mov	r3, r7
 800f1e0:	462c      	mov	r4, r5
 800f1e2:	46a9      	mov	r9, r5
 800f1e4:	46a8      	mov	r8, r5
 800f1e6:	a803      	add	r0, sp, #12
 800f1e8:	f000 fdde 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f1ec:	2300      	movs	r3, #0
 800f1ee:	9302      	str	r3, [sp, #8]
 800f1f0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f1f4:	429c      	cmp	r4, r3
 800f1f6:	d002      	beq.n	800f1fe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800f1f8:	455c      	cmp	r4, fp
 800f1fa:	bf18      	it	ne
 800f1fc:	4625      	movne	r5, r4
 800f1fe:	ab02      	add	r3, sp, #8
 800f200:	4632      	mov	r2, r6
 800f202:	4651      	mov	r1, sl
 800f204:	a803      	add	r0, sp, #12
 800f206:	f001 f8d5 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f20a:	4604      	mov	r4, r0
 800f20c:	b108      	cbz	r0, 800f212 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800f20e:	280a      	cmp	r0, #10
 800f210:	d10a      	bne.n	800f228 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800f212:	45c1      	cmp	r9, r8
 800f214:	bf38      	it	cc
 800f216:	46c1      	movcc	r9, r8
 800f218:	f04f 0800 	mov.w	r8, #0
 800f21c:	2c00      	cmp	r4, #0
 800f21e:	d1e5      	bne.n	800f1ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800f220:	4648      	mov	r0, r9
 800f222:	b01d      	add	sp, #116	; 0x74
 800f224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f228:	9a02      	ldr	r2, [sp, #8]
 800f22a:	2a00      	cmp	r2, #0
 800f22c:	d0de      	beq.n	800f1ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800f22e:	7b57      	ldrb	r7, [r2, #13]
 800f230:	4629      	mov	r1, r5
 800f232:	6833      	ldr	r3, [r6, #0]
 800f234:	007f      	lsls	r7, r7, #1
 800f236:	8894      	ldrh	r4, [r2, #4]
 800f238:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f23a:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800f23e:	7a97      	ldrb	r7, [r2, #10]
 800f240:	4307      	orrs	r7, r0
 800f242:	4630      	mov	r0, r6
 800f244:	4798      	blx	r3
 800f246:	4438      	add	r0, r7
 800f248:	4480      	add	r8, r0
 800f24a:	fa1f f888 	uxth.w	r8, r8
 800f24e:	e7e5      	b.n	800f21c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800f250 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800f250:	b508      	push	{r3, lr}
 800f252:	6803      	ldr	r3, [r0, #0]
 800f254:	68db      	ldr	r3, [r3, #12]
 800f256:	4798      	blx	r3
 800f258:	b128      	cbz	r0, 800f266 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800f25a:	7b43      	ldrb	r3, [r0, #13]
 800f25c:	7a80      	ldrb	r0, [r0, #10]
 800f25e:	005b      	lsls	r3, r3, #1
 800f260:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f264:	4318      	orrs	r0, r3
 800f266:	bd08      	pop	{r3, pc}

0800f268 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800f268:	b40e      	push	{r1, r2, r3}
 800f26a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f26c:	b09e      	sub	sp, #120	; 0x78
 800f26e:	4605      	mov	r5, r0
 800f270:	ab23      	add	r3, sp, #140	; 0x8c
 800f272:	a805      	add	r0, sp, #20
 800f274:	f853 4b04 	ldr.w	r4, [r3], #4
 800f278:	9303      	str	r3, [sp, #12]
 800f27a:	f000 fd3a 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800f27e:	682b      	ldr	r3, [r5, #0]
 800f280:	4628      	mov	r0, r5
 800f282:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f284:	4798      	blx	r3
 800f286:	682b      	ldr	r3, [r5, #0]
 800f288:	4606      	mov	r6, r0
 800f28a:	4628      	mov	r0, r5
 800f28c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f28e:	4798      	blx	r3
 800f290:	4633      	mov	r3, r6
 800f292:	4621      	mov	r1, r4
 800f294:	ae1e      	add	r6, sp, #120	; 0x78
 800f296:	2400      	movs	r4, #0
 800f298:	9000      	str	r0, [sp, #0]
 800f29a:	9a03      	ldr	r2, [sp, #12]
 800f29c:	a805      	add	r0, sp, #20
 800f29e:	f000 fd83 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f2a2:	f846 4d68 	str.w	r4, [r6, #-104]!
 800f2a6:	462a      	mov	r2, r5
 800f2a8:	4633      	mov	r3, r6
 800f2aa:	4621      	mov	r1, r4
 800f2ac:	a805      	add	r0, sp, #20
 800f2ae:	f001 f881 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f2b2:	b300      	cbz	r0, 800f2f6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 800f2b4:	280a      	cmp	r0, #10
 800f2b6:	d01a      	beq.n	800f2ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800f2b8:	9f04      	ldr	r7, [sp, #16]
 800f2ba:	b1c7      	cbz	r7, 800f2ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800f2bc:	7b78      	ldrb	r0, [r7, #13]
 800f2be:	7a3b      	ldrb	r3, [r7, #8]
 800f2c0:	00c1      	lsls	r1, r0, #3
 800f2c2:	88ea      	ldrh	r2, [r5, #6]
 800f2c4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800f2c8:	4319      	orrs	r1, r3
 800f2ca:	0643      	lsls	r3, r0, #25
 800f2cc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800f2d0:	bf48      	it	mi
 800f2d2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800f2d6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f2da:	bf48      	it	mi
 800f2dc:	b219      	sxthmi	r1, r3
 800f2de:	79fb      	ldrb	r3, [r7, #7]
 800f2e0:	4303      	orrs	r3, r0
 800f2e2:	4413      	add	r3, r2
 800f2e4:	1a5b      	subs	r3, r3, r1
 800f2e6:	b21b      	sxth	r3, r3
 800f2e8:	429c      	cmp	r4, r3
 800f2ea:	bfb8      	it	lt
 800f2ec:	461c      	movlt	r4, r3
 800f2ee:	4633      	mov	r3, r6
 800f2f0:	462a      	mov	r2, r5
 800f2f2:	2100      	movs	r1, #0
 800f2f4:	e7da      	b.n	800f2ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800f2f6:	b2a0      	uxth	r0, r4
 800f2f8:	b01e      	add	sp, #120	; 0x78
 800f2fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f2fe:	b003      	add	sp, #12
 800f300:	4770      	bx	lr

0800f302 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800f302:	7a43      	ldrb	r3, [r0, #9]
 800f304:	8880      	ldrh	r0, [r0, #4]
 800f306:	4418      	add	r0, r3
 800f308:	b280      	uxth	r0, r0
 800f30a:	4770      	bx	lr

0800f30c <_ZNK8touchgfx4Font13getFontHeightEv>:
 800f30c:	6803      	ldr	r3, [r0, #0]
 800f30e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f310:	4718      	bx	r3

0800f312 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800f312:	b40e      	push	{r1, r2, r3}
 800f314:	b570      	push	{r4, r5, r6, lr}
 800f316:	b09d      	sub	sp, #116	; 0x74
 800f318:	4604      	mov	r4, r0
 800f31a:	ab21      	add	r3, sp, #132	; 0x84
 800f31c:	a803      	add	r0, sp, #12
 800f31e:	f853 5b04 	ldr.w	r5, [r3], #4
 800f322:	9302      	str	r3, [sp, #8]
 800f324:	f000 fce5 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800f328:	6823      	ldr	r3, [r4, #0]
 800f32a:	4620      	mov	r0, r4
 800f32c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f32e:	4798      	blx	r3
 800f330:	6823      	ldr	r3, [r4, #0]
 800f332:	4606      	mov	r6, r0
 800f334:	4620      	mov	r0, r4
 800f336:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f338:	2401      	movs	r4, #1
 800f33a:	4798      	blx	r3
 800f33c:	4633      	mov	r3, r6
 800f33e:	9000      	str	r0, [sp, #0]
 800f340:	4629      	mov	r1, r5
 800f342:	9a02      	ldr	r2, [sp, #8]
 800f344:	a803      	add	r0, sp, #12
 800f346:	f000 fd2f 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f34a:	a803      	add	r0, sp, #12
 800f34c:	f001 f8fe 	bl	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f350:	b2a3      	uxth	r3, r4
 800f352:	b138      	cbz	r0, 800f364 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800f354:	280a      	cmp	r0, #10
 800f356:	a803      	add	r0, sp, #12
 800f358:	bf04      	itt	eq
 800f35a:	3301      	addeq	r3, #1
 800f35c:	b21c      	sxtheq	r4, r3
 800f35e:	f001 f8f5 	bl	801054c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f362:	e7f5      	b.n	800f350 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800f364:	4618      	mov	r0, r3
 800f366:	b01d      	add	sp, #116	; 0x74
 800f368:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f36c:	b003      	add	sp, #12
 800f36e:	4770      	bx	lr

0800f370 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800f370:	b40e      	push	{r1, r2, r3}
 800f372:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f374:	b09e      	sub	sp, #120	; 0x78
 800f376:	4604      	mov	r4, r0
 800f378:	ab23      	add	r3, sp, #140	; 0x8c
 800f37a:	a805      	add	r0, sp, #20
 800f37c:	f853 5b04 	ldr.w	r5, [r3], #4
 800f380:	9303      	str	r3, [sp, #12]
 800f382:	f000 fcb6 	bl	800fcf2 <_ZN8touchgfx12TextProviderC1Ev>
 800f386:	6823      	ldr	r3, [r4, #0]
 800f388:	4620      	mov	r0, r4
 800f38a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f38c:	4798      	blx	r3
 800f38e:	6823      	ldr	r3, [r4, #0]
 800f390:	4606      	mov	r6, r0
 800f392:	4620      	mov	r0, r4
 800f394:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f396:	4798      	blx	r3
 800f398:	4633      	mov	r3, r6
 800f39a:	4629      	mov	r1, r5
 800f39c:	9000      	str	r0, [sp, #0]
 800f39e:	9a03      	ldr	r2, [sp, #12]
 800f3a0:	a805      	add	r0, sp, #20
 800f3a2:	f000 fd01 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f3a6:	ad1e      	add	r5, sp, #120	; 0x78
 800f3a8:	2100      	movs	r1, #0
 800f3aa:	f647 76ff 	movw	r6, #32767	; 0x7fff
 800f3ae:	4622      	mov	r2, r4
 800f3b0:	a805      	add	r0, sp, #20
 800f3b2:	f845 1d68 	str.w	r1, [r5, #-104]!
 800f3b6:	462b      	mov	r3, r5
 800f3b8:	f000 fffc 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f3bc:	b1d8      	cbz	r0, 800f3f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800f3be:	280a      	cmp	r0, #10
 800f3c0:	d012      	beq.n	800f3e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f3c2:	9804      	ldr	r0, [sp, #16]
 800f3c4:	b180      	cbz	r0, 800f3e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f3c6:	7b47      	ldrb	r7, [r0, #13]
 800f3c8:	88e2      	ldrh	r2, [r4, #6]
 800f3ca:	00fb      	lsls	r3, r7, #3
 800f3cc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f3d0:	7a03      	ldrb	r3, [r0, #8]
 800f3d2:	430b      	orrs	r3, r1
 800f3d4:	0679      	lsls	r1, r7, #25
 800f3d6:	bf44      	itt	mi
 800f3d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f3dc:	b21b      	sxthmi	r3, r3
 800f3de:	1ad3      	subs	r3, r2, r3
 800f3e0:	b21b      	sxth	r3, r3
 800f3e2:	429e      	cmp	r6, r3
 800f3e4:	bfa8      	it	ge
 800f3e6:	461e      	movge	r6, r3
 800f3e8:	462b      	mov	r3, r5
 800f3ea:	4622      	mov	r2, r4
 800f3ec:	2100      	movs	r1, #0
 800f3ee:	a805      	add	r0, sp, #20
 800f3f0:	f000 ffe0 	bl	80103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f3f4:	e7e2      	b.n	800f3bc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800f3f6:	4630      	mov	r0, r6
 800f3f8:	b01e      	add	sp, #120	; 0x78
 800f3fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f3fe:	b003      	add	sp, #12
 800f400:	4770      	bx	lr

0800f402 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800f402:	b513      	push	{r0, r1, r4, lr}
 800f404:	6803      	ldr	r3, [r0, #0]
 800f406:	2400      	movs	r4, #0
 800f408:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f40c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f410:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f414:	4669      	mov	r1, sp
 800f416:	691b      	ldr	r3, [r3, #16]
 800f418:	9400      	str	r4, [sp, #0]
 800f41a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f41e:	4798      	blx	r3
 800f420:	b002      	add	sp, #8
 800f422:	bd10      	pop	{r4, pc}

0800f424 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800f424:	b538      	push	{r3, r4, r5, lr}
 800f426:	680b      	ldr	r3, [r1, #0]
 800f428:	460c      	mov	r4, r1
 800f42a:	4605      	mov	r5, r0
 800f42c:	68db      	ldr	r3, [r3, #12]
 800f42e:	4798      	blx	r3
 800f430:	6823      	ldr	r3, [r4, #0]
 800f432:	4620      	mov	r0, r4
 800f434:	4629      	mov	r1, r5
 800f436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f438:	4798      	blx	r3
 800f43a:	4628      	mov	r0, r5
 800f43c:	bd38      	pop	{r3, r4, r5, pc}

0800f43e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800f43e:	b410      	push	{r4}
 800f440:	880a      	ldrh	r2, [r1, #0]
 800f442:	8884      	ldrh	r4, [r0, #4]
 800f444:	4422      	add	r2, r4
 800f446:	800a      	strh	r2, [r1, #0]
 800f448:	884a      	ldrh	r2, [r1, #2]
 800f44a:	88c4      	ldrh	r4, [r0, #6]
 800f44c:	4422      	add	r2, r4
 800f44e:	804a      	strh	r2, [r1, #2]
 800f450:	6940      	ldr	r0, [r0, #20]
 800f452:	b120      	cbz	r0, 800f45e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800f454:	6803      	ldr	r3, [r0, #0]
 800f456:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f45a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f45c:	4718      	bx	r3
 800f45e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f462:	4770      	bx	lr

0800f464 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800f464:	b570      	push	{r4, r5, r6, lr}
 800f466:	8882      	ldrh	r2, [r0, #4]
 800f468:	460c      	mov	r4, r1
 800f46a:	880b      	ldrh	r3, [r1, #0]
 800f46c:	4605      	mov	r5, r0
 800f46e:	4413      	add	r3, r2
 800f470:	800b      	strh	r3, [r1, #0]
 800f472:	884b      	ldrh	r3, [r1, #2]
 800f474:	88c2      	ldrh	r2, [r0, #6]
 800f476:	4413      	add	r3, r2
 800f478:	804b      	strh	r3, [r1, #2]
 800f47a:	1d01      	adds	r1, r0, #4
 800f47c:	4620      	mov	r0, r4
 800f47e:	f7fa fe5f 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800f482:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f486:	2b00      	cmp	r3, #0
 800f488:	dd0b      	ble.n	800f4a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f48a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f48e:	2b00      	cmp	r3, #0
 800f490:	dd07      	ble.n	800f4a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f492:	6968      	ldr	r0, [r5, #20]
 800f494:	b128      	cbz	r0, 800f4a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f496:	6803      	ldr	r3, [r0, #0]
 800f498:	4621      	mov	r1, r4
 800f49a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f49c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f4a0:	4718      	bx	r3
 800f4a2:	bd70      	pop	{r4, r5, r6, pc}

0800f4a4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f4a4:	b570      	push	{r4, r5, r6, lr}
 800f4a6:	8882      	ldrh	r2, [r0, #4]
 800f4a8:	460c      	mov	r4, r1
 800f4aa:	880b      	ldrh	r3, [r1, #0]
 800f4ac:	4605      	mov	r5, r0
 800f4ae:	4413      	add	r3, r2
 800f4b0:	800b      	strh	r3, [r1, #0]
 800f4b2:	884b      	ldrh	r3, [r1, #2]
 800f4b4:	88c2      	ldrh	r2, [r0, #6]
 800f4b6:	4413      	add	r3, r2
 800f4b8:	804b      	strh	r3, [r1, #2]
 800f4ba:	1d01      	adds	r1, r0, #4
 800f4bc:	4620      	mov	r0, r4
 800f4be:	f7fa fe3f 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800f4c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f4c6:	2b00      	cmp	r3, #0
 800f4c8:	dd19      	ble.n	800f4fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f4ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f4ce:	2b00      	cmp	r3, #0
 800f4d0:	dd15      	ble.n	800f4fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f4d2:	6968      	ldr	r0, [r5, #20]
 800f4d4:	b128      	cbz	r0, 800f4e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f4d6:	6803      	ldr	r3, [r0, #0]
 800f4d8:	4621      	mov	r1, r4
 800f4da:	691b      	ldr	r3, [r3, #16]
 800f4dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f4e0:	4718      	bx	r3
 800f4e2:	4b07      	ldr	r3, [pc, #28]	; (800f500 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f4e4:	681b      	ldr	r3, [r3, #0]
 800f4e6:	3304      	adds	r3, #4
 800f4e8:	429d      	cmp	r5, r3
 800f4ea:	d108      	bne.n	800f4fe <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f4ec:	f7fe fec6 	bl	800e27c <_ZN8touchgfx11Application11getInstanceEv>
 800f4f0:	6803      	ldr	r3, [r0, #0]
 800f4f2:	6821      	ldr	r1, [r4, #0]
 800f4f4:	6862      	ldr	r2, [r4, #4]
 800f4f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f4f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f4fc:	4718      	bx	r3
 800f4fe:	bd70      	pop	{r4, r5, r6, pc}
 800f500:	24006c14 	.word	0x24006c14

0800f504 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f504:	b570      	push	{r4, r5, r6, lr}
 800f506:	4604      	mov	r4, r0
 800f508:	4616      	mov	r6, r2
 800f50a:	460d      	mov	r5, r1
 800f50c:	b901      	cbnz	r1, 800f510 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f50e:	b192      	cbz	r2, 800f536 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f510:	6823      	ldr	r3, [r4, #0]
 800f512:	4620      	mov	r0, r4
 800f514:	699b      	ldr	r3, [r3, #24]
 800f516:	4798      	blx	r3
 800f518:	88e2      	ldrh	r2, [r4, #6]
 800f51a:	88a1      	ldrh	r1, [r4, #4]
 800f51c:	4620      	mov	r0, r4
 800f51e:	4432      	add	r2, r6
 800f520:	4429      	add	r1, r5
 800f522:	b212      	sxth	r2, r2
 800f524:	b209      	sxth	r1, r1
 800f526:	f7f3 f89d 	bl	8002664 <_ZN8touchgfx8Drawable5setXYEss>
 800f52a:	6823      	ldr	r3, [r4, #0]
 800f52c:	4620      	mov	r0, r4
 800f52e:	699b      	ldr	r3, [r3, #24]
 800f530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f534:	4718      	bx	r3
 800f536:	bd70      	pop	{r4, r5, r6, pc}

0800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f538:	b510      	push	{r4, lr}
 800f53a:	2300      	movs	r3, #0
 800f53c:	4604      	mov	r4, r0
 800f53e:	4608      	mov	r0, r1
 800f540:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f544:	8023      	strh	r3, [r4, #0]
 800f546:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f54a:	8063      	strh	r3, [r4, #2]
 800f54c:	6803      	ldr	r3, [r0, #0]
 800f54e:	80a1      	strh	r1, [r4, #4]
 800f550:	4621      	mov	r1, r4
 800f552:	80e2      	strh	r2, [r4, #6]
 800f554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f556:	4798      	blx	r3
 800f558:	4620      	mov	r0, r4
 800f55a:	bd10      	pop	{r4, pc}

0800f55c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800f55c:	b530      	push	{r4, r5, lr}
 800f55e:	8083      	strh	r3, [r0, #4]
 800f560:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800f564:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800f568:	80c3      	strh	r3, [r0, #6]
 800f56a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f56e:	6141      	str	r1, [r0, #20]
 800f570:	7203      	strb	r3, [r0, #8]
 800f572:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f576:	8302      	strh	r2, [r0, #24]
 800f578:	7243      	strb	r3, [r0, #9]
 800f57a:	7a83      	ldrb	r3, [r0, #10]
 800f57c:	f365 0306 	bfi	r3, r5, #0, #7
 800f580:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800f584:	f365 13c7 	bfi	r3, r5, #7, #1
 800f588:	7283      	strb	r3, [r0, #10]
 800f58a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800f58e:	72c3      	strb	r3, [r0, #11]
 800f590:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800f594:	7303      	strb	r3, [r0, #12]
 800f596:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f59a:	81c3      	strh	r3, [r0, #14]
 800f59c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800f5a0:	8203      	strh	r3, [r0, #16]
 800f5a2:	4b01      	ldr	r3, [pc, #4]	; (800f5a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800f5a4:	6003      	str	r3, [r0, #0]
 800f5a6:	bd30      	pop	{r4, r5, pc}
 800f5a8:	0801c88c 	.word	0x0801c88c

0800f5ac <_ZNK8touchgfx9ConstFont4findEt>:
 800f5ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5ae:	6944      	ldr	r4, [r0, #20]
 800f5b0:	b3bc      	cbz	r4, 800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f5b2:	88a3      	ldrh	r3, [r4, #4]
 800f5b4:	8b02      	ldrh	r2, [r0, #24]
 800f5b6:	1acb      	subs	r3, r1, r3
 800f5b8:	f102 32ff 	add.w	r2, r2, #4294967295
 800f5bc:	d431      	bmi.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f5be:	4293      	cmp	r3, r2
 800f5c0:	dd0c      	ble.n	800f5dc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f5c2:	230e      	movs	r3, #14
 800f5c4:	fb03 4302 	mla	r3, r3, r2, r4
 800f5c8:	889b      	ldrh	r3, [r3, #4]
 800f5ca:	1a5b      	subs	r3, r3, r1
 800f5cc:	1ad3      	subs	r3, r2, r3
 800f5ce:	429a      	cmp	r2, r3
 800f5d0:	db27      	blt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	bfbc      	itt	lt
 800f5d6:	2302      	movlt	r3, #2
 800f5d8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f5dc:	2500      	movs	r5, #0
 800f5de:	260e      	movs	r6, #14
 800f5e0:	4295      	cmp	r5, r2
 800f5e2:	dc1e      	bgt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f5e4:	fb06 4003 	mla	r0, r6, r3, r4
 800f5e8:	8887      	ldrh	r7, [r0, #4]
 800f5ea:	42b9      	cmp	r1, r7
 800f5ec:	d01a      	beq.n	800f624 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f5ee:	d20d      	bcs.n	800f60c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f5f0:	1e5a      	subs	r2, r3, #1
 800f5f2:	4295      	cmp	r5, r2
 800f5f4:	dc15      	bgt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f5f6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f5fa:	1a5b      	subs	r3, r3, r1
 800f5fc:	1ad3      	subs	r3, r2, r3
 800f5fe:	429a      	cmp	r2, r3
 800f600:	db0f      	blt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f602:	429d      	cmp	r5, r3
 800f604:	ddec      	ble.n	800f5e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f606:	1953      	adds	r3, r2, r5
 800f608:	105b      	asrs	r3, r3, #1
 800f60a:	e7e9      	b.n	800f5e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f60c:	1c5d      	adds	r5, r3, #1
 800f60e:	42aa      	cmp	r2, r5
 800f610:	db07      	blt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f612:	8a43      	ldrh	r3, [r0, #18]
 800f614:	1acb      	subs	r3, r1, r3
 800f616:	442b      	add	r3, r5
 800f618:	429d      	cmp	r5, r3
 800f61a:	dc02      	bgt.n	800f622 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f61c:	429a      	cmp	r2, r3
 800f61e:	dadf      	bge.n	800f5e0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f620:	e7f1      	b.n	800f606 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f622:	2000      	movs	r0, #0
 800f624:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f626 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f626:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f628:	4604      	mov	r4, r0
 800f62a:	4617      	mov	r7, r2
 800f62c:	461e      	mov	r6, r3
 800f62e:	b911      	cbnz	r1, 800f636 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f630:	2500      	movs	r5, #0
 800f632:	4628      	mov	r0, r5
 800f634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f636:	290a      	cmp	r1, #10
 800f638:	d0fa      	beq.n	800f630 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f63a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f63e:	4291      	cmp	r1, r2
 800f640:	d0f6      	beq.n	800f630 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f642:	f242 020b 	movw	r2, #8203	; 0x200b
 800f646:	4291      	cmp	r1, r2
 800f648:	d0f2      	beq.n	800f630 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f64a:	f7ff ffaf 	bl	800f5ac <_ZNK8touchgfx9ConstFont4findEt>
 800f64e:	4605      	mov	r5, r0
 800f650:	b950      	cbnz	r0, 800f668 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f652:	6823      	ldr	r3, [r4, #0]
 800f654:	4620      	mov	r0, r4
 800f656:	691b      	ldr	r3, [r3, #16]
 800f658:	4798      	blx	r3
 800f65a:	4601      	mov	r1, r0
 800f65c:	4620      	mov	r0, r4
 800f65e:	f7ff ffa5 	bl	800f5ac <_ZNK8touchgfx9ConstFont4findEt>
 800f662:	4605      	mov	r5, r0
 800f664:	2800      	cmp	r0, #0
 800f666:	d0e3      	beq.n	800f630 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f668:	6823      	ldr	r3, [r4, #0]
 800f66a:	4629      	mov	r1, r5
 800f66c:	4620      	mov	r0, r4
 800f66e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f670:	4798      	blx	r3
 800f672:	6038      	str	r0, [r7, #0]
 800f674:	6823      	ldr	r3, [r4, #0]
 800f676:	4620      	mov	r0, r4
 800f678:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f67a:	4798      	blx	r3
 800f67c:	7030      	strb	r0, [r6, #0]
 800f67e:	e7d8      	b.n	800f632 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f680 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f680:	2002      	movs	r0, #2
 800f682:	4770      	bx	lr

0800f684 <_ZN8touchgfx6ScreenD1Ev>:
 800f684:	4770      	bx	lr

0800f686 <_ZN8touchgfx12GestureEventD1Ev>:
 800f686:	4770      	bx	lr

0800f688 <_ZN8touchgfx12GestureEventD0Ev>:
 800f688:	b510      	push	{r4, lr}
 800f68a:	4604      	mov	r4, r0
 800f68c:	210c      	movs	r1, #12
 800f68e:	f00a fe71 	bl	801a374 <_ZdlPvj>
 800f692:	4620      	mov	r0, r4
 800f694:	bd10      	pop	{r4, pc}

0800f696 <_ZN8touchgfx6ScreenD0Ev>:
 800f696:	b510      	push	{r4, lr}
 800f698:	4604      	mov	r4, r0
 800f69a:	213c      	movs	r1, #60	; 0x3c
 800f69c:	f00a fe6a 	bl	801a374 <_ZdlPvj>
 800f6a0:	4620      	mov	r0, r4
 800f6a2:	bd10      	pop	{r4, pc}

0800f6a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f6a4:	b530      	push	{r4, r5, lr}
 800f6a6:	460d      	mov	r5, r1
 800f6a8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f6aa:	b087      	sub	sp, #28
 800f6ac:	4604      	mov	r4, r0
 800f6ae:	b301      	cbz	r1, 800f6f2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f6b0:	a801      	add	r0, sp, #4
 800f6b2:	f7ff ff41 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f6b6:	892a      	ldrh	r2, [r5, #8]
 800f6b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f6bc:	7928      	ldrb	r0, [r5, #4]
 800f6be:	1ad2      	subs	r2, r2, r3
 800f6c0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f6c2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f6c6:	441a      	add	r2, r3
 800f6c8:	896b      	ldrh	r3, [r5, #10]
 800f6ca:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f6ce:	f88d 0010 	strb.w	r0, [sp, #16]
 800f6d2:	1b5b      	subs	r3, r3, r5
 800f6d4:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f6d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f6d8:	442b      	add	r3, r5
 800f6da:	4d07      	ldr	r5, [pc, #28]	; (800f6f8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f6dc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f6e0:	a903      	add	r1, sp, #12
 800f6e2:	9503      	str	r5, [sp, #12]
 800f6e4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f6e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f6ec:	6803      	ldr	r3, [r0, #0]
 800f6ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f6f0:	4798      	blx	r3
 800f6f2:	b007      	add	sp, #28
 800f6f4:	bd30      	pop	{r4, r5, pc}
 800f6f6:	bf00      	nop
 800f6f8:	0801c8ec 	.word	0x0801c8ec

0800f6fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f6fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f700:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f702:	b08a      	sub	sp, #40	; 0x28
 800f704:	4604      	mov	r4, r0
 800f706:	460d      	mov	r5, r1
 800f708:	b113      	cbz	r3, 800f710 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f70a:	790b      	ldrb	r3, [r1, #4]
 800f70c:	2b00      	cmp	r3, #0
 800f70e:	d044      	beq.n	800f79a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f710:	f104 0804 	add.w	r8, r4, #4
 800f714:	a803      	add	r0, sp, #12
 800f716:	4641      	mov	r1, r8
 800f718:	f7ff ff0e 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f71c:	792b      	ldrb	r3, [r5, #4]
 800f71e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f722:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f726:	b983      	cbnz	r3, 800f74a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f728:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800f72c:	892a      	ldrh	r2, [r5, #8]
 800f72e:	88e9      	ldrh	r1, [r5, #6]
 800f730:	4640      	mov	r0, r8
 800f732:	1b92      	subs	r2, r2, r6
 800f734:	9301      	str	r3, [sp, #4]
 800f736:	1bc9      	subs	r1, r1, r7
 800f738:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800f73c:	b212      	sxth	r2, r2
 800f73e:	9300      	str	r3, [sp, #0]
 800f740:	b209      	sxth	r1, r1
 800f742:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f746:	f7fa fc19 	bl	8009f7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f74a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f74c:	b329      	cbz	r1, 800f79a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f74e:	a805      	add	r0, sp, #20
 800f750:	f7ff fef2 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f754:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f758:	792b      	ldrb	r3, [r5, #4]
 800f75a:	a907      	add	r1, sp, #28
 800f75c:	1abf      	subs	r7, r7, r2
 800f75e:	88ea      	ldrh	r2, [r5, #6]
 800f760:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f762:	4417      	add	r7, r2
 800f764:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800f766:	f88d 3020 	strb.w	r3, [sp, #32]
 800f76a:	4417      	add	r7, r2
 800f76c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f770:	1ab6      	subs	r6, r6, r2
 800f772:	892a      	ldrh	r2, [r5, #8]
 800f774:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800f778:	4416      	add	r6, r2
 800f77a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f77c:	4416      	add	r6, r2
 800f77e:	4a08      	ldr	r2, [pc, #32]	; (800f7a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f780:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800f784:	2600      	movs	r6, #0
 800f786:	9207      	str	r2, [sp, #28]
 800f788:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800f78c:	6803      	ldr	r3, [r0, #0]
 800f78e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f790:	4798      	blx	r3
 800f792:	792b      	ldrb	r3, [r5, #4]
 800f794:	b10b      	cbz	r3, 800f79a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f796:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f79a:	b00a      	add	sp, #40	; 0x28
 800f79c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7a0:	0801c568 	.word	0x0801c568

0800f7a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f7a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7a8:	460c      	mov	r4, r1
 800f7aa:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f7ac:	b088      	sub	sp, #32
 800f7ae:	4605      	mov	r5, r0
 800f7b0:	2900      	cmp	r1, #0
 800f7b2:	d06d      	beq.n	800f890 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f7b4:	4668      	mov	r0, sp
 800f7b6:	f7ff febf 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7ba:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800f7bc:	88e3      	ldrh	r3, [r4, #6]
 800f7be:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f7c2:	440b      	add	r3, r1
 800f7c4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f7c8:	b21b      	sxth	r3, r3
 800f7ca:	4543      	cmp	r3, r8
 800f7cc:	db31      	blt.n	800f832 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f7ce:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f7d2:	44c4      	add	ip, r8
 800f7d4:	fa0f fc8c 	sxth.w	ip, ip
 800f7d8:	4563      	cmp	r3, ip
 800f7da:	da2a      	bge.n	800f832 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f7dc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800f7de:	8926      	ldrh	r6, [r4, #8]
 800f7e0:	4416      	add	r6, r2
 800f7e2:	b236      	sxth	r6, r6
 800f7e4:	42be      	cmp	r6, r7
 800f7e6:	db24      	blt.n	800f832 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f7e8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f7ec:	4438      	add	r0, r7
 800f7ee:	b200      	sxth	r0, r0
 800f7f0:	4286      	cmp	r6, r0
 800f7f2:	da1e      	bge.n	800f832 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f7f4:	8963      	ldrh	r3, [r4, #10]
 800f7f6:	4419      	add	r1, r3
 800f7f8:	b209      	sxth	r1, r1
 800f7fa:	4541      	cmp	r1, r8
 800f7fc:	db08      	blt.n	800f810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f7fe:	4561      	cmp	r1, ip
 800f800:	da06      	bge.n	800f810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f802:	89a3      	ldrh	r3, [r4, #12]
 800f804:	441a      	add	r2, r3
 800f806:	b212      	sxth	r2, r2
 800f808:	42ba      	cmp	r2, r7
 800f80a:	db01      	blt.n	800f810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f80c:	4282      	cmp	r2, r0
 800f80e:	db10      	blt.n	800f832 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f810:	4b21      	ldr	r3, [pc, #132]	; (800f898 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f812:	a904      	add	r1, sp, #16
 800f814:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f816:	9304      	str	r3, [sp, #16]
 800f818:	2302      	movs	r3, #2
 800f81a:	f88d 3014 	strb.w	r3, [sp, #20]
 800f81e:	2300      	movs	r3, #0
 800f820:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f824:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f828:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f82c:	6803      	ldr	r3, [r0, #0]
 800f82e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f830:	4798      	blx	r3
 800f832:	1d29      	adds	r1, r5, #4
 800f834:	a802      	add	r0, sp, #8
 800f836:	f7ff fe7f 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f83a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f83e:	88e0      	ldrh	r0, [r4, #6]
 800f840:	eba3 0808 	sub.w	r8, r3, r8
 800f844:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f848:	7921      	ldrb	r1, [r4, #4]
 800f84a:	fa1f f888 	uxth.w	r8, r8
 800f84e:	1bdf      	subs	r7, r3, r7
 800f850:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f854:	b2bb      	uxth	r3, r7
 800f856:	4440      	add	r0, r8
 800f858:	8922      	ldrh	r2, [r4, #8]
 800f85a:	8967      	ldrh	r7, [r4, #10]
 800f85c:	4460      	add	r0, ip
 800f85e:	89a4      	ldrh	r4, [r4, #12]
 800f860:	441a      	add	r2, r3
 800f862:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f864:	44b8      	add	r8, r7
 800f866:	4423      	add	r3, r4
 800f868:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f86c:	4432      	add	r2, r6
 800f86e:	44e0      	add	r8, ip
 800f870:	4433      	add	r3, r6
 800f872:	4c0a      	ldr	r4, [pc, #40]	; (800f89c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f874:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f876:	f88d 1014 	strb.w	r1, [sp, #20]
 800f87a:	a904      	add	r1, sp, #16
 800f87c:	9404      	str	r4, [sp, #16]
 800f87e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f882:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f886:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f88a:	6803      	ldr	r3, [r0, #0]
 800f88c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f88e:	4798      	blx	r3
 800f890:	b008      	add	sp, #32
 800f892:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f896:	bf00      	nop
 800f898:	0801c568 	.word	0x0801c568
 800f89c:	0801c57c 	.word	0x0801c57c

0800f8a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f8a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f8a2:	4604      	mov	r4, r0
 800f8a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f8a8:	3201      	adds	r2, #1
 800f8aa:	d112      	bne.n	800f8d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f8ac:	2500      	movs	r5, #0
 800f8ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f8b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f8b6:	6803      	ldr	r3, [r0, #0]
 800f8b8:	9500      	str	r5, [sp, #0]
 800f8ba:	466d      	mov	r5, sp
 800f8bc:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f8c0:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f8c4:	4629      	mov	r1, r5
 800f8c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f8c8:	4798      	blx	r3
 800f8ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f8ce:	e884 0003 	stmia.w	r4, {r0, r1}
 800f8d2:	4620      	mov	r0, r4
 800f8d4:	b003      	add	sp, #12
 800f8d6:	bd30      	pop	{r4, r5, pc}

0800f8d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f8d8:	b513      	push	{r0, r1, r4, lr}
 800f8da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f8de:	4604      	mov	r4, r0
 800f8e0:	3301      	adds	r3, #1
 800f8e2:	d109      	bne.n	800f8f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f8e4:	4601      	mov	r1, r0
 800f8e6:	4668      	mov	r0, sp
 800f8e8:	f7ff fe26 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8ec:	f8bd 3000 	ldrh.w	r3, [sp]
 800f8f0:	8423      	strh	r3, [r4, #32]
 800f8f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f8f6:	8463      	strh	r3, [r4, #34]	; 0x22
 800f8f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f8fc:	b002      	add	sp, #8
 800f8fe:	bd10      	pop	{r4, pc}

0800f900 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f900:	b513      	push	{r0, r1, r4, lr}
 800f902:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f906:	4604      	mov	r4, r0
 800f908:	3301      	adds	r3, #1
 800f90a:	d109      	bne.n	800f920 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f90c:	4601      	mov	r1, r0
 800f90e:	4668      	mov	r0, sp
 800f910:	f7ff fe12 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f914:	f8bd 3000 	ldrh.w	r3, [sp]
 800f918:	8423      	strh	r3, [r4, #32]
 800f91a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f91e:	8463      	strh	r3, [r4, #34]	; 0x22
 800f920:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f924:	b002      	add	sp, #8
 800f926:	bd10      	pop	{r4, pc}

0800f928 <_ZN8touchgfx6ScreenC1Ev>:
 800f928:	b570      	push	{r4, r5, r6, lr}
 800f92a:	4b17      	ldr	r3, [pc, #92]	; (800f988 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f92c:	4605      	mov	r5, r0
 800f92e:	4a17      	ldr	r2, [pc, #92]	; (800f98c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f930:	2101      	movs	r1, #1
 800f932:	f845 3b04 	str.w	r3, [r5], #4
 800f936:	2300      	movs	r3, #0
 800f938:	6042      	str	r2, [r0, #4]
 800f93a:	4604      	mov	r4, r0
 800f93c:	8103      	strh	r3, [r0, #8]
 800f93e:	8143      	strh	r3, [r0, #10]
 800f940:	8183      	strh	r3, [r0, #12]
 800f942:	81c3      	strh	r3, [r0, #14]
 800f944:	8203      	strh	r3, [r0, #16]
 800f946:	8243      	strh	r3, [r0, #18]
 800f948:	8283      	strh	r3, [r0, #20]
 800f94a:	82c3      	strh	r3, [r0, #22]
 800f94c:	6203      	str	r3, [r0, #32]
 800f94e:	8483      	strh	r3, [r0, #36]	; 0x24
 800f950:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f952:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f956:	6343      	str	r3, [r0, #52]	; 0x34
 800f958:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f95c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f960:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f964:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f968:	4b09      	ldr	r3, [pc, #36]	; (800f990 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f96a:	4628      	mov	r0, r5
 800f96c:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f970:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800f972:	4a08      	ldr	r2, [pc, #32]	; (800f994 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f974:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f978:	4798      	blx	r3
 800f97a:	6863      	ldr	r3, [r4, #4]
 800f97c:	4628      	mov	r0, r5
 800f97e:	4631      	mov	r1, r6
 800f980:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f982:	4798      	blx	r3
 800f984:	4620      	mov	r0, r4
 800f986:	bd70      	pop	{r4, r5, r6, pc}
 800f988:	0801c900 	.word	0x0801c900
 800f98c:	0801c4d8 	.word	0x0801c4d8
 800f990:	24006bce 	.word	0x24006bce
 800f994:	24006bcc 	.word	0x24006bcc

0800f998 <_ZN8touchgfx6Screen4drawEv>:
 800f998:	4b09      	ldr	r3, [pc, #36]	; (800f9c0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f99a:	b507      	push	{r0, r1, r2, lr}
 800f99c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f9a0:	2100      	movs	r1, #0
 800f9a2:	4b08      	ldr	r3, [pc, #32]	; (800f9c4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f9a4:	9100      	str	r1, [sp, #0]
 800f9a6:	4669      	mov	r1, sp
 800f9a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f9ac:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f9b0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f9b4:	6803      	ldr	r3, [r0, #0]
 800f9b6:	689b      	ldr	r3, [r3, #8]
 800f9b8:	4798      	blx	r3
 800f9ba:	b003      	add	sp, #12
 800f9bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800f9c0:	24006bcc 	.word	0x24006bcc
 800f9c4:	24006bce 	.word	0x24006bce

0800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9cc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f9d0:	b089      	sub	sp, #36	; 0x24
 800f9d2:	4680      	mov	r8, r0
 800f9d4:	460c      	mov	r4, r1
 800f9d6:	2b00      	cmp	r3, #0
 800f9d8:	4615      	mov	r5, r2
 800f9da:	dd0e      	ble.n	800f9fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f9dc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f9e0:	2b00      	cmp	r3, #0
 800f9e2:	dd0a      	ble.n	800f9fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f9e4:	4628      	mov	r0, r5
 800f9e6:	f7ff ff5b 	bl	800f8a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f9ea:	4621      	mov	r1, r4
 800f9ec:	f7fe fbad 	bl	800e14a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f9f0:	69eb      	ldr	r3, [r5, #28]
 800f9f2:	b928      	cbnz	r0, 800fa00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f9f4:	461d      	mov	r5, r3
 800f9f6:	2b00      	cmp	r3, #0
 800f9f8:	d1f4      	bne.n	800f9e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f9fa:	b009      	add	sp, #36	; 0x24
 800f9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa00:	ae04      	add	r6, sp, #16
 800fa02:	2b00      	cmp	r3, #0
 800fa04:	f000 80b5 	beq.w	800fb72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800fa08:	682b      	ldr	r3, [r5, #0]
 800fa0a:	4629      	mov	r1, r5
 800fa0c:	a802      	add	r0, sp, #8
 800fa0e:	68db      	ldr	r3, [r3, #12]
 800fa10:	4798      	blx	r3
 800fa12:	4628      	mov	r0, r5
 800fa14:	f7ff ff60 	bl	800f8d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800fa18:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800fa1c:	4407      	add	r7, r0
 800fa1e:	4628      	mov	r0, r5
 800fa20:	f7ff ff6e 	bl	800f900 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800fa24:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800fa28:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800fa2c:	b23f      	sxth	r7, r7
 800fa2e:	4418      	add	r0, r3
 800fa30:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fa34:	4621      	mov	r1, r4
 800fa36:	f8ad 2014 	strh.w	r2, [sp, #20]
 800fa3a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800fa3e:	4630      	mov	r0, r6
 800fa40:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fa44:	f8ad 7010 	strh.w	r7, [sp, #16]
 800fa48:	f7fa fb7a 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800fa4c:	4628      	mov	r0, r5
 800fa4e:	f7ff ff27 	bl	800f8a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800fa52:	ab06      	add	r3, sp, #24
 800fa54:	4602      	mov	r2, r0
 800fa56:	e896 0003 	ldmia.w	r6, {r0, r1}
 800fa5a:	e883 0003 	stmia.w	r3, {r0, r1}
 800fa5e:	4611      	mov	r1, r2
 800fa60:	4618      	mov	r0, r3
 800fa62:	f7fa fb6d 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800fa66:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fa6a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fa6e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800fa72:	4299      	cmp	r1, r3
 800fa74:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800fa78:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800fa7c:	d10b      	bne.n	800fa96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800fa7e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800fa82:	4552      	cmp	r2, sl
 800fa84:	d107      	bne.n	800fa96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800fa86:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fa8a:	455a      	cmp	r2, fp
 800fa8c:	d103      	bne.n	800fa96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800fa8e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fa92:	454a      	cmp	r2, r9
 800fa94:	d06d      	beq.n	800fb72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800fa96:	f1bb 0f00 	cmp.w	fp, #0
 800fa9a:	dd65      	ble.n	800fb68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800fa9c:	f1b9 0f00 	cmp.w	r9, #0
 800faa0:	dd62      	ble.n	800fb68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800faa2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800faa6:	fa1f f08a 	uxth.w	r0, sl
 800faaa:	4552      	cmp	r2, sl
 800faac:	9000      	str	r0, [sp, #0]
 800faae:	da12      	bge.n	800fad6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800fab0:	9301      	str	r3, [sp, #4]
 800fab2:	9b00      	ldr	r3, [sp, #0]
 800fab4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fab8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800fabc:	1a9a      	subs	r2, r3, r2
 800fabe:	f8ad 1010 	strh.w	r1, [sp, #16]
 800fac2:	4631      	mov	r1, r6
 800fac4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800fac8:	4640      	mov	r0, r8
 800faca:	f8ad 2016 	strh.w	r2, [sp, #22]
 800face:	69ea      	ldr	r2, [r5, #28]
 800fad0:	f7ff ff7a 	bl	800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800fad4:	9b01      	ldr	r3, [sp, #4]
 800fad6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800fada:	b29f      	uxth	r7, r3
 800fadc:	429a      	cmp	r2, r3
 800fade:	da0d      	bge.n	800fafc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800fae0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800fae4:	1aba      	subs	r2, r7, r2
 800fae6:	f8ad a012 	strh.w	sl, [sp, #18]
 800faea:	4631      	mov	r1, r6
 800faec:	f8ad 2014 	strh.w	r2, [sp, #20]
 800faf0:	4640      	mov	r0, r8
 800faf2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800faf6:	69ea      	ldr	r2, [r5, #28]
 800faf8:	f7ff ff66 	bl	800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800fafc:	8822      	ldrh	r2, [r4, #0]
 800fafe:	445f      	add	r7, fp
 800fb00:	88a3      	ldrh	r3, [r4, #4]
 800fb02:	b2bf      	uxth	r7, r7
 800fb04:	4413      	add	r3, r2
 800fb06:	b23a      	sxth	r2, r7
 800fb08:	b29b      	uxth	r3, r3
 800fb0a:	b219      	sxth	r1, r3
 800fb0c:	4291      	cmp	r1, r2
 800fb0e:	dd0d      	ble.n	800fb2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800fb10:	1bdb      	subs	r3, r3, r7
 800fb12:	f8ad 2010 	strh.w	r2, [sp, #16]
 800fb16:	f8ad a012 	strh.w	sl, [sp, #18]
 800fb1a:	4631      	mov	r1, r6
 800fb1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800fb20:	4640      	mov	r0, r8
 800fb22:	f8ad 9016 	strh.w	r9, [sp, #22]
 800fb26:	69ea      	ldr	r2, [r5, #28]
 800fb28:	f7ff ff4e 	bl	800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800fb2c:	88e2      	ldrh	r2, [r4, #6]
 800fb2e:	8863      	ldrh	r3, [r4, #2]
 800fb30:	4413      	add	r3, r2
 800fb32:	9a00      	ldr	r2, [sp, #0]
 800fb34:	444a      	add	r2, r9
 800fb36:	b29b      	uxth	r3, r3
 800fb38:	fa1f f982 	uxth.w	r9, r2
 800fb3c:	b219      	sxth	r1, r3
 800fb3e:	fa0f f289 	sxth.w	r2, r9
 800fb42:	428a      	cmp	r2, r1
 800fb44:	da15      	bge.n	800fb72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800fb46:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fb4a:	eba3 0309 	sub.w	r3, r3, r9
 800fb4e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb52:	f8ad 1014 	strh.w	r1, [sp, #20]
 800fb56:	4631      	mov	r1, r6
 800fb58:	f8ad 0010 	strh.w	r0, [sp, #16]
 800fb5c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800fb60:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fb64:	69ea      	ldr	r2, [r5, #28]
 800fb66:	e001      	b.n	800fb6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800fb68:	69ea      	ldr	r2, [r5, #28]
 800fb6a:	4621      	mov	r1, r4
 800fb6c:	4640      	mov	r0, r8
 800fb6e:	f7ff ff2b 	bl	800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800fb72:	4628      	mov	r0, r5
 800fb74:	f7ff fe94 	bl	800f8a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800fb78:	6861      	ldr	r1, [r4, #4]
 800fb7a:	4602      	mov	r2, r0
 800fb7c:	4633      	mov	r3, r6
 800fb7e:	6820      	ldr	r0, [r4, #0]
 800fb80:	c303      	stmia	r3!, {r0, r1}
 800fb82:	4611      	mov	r1, r2
 800fb84:	4630      	mov	r0, r6
 800fb86:	f7fa fadb 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800fb8a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800fb8e:	2b00      	cmp	r3, #0
 800fb90:	f77f af33 	ble.w	800f9fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800fb94:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800fb98:	2b00      	cmp	r3, #0
 800fb9a:	f77f af2e 	ble.w	800f9fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800fb9e:	4628      	mov	r0, r5
 800fba0:	f7ff fe9a 	bl	800f8d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800fba4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800fba8:	1a18      	subs	r0, r3, r0
 800fbaa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800fbae:	4628      	mov	r0, r5
 800fbb0:	f7ff fea6 	bl	800f900 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800fbb4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800fbb8:	4631      	mov	r1, r6
 800fbba:	1a18      	subs	r0, r3, r0
 800fbbc:	f8ad 0012 	strh.w	r0, [sp, #18]
 800fbc0:	4628      	mov	r0, r5
 800fbc2:	682b      	ldr	r3, [r5, #0]
 800fbc4:	689b      	ldr	r3, [r3, #8]
 800fbc6:	4798      	blx	r3
 800fbc8:	e717      	b.n	800f9fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800fbca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800fbca:	b570      	push	{r4, r5, r6, lr}
 800fbcc:	1d06      	adds	r6, r0, #4
 800fbce:	b086      	sub	sp, #24
 800fbd0:	460c      	mov	r4, r1
 800fbd2:	2300      	movs	r3, #0
 800fbd4:	4631      	mov	r1, r6
 800fbd6:	4605      	mov	r5, r0
 800fbd8:	a802      	add	r0, sp, #8
 800fbda:	9301      	str	r3, [sp, #4]
 800fbdc:	f7ff fcac 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fbe0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800fbe4:	8822      	ldrh	r2, [r4, #0]
 800fbe6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800fbea:	1ad2      	subs	r2, r2, r3
 800fbec:	8863      	ldrh	r3, [r4, #2]
 800fbee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fbf2:	1a5b      	subs	r3, r3, r1
 800fbf4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fbf8:	f8ad 2010 	strh.w	r2, [sp, #16]
 800fbfc:	aa01      	add	r2, sp, #4
 800fbfe:	f8ad 0014 	strh.w	r0, [sp, #20]
 800fc02:	4630      	mov	r0, r6
 800fc04:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fc08:	a904      	add	r1, sp, #16
 800fc0a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fc0e:	f7fa fb6f 	bl	800a2f0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800fc12:	9a01      	ldr	r2, [sp, #4]
 800fc14:	b11a      	cbz	r2, 800fc1e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800fc16:	4621      	mov	r1, r4
 800fc18:	4628      	mov	r0, r5
 800fc1a:	f7ff fed5 	bl	800f9c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800fc1e:	b006      	add	sp, #24
 800fc20:	bd70      	pop	{r4, r5, r6, pc}

0800fc22 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800fc22:	4602      	mov	r2, r0
 800fc24:	b530      	push	{r4, r5, lr}
 800fc26:	4604      	mov	r4, r0
 800fc28:	b085      	sub	sp, #20
 800fc2a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800fc2e:	460d      	mov	r5, r1
 800fc30:	466b      	mov	r3, sp
 800fc32:	6851      	ldr	r1, [r2, #4]
 800fc34:	c303      	stmia	r3!, {r0, r1}
 800fc36:	4629      	mov	r1, r5
 800fc38:	4668      	mov	r0, sp
 800fc3a:	f7fa fa81 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 800fc3e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800fc42:	b12b      	cbz	r3, 800fc50 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800fc44:	4669      	mov	r1, sp
 800fc46:	4620      	mov	r0, r4
 800fc48:	f7ff ffbf 	bl	800fbca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800fc4c:	b005      	add	sp, #20
 800fc4e:	bd30      	pop	{r4, r5, pc}
 800fc50:	3404      	adds	r4, #4
 800fc52:	a802      	add	r0, sp, #8
 800fc54:	4621      	mov	r1, r4
 800fc56:	f7ff fc6f 	bl	800f538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc5a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fc5e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800fc62:	4669      	mov	r1, sp
 800fc64:	4620      	mov	r0, r4
 800fc66:	1a9b      	subs	r3, r3, r2
 800fc68:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800fc6c:	f8ad 3000 	strh.w	r3, [sp]
 800fc70:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc74:	1a9b      	subs	r3, r3, r2
 800fc76:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc7a:	f7fa fb00 	bl	800a27e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800fc7e:	e7e5      	b.n	800fc4c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800fc80 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800fc80:	460b      	mov	r3, r1
 800fc82:	680a      	ldr	r2, [r1, #0]
 800fc84:	1d01      	adds	r1, r0, #4
 800fc86:	6992      	ldr	r2, [r2, #24]
 800fc88:	4618      	mov	r0, r3
 800fc8a:	4710      	bx	r2

0800fc8c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800fc8c:	4298      	cmp	r0, r3
 800fc8e:	d200      	bcs.n	800fc92 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800fc90:	b913      	cbnz	r3, 800fc98 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800fc92:	440a      	add	r2, r1
 800fc94:	b210      	sxth	r0, r2
 800fc96:	4770      	bx	lr
 800fc98:	ee07 0a90 	vmov	s15, r0
 800fc9c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800fca0:	ee07 3a90 	vmov	s15, r3
 800fca4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fca8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800fcac:	ee07 2a90 	vmov	s15, r2
 800fcb0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fcb4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800fcb8:	ee07 1a90 	vmov	s15, r1
 800fcbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fcc0:	ee37 7a66 	vsub.f32	s14, s14, s13
 800fcc4:	ee67 5a07 	vmul.f32	s11, s14, s14
 800fcc8:	eee5 6a87 	vfma.f32	s13, s11, s14
 800fccc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800fcd0:	eee6 7a26 	vfma.f32	s15, s12, s13
 800fcd4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fcd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fcdc:	bfcc      	ite	gt
 800fcde:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800fce2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800fce6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fcea:	ee17 3a90 	vmov	r3, s15
 800fcee:	b218      	sxth	r0, r3
 800fcf0:	4770      	bx	lr

0800fcf2 <_ZN8touchgfx12TextProviderC1Ev>:
 800fcf2:	b538      	push	{r3, r4, r5, lr}
 800fcf4:	2500      	movs	r5, #0
 800fcf6:	2302      	movs	r3, #2
 800fcf8:	4604      	mov	r4, r0
 800fcfa:	220e      	movs	r2, #14
 800fcfc:	7403      	strb	r3, [r0, #16]
 800fcfe:	4629      	mov	r1, r5
 800fd00:	6145      	str	r5, [r0, #20]
 800fd02:	7605      	strb	r5, [r0, #24]
 800fd04:	83c5      	strh	r5, [r0, #30]
 800fd06:	8405      	strh	r5, [r0, #32]
 800fd08:	86c5      	strh	r5, [r0, #54]	; 0x36
 800fd0a:	8705      	strh	r5, [r0, #56]	; 0x38
 800fd0c:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800fd0e:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800fd12:	e9c0 5500 	strd	r5, r5, [r0]
 800fd16:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800fd1a:	304c      	adds	r0, #76	; 0x4c
 800fd1c:	f00a fd4b 	bl	801a7b6 <memset>
 800fd20:	2301      	movs	r3, #1
 800fd22:	4620      	mov	r0, r4
 800fd24:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800fd28:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fd2c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800fd30:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800fd34:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800fd38:	f7f2 ffac 	bl	8002c94 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800fd3c:	4620      	mov	r0, r4
 800fd3e:	bd38      	pop	{r3, r4, r5, pc}

0800fd40 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800fd40:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800fd42:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fd46:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800fd48:	fab0 f080 	clz	r0, r0
 800fd4c:	0940      	lsrs	r0, r0, #5
 800fd4e:	4770      	bx	lr

0800fd50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800fd50:	b530      	push	{r4, r5, lr}
 800fd52:	2500      	movs	r5, #0
 800fd54:	2401      	movs	r4, #1
 800fd56:	6843      	ldr	r3, [r0, #4]
 800fd58:	b913      	cbnz	r3, 800fd60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800fd5a:	6803      	ldr	r3, [r0, #0]
 800fd5c:	b313      	cbz	r3, 800fda4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fd5e:	6043      	str	r3, [r0, #4]
 800fd60:	7e03      	ldrb	r3, [r0, #24]
 800fd62:	b143      	cbz	r3, 800fd76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800fd64:	6943      	ldr	r3, [r0, #20]
 800fd66:	b12b      	cbz	r3, 800fd74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fd68:	881a      	ldrh	r2, [r3, #0]
 800fd6a:	b11a      	cbz	r2, 800fd74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fd6c:	1c9a      	adds	r2, r3, #2
 800fd6e:	6142      	str	r2, [r0, #20]
 800fd70:	8818      	ldrh	r0, [r3, #0]
 800fd72:	bd30      	pop	{r4, r5, pc}
 800fd74:	7605      	strb	r5, [r0, #24]
 800fd76:	6843      	ldr	r3, [r0, #4]
 800fd78:	8819      	ldrh	r1, [r3, #0]
 800fd7a:	b199      	cbz	r1, 800fda4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fd7c:	1c9a      	adds	r2, r3, #2
 800fd7e:	2902      	cmp	r1, #2
 800fd80:	6042      	str	r2, [r0, #4]
 800fd82:	d1f5      	bne.n	800fd70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800fd84:	7c03      	ldrb	r3, [r0, #16]
 800fd86:	2b01      	cmp	r3, #1
 800fd88:	d8e5      	bhi.n	800fd56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fd8a:	1c5a      	adds	r2, r3, #1
 800fd8c:	3302      	adds	r3, #2
 800fd8e:	7402      	strb	r2, [r0, #16]
 800fd90:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800fd94:	6143      	str	r3, [r0, #20]
 800fd96:	2b00      	cmp	r3, #0
 800fd98:	d0dd      	beq.n	800fd56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fd9a:	881b      	ldrh	r3, [r3, #0]
 800fd9c:	2b00      	cmp	r3, #0
 800fd9e:	d0da      	beq.n	800fd56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fda0:	7604      	strb	r4, [r0, #24]
 800fda2:	e7d8      	b.n	800fd56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fda4:	2000      	movs	r0, #0
 800fda6:	e7e4      	b.n	800fd72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800fda8:	6001      	str	r1, [r0, #0]
 800fdaa:	2100      	movs	r1, #0
 800fdac:	b430      	push	{r4, r5}
 800fdae:	6041      	str	r1, [r0, #4]
 800fdb0:	6815      	ldr	r5, [r2, #0]
 800fdb2:	6085      	str	r5, [r0, #8]
 800fdb4:	6852      	ldr	r2, [r2, #4]
 800fdb6:	6443      	str	r3, [r0, #68]	; 0x44
 800fdb8:	9b02      	ldr	r3, [sp, #8]
 800fdba:	60c2      	str	r2, [r0, #12]
 800fdbc:	7401      	strb	r1, [r0, #16]
 800fdbe:	6141      	str	r1, [r0, #20]
 800fdc0:	7601      	strb	r1, [r0, #24]
 800fdc2:	8701      	strh	r1, [r0, #56]	; 0x38
 800fdc4:	8401      	strh	r1, [r0, #32]
 800fdc6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800fdca:	6483      	str	r3, [r0, #72]	; 0x48
 800fdcc:	bc30      	pop	{r4, r5}
 800fdce:	f7f2 bf61 	b.w	8002c94 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800fdd2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800fdd2:	b408      	push	{r3}
 800fdd4:	b510      	push	{r4, lr}
 800fdd6:	b085      	sub	sp, #20
 800fdd8:	ac07      	add	r4, sp, #28
 800fdda:	f854 3b04 	ldr.w	r3, [r4], #4
 800fdde:	9300      	str	r3, [sp, #0]
 800fde0:	4613      	mov	r3, r2
 800fde2:	4622      	mov	r2, r4
 800fde4:	9403      	str	r4, [sp, #12]
 800fde6:	f7ff ffdf 	bl	800fda8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fdea:	b005      	add	sp, #20
 800fdec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdf0:	b001      	add	sp, #4
 800fdf2:	4770      	bx	lr

0800fdf4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800fdf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdf6:	4605      	mov	r5, r0
 800fdf8:	4608      	mov	r0, r1
 800fdfa:	b1f1      	cbz	r1, 800fe3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 800fdfc:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800fe00:	460b      	mov	r3, r1
 800fe02:	f101 0708 	add.w	r7, r1, #8
 800fe06:	4622      	mov	r2, r4
 800fe08:	6818      	ldr	r0, [r3, #0]
 800fe0a:	3308      	adds	r3, #8
 800fe0c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fe10:	4626      	mov	r6, r4
 800fe12:	42bb      	cmp	r3, r7
 800fe14:	c603      	stmia	r6!, {r0, r1}
 800fe16:	4634      	mov	r4, r6
 800fe18:	d1f6      	bne.n	800fe08 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800fe1a:	6818      	ldr	r0, [r3, #0]
 800fe1c:	6030      	str	r0, [r6, #0]
 800fe1e:	4610      	mov	r0, r2
 800fe20:	889b      	ldrh	r3, [r3, #4]
 800fe22:	80b3      	strh	r3, [r6, #4]
 800fe24:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800fe28:	015b      	lsls	r3, r3, #5
 800fe2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fe2e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800fe32:	430b      	orrs	r3, r1
 800fe34:	425b      	negs	r3, r3
 800fe36:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fe3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fe3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800fe3c:	b538      	push	{r3, r4, r5, lr}
 800fe3e:	460c      	mov	r4, r1
 800fe40:	6811      	ldr	r1, [r2, #0]
 800fe42:	4610      	mov	r0, r2
 800fe44:	68cd      	ldr	r5, [r1, #12]
 800fe46:	4619      	mov	r1, r3
 800fe48:	47a8      	blx	r5
 800fe4a:	2800      	cmp	r0, #0
 800fe4c:	bf08      	it	eq
 800fe4e:	4620      	moveq	r0, r4
 800fe50:	bd38      	pop	{r3, r4, r5, pc}
	...

0800fe54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800fe54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe56:	4604      	mov	r4, r0
 800fe58:	4615      	mov	r5, r2
 800fe5a:	4608      	mov	r0, r1
 800fe5c:	b93a      	cbnz	r2, 800fe6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800fe5e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800fe62:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800fe66:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fe6a:	4628      	mov	r0, r5
 800fe6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe6e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800fe72:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800fe76:	8893      	ldrh	r3, [r2, #4]
 800fe78:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800fe7c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fe80:	79ee      	ldrb	r6, [r5, #7]
 800fe82:	4316      	orrs	r6, r2
 800fe84:	19da      	adds	r2, r3, r7
 800fe86:	b291      	uxth	r1, r2
 800fe88:	b2b7      	uxth	r7, r6
 800fe8a:	291d      	cmp	r1, #29
 800fe8c:	d87b      	bhi.n	800ff86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fe8e:	2201      	movs	r2, #1
 800fe90:	10f6      	asrs	r6, r6, #3
 800fe92:	408a      	lsls	r2, r1
 800fe94:	4974      	ldr	r1, [pc, #464]	; (8010068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800fe96:	420a      	tst	r2, r1
 800fe98:	d12e      	bne.n	800fef8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800fe9a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800fe9e:	d072      	beq.n	800ff86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fea0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800fea4:	462b      	mov	r3, r5
 800fea6:	f105 0e08 	add.w	lr, r5, #8
 800feaa:	4615      	mov	r5, r2
 800feac:	6818      	ldr	r0, [r3, #0]
 800feae:	3308      	adds	r3, #8
 800feb0:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800feb4:	4694      	mov	ip, r2
 800feb6:	4573      	cmp	r3, lr
 800feb8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800febc:	4662      	mov	r2, ip
 800febe:	d1f5      	bne.n	800feac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800fec0:	6818      	ldr	r0, [r3, #0]
 800fec2:	f8cc 0000 	str.w	r0, [ip]
 800fec6:	889b      	ldrh	r3, [r3, #4]
 800fec8:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fecc:	b2b3      	uxth	r3, r6
 800fece:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800fed2:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800fed6:	1aca      	subs	r2, r1, r3
 800fed8:	1bcf      	subs	r7, r1, r7
 800feda:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800fede:	b292      	uxth	r2, r2
 800fee0:	1afb      	subs	r3, r7, r3
 800fee2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800fee6:	10d2      	asrs	r2, r2, #3
 800fee8:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800feec:	4302      	orrs	r2, r0
 800feee:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800fef2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800fef6:	e7b8      	b.n	800fe6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fef8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fefa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fefe:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800ff00:	f640 6333 	movw	r3, #3635	; 0xe33
 800ff04:	4299      	cmp	r1, r3
 800ff06:	d110      	bne.n	800ff2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800ff08:	6803      	ldr	r3, [r0, #0]
 800ff0a:	68db      	ldr	r3, [r3, #12]
 800ff0c:	4798      	blx	r3
 800ff0e:	7b41      	ldrb	r1, [r0, #13]
 800ff10:	00cb      	lsls	r3, r1, #3
 800ff12:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ff16:	7a03      	ldrb	r3, [r0, #8]
 800ff18:	0648      	lsls	r0, r1, #25
 800ff1a:	ea43 0302 	orr.w	r3, r3, r2
 800ff1e:	bf44      	itt	mi
 800ff20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ff24:	b21b      	sxthmi	r3, r3
 800ff26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ff2a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800ff2e:	462a      	mov	r2, r5
 800ff30:	f105 0c08 	add.w	ip, r5, #8
 800ff34:	443b      	add	r3, r7
 800ff36:	4433      	add	r3, r6
 800ff38:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800ff3c:	b29b      	uxth	r3, r3
 800ff3e:	4635      	mov	r5, r6
 800ff40:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ff44:	6810      	ldr	r0, [r2, #0]
 800ff46:	3208      	adds	r2, #8
 800ff48:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800ff4c:	4637      	mov	r7, r6
 800ff4e:	4562      	cmp	r2, ip
 800ff50:	c703      	stmia	r7!, {r0, r1}
 800ff52:	463e      	mov	r6, r7
 800ff54:	d1f6      	bne.n	800ff44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800ff56:	6810      	ldr	r0, [r2, #0]
 800ff58:	6038      	str	r0, [r7, #0]
 800ff5a:	8892      	ldrh	r2, [r2, #4]
 800ff5c:	80ba      	strh	r2, [r7, #4]
 800ff5e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ff62:	10db      	asrs	r3, r3, #3
 800ff64:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ff68:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ff6c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ff70:	4313      	orrs	r3, r2
 800ff72:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800ff76:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ff7a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800ff7e:	1a9b      	subs	r3, r3, r2
 800ff80:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800ff84:	e771      	b.n	800fe6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800ff86:	f023 0204 	bic.w	r2, r3, #4
 800ff8a:	f640 611b 	movw	r1, #3611	; 0xe1b
 800ff8e:	428a      	cmp	r2, r1
 800ff90:	d003      	beq.n	800ff9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 800ff92:	f640 621d 	movw	r2, #3613	; 0xe1d
 800ff96:	4293      	cmp	r3, r2
 800ff98:	d120      	bne.n	800ffdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 800ff9a:	3b01      	subs	r3, #1
 800ff9c:	4602      	mov	r2, r0
 800ff9e:	4629      	mov	r1, r5
 800ffa0:	4620      	mov	r0, r4
 800ffa2:	b29b      	uxth	r3, r3
 800ffa4:	f7ff ff4a 	bl	800fe3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ffa8:	7b41      	ldrb	r1, [r0, #13]
 800ffaa:	00cb      	lsls	r3, r1, #3
 800ffac:	0649      	lsls	r1, r1, #25
 800ffae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ffb2:	7a03      	ldrb	r3, [r0, #8]
 800ffb4:	ea43 0302 	orr.w	r3, r3, r2
 800ffb8:	bf44      	itt	mi
 800ffba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ffbe:	b21b      	sxthmi	r3, r3
 800ffc0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ffc4:	7b6b      	ldrb	r3, [r5, #13]
 800ffc6:	7aaa      	ldrb	r2, [r5, #10]
 800ffc8:	005b      	lsls	r3, r3, #1
 800ffca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ffce:	4313      	orrs	r3, r2
 800ffd0:	115a      	asrs	r2, r3, #5
 800ffd2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800ffd6:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800ffda:	e035      	b.n	8010048 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800ffdc:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800ffe0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ffe4:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800ffe8:	7a2a      	ldrb	r2, [r5, #8]
 800ffea:	ea42 0201 	orr.w	r2, r2, r1
 800ffee:	f640 6109 	movw	r1, #3593	; 0xe09
 800fff2:	bf1c      	itt	ne
 800fff4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800fff8:	b212      	sxthne	r2, r2
 800fffa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800fffe:	f023 0210 	bic.w	r2, r3, #16
 8010002:	428a      	cmp	r2, r1
 8010004:	d003      	beq.n	801000e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8010006:	f640 6213 	movw	r2, #3603	; 0xe13
 801000a:	4293      	cmp	r3, r2
 801000c:	d129      	bne.n	8010062 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801000e:	7b6e      	ldrb	r6, [r5, #13]
 8010010:	4629      	mov	r1, r5
 8010012:	0076      	lsls	r6, r6, #1
 8010014:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8010018:	7aae      	ldrb	r6, [r5, #10]
 801001a:	4316      	orrs	r6, r2
 801001c:	f640 6213 	movw	r2, #3603	; 0xe13
 8010020:	4293      	cmp	r3, r2
 8010022:	4602      	mov	r2, r0
 8010024:	4620      	mov	r0, r4
 8010026:	bf16      	itet	ne
 8010028:	f103 33ff 	addne.w	r3, r3, #4294967295
 801002c:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8010030:	b29b      	uxthne	r3, r3
 8010032:	f7ff ff03 	bl	800fe3c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010036:	7b43      	ldrb	r3, [r0, #13]
 8010038:	7a82      	ldrb	r2, [r0, #10]
 801003a:	005b      	lsls	r3, r3, #1
 801003c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010040:	4313      	orrs	r3, r2
 8010042:	1af6      	subs	r6, r6, r3
 8010044:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8010048:	7b69      	ldrb	r1, [r5, #13]
 801004a:	00cb      	lsls	r3, r1, #3
 801004c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010050:	7a2b      	ldrb	r3, [r5, #8]
 8010052:	4313      	orrs	r3, r2
 8010054:	064a      	lsls	r2, r1, #25
 8010056:	bf44      	itt	mi
 8010058:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801005c:	b21b      	sxthmi	r3, r3
 801005e:	1bdb      	subs	r3, r3, r7
 8010060:	e747      	b.n	800fef2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8010062:	2300      	movs	r3, #0
 8010064:	e7b7      	b.n	800ffd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8010066:	bf00      	nop
 8010068:	3fc00079 	.word	0x3fc00079

0801006c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801006c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010070:	4604      	mov	r4, r0
 8010072:	b942      	cbnz	r2, 8010086 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010074:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010078:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801007c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8010080:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8010084:	e047      	b.n	8010116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010086:	7b51      	ldrb	r1, [r2, #13]
 8010088:	8893      	ldrh	r3, [r2, #4]
 801008a:	010d      	lsls	r5, r1, #4
 801008c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8010090:	79d5      	ldrb	r5, [r2, #7]
 8010092:	4305      	orrs	r5, r0
 8010094:	2d04      	cmp	r5, #4
 8010096:	bfcc      	ite	gt
 8010098:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801009c:	f04f 0e01 	movle.w	lr, #1
 80100a0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80100a4:	f200 80ab 	bhi.w	80101fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80100a8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80100ac:	4283      	cmp	r3, r0
 80100ae:	d216      	bcs.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80100b0:	f240 605b 	movw	r0, #1627	; 0x65b
 80100b4:	4283      	cmp	r3, r0
 80100b6:	d859      	bhi.n	801016c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80100b8:	f240 6057 	movw	r0, #1623	; 0x657
 80100bc:	4283      	cmp	r3, r0
 80100be:	d20e      	bcs.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80100c0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80100c4:	d24a      	bcs.n	801015c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80100c6:	f240 604e 	movw	r0, #1614	; 0x64e
 80100ca:	4283      	cmp	r3, r0
 80100cc:	d207      	bcs.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80100ce:	f240 601a 	movw	r0, #1562	; 0x61a
 80100d2:	4283      	cmp	r3, r0
 80100d4:	d02a      	beq.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80100d6:	d821      	bhi.n	801011c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80100d8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80100dc:	d35b      	bcc.n	8010196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80100de:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80100e2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80100e6:	f040 80d0 	bne.w	801028a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80100ea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80100ee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80100f2:	f040 80ca 	bne.w	801028a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80100f6:	00cb      	lsls	r3, r1, #3
 80100f8:	0649      	lsls	r1, r1, #25
 80100fa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80100fe:	7a13      	ldrb	r3, [r2, #8]
 8010100:	ea43 0300 	orr.w	r3, r3, r0
 8010104:	bf44      	itt	mi
 8010106:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801010a:	b21b      	sxthmi	r3, r3
 801010c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010110:	1b5d      	subs	r5, r3, r5
 8010112:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010116:	4610      	mov	r0, r2
 8010118:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801011c:	f240 604b 	movw	r0, #1611	; 0x64b
 8010120:	4283      	cmp	r3, r0
 8010122:	d338      	bcc.n	8010196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010124:	f240 604c 	movw	r0, #1612	; 0x64c
 8010128:	4283      	cmp	r3, r0
 801012a:	d9d8      	bls.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801012c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8010130:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8010134:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010138:	f040 80f3 	bne.w	8010322 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801013c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010140:	f040 80ef 	bne.w	8010322 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8010144:	00cb      	lsls	r3, r1, #3
 8010146:	064e      	lsls	r6, r1, #25
 8010148:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801014c:	7a13      	ldrb	r3, [r2, #8]
 801014e:	ea43 0300 	orr.w	r3, r3, r0
 8010152:	bf44      	itt	mi
 8010154:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010158:	b21b      	sxthmi	r3, r3
 801015a:	e7d9      	b.n	8010110 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801015c:	f240 6054 	movw	r0, #1620	; 0x654
 8010160:	4283      	cmp	r3, r0
 8010162:	d8e3      	bhi.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010164:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8010168:	d9e0      	bls.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801016a:	e7b8      	b.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801016c:	f240 6074 	movw	r0, #1652	; 0x674
 8010170:	4283      	cmp	r3, r0
 8010172:	d0b4      	beq.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010174:	d82d      	bhi.n	80101d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8010176:	f240 605e 	movw	r0, #1630	; 0x65e
 801017a:	4283      	cmp	r3, r0
 801017c:	d804      	bhi.n	8010188 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801017e:	f240 605d 	movw	r0, #1629	; 0x65d
 8010182:	4283      	cmp	r3, r0
 8010184:	d3d2      	bcc.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010186:	e7aa      	b.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010188:	f240 605f 	movw	r0, #1631	; 0x65f
 801018c:	4283      	cmp	r3, r0
 801018e:	d0cd      	beq.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010190:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8010194:	d0a3      	beq.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010196:	00cb      	lsls	r3, r1, #3
 8010198:	0649      	lsls	r1, r1, #25
 801019a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801019e:	7a13      	ldrb	r3, [r2, #8]
 80101a0:	ea43 0300 	orr.w	r3, r3, r0
 80101a4:	bf44      	itt	mi
 80101a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80101aa:	b21b      	sxthmi	r3, r3
 80101ac:	1b5d      	subs	r5, r3, r5
 80101ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80101b2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80101b6:	7b53      	ldrb	r3, [r2, #13]
 80101b8:	015b      	lsls	r3, r3, #5
 80101ba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80101be:	7993      	ldrb	r3, [r2, #6]
 80101c0:	430b      	orrs	r3, r1
 80101c2:	2105      	movs	r1, #5
 80101c4:	005b      	lsls	r3, r3, #1
 80101c6:	fb93 f3f1 	sdiv	r3, r3, r1
 80101ca:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80101ce:	440b      	add	r3, r1
 80101d0:	e756      	b.n	8010080 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80101d2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80101d6:	4283      	cmp	r3, r0
 80101d8:	d809      	bhi.n	80101ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80101da:	f240 60df 	movw	r0, #1759	; 0x6df
 80101de:	4283      	cmp	r3, r0
 80101e0:	f4bf af7d 	bcs.w	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80101e4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80101e8:	2b05      	cmp	r3, #5
 80101ea:	d8d4      	bhi.n	8010196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80101ec:	e777      	b.n	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80101ee:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80101f2:	4283      	cmp	r3, r0
 80101f4:	d09a      	beq.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80101f6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80101fa:	4283      	cmp	r3, r0
 80101fc:	e7ca      	b.n	8010194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80101fe:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8010202:	d22b      	bcs.n	801025c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8010204:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8010208:	4283      	cmp	r3, r0
 801020a:	d28f      	bcs.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801020c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8010210:	4283      	cmp	r3, r0
 8010212:	d816      	bhi.n	8010242 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8010214:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8010218:	4283      	cmp	r3, r0
 801021a:	f4bf af60 	bcs.w	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801021e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8010222:	4283      	cmp	r3, r0
 8010224:	d80a      	bhi.n	801023c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8010226:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801022a:	4283      	cmp	r3, r0
 801022c:	f4bf af57 	bcs.w	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010230:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8010234:	4283      	cmp	r3, r0
 8010236:	f43f af79 	beq.w	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801023a:	e7ac      	b.n	8010196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801023c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8010240:	e7f8      	b.n	8010234 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8010242:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8010246:	4283      	cmp	r3, r0
 8010248:	d802      	bhi.n	8010250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801024a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801024e:	e798      	b.n	8010182 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8010250:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8010254:	4283      	cmp	r3, r0
 8010256:	f47f af42 	bne.w	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801025a:	e767      	b.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801025c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8010260:	4283      	cmp	r3, r0
 8010262:	f43f af63 	beq.w	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010266:	d802      	bhi.n	801026e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8010268:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801026c:	e7f2      	b.n	8010254 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801026e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8010272:	4283      	cmp	r3, r0
 8010274:	d805      	bhi.n	8010282 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8010276:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801027a:	4283      	cmp	r3, r0
 801027c:	f4ff af2f 	bcc.w	80100de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010280:	e754      	b.n	801012c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010282:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8010286:	4283      	cmp	r3, r0
 8010288:	e7af      	b.n	80101ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801028a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801028e:	4617      	mov	r7, r2
 8010290:	f102 0808 	add.w	r8, r2, #8
 8010294:	4666      	mov	r6, ip
 8010296:	6838      	ldr	r0, [r7, #0]
 8010298:	3708      	adds	r7, #8
 801029a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801029e:	46e6      	mov	lr, ip
 80102a0:	4547      	cmp	r7, r8
 80102a2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80102a6:	46f4      	mov	ip, lr
 80102a8:	d1f5      	bne.n	8010296 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80102aa:	6838      	ldr	r0, [r7, #0]
 80102ac:	f8ce 0000 	str.w	r0, [lr]
 80102b0:	88b9      	ldrh	r1, [r7, #4]
 80102b2:	f8ae 1004 	strh.w	r1, [lr, #4]
 80102b6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80102ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80102be:	d009      	beq.n	80102d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80102c0:	7b51      	ldrb	r1, [r2, #13]
 80102c2:	7992      	ldrb	r2, [r2, #6]
 80102c4:	0149      	lsls	r1, r1, #5
 80102c6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80102ca:	4311      	orrs	r1, r2
 80102cc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80102d0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80102d4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80102d8:	b2ad      	uxth	r5, r5
 80102da:	d00d      	beq.n	80102f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 80102dc:	442b      	add	r3, r5
 80102de:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80102e2:	b29b      	uxth	r3, r3
 80102e4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80102e8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80102ec:	10db      	asrs	r3, r3, #3
 80102ee:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80102f2:	4313      	orrs	r3, r2
 80102f4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80102f8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80102fc:	00cb      	lsls	r3, r1, #3
 80102fe:	064f      	lsls	r7, r1, #25
 8010300:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010304:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8010308:	ea43 0302 	orr.w	r3, r3, r2
 801030c:	bf44      	itt	mi
 801030e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010312:	b21b      	sxthmi	r3, r3
 8010314:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010318:	1b5b      	subs	r3, r3, r5
 801031a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801031e:	4632      	mov	r2, r6
 8010320:	e6f9      	b.n	8010116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010322:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8010326:	4617      	mov	r7, r2
 8010328:	f102 0908 	add.w	r9, r2, #8
 801032c:	4666      	mov	r6, ip
 801032e:	6838      	ldr	r0, [r7, #0]
 8010330:	3708      	adds	r7, #8
 8010332:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8010336:	46e0      	mov	r8, ip
 8010338:	454f      	cmp	r7, r9
 801033a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801033e:	46c4      	mov	ip, r8
 8010340:	d1f5      	bne.n	801032e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8010342:	6838      	ldr	r0, [r7, #0]
 8010344:	f8c8 0000 	str.w	r0, [r8]
 8010348:	88b9      	ldrh	r1, [r7, #4]
 801034a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801034e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8010352:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010356:	d009      	beq.n	801036c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8010358:	7b51      	ldrb	r1, [r2, #13]
 801035a:	7992      	ldrb	r2, [r2, #6]
 801035c:	0149      	lsls	r1, r1, #5
 801035e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010362:	4311      	orrs	r1, r2
 8010364:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010368:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801036c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010370:	d00e      	beq.n	8010390 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8010372:	eba3 030e 	sub.w	r3, r3, lr
 8010376:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801037a:	b29b      	uxth	r3, r3
 801037c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010380:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010384:	10db      	asrs	r3, r3, #3
 8010386:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801038a:	4313      	orrs	r3, r2
 801038c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8010390:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8010394:	00cb      	lsls	r3, r1, #3
 8010396:	0648      	lsls	r0, r1, #25
 8010398:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801039c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80103a0:	ea43 0302 	orr.w	r3, r3, r2
 80103a4:	bf44      	itt	mi
 80103a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80103aa:	b21b      	sxthmi	r3, r3
 80103ac:	1b5d      	subs	r5, r3, r5
 80103ae:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80103b2:	e7b4      	b.n	801031e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080103b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80103b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103b8:	461e      	mov	r6, r3
 80103ba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80103bc:	4604      	mov	r4, r0
 80103be:	4617      	mov	r7, r2
 80103c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80103c4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80103c8:	f7f2 fc22 	bl	8002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80103cc:	4605      	mov	r5, r0
 80103ce:	b918      	cbnz	r0, 80103d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80103d0:	6030      	str	r0, [r6, #0]
 80103d2:	4628      	mov	r0, r5
 80103d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103d8:	683b      	ldr	r3, [r7, #0]
 80103da:	4601      	mov	r1, r0
 80103dc:	4638      	mov	r0, r7
 80103de:	68db      	ldr	r3, [r3, #12]
 80103e0:	4798      	blx	r3
 80103e2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80103e6:	4602      	mov	r2, r0
 80103e8:	6030      	str	r0, [r6, #0]
 80103ea:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80103ee:	d213      	bcs.n	8010418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80103f0:	4643      	mov	r3, r8
 80103f2:	4639      	mov	r1, r7
 80103f4:	4620      	mov	r0, r4
 80103f6:	f7ff fe39 	bl	801006c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80103fa:	6030      	str	r0, [r6, #0]
 80103fc:	6833      	ldr	r3, [r6, #0]
 80103fe:	b143      	cbz	r3, 8010412 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8010400:	7b5a      	ldrb	r2, [r3, #13]
 8010402:	7a9b      	ldrb	r3, [r3, #10]
 8010404:	0052      	lsls	r2, r2, #1
 8010406:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801040a:	4313      	orrs	r3, r2
 801040c:	bf0c      	ite	eq
 801040e:	2301      	moveq	r3, #1
 8010410:	2300      	movne	r3, #0
 8010412:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010416:	e7dc      	b.n	80103d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8010418:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801041c:	b29b      	uxth	r3, r3
 801041e:	2b7f      	cmp	r3, #127	; 0x7f
 8010420:	d804      	bhi.n	801042c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8010422:	4639      	mov	r1, r7
 8010424:	4620      	mov	r0, r4
 8010426:	f7ff fd15 	bl	800fe54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801042a:	e7e6      	b.n	80103fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801042c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010430:	2b00      	cmp	r3, #0
 8010432:	d0e3      	beq.n	80103fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010434:	f640 1302 	movw	r3, #2306	; 0x902
 8010438:	429d      	cmp	r5, r3
 801043a:	d1df      	bne.n	80103fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801043c:	4601      	mov	r1, r0
 801043e:	4620      	mov	r0, r4
 8010440:	f7ff fcd8 	bl	800fdf4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010444:	e7d9      	b.n	80103fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08010446 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8010446:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801044a:	461e      	mov	r6, r3
 801044c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801044e:	4604      	mov	r4, r0
 8010450:	4617      	mov	r7, r2
 8010452:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010456:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801045a:	f7f2 fbd9 	bl	8002c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801045e:	4605      	mov	r5, r0
 8010460:	b918      	cbnz	r0, 801046a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8010462:	6030      	str	r0, [r6, #0]
 8010464:	4628      	mov	r0, r5
 8010466:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801046a:	683b      	ldr	r3, [r7, #0]
 801046c:	4601      	mov	r1, r0
 801046e:	4638      	mov	r0, r7
 8010470:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010474:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010478:	47c8      	blx	r9
 801047a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801047e:	4602      	mov	r2, r0
 8010480:	6030      	str	r0, [r6, #0]
 8010482:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010486:	d213      	bcs.n	80104b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8010488:	4643      	mov	r3, r8
 801048a:	4639      	mov	r1, r7
 801048c:	4620      	mov	r0, r4
 801048e:	f7ff fded 	bl	801006c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010492:	6030      	str	r0, [r6, #0]
 8010494:	6833      	ldr	r3, [r6, #0]
 8010496:	b143      	cbz	r3, 80104aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8010498:	7b5a      	ldrb	r2, [r3, #13]
 801049a:	7a9b      	ldrb	r3, [r3, #10]
 801049c:	0052      	lsls	r2, r2, #1
 801049e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80104a2:	4313      	orrs	r3, r2
 80104a4:	bf0c      	ite	eq
 80104a6:	2301      	moveq	r3, #1
 80104a8:	2300      	movne	r3, #0
 80104aa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80104ae:	e7d9      	b.n	8010464 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80104b0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80104b4:	b29b      	uxth	r3, r3
 80104b6:	2b7f      	cmp	r3, #127	; 0x7f
 80104b8:	d804      	bhi.n	80104c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80104ba:	4639      	mov	r1, r7
 80104bc:	4620      	mov	r0, r4
 80104be:	f7ff fcc9 	bl	800fe54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80104c2:	e7e6      	b.n	8010492 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80104c4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80104c8:	2b00      	cmp	r3, #0
 80104ca:	d0e3      	beq.n	8010494 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80104cc:	f640 1302 	movw	r3, #2306	; 0x902
 80104d0:	429d      	cmp	r5, r3
 80104d2:	d1df      	bne.n	8010494 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80104d4:	4601      	mov	r1, r0
 80104d6:	4620      	mov	r0, r4
 80104d8:	f7ff fc8c 	bl	800fdf4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80104dc:	e7d9      	b.n	8010492 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080104de <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80104de:	b510      	push	{r4, lr}
 80104e0:	4604      	mov	r4, r0
 80104e2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80104e6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80104e8:	b1e1      	cbz	r1, 8010524 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80104ea:	2b0a      	cmp	r3, #10
 80104ec:	d02d      	beq.n	801054a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80104ee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80104f0:	3901      	subs	r1, #1
 80104f2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80104f6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80104f8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80104fc:	1c51      	adds	r1, r2, #1
 80104fe:	b289      	uxth	r1, r1
 8010500:	2901      	cmp	r1, #1
 8010502:	bf8a      	itet	hi
 8010504:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010508:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801050a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801050c:	1c5a      	adds	r2, r3, #1
 801050e:	8722      	strh	r2, [r4, #56]	; 0x38
 8010510:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010512:	4413      	add	r3, r2
 8010514:	b29b      	uxth	r3, r3
 8010516:	2b09      	cmp	r3, #9
 8010518:	bf88      	it	hi
 801051a:	3b0a      	subhi	r3, #10
 801051c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010520:	8458      	strh	r0, [r3, #34]	; 0x22
 8010522:	e7de      	b.n	80104e2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010524:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010526:	2b0a      	cmp	r3, #10
 8010528:	d00f      	beq.n	801054a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801052a:	4620      	mov	r0, r4
 801052c:	f7ff fc10 	bl	800fd50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010530:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010532:	1c5a      	adds	r2, r3, #1
 8010534:	8722      	strh	r2, [r4, #56]	; 0x38
 8010536:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010538:	4413      	add	r3, r2
 801053a:	b29b      	uxth	r3, r3
 801053c:	2b09      	cmp	r3, #9
 801053e:	bf88      	it	hi
 8010540:	3b0a      	subhi	r3, #10
 8010542:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010546:	8458      	strh	r0, [r3, #34]	; 0x22
 8010548:	e7ec      	b.n	8010524 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801054a:	bd10      	pop	{r4, pc}

0801054c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801054c:	b538      	push	{r3, r4, r5, lr}
 801054e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010550:	4604      	mov	r4, r0
 8010552:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8010556:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8010558:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801055a:	3a01      	subs	r2, #1
 801055c:	8702      	strh	r2, [r0, #56]	; 0x38
 801055e:	1c5a      	adds	r2, r3, #1
 8010560:	b292      	uxth	r2, r2
 8010562:	2a09      	cmp	r2, #9
 8010564:	bf8a      	itet	hi
 8010566:	3b09      	subhi	r3, #9
 8010568:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801056a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801056c:	f7ff ffb7 	bl	80104de <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010570:	8c23      	ldrh	r3, [r4, #32]
 8010572:	2b01      	cmp	r3, #1
 8010574:	bf9c      	itt	ls
 8010576:	3301      	addls	r3, #1
 8010578:	8423      	strhls	r3, [r4, #32]
 801057a:	8be3      	ldrh	r3, [r4, #30]
 801057c:	b90b      	cbnz	r3, 8010582 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801057e:	2302      	movs	r3, #2
 8010580:	83e3      	strh	r3, [r4, #30]
 8010582:	8be3      	ldrh	r3, [r4, #30]
 8010584:	4628      	mov	r0, r5
 8010586:	3b01      	subs	r3, #1
 8010588:	b29b      	uxth	r3, r3
 801058a:	83e3      	strh	r3, [r4, #30]
 801058c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010590:	8365      	strh	r5, [r4, #26]
 8010592:	bd38      	pop	{r3, r4, r5, pc}

08010594 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010594:	428a      	cmp	r2, r1
 8010596:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801059a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801059c:	d932      	bls.n	8010604 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 801059e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80105a0:	1a54      	subs	r4, r2, r1
 80105a2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80105a6:	19ee      	adds	r6, r5, r7
 80105a8:	fa1f fe84 	uxth.w	lr, r4
 80105ac:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80105b0:	3e01      	subs	r6, #1
 80105b2:	b2b4      	uxth	r4, r6
 80105b4:	eba4 090e 	sub.w	r9, r4, lr
 80105b8:	fa1f f989 	uxth.w	r9, r9
 80105bc:	2c09      	cmp	r4, #9
 80105be:	4626      	mov	r6, r4
 80105c0:	bf88      	it	hi
 80105c2:	f1a4 060a 	subhi.w	r6, r4, #10
 80105c6:	f1bc 0f00 	cmp.w	ip, #0
 80105ca:	f104 34ff 	add.w	r4, r4, #4294967295
 80105ce:	bf08      	it	eq
 80105d0:	f04f 0c02 	moveq.w	ip, #2
 80105d4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80105d8:	b2a4      	uxth	r4, r4
 80105da:	f10c 3cff 	add.w	ip, ip, #4294967295
 80105de:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80105e2:	454c      	cmp	r4, r9
 80105e4:	fa1f fc8c 	uxth.w	ip, ip
 80105e8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80105ec:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80105f0:	d1e4      	bne.n	80105bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80105f2:	eba5 050e 	sub.w	r5, r5, lr
 80105f6:	eb0e 0408 	add.w	r4, lr, r8
 80105fa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80105fe:	8705      	strh	r5, [r0, #56]	; 0x38
 8010600:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8010604:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8010606:	250a      	movs	r5, #10
 8010608:	1a64      	subs	r4, r4, r1
 801060a:	4439      	add	r1, r7
 801060c:	b289      	uxth	r1, r1
 801060e:	8704      	strh	r4, [r0, #56]	; 0x38
 8010610:	2909      	cmp	r1, #9
 8010612:	bf88      	it	hi
 8010614:	390a      	subhi	r1, #10
 8010616:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010618:	b18a      	cbz	r2, 801063e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801061a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801061c:	3a01      	subs	r2, #1
 801061e:	3101      	adds	r1, #1
 8010620:	b292      	uxth	r2, r2
 8010622:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8010626:	8701      	strh	r1, [r0, #56]	; 0x38
 8010628:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801062a:	b901      	cbnz	r1, 801062e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 801062c:	86c5      	strh	r5, [r0, #54]	; 0x36
 801062e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8010630:	3901      	subs	r1, #1
 8010632:	b289      	uxth	r1, r1
 8010634:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010636:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801063a:	844c      	strh	r4, [r1, #34]	; 0x22
 801063c:	e7ec      	b.n	8010618 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 801063e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010642:	f7ff bf4c 	b.w	80104de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08010646 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8010646:	b570      	push	{r4, r5, r6, lr}
 8010648:	2500      	movs	r5, #0
 801064a:	4295      	cmp	r5, r2
 801064c:	d011      	beq.n	8010672 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801064e:	8bc4      	ldrh	r4, [r0, #30]
 8010650:	f831 6b02 	ldrh.w	r6, [r1], #2
 8010654:	4414      	add	r4, r2
 8010656:	3c01      	subs	r4, #1
 8010658:	1b64      	subs	r4, r4, r5
 801065a:	b2a4      	uxth	r4, r4
 801065c:	2c01      	cmp	r4, #1
 801065e:	bf88      	it	hi
 8010660:	3c02      	subhi	r4, #2
 8010662:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010666:	8b64      	ldrh	r4, [r4, #26]
 8010668:	42b4      	cmp	r4, r6
 801066a:	d117      	bne.n	801069c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801066c:	3501      	adds	r5, #1
 801066e:	b2ad      	uxth	r5, r5
 8010670:	e7eb      	b.n	801064a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8010672:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010676:	2400      	movs	r4, #0
 8010678:	4413      	add	r3, r2
 801067a:	b2a2      	uxth	r2, r4
 801067c:	429a      	cmp	r2, r3
 801067e:	da0f      	bge.n	80106a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8010680:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8010682:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8010686:	3401      	adds	r4, #1
 8010688:	4432      	add	r2, r6
 801068a:	b292      	uxth	r2, r2
 801068c:	2a09      	cmp	r2, #9
 801068e:	bf88      	it	hi
 8010690:	3a0a      	subhi	r2, #10
 8010692:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010696:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8010698:	42aa      	cmp	r2, r5
 801069a:	d0ee      	beq.n	801067a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801069c:	2000      	movs	r0, #0
 801069e:	bd70      	pop	{r4, r5, r6, pc}
 80106a0:	2001      	movs	r0, #1
 80106a2:	e7fc      	b.n	801069e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080106a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80106a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106a8:	4605      	mov	r5, r0
 80106aa:	4616      	mov	r6, r2
 80106ac:	1c8c      	adds	r4, r1, #2
 80106ae:	8809      	ldrh	r1, [r1, #0]
 80106b0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80106b4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80106b8:	42b3      	cmp	r3, r6
 80106ba:	d124      	bne.n	8010706 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80106bc:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80106c0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80106c4:	f001 070f 	and.w	r7, r1, #15
 80106c8:	4652      	mov	r2, sl
 80106ca:	f8cd 8000 	str.w	r8, [sp]
 80106ce:	464b      	mov	r3, r9
 80106d0:	4621      	mov	r1, r4
 80106d2:	4628      	mov	r0, r5
 80106d4:	f7ff ffb7 	bl	8010646 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80106d8:	4683      	mov	fp, r0
 80106da:	b168      	cbz	r0, 80106f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80106dc:	eb0a 0109 	add.w	r1, sl, r9
 80106e0:	463a      	mov	r2, r7
 80106e2:	4628      	mov	r0, r5
 80106e4:	4441      	add	r1, r8
 80106e6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80106ea:	4649      	mov	r1, r9
 80106ec:	f7ff ff52 	bl	8010594 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80106f0:	4658      	mov	r0, fp
 80106f2:	b003      	add	sp, #12
 80106f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106f8:	eb07 010a 	add.w	r1, r7, sl
 80106fc:	4449      	add	r1, r9
 80106fe:	4441      	add	r1, r8
 8010700:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010704:	e7d2      	b.n	80106ac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8010706:	f04f 0b00 	mov.w	fp, #0
 801070a:	e7f1      	b.n	80106f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801070c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801070c:	b570      	push	{r4, r5, r6, lr}
 801070e:	8810      	ldrh	r0, [r2, #0]
 8010710:	4298      	cmp	r0, r3
 8010712:	d817      	bhi.n	8010744 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010714:	1e48      	subs	r0, r1, #1
 8010716:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801071a:	4298      	cmp	r0, r3
 801071c:	d312      	bcc.n	8010744 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801071e:	2400      	movs	r4, #0
 8010720:	428c      	cmp	r4, r1
 8010722:	d20f      	bcs.n	8010744 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010724:	1860      	adds	r0, r4, r1
 8010726:	1040      	asrs	r0, r0, #1
 8010728:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801072c:	0085      	lsls	r5, r0, #2
 801072e:	42b3      	cmp	r3, r6
 8010730:	d902      	bls.n	8010738 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8010732:	3001      	adds	r0, #1
 8010734:	b284      	uxth	r4, r0
 8010736:	e7f3      	b.n	8010720 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010738:	d201      	bcs.n	801073e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801073a:	b281      	uxth	r1, r0
 801073c:	e7f0      	b.n	8010720 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801073e:	442a      	add	r2, r5
 8010740:	8850      	ldrh	r0, [r2, #2]
 8010742:	bd70      	pop	{r4, r5, r6, pc}
 8010744:	2000      	movs	r0, #0
 8010746:	e7fc      	b.n	8010742 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08010748 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8010748:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801074c:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801074e:	4604      	mov	r4, r0
 8010750:	260b      	movs	r6, #11
 8010752:	886f      	ldrh	r7, [r5, #2]
 8010754:	087f      	lsrs	r7, r7, #1
 8010756:	3e01      	subs	r6, #1
 8010758:	d013      	beq.n	8010782 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801075a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801075c:	462a      	mov	r2, r5
 801075e:	4639      	mov	r1, r7
 8010760:	4620      	mov	r0, r4
 8010762:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010766:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801076a:	4643      	mov	r3, r8
 801076c:	f7ff ffce 	bl	801070c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8010770:	b138      	cbz	r0, 8010782 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8010772:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8010776:	4642      	mov	r2, r8
 8010778:	4620      	mov	r0, r4
 801077a:	f7ff ff93 	bl	80106a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801077e:	2800      	cmp	r0, #0
 8010780:	d1e9      	bne.n	8010756 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8010782:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010788 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8010788:	b570      	push	{r4, r5, r6, lr}
 801078a:	694a      	ldr	r2, [r1, #20]
 801078c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801078e:	684b      	ldr	r3, [r1, #4]
 8010790:	1b54      	subs	r4, r2, r5
 8010792:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010794:	f000 8106 	beq.w	80109a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010798:	1b9b      	subs	r3, r3, r6
 801079a:	d003      	beq.n	80107a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801079c:	4363      	muls	r3, r4
 801079e:	2210      	movs	r2, #16
 80107a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80107a4:	680c      	ldr	r4, [r1, #0]
 80107a6:	698a      	ldr	r2, [r1, #24]
 80107a8:	1b65      	subs	r5, r4, r5
 80107aa:	f000 80fd 	beq.w	80109a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80107ae:	1b92      	subs	r2, r2, r6
 80107b0:	d003      	beq.n	80107ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80107b2:	436a      	muls	r2, r5
 80107b4:	2410      	movs	r4, #16
 80107b6:	fb92 f2f4 	sdiv	r2, r2, r4
 80107ba:	1a9b      	subs	r3, r3, r2
 80107bc:	ed9f 4a89 	vldr	s8, [pc, #548]	; 80109e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80107c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80107c4:	460a      	mov	r2, r1
 80107c6:	ee07 3a90 	vmov	s15, r3
 80107ca:	f100 040c 	add.w	r4, r0, #12
 80107ce:	4603      	mov	r3, r0
 80107d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80107d4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80107d8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80107dc:	eeb1 6a43 	vneg.f32	s12, s6
 80107e0:	edd2 7a02 	vldr	s15, [r2, #8]
 80107e4:	3214      	adds	r2, #20
 80107e6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80107ea:	ece3 6a01 	vstmia	r3!, {s13}
 80107ee:	429c      	cmp	r4, r3
 80107f0:	ed52 7a02 	vldr	s15, [r2, #-8]
 80107f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80107f8:	edc3 7a02 	vstr	s15, [r3, #8]
 80107fc:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010800:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010804:	edc3 7a05 	vstr	s15, [r3, #20]
 8010808:	d1ea      	bne.n	80107e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801080a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801080c:	698b      	ldr	r3, [r1, #24]
 801080e:	edd0 4a02 	vldr	s9, [r0, #8]
 8010812:	1a9b      	subs	r3, r3, r2
 8010814:	edd0 3a00 	vldr	s7, [r0]
 8010818:	edd0 6a01 	vldr	s13, [r0, #4]
 801081c:	ee07 3a90 	vmov	s15, r3
 8010820:	684b      	ldr	r3, [r1, #4]
 8010822:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8010826:	ed90 5a05 	vldr	s10, [r0, #20]
 801082a:	1a9b      	subs	r3, r3, r2
 801082c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010830:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8010834:	ed90 2a03 	vldr	s4, [r0, #12]
 8010838:	ee07 3a10 	vmov	s14, r3
 801083c:	edd0 5a04 	vldr	s11, [r0, #16]
 8010840:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010844:	ed90 1a07 	vldr	s2, [r0, #28]
 8010848:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801084c:	edd0 2a06 	vldr	s5, [r0, #24]
 8010850:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8010854:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8010858:	ee27 7a04 	vmul.f32	s14, s14, s8
 801085c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8010860:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010864:	ee67 7a83 	vmul.f32	s15, s15, s6
 8010868:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801086c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801086e:	694a      	ldr	r2, [r1, #20]
 8010870:	1b13      	subs	r3, r2, r4
 8010872:	ee07 3a10 	vmov	s14, r3
 8010876:	680b      	ldr	r3, [r1, #0]
 8010878:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801087c:	1b1b      	subs	r3, r3, r4
 801087e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010882:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8010886:	ee07 3a10 	vmov	s14, r3
 801088a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801088e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010892:	eee6 4a87 	vfma.f32	s9, s13, s14
 8010896:	ee64 4a86 	vmul.f32	s9, s9, s12
 801089a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801089e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80108a0:	698b      	ldr	r3, [r1, #24]
 80108a2:	1a9b      	subs	r3, r3, r2
 80108a4:	ee06 3a90 	vmov	s13, r3
 80108a8:	684b      	ldr	r3, [r1, #4]
 80108aa:	1a9b      	subs	r3, r3, r2
 80108ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80108b0:	ee07 3a10 	vmov	s14, r3
 80108b4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80108b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80108bc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80108c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80108c4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80108c8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80108cc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80108d0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80108d2:	694a      	ldr	r2, [r1, #20]
 80108d4:	1b13      	subs	r3, r2, r4
 80108d6:	ee07 3a10 	vmov	s14, r3
 80108da:	680b      	ldr	r3, [r1, #0]
 80108dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80108e0:	1b1b      	subs	r3, r3, r4
 80108e2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80108e6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80108ea:	ee07 3a10 	vmov	s14, r3
 80108ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80108f2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80108f6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80108fa:	edd0 5a08 	vldr	s11, [r0, #32]
 80108fe:	ee31 1a65 	vsub.f32	s2, s2, s11
 8010902:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8010906:	ee25 5a06 	vmul.f32	s10, s10, s12
 801090a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801090e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010910:	698b      	ldr	r3, [r1, #24]
 8010912:	1a9b      	subs	r3, r3, r2
 8010914:	ee07 3a10 	vmov	s14, r3
 8010918:	684b      	ldr	r3, [r1, #4]
 801091a:	1a9b      	subs	r3, r3, r2
 801091c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010920:	ee01 3a90 	vmov	s3, r3
 8010924:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010928:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801092c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8010930:	ee61 1a84 	vmul.f32	s3, s3, s8
 8010934:	eea1 7a21 	vfma.f32	s14, s2, s3
 8010938:	ee27 7a03 	vmul.f32	s14, s14, s6
 801093c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8010940:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010942:	694a      	ldr	r2, [r1, #20]
 8010944:	1b13      	subs	r3, r2, r4
 8010946:	ee03 3a10 	vmov	s6, r3
 801094a:	680b      	ldr	r3, [r1, #0]
 801094c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010950:	1b1b      	subs	r3, r3, r4
 8010952:	ee23 3a04 	vmul.f32	s6, s6, s8
 8010956:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801095a:	ee03 3a10 	vmov	s6, r3
 801095e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010962:	ee23 4a04 	vmul.f32	s8, s6, s8
 8010966:	eee1 5a04 	vfma.f32	s11, s2, s8
 801096a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801096e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010972:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8010976:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801097a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801097e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010982:	dd13      	ble.n	80109ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010984:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010988:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801098c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801098e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010992:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801099a:	dd15      	ble.n	80109c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801099c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80109a0:	6403      	str	r3, [r0, #64]	; 0x40
 80109a2:	bd70      	pop	{r4, r5, r6, pc}
 80109a4:	4623      	mov	r3, r4
 80109a6:	e6fd      	b.n	80107a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80109a8:	462a      	mov	r2, r5
 80109aa:	e706      	b.n	80107ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80109ac:	d502      	bpl.n	80109b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80109ae:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80109b2:	e7e9      	b.n	8010988 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80109b4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80109b8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80109bc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80109c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109c4:	dade      	bge.n	8010984 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80109c6:	e7f2      	b.n	80109ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80109c8:	d502      	bpl.n	80109d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80109ca:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80109ce:	e7e7      	b.n	80109a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80109d0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80109d4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80109d8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80109dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109e0:	dadc      	bge.n	801099c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80109e2:	e7f2      	b.n	80109ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80109e4:	3d800000 	.word	0x3d800000

080109e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80109e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109ec:	2714      	movs	r7, #20
 80109ee:	435f      	muls	r7, r3
 80109f0:	eb02 0c07 	add.w	ip, r2, r7
 80109f4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80109f8:	f115 0e0f 	adds.w	lr, r5, #15
 80109fc:	f100 80a2 	bmi.w	8010b44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8010a00:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8010a04:	9c08      	ldr	r4, [sp, #32]
 8010a06:	2614      	movs	r6, #20
 8010a08:	f8c0 e014 	str.w	lr, [r0, #20]
 8010a0c:	4366      	muls	r6, r4
 8010a0e:	eb02 0806 	add.w	r8, r2, r6
 8010a12:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8010a16:	f115 040f 	adds.w	r4, r5, #15
 8010a1a:	f100 809f 	bmi.w	8010b5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8010a1e:	1124      	asrs	r4, r4, #4
 8010a20:	eba4 040e 	sub.w	r4, r4, lr
 8010a24:	6184      	str	r4, [r0, #24]
 8010a26:	2c00      	cmp	r4, #0
 8010a28:	f000 808a 	beq.w	8010b40 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8010a2c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8010a30:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8010a34:	5995      	ldr	r5, [r2, r6]
 8010a36:	eba4 0809 	sub.w	r8, r4, r9
 8010a3a:	59d4      	ldr	r4, [r2, r7]
 8010a3c:	eba5 0a04 	sub.w	sl, r5, r4
 8010a40:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8010a44:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8010a48:	fb0e fe05 	mul.w	lr, lr, r5
 8010a4c:	fb0a ee19 	mls	lr, sl, r9, lr
 8010a50:	fb08 e404 	mla	r4, r8, r4, lr
 8010a54:	3c01      	subs	r4, #1
 8010a56:	19a4      	adds	r4, r4, r6
 8010a58:	f100 808c 	bmi.w	8010b74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8010a5c:	fb94 fef6 	sdiv	lr, r4, r6
 8010a60:	fb06 441e 	mls	r4, r6, lr, r4
 8010a64:	f8c0 e000 	str.w	lr, [r0]
 8010a68:	6104      	str	r4, [r0, #16]
 8010a6a:	2d00      	cmp	r5, #0
 8010a6c:	f2c0 8095 	blt.w	8010b9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8010a70:	fb95 f4f6 	sdiv	r4, r5, r6
 8010a74:	fb06 5514 	mls	r5, r6, r4, r5
 8010a78:	6044      	str	r4, [r0, #4]
 8010a7a:	6085      	str	r5, [r0, #8]
 8010a7c:	60c6      	str	r6, [r0, #12]
 8010a7e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010a82:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8010a86:	6945      	ldr	r5, [r0, #20]
 8010a88:	59d2      	ldr	r2, [r2, r7]
 8010a8a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8010a8e:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8010bbc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8010a92:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8010a96:	ee07 4a10 	vmov	s14, r4
 8010a9a:	6804      	ldr	r4, [r0, #0]
 8010a9c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8010aa0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010aa4:	ee07 2a90 	vmov	s15, r2
 8010aa8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8010aac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010ab0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010ab4:	edd3 6a00 	vldr	s13, [r3]
 8010ab8:	eee6 6a07 	vfma.f32	s13, s12, s14
 8010abc:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8010ac0:	eee6 6a27 	vfma.f32	s13, s12, s15
 8010ac4:	edc0 6a07 	vstr	s13, [r0, #28]
 8010ac8:	edd0 6a01 	vldr	s13, [r0, #4]
 8010acc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8010ad0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010ad4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8010ad8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010adc:	ed80 6a08 	vstr	s12, [r0, #32]
 8010ae0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8010ae2:	6242      	str	r2, [r0, #36]	; 0x24
 8010ae4:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8010ae8:	ed93 6a03 	vldr	s12, [r3, #12]
 8010aec:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010af0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8010af4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8010af8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8010afc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8010b00:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8010b04:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010b08:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8010b0c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010b0e:	6302      	str	r2, [r0, #48]	; 0x30
 8010b10:	ed93 6a06 	vldr	s12, [r3, #24]
 8010b14:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8010b18:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010b1c:	eeb0 7a46 	vmov.f32	s14, s12
 8010b20:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8010b24:	eea6 7a27 	vfma.f32	s14, s12, s15
 8010b28:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8010b2c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8010b30:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8010b34:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010b38:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8010b3c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8010b3e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010b40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b44:	2410      	movs	r4, #16
 8010b46:	f1c5 0501 	rsb	r5, r5, #1
 8010b4a:	fb9e fef4 	sdiv	lr, lr, r4
 8010b4e:	f015 050f 	ands.w	r5, r5, #15
 8010b52:	bf18      	it	ne
 8010b54:	2501      	movne	r5, #1
 8010b56:	ebae 0e05 	sub.w	lr, lr, r5
 8010b5a:	e753      	b.n	8010a04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8010b5c:	f04f 0910 	mov.w	r9, #16
 8010b60:	f1c5 0501 	rsb	r5, r5, #1
 8010b64:	fb94 f4f9 	sdiv	r4, r4, r9
 8010b68:	f015 050f 	ands.w	r5, r5, #15
 8010b6c:	bf18      	it	ne
 8010b6e:	2501      	movne	r5, #1
 8010b70:	1b64      	subs	r4, r4, r5
 8010b72:	e755      	b.n	8010a20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8010b74:	4264      	negs	r4, r4
 8010b76:	fb94 fef6 	sdiv	lr, r4, r6
 8010b7a:	f1ce 0800 	rsb	r8, lr, #0
 8010b7e:	fb06 441e 	mls	r4, r6, lr, r4
 8010b82:	f8c0 8000 	str.w	r8, [r0]
 8010b86:	6104      	str	r4, [r0, #16]
 8010b88:	2c00      	cmp	r4, #0
 8010b8a:	f43f af6e 	beq.w	8010a6a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8010b8e:	ea6f 0e0e 	mvn.w	lr, lr
 8010b92:	1b34      	subs	r4, r6, r4
 8010b94:	f8c0 e000 	str.w	lr, [r0]
 8010b98:	e766      	b.n	8010a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8010b9a:	426d      	negs	r5, r5
 8010b9c:	fb95 f4f6 	sdiv	r4, r5, r6
 8010ba0:	f1c4 0e00 	rsb	lr, r4, #0
 8010ba4:	fb06 5514 	mls	r5, r6, r4, r5
 8010ba8:	f8c0 e004 	str.w	lr, [r0, #4]
 8010bac:	6085      	str	r5, [r0, #8]
 8010bae:	2d00      	cmp	r5, #0
 8010bb0:	f43f af64 	beq.w	8010a7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8010bb4:	43e4      	mvns	r4, r4
 8010bb6:	1b75      	subs	r5, r6, r5
 8010bb8:	6044      	str	r4, [r0, #4]
 8010bba:	e75e      	b.n	8010a7a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8010bbc:	3d800000 	.word	0x3d800000

08010bc0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010bc0:	4b01      	ldr	r3, [pc, #4]	; (8010bc8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010bc2:	6018      	str	r0, [r3, #0]
 8010bc4:	4770      	bx	lr
 8010bc6:	bf00      	nop
 8010bc8:	24006c38 	.word	0x24006c38

08010bcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010bcc:	4b06      	ldr	r3, [pc, #24]	; (8010be8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010bce:	881a      	ldrh	r2, [r3, #0]
 8010bd0:	4282      	cmp	r2, r0
 8010bd2:	d807      	bhi.n	8010be4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010bd4:	4b05      	ldr	r3, [pc, #20]	; (8010bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010bd6:	881b      	ldrh	r3, [r3, #0]
 8010bd8:	4413      	add	r3, r2
 8010bda:	4298      	cmp	r0, r3
 8010bdc:	bfac      	ite	ge
 8010bde:	2000      	movge	r0, #0
 8010be0:	2001      	movlt	r0, #1
 8010be2:	4770      	bx	lr
 8010be4:	2000      	movs	r0, #0
 8010be6:	4770      	bx	lr
 8010be8:	24006c58 	.word	0x24006c58
 8010bec:	24006c5c 	.word	0x24006c5c

08010bf0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010bf0:	b508      	push	{r3, lr}
 8010bf2:	4601      	mov	r1, r0
 8010bf4:	f7ff ffea 	bl	8010bcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010bf8:	b118      	cbz	r0, 8010c02 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010bfa:	4b02      	ldr	r3, [pc, #8]	; (8010c04 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010bfc:	681b      	ldr	r3, [r3, #0]
 8010bfe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010c02:	bd08      	pop	{r3, pc}
 8010c04:	24006c3c 	.word	0x24006c3c

08010c08 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>:
 8010c08:	b538      	push	{r3, r4, r5, lr}
 8010c0a:	4604      	mov	r4, r0
 8010c0c:	f7ff ffde 	bl	8010bcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010c10:	b188      	cbz	r0, 8010c36 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x2e>
 8010c12:	4b09      	ldr	r3, [pc, #36]	; (8010c38 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x30>)
 8010c14:	881a      	ldrh	r2, [r3, #0]
 8010c16:	4b09      	ldr	r3, [pc, #36]	; (8010c3c <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x34>)
 8010c18:	1aa4      	subs	r4, r4, r2
 8010c1a:	220e      	movs	r2, #14
 8010c1c:	681d      	ldr	r5, [r3, #0]
 8010c1e:	4362      	muls	r2, r4
 8010c20:	18ac      	adds	r4, r5, r2
 8010c22:	7b23      	ldrb	r3, [r4, #12]
 8010c24:	f013 0320 	ands.w	r3, r3, #32
 8010c28:	bf17      	itett	ne
 8010c2a:	680b      	ldrne	r3, [r1, #0]
 8010c2c:	4618      	moveq	r0, r3
 8010c2e:	50ab      	strne	r3, [r5, r2]
 8010c30:	684b      	ldrne	r3, [r1, #4]
 8010c32:	bf18      	it	ne
 8010c34:	6063      	strne	r3, [r4, #4]
 8010c36:	bd38      	pop	{r3, r4, r5, pc}
 8010c38:	24006c58 	.word	0x24006c58
 8010c3c:	24006c40 	.word	0x24006c40

08010c40 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>:
 8010c40:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010c44:	4606      	mov	r6, r0
 8010c46:	460c      	mov	r4, r1
 8010c48:	f7ff ffc0 	bl	8010bcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010c4c:	b918      	cbnz	r0, 8010c56 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x16>
 8010c4e:	2000      	movs	r0, #0
 8010c50:	b002      	add	sp, #8
 8010c52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010c56:	4608      	mov	r0, r1
 8010c58:	f7f9 fab5 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c5c:	2800      	cmp	r0, #0
 8010c5e:	d1f6      	bne.n	8010c4e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8010c60:	4b3f      	ldr	r3, [pc, #252]	; (8010d60 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x120>)
 8010c62:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8010d64 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x124>
 8010c66:	881d      	ldrh	r5, [r3, #0]
 8010c68:	f8d9 a000 	ldr.w	sl, [r9]
 8010c6c:	46c8      	mov	r8, r9
 8010c6e:	1b73      	subs	r3, r6, r5
 8010c70:	250e      	movs	r5, #14
 8010c72:	435d      	muls	r5, r3
 8010c74:	eb0a 0705 	add.w	r7, sl, r5
 8010c78:	7b3b      	ldrb	r3, [r7, #12]
 8010c7a:	f013 0f20 	tst.w	r3, #32
 8010c7e:	d0e6      	beq.n	8010c4e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8010c80:	4621      	mov	r1, r4
 8010c82:	4638      	mov	r0, r7
 8010c84:	f7fd fad4 	bl	800e230 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010c88:	2800      	cmp	r0, #0
 8010c8a:	d1e1      	bne.n	8010c50 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8010c8c:	4639      	mov	r1, r7
 8010c8e:	4620      	mov	r0, r4
 8010c90:	f7fd face 	bl	800e230 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010c94:	b108      	cbz	r0, 8010c9a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x5a>
 8010c96:	4621      	mov	r1, r4
 8010c98:	e020      	b.n	8010cdc <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9c>
 8010c9a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010c9e:	f93a 3005 	ldrsh.w	r3, [sl, r5]
 8010ca2:	429a      	cmp	r2, r3
 8010ca4:	d11e      	bne.n	8010ce4 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8010ca6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010caa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8010cae:	429a      	cmp	r2, r3
 8010cb0:	d118      	bne.n	8010ce4 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8010cb2:	6820      	ldr	r0, [r4, #0]
 8010cb4:	466b      	mov	r3, sp
 8010cb6:	6861      	ldr	r1, [r4, #4]
 8010cb8:	c303      	stmia	r3!, {r0, r1}
 8010cba:	4639      	mov	r1, r7
 8010cbc:	4668      	mov	r0, sp
 8010cbe:	f7f9 fddf 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010cc2:	f8d9 3000 	ldr.w	r3, [r9]
 8010cc6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010cca:	442b      	add	r3, r5
 8010ccc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8010cd0:	4413      	add	r3, r2
 8010cd2:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8010cd6:	4293      	cmp	r3, r2
 8010cd8:	dc04      	bgt.n	8010ce4 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8010cda:	4669      	mov	r1, sp
 8010cdc:	4630      	mov	r0, r6
 8010cde:	f7ff ff93 	bl	8010c08 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>
 8010ce2:	e7b5      	b.n	8010c50 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8010ce4:	f8d8 3000 	ldr.w	r3, [r8]
 8010ce8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010cec:	442b      	add	r3, r5
 8010cee:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010cf2:	4291      	cmp	r1, r2
 8010cf4:	d119      	bne.n	8010d2a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8010cf6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010cfa:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010cfe:	4291      	cmp	r1, r2
 8010d00:	d113      	bne.n	8010d2a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8010d02:	6820      	ldr	r0, [r4, #0]
 8010d04:	466a      	mov	r2, sp
 8010d06:	6861      	ldr	r1, [r4, #4]
 8010d08:	c203      	stmia	r2!, {r0, r1}
 8010d0a:	4619      	mov	r1, r3
 8010d0c:	4668      	mov	r0, sp
 8010d0e:	f7f9 fdb7 	bl	800a880 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010d12:	f8d8 3000 	ldr.w	r3, [r8]
 8010d16:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010d1a:	442b      	add	r3, r5
 8010d1c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8010d20:	4413      	add	r3, r2
 8010d22:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8010d26:	4293      	cmp	r3, r2
 8010d28:	ddd7      	ble.n	8010cda <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9a>
 8010d2a:	4620      	mov	r0, r4
 8010d2c:	f7f9 fa4b 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d30:	b990      	cbnz	r0, 8010d58 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x118>
 8010d32:	88a7      	ldrh	r7, [r4, #4]
 8010d34:	88e3      	ldrh	r3, [r4, #6]
 8010d36:	fb17 f703 	smulbb	r7, r7, r3
 8010d3a:	f8d8 3000 	ldr.w	r3, [r8]
 8010d3e:	441d      	add	r5, r3
 8010d40:	4628      	mov	r0, r5
 8010d42:	f7f9 fa40 	bl	800a1c6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d46:	b948      	cbnz	r0, 8010d5c <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x11c>
 8010d48:	88ab      	ldrh	r3, [r5, #4]
 8010d4a:	88ea      	ldrh	r2, [r5, #6]
 8010d4c:	fb13 f302 	smulbb	r3, r3, r2
 8010d50:	42bb      	cmp	r3, r7
 8010d52:	f6bf af7c 	bge.w	8010c4e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8010d56:	e79e      	b.n	8010c96 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x56>
 8010d58:	2700      	movs	r7, #0
 8010d5a:	e7ee      	b.n	8010d3a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xfa>
 8010d5c:	2300      	movs	r3, #0
 8010d5e:	e7f7      	b.n	8010d50 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x110>
 8010d60:	24006c58 	.word	0x24006c58
 8010d64:	24006c40 	.word	0x24006c40

08010d68 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d6a:	4c24      	ldr	r4, [pc, #144]	; (8010dfc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8010d6c:	6823      	ldr	r3, [r4, #0]
 8010d6e:	2b00      	cmp	r3, #0
 8010d70:	d042      	beq.n	8010df8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010d72:	4a23      	ldr	r2, [pc, #140]	; (8010e00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010d74:	4d23      	ldr	r5, [pc, #140]	; (8010e04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010d76:	8811      	ldrh	r1, [r2, #0]
 8010d78:	f8b5 c000 	ldrh.w	ip, [r5]
 8010d7c:	4822      	ldr	r0, [pc, #136]	; (8010e08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8010d7e:	4461      	add	r1, ip
 8010d80:	1c4a      	adds	r2, r1, #1
 8010d82:	008f      	lsls	r7, r1, #2
 8010d84:	f022 0201 	bic.w	r2, r2, #1
 8010d88:	19de      	adds	r6, r3, r7
 8010d8a:	0412      	lsls	r2, r2, #16
 8010d8c:	6006      	str	r6, [r0, #0]
 8010d8e:	4e1f      	ldr	r6, [pc, #124]	; (8010e0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010d90:	0c12      	lsrs	r2, r2, #16
 8010d92:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8010d96:	19da      	adds	r2, r3, r7
 8010d98:	6032      	str	r2, [r6, #0]
 8010d9a:	220e      	movs	r2, #14
 8010d9c:	fb02 f20c 	mul.w	r2, r2, ip
 8010da0:	3203      	adds	r2, #3
 8010da2:	f022 0203 	bic.w	r2, r2, #3
 8010da6:	443a      	add	r2, r7
 8010da8:	4f19      	ldr	r7, [pc, #100]	; (8010e10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010daa:	4413      	add	r3, r2
 8010dac:	603b      	str	r3, [r7, #0]
 8010dae:	2300      	movs	r3, #0
 8010db0:	4f18      	ldr	r7, [pc, #96]	; (8010e14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010db2:	469c      	mov	ip, r3
 8010db4:	803b      	strh	r3, [r7, #0]
 8010db6:	4f18      	ldr	r7, [pc, #96]	; (8010e18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010db8:	683f      	ldr	r7, [r7, #0]
 8010dba:	1aba      	subs	r2, r7, r2
 8010dbc:	4f17      	ldr	r7, [pc, #92]	; (8010e1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010dbe:	603a      	str	r2, [r7, #0]
 8010dc0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010dc4:	4a16      	ldr	r2, [pc, #88]	; (8010e20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010dc6:	8013      	strh	r3, [r2, #0]
 8010dc8:	428b      	cmp	r3, r1
 8010dca:	d10d      	bne.n	8010de8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010dcc:	882d      	ldrh	r5, [r5, #0]
 8010dce:	2300      	movs	r3, #0
 8010dd0:	6830      	ldr	r0, [r6, #0]
 8010dd2:	240e      	movs	r4, #14
 8010dd4:	429d      	cmp	r5, r3
 8010dd6:	d90f      	bls.n	8010df8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010dd8:	fb04 0203 	mla	r2, r4, r3, r0
 8010ddc:	3301      	adds	r3, #1
 8010dde:	7b11      	ldrb	r1, [r2, #12]
 8010de0:	f36f 1145 	bfc	r1, #5, #1
 8010de4:	7311      	strb	r1, [r2, #12]
 8010de6:	e7f5      	b.n	8010dd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010de8:	6822      	ldr	r2, [r4, #0]
 8010dea:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010dee:	6802      	ldr	r2, [r0, #0]
 8010df0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8010df4:	3301      	adds	r3, #1
 8010df6:	e7e7      	b.n	8010dc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8010df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dfa:	bf00      	nop
 8010dfc:	24006c3c 	.word	0x24006c3c
 8010e00:	24006c58 	.word	0x24006c58
 8010e04:	24006c5c 	.word	0x24006c5c
 8010e08:	24006c50 	.word	0x24006c50
 8010e0c:	24006c40 	.word	0x24006c40
 8010e10:	24006c48 	.word	0x24006c48
 8010e14:	24006c5a 	.word	0x24006c5a
 8010e18:	24006c44 	.word	0x24006c44
 8010e1c:	24006c54 	.word	0x24006c54
 8010e20:	24006c4c 	.word	0x24006c4c

08010e24 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010e24:	4b06      	ldr	r3, [pc, #24]	; (8010e40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8010e26:	681b      	ldr	r3, [r3, #0]
 8010e28:	b943      	cbnz	r3, 8010e3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010e2a:	b139      	cbz	r1, 8010e3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010e2c:	4b05      	ldr	r3, [pc, #20]	; (8010e44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8010e2e:	801a      	strh	r2, [r3, #0]
 8010e30:	4b05      	ldr	r3, [pc, #20]	; (8010e48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8010e32:	6019      	str	r1, [r3, #0]
 8010e34:	4b05      	ldr	r3, [pc, #20]	; (8010e4c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8010e36:	6018      	str	r0, [r3, #0]
 8010e38:	f7ff bf96 	b.w	8010d68 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010e3c:	4770      	bx	lr
 8010e3e:	bf00      	nop
 8010e40:	24006c48 	.word	0x24006c48
 8010e44:	24006c5c 	.word	0x24006c5c
 8010e48:	24006c44 	.word	0x24006c44
 8010e4c:	24006c3c 	.word	0x24006c3c

08010e50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010e50:	b470      	push	{r4, r5, r6}
 8010e52:	4c07      	ldr	r4, [pc, #28]	; (8010e70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010e54:	4605      	mov	r5, r0
 8010e56:	4610      	mov	r0, r2
 8010e58:	9a03      	ldr	r2, [sp, #12]
 8010e5a:	6826      	ldr	r6, [r4, #0]
 8010e5c:	b936      	cbnz	r6, 8010e6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010e5e:	6025      	str	r5, [r4, #0]
 8010e60:	4c04      	ldr	r4, [pc, #16]	; (8010e74 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010e62:	8021      	strh	r1, [r4, #0]
 8010e64:	4619      	mov	r1, r3
 8010e66:	bc70      	pop	{r4, r5, r6}
 8010e68:	f7ff bfdc 	b.w	8010e24 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010e6c:	bc70      	pop	{r4, r5, r6}
 8010e6e:	4770      	bx	lr
 8010e70:	24006c60 	.word	0x24006c60
 8010e74:	24006c58 	.word	0x24006c58

08010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010e78:	4a12      	ldr	r2, [pc, #72]	; (8010ec4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8010e7a:	8803      	ldrh	r3, [r0, #0]
 8010e7c:	8812      	ldrh	r2, [r2, #0]
 8010e7e:	4293      	cmp	r3, r2
 8010e80:	d207      	bcs.n	8010e92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8010e82:	4a11      	ldr	r2, [pc, #68]	; (8010ec8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8010e84:	2114      	movs	r1, #20
 8010e86:	6812      	ldr	r2, [r2, #0]
 8010e88:	fb01 2303 	mla	r3, r1, r3, r2
 8010e8c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8010e90:	4770      	bx	lr
 8010e92:	490e      	ldr	r1, [pc, #56]	; (8010ecc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010e94:	8809      	ldrh	r1, [r1, #0]
 8010e96:	4411      	add	r1, r2
 8010e98:	428b      	cmp	r3, r1
 8010e9a:	da04      	bge.n	8010ea6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8010e9c:	1a9b      	subs	r3, r3, r2
 8010e9e:	4a0c      	ldr	r2, [pc, #48]	; (8010ed0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010ea0:	210e      	movs	r1, #14
 8010ea2:	6812      	ldr	r2, [r2, #0]
 8010ea4:	e7f0      	b.n	8010e88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8010ea6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010eaa:	4293      	cmp	r3, r2
 8010eac:	d108      	bne.n	8010ec0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8010eae:	4b09      	ldr	r3, [pc, #36]	; (8010ed4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010eb0:	781b      	ldrb	r3, [r3, #0]
 8010eb2:	b91b      	cbnz	r3, 8010ebc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010eb4:	4b08      	ldr	r3, [pc, #32]	; (8010ed8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010eb6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010eba:	4770      	bx	lr
 8010ebc:	4b07      	ldr	r3, [pc, #28]	; (8010edc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010ebe:	e7fa      	b.n	8010eb6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8010ec0:	2000      	movs	r0, #0
 8010ec2:	4770      	bx	lr
 8010ec4:	24006c58 	.word	0x24006c58
 8010ec8:	24006c60 	.word	0x24006c60
 8010ecc:	24006c5c 	.word	0x24006c5c
 8010ed0:	24006c40 	.word	0x24006c40
 8010ed4:	24006bd0 	.word	0x24006bd0
 8010ed8:	24006bd2 	.word	0x24006bd2
 8010edc:	24006bd4 	.word	0x24006bd4

08010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010ee0:	4a12      	ldr	r2, [pc, #72]	; (8010f2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8010ee2:	8803      	ldrh	r3, [r0, #0]
 8010ee4:	8812      	ldrh	r2, [r2, #0]
 8010ee6:	4293      	cmp	r3, r2
 8010ee8:	d207      	bcs.n	8010efa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8010eea:	4a11      	ldr	r2, [pc, #68]	; (8010f30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8010eec:	2114      	movs	r1, #20
 8010eee:	6812      	ldr	r2, [r2, #0]
 8010ef0:	fb01 2303 	mla	r3, r1, r3, r2
 8010ef4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8010ef8:	4770      	bx	lr
 8010efa:	490e      	ldr	r1, [pc, #56]	; (8010f34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010efc:	8809      	ldrh	r1, [r1, #0]
 8010efe:	4411      	add	r1, r2
 8010f00:	428b      	cmp	r3, r1
 8010f02:	da04      	bge.n	8010f0e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010f04:	1a9b      	subs	r3, r3, r2
 8010f06:	4a0c      	ldr	r2, [pc, #48]	; (8010f38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010f08:	210e      	movs	r1, #14
 8010f0a:	6812      	ldr	r2, [r2, #0]
 8010f0c:	e7f0      	b.n	8010ef0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8010f0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010f12:	4293      	cmp	r3, r2
 8010f14:	d108      	bne.n	8010f28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010f16:	4b09      	ldr	r3, [pc, #36]	; (8010f3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010f18:	781b      	ldrb	r3, [r3, #0]
 8010f1a:	b91b      	cbnz	r3, 8010f24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8010f1c:	4b08      	ldr	r3, [pc, #32]	; (8010f40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010f1e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010f22:	4770      	bx	lr
 8010f24:	4b07      	ldr	r3, [pc, #28]	; (8010f44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010f26:	e7fa      	b.n	8010f1e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010f28:	2000      	movs	r0, #0
 8010f2a:	4770      	bx	lr
 8010f2c:	24006c58 	.word	0x24006c58
 8010f30:	24006c60 	.word	0x24006c60
 8010f34:	24006c5c 	.word	0x24006c5c
 8010f38:	24006c40 	.word	0x24006c40
 8010f3c:	24006bd0 	.word	0x24006bd0
 8010f40:	24006bd4 	.word	0x24006bd4
 8010f44:	24006bd2 	.word	0x24006bd2

08010f48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010f48:	4a1f      	ldr	r2, [pc, #124]	; (8010fc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8010f4a:	b510      	push	{r4, lr}
 8010f4c:	880b      	ldrh	r3, [r1, #0]
 8010f4e:	8812      	ldrh	r2, [r2, #0]
 8010f50:	4293      	cmp	r3, r2
 8010f52:	d213      	bcs.n	8010f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010f54:	4a1d      	ldr	r2, [pc, #116]	; (8010fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8010f56:	2114      	movs	r1, #20
 8010f58:	6812      	ldr	r2, [r2, #0]
 8010f5a:	fb01 2303 	mla	r3, r1, r3, r2
 8010f5e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010f62:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010f66:	8a1a      	ldrh	r2, [r3, #16]
 8010f68:	8a5b      	ldrh	r3, [r3, #18]
 8010f6a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010f6e:	8004      	strh	r4, [r0, #0]
 8010f70:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010f74:	8041      	strh	r1, [r0, #2]
 8010f76:	8082      	strh	r2, [r0, #4]
 8010f78:	80c3      	strh	r3, [r0, #6]
 8010f7a:	e00e      	b.n	8010f9a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8010f7c:	4914      	ldr	r1, [pc, #80]	; (8010fd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8010f7e:	8809      	ldrh	r1, [r1, #0]
 8010f80:	4411      	add	r1, r2
 8010f82:	428b      	cmp	r3, r1
 8010f84:	da0a      	bge.n	8010f9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8010f86:	1a9b      	subs	r3, r3, r2
 8010f88:	4a12      	ldr	r2, [pc, #72]	; (8010fd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010f8a:	210e      	movs	r1, #14
 8010f8c:	6812      	ldr	r2, [r2, #0]
 8010f8e:	fb01 2303 	mla	r3, r1, r3, r2
 8010f92:	681a      	ldr	r2, [r3, #0]
 8010f94:	6002      	str	r2, [r0, #0]
 8010f96:	685a      	ldr	r2, [r3, #4]
 8010f98:	6042      	str	r2, [r0, #4]
 8010f9a:	bd10      	pop	{r4, pc}
 8010f9c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010fa0:	4293      	cmp	r3, r2
 8010fa2:	d10b      	bne.n	8010fbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8010fa4:	4b0c      	ldr	r3, [pc, #48]	; (8010fd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010fa6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010faa:	4b0c      	ldr	r3, [pc, #48]	; (8010fdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010fac:	8081      	strh	r1, [r0, #4]
 8010fae:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010fb2:	2300      	movs	r3, #0
 8010fb4:	80c2      	strh	r2, [r0, #6]
 8010fb6:	8003      	strh	r3, [r0, #0]
 8010fb8:	8043      	strh	r3, [r0, #2]
 8010fba:	e7ee      	b.n	8010f9a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8010fbc:	2300      	movs	r3, #0
 8010fbe:	8003      	strh	r3, [r0, #0]
 8010fc0:	8043      	strh	r3, [r0, #2]
 8010fc2:	8083      	strh	r3, [r0, #4]
 8010fc4:	e7d8      	b.n	8010f78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010fc6:	bf00      	nop
 8010fc8:	24006c58 	.word	0x24006c58
 8010fcc:	24006c60 	.word	0x24006c60
 8010fd0:	24006c5c 	.word	0x24006c5c
 8010fd4:	24006c40 	.word	0x24006c40
 8010fd8:	24006bcc 	.word	0x24006bcc
 8010fdc:	24006bce 	.word	0x24006bce

08010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010fe0:	4a12      	ldr	r2, [pc, #72]	; (801102c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010fe2:	8803      	ldrh	r3, [r0, #0]
 8010fe4:	8811      	ldrh	r1, [r2, #0]
 8010fe6:	428b      	cmp	r3, r1
 8010fe8:	d20b      	bcs.n	8011002 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010fea:	4a11      	ldr	r2, [pc, #68]	; (8011030 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010fec:	6812      	ldr	r2, [r2, #0]
 8010fee:	b112      	cbz	r2, 8010ff6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010ff0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010ff4:	b9c0      	cbnz	r0, 8011028 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8010ff6:	4a0f      	ldr	r2, [pc, #60]	; (8011034 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010ff8:	6811      	ldr	r1, [r2, #0]
 8010ffa:	2214      	movs	r2, #20
 8010ffc:	4353      	muls	r3, r2
 8010ffe:	58c8      	ldr	r0, [r1, r3]
 8011000:	4770      	bx	lr
 8011002:	4a0d      	ldr	r2, [pc, #52]	; (8011038 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8011004:	8812      	ldrh	r2, [r2, #0]
 8011006:	440a      	add	r2, r1
 8011008:	4293      	cmp	r3, r2
 801100a:	da04      	bge.n	8011016 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801100c:	4a08      	ldr	r2, [pc, #32]	; (8011030 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801100e:	6812      	ldr	r2, [r2, #0]
 8011010:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011014:	4770      	bx	lr
 8011016:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801101a:	4293      	cmp	r3, r2
 801101c:	d103      	bne.n	8011026 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801101e:	4b07      	ldr	r3, [pc, #28]	; (801103c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8011020:	681b      	ldr	r3, [r3, #0]
 8011022:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8011024:	4770      	bx	lr
 8011026:	2000      	movs	r0, #0
 8011028:	4770      	bx	lr
 801102a:	bf00      	nop
 801102c:	24006c58 	.word	0x24006c58
 8011030:	24006c3c 	.word	0x24006c3c
 8011034:	24006c60 	.word	0x24006c60
 8011038:	24006c5c 	.word	0x24006c5c
 801103c:	24006bd8 	.word	0x24006bd8

08011040 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011040:	4b24      	ldr	r3, [pc, #144]	; (80110d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8011042:	8802      	ldrh	r2, [r0, #0]
 8011044:	8818      	ldrh	r0, [r3, #0]
 8011046:	4282      	cmp	r2, r0
 8011048:	d221      	bcs.n	801108e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801104a:	4b23      	ldr	r3, [pc, #140]	; (80110d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801104c:	6819      	ldr	r1, [r3, #0]
 801104e:	2314      	movs	r3, #20
 8011050:	fb03 1302 	mla	r3, r3, r2, r1
 8011054:	6858      	ldr	r0, [r3, #4]
 8011056:	2800      	cmp	r0, #0
 8011058:	d03a      	beq.n	80110d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801105a:	4920      	ldr	r1, [pc, #128]	; (80110dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801105c:	6809      	ldr	r1, [r1, #0]
 801105e:	2900      	cmp	r1, #0
 8011060:	d036      	beq.n	80110d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011062:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8011066:	2900      	cmp	r1, #0
 8011068:	d032      	beq.n	80110d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801106a:	891a      	ldrh	r2, [r3, #8]
 801106c:	8958      	ldrh	r0, [r3, #10]
 801106e:	4350      	muls	r0, r2
 8011070:	7c5a      	ldrb	r2, [r3, #17]
 8011072:	7cdb      	ldrb	r3, [r3, #19]
 8011074:	0952      	lsrs	r2, r2, #5
 8011076:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801107a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801107e:	2b0b      	cmp	r3, #11
 8011080:	bf18      	it	ne
 8011082:	0040      	lslne	r0, r0, #1
 8011084:	3003      	adds	r0, #3
 8011086:	f020 0003 	bic.w	r0, r0, #3
 801108a:	4408      	add	r0, r1
 801108c:	4770      	bx	lr
 801108e:	4b14      	ldr	r3, [pc, #80]	; (80110e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011090:	881b      	ldrh	r3, [r3, #0]
 8011092:	4403      	add	r3, r0
 8011094:	429a      	cmp	r2, r3
 8011096:	da1a      	bge.n	80110ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011098:	4b12      	ldr	r3, [pc, #72]	; (80110e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801109a:	1a10      	subs	r0, r2, r0
 801109c:	210e      	movs	r1, #14
 801109e:	681b      	ldr	r3, [r3, #0]
 80110a0:	fb01 3000 	mla	r0, r1, r0, r3
 80110a4:	7b03      	ldrb	r3, [r0, #12]
 80110a6:	f003 031f 	and.w	r3, r3, #31
 80110aa:	2b0b      	cmp	r3, #11
 80110ac:	d10b      	bne.n	80110c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80110ae:	8903      	ldrh	r3, [r0, #8]
 80110b0:	8940      	ldrh	r0, [r0, #10]
 80110b2:	4358      	muls	r0, r3
 80110b4:	4b09      	ldr	r3, [pc, #36]	; (80110dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80110b6:	3003      	adds	r0, #3
 80110b8:	6819      	ldr	r1, [r3, #0]
 80110ba:	f020 0303 	bic.w	r3, r0, #3
 80110be:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80110c2:	4418      	add	r0, r3
 80110c4:	4770      	bx	lr
 80110c6:	2b0d      	cmp	r3, #13
 80110c8:	d101      	bne.n	80110ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80110ca:	300d      	adds	r0, #13
 80110cc:	4770      	bx	lr
 80110ce:	2000      	movs	r0, #0
 80110d0:	4770      	bx	lr
 80110d2:	bf00      	nop
 80110d4:	24006c58 	.word	0x24006c58
 80110d8:	24006c60 	.word	0x24006c60
 80110dc:	24006c3c 	.word	0x24006c3c
 80110e0:	24006c5c 	.word	0x24006c5c
 80110e4:	24006c40 	.word	0x24006c40

080110e8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80110e8:	4a17      	ldr	r2, [pc, #92]	; (8011148 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80110ea:	b510      	push	{r4, lr}
 80110ec:	8803      	ldrh	r3, [r0, #0]
 80110ee:	8812      	ldrh	r2, [r2, #0]
 80110f0:	4293      	cmp	r3, r2
 80110f2:	d20c      	bcs.n	801110e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80110f4:	4a15      	ldr	r2, [pc, #84]	; (801114c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80110f6:	2114      	movs	r1, #20
 80110f8:	6812      	ldr	r2, [r2, #0]
 80110fa:	fb01 2303 	mla	r3, r1, r3, r2
 80110fe:	7c58      	ldrb	r0, [r3, #17]
 8011100:	0942      	lsrs	r2, r0, #5
 8011102:	7cd8      	ldrb	r0, [r3, #19]
 8011104:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8011108:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801110c:	bd10      	pop	{r4, pc}
 801110e:	4910      	ldr	r1, [pc, #64]	; (8011150 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011110:	8809      	ldrh	r1, [r1, #0]
 8011112:	4411      	add	r1, r2
 8011114:	428b      	cmp	r3, r1
 8011116:	da09      	bge.n	801112c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8011118:	1a9b      	subs	r3, r3, r2
 801111a:	4a0e      	ldr	r2, [pc, #56]	; (8011154 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801111c:	210e      	movs	r1, #14
 801111e:	6812      	ldr	r2, [r2, #0]
 8011120:	fb01 2303 	mla	r3, r1, r3, r2
 8011124:	7b18      	ldrb	r0, [r3, #12]
 8011126:	f000 001f 	and.w	r0, r0, #31
 801112a:	e7ef      	b.n	801110c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801112c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011130:	4293      	cmp	r3, r2
 8011132:	d106      	bne.n	8011142 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8011134:	f7f1 f99a 	bl	800246c <_ZN8touchgfx3HAL3lcdEv>
 8011138:	6803      	ldr	r3, [r0, #0]
 801113a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801113e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011140:	4718      	bx	r3
 8011142:	2000      	movs	r0, #0
 8011144:	e7e2      	b.n	801110c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8011146:	bf00      	nop
 8011148:	24006c58 	.word	0x24006c58
 801114c:	24006c60 	.word	0x24006c60
 8011150:	24006c5c 	.word	0x24006c5c
 8011154:	24006c40 	.word	0x24006c40

08011158 <_ZNK8touchgfx8LCD24bpp8bitDepthEv>:
 8011158:	2018      	movs	r0, #24
 801115a:	4770      	bx	lr

0801115c <_ZNK8touchgfx8LCD24bpp17framebufferFormatEv>:
 801115c:	2001      	movs	r0, #1
 801115e:	4770      	bx	lr

08011160 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv>:
 8011160:	4b02      	ldr	r3, [pc, #8]	; (801116c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0xc>)
 8011162:	8818      	ldrh	r0, [r3, #0]
 8011164:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8011168:	b280      	uxth	r0, r0
 801116a:	4770      	bx	lr
 801116c:	24006bd2 	.word	0x24006bd2

08011170 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011170:	2bff      	cmp	r3, #255	; 0xff
 8011172:	d040      	beq.n	80111f6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8011174:	2a2c      	cmp	r2, #44	; 0x2c
 8011176:	d02a      	beq.n	80111ce <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5e>
 8011178:	d80f      	bhi.n	801119a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2a>
 801117a:	2a08      	cmp	r2, #8
 801117c:	d037      	beq.n	80111ee <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801117e:	d805      	bhi.n	801118c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1c>
 8011180:	2a04      	cmp	r2, #4
 8011182:	d032      	beq.n	80111ea <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a>
 8011184:	2a05      	cmp	r2, #5
 8011186:	d02e      	beq.n	80111e6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011188:	2000      	movs	r0, #0
 801118a:	4770      	bx	lr
 801118c:	2a0a      	cmp	r2, #10
 801118e:	d02e      	beq.n	80111ee <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011190:	d301      	bcc.n	8011196 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x26>
 8011192:	2a0b      	cmp	r2, #11
 8011194:	d1f8      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8011196:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8011198:	4770      	bx	lr
 801119a:	2a30      	cmp	r2, #48	; 0x30
 801119c:	d029      	beq.n	80111f2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801119e:	d808      	bhi.n	80111b2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x42>
 80111a0:	2a2e      	cmp	r2, #46	; 0x2e
 80111a2:	684b      	ldr	r3, [r1, #4]
 80111a4:	d01a      	beq.n	80111dc <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 80111a6:	d90b      	bls.n	80111c0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x50>
 80111a8:	781b      	ldrb	r3, [r3, #0]
 80111aa:	2b00      	cmp	r3, #0
 80111ac:	d1ec      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80111ae:	6a00      	ldr	r0, [r0, #32]
 80111b0:	4770      	bx	lr
 80111b2:	2a32      	cmp	r2, #50	; 0x32
 80111b4:	d01d      	beq.n	80111f2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80111b6:	d301      	bcc.n	80111bc <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c>
 80111b8:	2a33      	cmp	r2, #51	; 0x33
 80111ba:	d1e5      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80111bc:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80111be:	4770      	bx	lr
 80111c0:	781b      	ldrb	r3, [r3, #0]
 80111c2:	2b00      	cmp	r3, #0
 80111c4:	d0f3      	beq.n	80111ae <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3e>
 80111c6:	2b01      	cmp	r3, #1
 80111c8:	d1de      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80111ca:	6900      	ldr	r0, [r0, #16]
 80111cc:	4770      	bx	lr
 80111ce:	684b      	ldr	r3, [r1, #4]
 80111d0:	781b      	ldrb	r3, [r3, #0]
 80111d2:	b133      	cbz	r3, 80111e2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80111d4:	2b01      	cmp	r3, #1
 80111d6:	d1d7      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80111d8:	6880      	ldr	r0, [r0, #8]
 80111da:	4770      	bx	lr
 80111dc:	781b      	ldrb	r3, [r3, #0]
 80111de:	2b00      	cmp	r3, #0
 80111e0:	d1d2      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80111e2:	6980      	ldr	r0, [r0, #24]
 80111e4:	4770      	bx	lr
 80111e6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80111e8:	4770      	bx	lr
 80111ea:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80111ec:	4770      	bx	lr
 80111ee:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80111f0:	4770      	bx	lr
 80111f2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80111f4:	4770      	bx	lr
 80111f6:	2a2c      	cmp	r2, #44	; 0x2c
 80111f8:	d02a      	beq.n	8011250 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe0>
 80111fa:	d80f      	bhi.n	801121c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xac>
 80111fc:	2a08      	cmp	r2, #8
 80111fe:	d035      	beq.n	801126c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfc>
 8011200:	d805      	bhi.n	801120e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011202:	2a04      	cmp	r2, #4
 8011204:	d030      	beq.n	8011268 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf8>
 8011206:	2a05      	cmp	r2, #5
 8011208:	d1be      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801120a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801120c:	4770      	bx	lr
 801120e:	2a0a      	cmp	r2, #10
 8011210:	d02c      	beq.n	801126c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfc>
 8011212:	d301      	bcc.n	8011218 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 8011214:	2a0b      	cmp	r2, #11
 8011216:	d1b7      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8011218:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801121a:	4770      	bx	lr
 801121c:	2a30      	cmp	r2, #48	; 0x30
 801121e:	d027      	beq.n	8011270 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8011220:	d808      	bhi.n	8011234 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc4>
 8011222:	2a2e      	cmp	r2, #46	; 0x2e
 8011224:	684b      	ldr	r3, [r1, #4]
 8011226:	d01a      	beq.n	801125e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xee>
 8011228:	d90b      	bls.n	8011242 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd2>
 801122a:	781b      	ldrb	r3, [r3, #0]
 801122c:	2b00      	cmp	r3, #0
 801122e:	d1ab      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8011230:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8011232:	4770      	bx	lr
 8011234:	2a32      	cmp	r2, #50	; 0x32
 8011236:	d01b      	beq.n	8011270 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8011238:	d301      	bcc.n	801123e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xce>
 801123a:	2a33      	cmp	r2, #51	; 0x33
 801123c:	d1a4      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801123e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011240:	4770      	bx	lr
 8011242:	781b      	ldrb	r3, [r3, #0]
 8011244:	2b00      	cmp	r3, #0
 8011246:	d0f3      	beq.n	8011230 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8011248:	2b01      	cmp	r3, #1
 801124a:	d19d      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801124c:	6940      	ldr	r0, [r0, #20]
 801124e:	4770      	bx	lr
 8011250:	684b      	ldr	r3, [r1, #4]
 8011252:	781b      	ldrb	r3, [r3, #0]
 8011254:	b133      	cbz	r3, 8011264 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf4>
 8011256:	2b01      	cmp	r3, #1
 8011258:	d196      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801125a:	68c0      	ldr	r0, [r0, #12]
 801125c:	4770      	bx	lr
 801125e:	781b      	ldrb	r3, [r3, #0]
 8011260:	2b00      	cmp	r3, #0
 8011262:	d191      	bne.n	8011188 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8011264:	69c0      	ldr	r0, [r0, #28]
 8011266:	4770      	bx	lr
 8011268:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801126a:	4770      	bx	lr
 801126c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801126e:	4770      	bx	lr
 8011270:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011272:	4770      	bx	lr

08011274 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011278:	b085      	sub	sp, #20
 801127a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801127c:	9203      	str	r2, [sp, #12]
 801127e:	6870      	ldr	r0, [r6, #4]
 8011280:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8011284:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011288:	9101      	str	r1, [sp, #4]
 801128a:	fa1f f885 	uxth.w	r8, r5
 801128e:	43ed      	mvns	r5, r5
 8011290:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011294:	b2ed      	uxtb	r5, r5
 8011296:	fb00 2404 	mla	r4, r0, r4, r2
 801129a:	6832      	ldr	r2, [r6, #0]
 801129c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80112a0:	4414      	add	r4, r2
 80112a2:	f8dc 2000 	ldr.w	r2, [ip]
 80112a6:	9202      	str	r2, [sp, #8]
 80112a8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80112ac:	f102 0e04 	add.w	lr, r2, #4
 80112b0:	9a01      	ldr	r2, [sp, #4]
 80112b2:	2a00      	cmp	r2, #0
 80112b4:	dc03      	bgt.n	80112be <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80112b6:	9a03      	ldr	r2, [sp, #12]
 80112b8:	2a00      	cmp	r2, #0
 80112ba:	f340 8116 	ble.w	80114ea <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80112be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80112c0:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 80112c4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80112c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80112ca:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 80112ce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80112d2:	2b00      	cmp	r3, #0
 80112d4:	dd0e      	ble.n	80112f4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80112d6:	1406      	asrs	r6, r0, #16
 80112d8:	d405      	bmi.n	80112e6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80112da:	4556      	cmp	r6, sl
 80112dc:	da03      	bge.n	80112e6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80112de:	1416      	asrs	r6, r2, #16
 80112e0:	d401      	bmi.n	80112e6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80112e2:	454e      	cmp	r6, r9
 80112e4:	db07      	blt.n	80112f6 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80112e6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80112e8:	3b01      	subs	r3, #1
 80112ea:	3403      	adds	r4, #3
 80112ec:	4430      	add	r0, r6
 80112ee:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80112f0:	4432      	add	r2, r6
 80112f2:	e7ee      	b.n	80112d2 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80112f4:	d063      	beq.n	80113be <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80112f6:	1e5e      	subs	r6, r3, #1
 80112f8:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80112fa:	fb07 0706 	mla	r7, r7, r6, r0
 80112fe:	143f      	asrs	r7, r7, #16
 8011300:	d454      	bmi.n	80113ac <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8011302:	4557      	cmp	r7, sl
 8011304:	da52      	bge.n	80113ac <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8011306:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8011308:	fb07 2606 	mla	r6, r7, r6, r2
 801130c:	1436      	asrs	r6, r6, #16
 801130e:	d44d      	bmi.n	80113ac <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8011310:	454e      	cmp	r6, r9
 8011312:	da4b      	bge.n	80113ac <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8011314:	1ce6      	adds	r6, r4, #3
 8011316:	4699      	mov	r9, r3
 8011318:	f1b9 0f00 	cmp.w	r9, #0
 801131c:	f106 0603 	add.w	r6, r6, #3
 8011320:	dd48      	ble.n	80113b4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8011322:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8011326:	1417      	asrs	r7, r2, #16
 8011328:	9902      	ldr	r1, [sp, #8]
 801132a:	ea4f 4a20 	mov.w	sl, r0, asr #16
 801132e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011332:	fb0b 1707 	mla	r7, fp, r7, r1
 8011336:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 801133a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801133c:	f817 700a 	ldrb.w	r7, [r7, sl]
 8011340:	fb1b fb05 	smulbb	fp, fp, r5
 8011344:	4408      	add	r0, r1
 8011346:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011348:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801134c:	440a      	add	r2, r1
 801134e:	eb0e 0a07 	add.w	sl, lr, r7
 8011352:	f81e 7007 	ldrb.w	r7, [lr, r7]
 8011356:	fb07 b708 	mla	r7, r7, r8, fp
 801135a:	b2bf      	uxth	r7, r7
 801135c:	f107 0b01 	add.w	fp, r7, #1
 8011360:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011364:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8011368:	fb1b fb05 	smulbb	fp, fp, r5
 801136c:	123f      	asrs	r7, r7, #8
 801136e:	f806 7c06 	strb.w	r7, [r6, #-6]
 8011372:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8011376:	fb07 b708 	mla	r7, r7, r8, fp
 801137a:	b2bf      	uxth	r7, r7
 801137c:	f107 0b01 	add.w	fp, r7, #1
 8011380:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011384:	123f      	asrs	r7, r7, #8
 8011386:	f806 7c05 	strb.w	r7, [r6, #-5]
 801138a:	f89a 7002 	ldrb.w	r7, [sl, #2]
 801138e:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8011392:	fb1a fa05 	smulbb	sl, sl, r5
 8011396:	fb07 a708 	mla	r7, r7, r8, sl
 801139a:	b2bf      	uxth	r7, r7
 801139c:	f107 0a01 	add.w	sl, r7, #1
 80113a0:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 80113a4:	123f      	asrs	r7, r7, #8
 80113a6:	f806 7c04 	strb.w	r7, [r6, #-4]
 80113aa:	e7b5      	b.n	8011318 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80113ac:	2700      	movs	r7, #0
 80113ae:	1bde      	subs	r6, r3, r7
 80113b0:	2e00      	cmp	r6, #0
 80113b2:	dc42      	bgt.n	801143a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80113b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113b8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80113bc:	441c      	add	r4, r3
 80113be:	9b01      	ldr	r3, [sp, #4]
 80113c0:	2b00      	cmp	r3, #0
 80113c2:	f340 8092 	ble.w	80114ea <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80113c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80113ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113d4:	eef0 6a62 	vmov.f32	s13, s5
 80113d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80113dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80113e4:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80113e8:	eef0 6a43 	vmov.f32	s13, s6
 80113ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80113f0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80113f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011400:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011404:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011408:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801140c:	ee12 2a90 	vmov	r2, s5
 8011410:	eef0 2a47 	vmov.f32	s5, s14
 8011414:	fb92 f3f3 	sdiv	r3, r2, r3
 8011418:	ee13 2a10 	vmov	r2, s6
 801141c:	9311      	str	r3, [sp, #68]	; 0x44
 801141e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011420:	eeb0 3a67 	vmov.f32	s6, s15
 8011424:	fb92 f3f3 	sdiv	r3, r2, r3
 8011428:	9312      	str	r3, [sp, #72]	; 0x48
 801142a:	9b01      	ldr	r3, [sp, #4]
 801142c:	9a03      	ldr	r2, [sp, #12]
 801142e:	3b01      	subs	r3, #1
 8011430:	9301      	str	r3, [sp, #4]
 8011432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011434:	bf08      	it	eq
 8011436:	4613      	moveq	r3, r2
 8011438:	e73a      	b.n	80112b0 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801143a:	ea5f 4a20 	movs.w	sl, r0, asr #16
 801143e:	d44e      	bmi.n	80114de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8011440:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011444:	4556      	cmp	r6, sl
 8011446:	dd4a      	ble.n	80114de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8011448:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801144c:	d447      	bmi.n	80114de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801144e:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8011452:	4559      	cmp	r1, fp
 8011454:	dd43      	ble.n	80114de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8011456:	fa0f f986 	sxth.w	r9, r6
 801145a:	9902      	ldr	r1, [sp, #8]
 801145c:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8011460:	fb0b 1909 	mla	r9, fp, r9, r1
 8011464:	f814 b006 	ldrb.w	fp, [r4, r6]
 8011468:	f819 900a 	ldrb.w	r9, [r9, sl]
 801146c:	fb1b fb05 	smulbb	fp, fp, r5
 8011470:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8011474:	eb0e 0a09 	add.w	sl, lr, r9
 8011478:	f81e 9009 	ldrb.w	r9, [lr, r9]
 801147c:	fb09 b908 	mla	r9, r9, r8, fp
 8011480:	fa1f f989 	uxth.w	r9, r9
 8011484:	f109 0b01 	add.w	fp, r9, #1
 8011488:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 801148c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011490:	f804 9006 	strb.w	r9, [r4, r6]
 8011494:	4426      	add	r6, r4
 8011496:	f89a 9001 	ldrb.w	r9, [sl, #1]
 801149a:	f896 b001 	ldrb.w	fp, [r6, #1]
 801149e:	fb1b fb05 	smulbb	fp, fp, r5
 80114a2:	fb09 b908 	mla	r9, r9, r8, fp
 80114a6:	fa1f f989 	uxth.w	r9, r9
 80114aa:	f109 0b01 	add.w	fp, r9, #1
 80114ae:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80114b2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80114b6:	f886 9001 	strb.w	r9, [r6, #1]
 80114ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80114be:	f896 a002 	ldrb.w	sl, [r6, #2]
 80114c2:	fb1a fa05 	smulbb	sl, sl, r5
 80114c6:	fb09 a908 	mla	r9, r9, r8, sl
 80114ca:	fa1f f989 	uxth.w	r9, r9
 80114ce:	f109 0a01 	add.w	sl, r9, #1
 80114d2:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 80114d6:	ea4f 2929 	mov.w	r9, r9, asr #8
 80114da:	f886 9002 	strb.w	r9, [r6, #2]
 80114de:	9911      	ldr	r1, [sp, #68]	; 0x44
 80114e0:	3701      	adds	r7, #1
 80114e2:	4408      	add	r0, r1
 80114e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80114e6:	440a      	add	r2, r1
 80114e8:	e761      	b.n	80113ae <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80114ea:	b005      	add	sp, #20
 80114ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080114f0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80114f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80114f6:	4693      	mov	fp, r2
 80114f8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80114fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114fe:	6868      	ldr	r0, [r5, #4]
 8011500:	6877      	ldr	r7, [r6, #4]
 8011502:	9100      	str	r1, [sp, #0]
 8011504:	3704      	adds	r7, #4
 8011506:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 801150a:	e9dd 8e0f 	ldrd	r8, lr, [sp, #60]	; 0x3c
 801150e:	fb00 2404 	mla	r4, r0, r4, r2
 8011512:	682a      	ldr	r2, [r5, #0]
 8011514:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011518:	4414      	add	r4, r2
 801151a:	6832      	ldr	r2, [r6, #0]
 801151c:	9201      	str	r2, [sp, #4]
 801151e:	9a00      	ldr	r2, [sp, #0]
 8011520:	2a00      	cmp	r2, #0
 8011522:	dc03      	bgt.n	801152c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011524:	f1bb 0f00 	cmp.w	fp, #0
 8011528:	f340 80bc 	ble.w	80116a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801152c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801152e:	f9b6 a008 	ldrsh.w	sl, [r6, #8]
 8011532:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011536:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011538:	f9b6 900c 	ldrsh.w	r9, [r6, #12]
 801153c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011540:	2b00      	cmp	r3, #0
 8011542:	dd0c      	ble.n	801155e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011544:	1405      	asrs	r5, r0, #16
 8011546:	d405      	bmi.n	8011554 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011548:	4555      	cmp	r5, sl
 801154a:	da03      	bge.n	8011554 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801154c:	1415      	asrs	r5, r2, #16
 801154e:	d401      	bmi.n	8011554 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011550:	454d      	cmp	r5, r9
 8011552:	db05      	blt.n	8011560 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011554:	4440      	add	r0, r8
 8011556:	4472      	add	r2, lr
 8011558:	3b01      	subs	r3, #1
 801155a:	3403      	adds	r4, #3
 801155c:	e7f0      	b.n	8011540 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801155e:	d03f      	beq.n	80115e0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 8011560:	1e5d      	subs	r5, r3, #1
 8011562:	fb08 0c05 	mla	ip, r8, r5, r0
 8011566:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801156a:	d42e      	bmi.n	80115ca <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801156c:	45d4      	cmp	ip, sl
 801156e:	da2c      	bge.n	80115ca <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8011570:	fb0e 2505 	mla	r5, lr, r5, r2
 8011574:	142d      	asrs	r5, r5, #16
 8011576:	d428      	bmi.n	80115ca <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8011578:	454d      	cmp	r5, r9
 801157a:	da26      	bge.n	80115ca <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801157c:	1ce5      	adds	r5, r4, #3
 801157e:	469c      	mov	ip, r3
 8011580:	f1bc 0f00 	cmp.w	ip, #0
 8011584:	f105 0503 	add.w	r5, r5, #3
 8011588:	dd25      	ble.n	80115d6 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe6>
 801158a:	f9b6 1008 	ldrsh.w	r1, [r6, #8]
 801158e:	ea4f 4922 	mov.w	r9, r2, asr #16
 8011592:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011596:	4472      	add	r2, lr
 8011598:	468a      	mov	sl, r1
 801159a:	9901      	ldr	r1, [sp, #4]
 801159c:	fb0a 1909 	mla	r9, sl, r9, r1
 80115a0:	1401      	asrs	r1, r0, #16
 80115a2:	4440      	add	r0, r8
 80115a4:	f819 9001 	ldrb.w	r9, [r9, r1]
 80115a8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80115ac:	eb07 0a09 	add.w	sl, r7, r9
 80115b0:	f817 9009 	ldrb.w	r9, [r7, r9]
 80115b4:	f805 9c06 	strb.w	r9, [r5, #-6]
 80115b8:	f89a 9001 	ldrb.w	r9, [sl, #1]
 80115bc:	f805 9c05 	strb.w	r9, [r5, #-5]
 80115c0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80115c4:	f805 9c04 	strb.w	r9, [r5, #-4]
 80115c8:	e7da      	b.n	8011580 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80115ca:	2500      	movs	r5, #0
 80115cc:	eba3 0c05 	sub.w	ip, r3, r5
 80115d0:	f1bc 0f00 	cmp.w	ip, #0
 80115d4:	dc3b      	bgt.n	801164e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80115d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115da:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80115de:	441c      	add	r4, r3
 80115e0:	9b00      	ldr	r3, [sp, #0]
 80115e2:	2b00      	cmp	r3, #0
 80115e4:	dd5e      	ble.n	80116a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80115e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80115ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115f0:	eeb0 6a62 	vmov.f32	s12, s5
 80115f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011600:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8011604:	eeb0 6a43 	vmov.f32	s12, s6
 8011608:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801160c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8011610:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011614:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011618:	ee77 2a62 	vsub.f32	s5, s14, s5
 801161c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011620:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011624:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011628:	ee12 2a90 	vmov	r2, s5
 801162c:	eef0 2a47 	vmov.f32	s5, s14
 8011630:	fb92 f8f3 	sdiv	r8, r2, r3
 8011634:	ee13 2a10 	vmov	r2, s6
 8011638:	eeb0 3a67 	vmov.f32	s6, s15
 801163c:	fb92 fef3 	sdiv	lr, r2, r3
 8011640:	9b00      	ldr	r3, [sp, #0]
 8011642:	3b01      	subs	r3, #1
 8011644:	9300      	str	r3, [sp, #0]
 8011646:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011648:	bf08      	it	eq
 801164a:	465b      	moveq	r3, fp
 801164c:	e767      	b.n	801151e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801164e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011652:	d423      	bmi.n	801169c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8011654:	f8d6 c008 	ldr.w	ip, [r6, #8]
 8011658:	45cc      	cmp	ip, r9
 801165a:	dd1f      	ble.n	801169c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801165c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011660:	d41c      	bmi.n	801169c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8011662:	68f1      	ldr	r1, [r6, #12]
 8011664:	4551      	cmp	r1, sl
 8011666:	dd19      	ble.n	801169c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8011668:	fa0f fc8c 	sxth.w	ip, ip
 801166c:	9901      	ldr	r1, [sp, #4]
 801166e:	fb0a 1c0c 	mla	ip, sl, ip, r1
 8011672:	f81c c009 	ldrb.w	ip, [ip, r9]
 8011676:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801167a:	f817 a00c 	ldrb.w	sl, [r7, ip]
 801167e:	eb07 090c 	add.w	r9, r7, ip
 8011682:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
 8011686:	f804 a00c 	strb.w	sl, [r4, ip]
 801168a:	44a4      	add	ip, r4
 801168c:	f899 a001 	ldrb.w	sl, [r9, #1]
 8011690:	f88c a001 	strb.w	sl, [ip, #1]
 8011694:	f899 9002 	ldrb.w	r9, [r9, #2]
 8011698:	f88c 9002 	strb.w	r9, [ip, #2]
 801169c:	4440      	add	r0, r8
 801169e:	4472      	add	r2, lr
 80116a0:	3501      	adds	r5, #1
 80116a2:	e793      	b.n	80115cc <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xdc>
 80116a4:	b003      	add	sp, #12
 80116a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116aa <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80116aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116ae:	b085      	sub	sp, #20
 80116b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80116b6:	9202      	str	r2, [sp, #8]
 80116b8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80116bc:	6860      	ldr	r0, [r4, #4]
 80116be:	9203      	str	r2, [sp, #12]
 80116c0:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80116c4:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 80116c8:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 80116cc:	fb00 2505 	mla	r5, r0, r5, r2
 80116d0:	6822      	ldr	r2, [r4, #0]
 80116d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80116d6:	4415      	add	r5, r2
 80116d8:	f8dc 2000 	ldr.w	r2, [ip]
 80116dc:	9200      	str	r2, [sp, #0]
 80116de:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80116e2:	3204      	adds	r2, #4
 80116e4:	9201      	str	r2, [sp, #4]
 80116e6:	2900      	cmp	r1, #0
 80116e8:	dc03      	bgt.n	80116f2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80116ea:	9a02      	ldr	r2, [sp, #8]
 80116ec:	2a00      	cmp	r2, #0
 80116ee:	f340 8127 	ble.w	8011940 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80116f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80116f4:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80116f8:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80116fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80116fe:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8011702:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011706:	2b00      	cmp	r3, #0
 8011708:	dd0d      	ble.n	8011726 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801170a:	1422      	asrs	r2, r4, #16
 801170c:	d405      	bmi.n	801171a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801170e:	4542      	cmp	r2, r8
 8011710:	da03      	bge.n	801171a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011712:	1402      	asrs	r2, r0, #16
 8011714:	d401      	bmi.n	801171a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011716:	42ba      	cmp	r2, r7
 8011718:	db06      	blt.n	8011728 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801171a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801171c:	4474      	add	r4, lr
 801171e:	3b01      	subs	r3, #1
 8011720:	3503      	adds	r5, #3
 8011722:	4410      	add	r0, r2
 8011724:	e7ef      	b.n	8011706 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011726:	d075      	beq.n	8011814 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8011728:	1e5a      	subs	r2, r3, #1
 801172a:	fb0e 4602 	mla	r6, lr, r2, r4
 801172e:	1436      	asrs	r6, r6, #16
 8011730:	d465      	bmi.n	80117fe <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011732:	4546      	cmp	r6, r8
 8011734:	da63      	bge.n	80117fe <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011736:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011738:	fb06 0202 	mla	r2, r6, r2, r0
 801173c:	1412      	asrs	r2, r2, #16
 801173e:	d45e      	bmi.n	80117fe <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011740:	42ba      	cmp	r2, r7
 8011742:	da5c      	bge.n	80117fe <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011744:	1cef      	adds	r7, r5, #3
 8011746:	4699      	mov	r9, r3
 8011748:	f1b9 0f00 	cmp.w	r9, #0
 801174c:	dd5d      	ble.n	801180a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801174e:	1402      	asrs	r2, r0, #16
 8011750:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8011754:	1426      	asrs	r6, r4, #16
 8011756:	4692      	mov	sl, r2
 8011758:	9a00      	ldr	r2, [sp, #0]
 801175a:	fb08 220a 	mla	r2, r8, sl, r2
 801175e:	5d92      	ldrb	r2, [r2, r6]
 8011760:	9e01      	ldr	r6, [sp, #4]
 8011762:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8011766:	ea5f 6816 	movs.w	r8, r6, lsr #24
 801176a:	d041      	beq.n	80117f0 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801176c:	9a03      	ldr	r2, [sp, #12]
 801176e:	fa5f fb86 	uxtb.w	fp, r6
 8011772:	fb02 f808 	mul.w	r8, r2, r8
 8011776:	f108 0201 	add.w	r2, r8, #1
 801177a:	eb02 2228 	add.w	r2, r2, r8, asr #8
 801177e:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 8011782:	1212      	asrs	r2, r2, #8
 8011784:	fa1f fa82 	uxth.w	sl, r2
 8011788:	43d2      	mvns	r2, r2
 801178a:	fb1b fb0a 	smulbb	fp, fp, sl
 801178e:	b2d2      	uxtb	r2, r2
 8011790:	fb08 b802 	mla	r8, r8, r2, fp
 8011794:	fa1f f888 	uxth.w	r8, r8
 8011798:	f108 0b01 	add.w	fp, r8, #1
 801179c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80117a0:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 80117a4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80117a8:	fb1b fb0a 	smulbb	fp, fp, sl
 80117ac:	ea4f 2828 	mov.w	r8, r8, asr #8
 80117b0:	fb16 fa0a 	smulbb	sl, r6, sl
 80117b4:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 80117b8:	f807 8c03 	strb.w	r8, [r7, #-3]
 80117bc:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 80117c0:	fb06 aa02 	mla	sl, r6, r2, sl
 80117c4:	fb08 b802 	mla	r8, r8, r2, fp
 80117c8:	fa1f fa8a 	uxth.w	sl, sl
 80117cc:	fa1f f888 	uxth.w	r8, r8
 80117d0:	f10a 0601 	add.w	r6, sl, #1
 80117d4:	f108 0b01 	add.w	fp, r8, #1
 80117d8:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 80117dc:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80117e0:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80117e4:	ea4f 2828 	mov.w	r8, r8, asr #8
 80117e8:	f807 ac01 	strb.w	sl, [r7, #-1]
 80117ec:	f807 8c02 	strb.w	r8, [r7, #-2]
 80117f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80117f2:	4474      	add	r4, lr
 80117f4:	3703      	adds	r7, #3
 80117f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80117fa:	4410      	add	r0, r2
 80117fc:	e7a4      	b.n	8011748 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80117fe:	f04f 0800 	mov.w	r8, #0
 8011802:	eba3 0208 	sub.w	r2, r3, r8
 8011806:	2a00      	cmp	r2, #0
 8011808:	dc3b      	bgt.n	8011882 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801180a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801180e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011812:	441d      	add	r5, r3
 8011814:	2900      	cmp	r1, #0
 8011816:	f340 8093 	ble.w	8011940 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801181a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801181e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011820:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011824:	3901      	subs	r1, #1
 8011826:	eeb0 6a62 	vmov.f32	s12, s5
 801182a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801182e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011836:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801183a:	eeb0 6a43 	vmov.f32	s12, s6
 801183e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011842:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011846:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801184a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801184e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011852:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011856:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801185a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801185e:	ee12 2a90 	vmov	r2, s5
 8011862:	eef0 2a47 	vmov.f32	s5, s14
 8011866:	fb92 fef3 	sdiv	lr, r2, r3
 801186a:	ee13 2a10 	vmov	r2, s6
 801186e:	eeb0 3a67 	vmov.f32	s6, s15
 8011872:	fb92 f3f3 	sdiv	r3, r2, r3
 8011876:	9a02      	ldr	r2, [sp, #8]
 8011878:	9312      	str	r3, [sp, #72]	; 0x48
 801187a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801187c:	bf08      	it	eq
 801187e:	4613      	moveq	r3, r2
 8011880:	e731      	b.n	80116e6 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011882:	1427      	asrs	r7, r4, #16
 8011884:	d456      	bmi.n	8011934 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8011886:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801188a:	42be      	cmp	r6, r7
 801188c:	dd52      	ble.n	8011934 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801188e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011892:	d44f      	bmi.n	8011934 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8011894:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011898:	454a      	cmp	r2, r9
 801189a:	dd4b      	ble.n	8011934 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801189c:	9a00      	ldr	r2, [sp, #0]
 801189e:	b236      	sxth	r6, r6
 80118a0:	fb09 2606 	mla	r6, r9, r6, r2
 80118a4:	5df2      	ldrb	r2, [r6, r7]
 80118a6:	9e01      	ldr	r6, [sp, #4]
 80118a8:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 80118ac:	0e3a      	lsrs	r2, r7, #24
 80118ae:	d041      	beq.n	8011934 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80118b0:	9e03      	ldr	r6, [sp, #12]
 80118b2:	fa5f fb87 	uxtb.w	fp, r7
 80118b6:	4372      	muls	r2, r6
 80118b8:	1c56      	adds	r6, r2, #1
 80118ba:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80118be:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 80118c2:	1212      	asrs	r2, r2, #8
 80118c4:	f815 9006 	ldrb.w	r9, [r5, r6]
 80118c8:	fa1f fa82 	uxth.w	sl, r2
 80118cc:	43d2      	mvns	r2, r2
 80118ce:	fb1b fb0a 	smulbb	fp, fp, sl
 80118d2:	b2d2      	uxtb	r2, r2
 80118d4:	fb09 b902 	mla	r9, r9, r2, fp
 80118d8:	fa1f f989 	uxth.w	r9, r9
 80118dc:	f109 0b01 	add.w	fp, r9, #1
 80118e0:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80118e4:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 80118e8:	f3c7 4707 	ubfx	r7, r7, #16, #8
 80118ec:	fb1b fb0a 	smulbb	fp, fp, sl
 80118f0:	ea4f 2929 	mov.w	r9, r9, asr #8
 80118f4:	fb17 fa0a 	smulbb	sl, r7, sl
 80118f8:	f805 9006 	strb.w	r9, [r5, r6]
 80118fc:	442e      	add	r6, r5
 80118fe:	78b7      	ldrb	r7, [r6, #2]
 8011900:	f896 9001 	ldrb.w	r9, [r6, #1]
 8011904:	fb07 aa02 	mla	sl, r7, r2, sl
 8011908:	fb09 b902 	mla	r9, r9, r2, fp
 801190c:	fa1f fa8a 	uxth.w	sl, sl
 8011910:	fa1f f989 	uxth.w	r9, r9
 8011914:	f10a 0701 	add.w	r7, sl, #1
 8011918:	f109 0b01 	add.w	fp, r9, #1
 801191c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8011920:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8011924:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8011928:	ea4f 2929 	mov.w	r9, r9, asr #8
 801192c:	f886 a002 	strb.w	sl, [r6, #2]
 8011930:	f886 9001 	strb.w	r9, [r6, #1]
 8011934:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011936:	4474      	add	r4, lr
 8011938:	f108 0801 	add.w	r8, r8, #1
 801193c:	4410      	add	r0, r2
 801193e:	e760      	b.n	8011802 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x158>
 8011940:	b005      	add	sp, #20
 8011942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011946 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801194a:	b085      	sub	sp, #20
 801194c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011950:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011952:	9203      	str	r2, [sp, #12]
 8011954:	6868      	ldr	r0, [r5, #4]
 8011956:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 801195a:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 801195e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011962:	fb00 2404 	mla	r4, r0, r4, r2
 8011966:	682a      	ldr	r2, [r5, #0]
 8011968:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801196c:	4414      	add	r4, r2
 801196e:	f8dc 2000 	ldr.w	r2, [ip]
 8011972:	9201      	str	r2, [sp, #4]
 8011974:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011978:	3204      	adds	r2, #4
 801197a:	9202      	str	r2, [sp, #8]
 801197c:	2900      	cmp	r1, #0
 801197e:	dc03      	bgt.n	8011988 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8011980:	9a03      	ldr	r2, [sp, #12]
 8011982:	2a00      	cmp	r2, #0
 8011984:	f340 8137 	ble.w	8011bf6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8011988:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801198a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801198e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011992:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011994:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8011998:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801199c:	2b00      	cmp	r3, #0
 801199e:	dd0d      	ble.n	80119bc <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80119a0:	1405      	asrs	r5, r0, #16
 80119a2:	d405      	bmi.n	80119b0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80119a4:	4545      	cmp	r5, r8
 80119a6:	da03      	bge.n	80119b0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80119a8:	1415      	asrs	r5, r2, #16
 80119aa:	d401      	bmi.n	80119b0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80119ac:	42bd      	cmp	r5, r7
 80119ae:	db06      	blt.n	80119be <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80119b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80119b2:	4470      	add	r0, lr
 80119b4:	3b01      	subs	r3, #1
 80119b6:	3403      	adds	r4, #3
 80119b8:	442a      	add	r2, r5
 80119ba:	e7ef      	b.n	801199c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80119bc:	d070      	beq.n	8011aa0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 80119be:	1e5d      	subs	r5, r3, #1
 80119c0:	fb0e 0605 	mla	r6, lr, r5, r0
 80119c4:	1436      	asrs	r6, r6, #16
 80119c6:	d462      	bmi.n	8011a8e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80119c8:	4546      	cmp	r6, r8
 80119ca:	da60      	bge.n	8011a8e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80119cc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80119ce:	fb06 2505 	mla	r5, r6, r5, r2
 80119d2:	142d      	asrs	r5, r5, #16
 80119d4:	d45b      	bmi.n	8011a8e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80119d6:	42bd      	cmp	r5, r7
 80119d8:	da59      	bge.n	8011a8e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80119da:	1ce5      	adds	r5, r4, #3
 80119dc:	469a      	mov	sl, r3
 80119de:	f1ba 0f00 	cmp.w	sl, #0
 80119e2:	dd58      	ble.n	8011a96 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 80119e4:	1416      	asrs	r6, r2, #16
 80119e6:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80119ea:	1407      	asrs	r7, r0, #16
 80119ec:	46b1      	mov	r9, r6
 80119ee:	9e01      	ldr	r6, [sp, #4]
 80119f0:	fb08 6609 	mla	r6, r8, r9, r6
 80119f4:	5df6      	ldrb	r6, [r6, r7]
 80119f6:	9f02      	ldr	r7, [sp, #8]
 80119f8:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 80119fc:	0e37      	lsrs	r7, r6, #24
 80119fe:	2fff      	cmp	r7, #255	; 0xff
 8011a00:	f000 80f0 	beq.w	8011be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8011a04:	fa5f f887 	uxtb.w	r8, r7
 8011a08:	b3d7      	cbz	r7, 8011a80 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8011a0a:	fa1f f788 	uxth.w	r7, r8
 8011a0e:	ea6f 0808 	mvn.w	r8, r8
 8011a12:	fa5f fb86 	uxtb.w	fp, r6
 8011a16:	f815 9c03 	ldrb.w	r9, [r5, #-3]
 8011a1a:	fa5f f888 	uxtb.w	r8, r8
 8011a1e:	fb1b fb07 	smulbb	fp, fp, r7
 8011a22:	fb09 b908 	mla	r9, r9, r8, fp
 8011a26:	fa1f f989 	uxth.w	r9, r9
 8011a2a:	f109 0b01 	add.w	fp, r9, #1
 8011a2e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8011a32:	f815 bc02 	ldrb.w	fp, [r5, #-2]
 8011a36:	fb1b fb08 	smulbb	fp, fp, r8
 8011a3a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011a3e:	f805 9c03 	strb.w	r9, [r5, #-3]
 8011a42:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8011a46:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8011a4a:	fb09 b907 	mla	r9, r9, r7, fp
 8011a4e:	fa1f f989 	uxth.w	r9, r9
 8011a52:	f109 0b01 	add.w	fp, r9, #1
 8011a56:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8011a5a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011a5e:	f805 9c02 	strb.w	r9, [r5, #-2]
 8011a62:	f815 9c01 	ldrb.w	r9, [r5, #-1]
 8011a66:	fb19 f808 	smulbb	r8, r9, r8
 8011a6a:	fb06 8607 	mla	r6, r6, r7, r8
 8011a6e:	b2b6      	uxth	r6, r6
 8011a70:	f106 0801 	add.w	r8, r6, #1
 8011a74:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8011a78:	ea4f 2828 	mov.w	r8, r8, asr #8
 8011a7c:	f805 8c01 	strb.w	r8, [r5, #-1]
 8011a80:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011a82:	4470      	add	r0, lr
 8011a84:	3503      	adds	r5, #3
 8011a86:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011a8a:	4432      	add	r2, r6
 8011a8c:	e7a7      	b.n	80119de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011a8e:	2600      	movs	r6, #0
 8011a90:	1b9d      	subs	r5, r3, r6
 8011a92:	2d00      	cmp	r5, #0
 8011a94:	dc3b      	bgt.n	8011b0e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011a96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a9a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011a9e:	441c      	add	r4, r3
 8011aa0:	2900      	cmp	r1, #0
 8011aa2:	f340 80a8 	ble.w	8011bf6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8011aa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011aaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011aac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ab0:	3901      	subs	r1, #1
 8011ab2:	eeb0 6a62 	vmov.f32	s12, s5
 8011ab6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011aba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011abe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ac2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011ac6:	eeb0 6a43 	vmov.f32	s12, s6
 8011aca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ace:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011ad2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ad6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ada:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ade:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ae2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011ae6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011aea:	ee12 2a90 	vmov	r2, s5
 8011aee:	eef0 2a47 	vmov.f32	s5, s14
 8011af2:	fb92 fef3 	sdiv	lr, r2, r3
 8011af6:	ee13 2a10 	vmov	r2, s6
 8011afa:	eeb0 3a67 	vmov.f32	s6, s15
 8011afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b02:	9a03      	ldr	r2, [sp, #12]
 8011b04:	9312      	str	r3, [sp, #72]	; 0x48
 8011b06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b08:	bf08      	it	eq
 8011b0a:	4613      	moveq	r3, r2
 8011b0c:	e736      	b.n	801197c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011b0e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8011b12:	d457      	bmi.n	8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011b14:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8011b18:	4547      	cmp	r7, r8
 8011b1a:	dd53      	ble.n	8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011b1c:	ea5f 4922 	movs.w	r9, r2, asr #16
 8011b20:	d450      	bmi.n	8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011b22:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8011b26:	454d      	cmp	r5, r9
 8011b28:	dd4c      	ble.n	8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011b2a:	9d01      	ldr	r5, [sp, #4]
 8011b2c:	b23f      	sxth	r7, r7
 8011b2e:	fb09 5707 	mla	r7, r9, r7, r5
 8011b32:	f817 5008 	ldrb.w	r5, [r7, r8]
 8011b36:	9f02      	ldr	r7, [sp, #8]
 8011b38:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8011b3c:	0e2f      	lsrs	r7, r5, #24
 8011b3e:	2fff      	cmp	r7, #255	; 0xff
 8011b40:	d045      	beq.n	8011bce <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011b42:	fa5f f987 	uxtb.w	r9, r7
 8011b46:	b3ef      	cbz	r7, 8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011b48:	fa1f f889 	uxth.w	r8, r9
 8011b4c:	ea6f 0909 	mvn.w	r9, r9
 8011b50:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8011b54:	fa5f fb85 	uxtb.w	fp, r5
 8011b58:	f814 a007 	ldrb.w	sl, [r4, r7]
 8011b5c:	fa5f f989 	uxtb.w	r9, r9
 8011b60:	fb1b fb08 	smulbb	fp, fp, r8
 8011b64:	fb0a ba09 	mla	sl, sl, r9, fp
 8011b68:	fa1f fa8a 	uxth.w	sl, sl
 8011b6c:	f10a 0b01 	add.w	fp, sl, #1
 8011b70:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8011b74:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8011b78:	f804 a007 	strb.w	sl, [r4, r7]
 8011b7c:	4427      	add	r7, r4
 8011b7e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011b82:	f3c5 4507 	ubfx	r5, r5, #16, #8
 8011b86:	f897 b001 	ldrb.w	fp, [r7, #1]
 8011b8a:	fb1b fb09 	smulbb	fp, fp, r9
 8011b8e:	fb0a ba08 	mla	sl, sl, r8, fp
 8011b92:	fa1f fa8a 	uxth.w	sl, sl
 8011b96:	f10a 0b01 	add.w	fp, sl, #1
 8011b9a:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8011b9e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8011ba2:	f887 a001 	strb.w	sl, [r7, #1]
 8011ba6:	f897 a002 	ldrb.w	sl, [r7, #2]
 8011baa:	fb1a f909 	smulbb	r9, sl, r9
 8011bae:	fb05 9508 	mla	r5, r5, r8, r9
 8011bb2:	b2ad      	uxth	r5, r5
 8011bb4:	f105 0901 	add.w	r9, r5, #1
 8011bb8:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8011bbc:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011bc0:	f887 9002 	strb.w	r9, [r7, #2]
 8011bc4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011bc6:	4470      	add	r0, lr
 8011bc8:	3601      	adds	r6, #1
 8011bca:	442a      	add	r2, r5
 8011bcc:	e760      	b.n	8011a90 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8011bce:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8011bd2:	ea4f 2815 	mov.w	r8, r5, lsr #8
 8011bd6:	55e5      	strb	r5, [r4, r7]
 8011bd8:	4427      	add	r7, r4
 8011bda:	0c2d      	lsrs	r5, r5, #16
 8011bdc:	f887 8001 	strb.w	r8, [r7, #1]
 8011be0:	70bd      	strb	r5, [r7, #2]
 8011be2:	e7ef      	b.n	8011bc4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8011be4:	0a37      	lsrs	r7, r6, #8
 8011be6:	f805 6c03 	strb.w	r6, [r5, #-3]
 8011bea:	0c36      	lsrs	r6, r6, #16
 8011bec:	f805 7c02 	strb.w	r7, [r5, #-2]
 8011bf0:	f805 6c01 	strb.w	r6, [r5, #-1]
 8011bf4:	e744      	b.n	8011a80 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8011bf6:	b005      	add	sp, #20
 8011bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011bfc <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011bfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c00:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011c02:	9201      	str	r2, [sp, #4]
 8011c04:	6870      	ldr	r0, [r6, #4]
 8011c06:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011c0a:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8011c0e:	fa1f fe85 	uxth.w	lr, r5
 8011c12:	43ed      	mvns	r5, r5
 8011c14:	f8dc 8000 	ldr.w	r8, [ip]
 8011c18:	b2ed      	uxtb	r5, r5
 8011c1a:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8011c1e:	fb00 2404 	mla	r4, r0, r4, r2
 8011c22:	6832      	ldr	r2, [r6, #0]
 8011c24:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011c28:	4414      	add	r4, r2
 8011c2a:	2900      	cmp	r1, #0
 8011c2c:	dc03      	bgt.n	8011c36 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011c2e:	9a01      	ldr	r2, [sp, #4]
 8011c30:	2a00      	cmp	r2, #0
 8011c32:	f340 810d 	ble.w	8011e50 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8011c36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011c38:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 8011c3c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011c40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011c42:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 8011c46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011c4a:	2b00      	cmp	r3, #0
 8011c4c:	dd0e      	ble.n	8011c6c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c4e:	1406      	asrs	r6, r0, #16
 8011c50:	d405      	bmi.n	8011c5e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8011c52:	4556      	cmp	r6, sl
 8011c54:	da03      	bge.n	8011c5e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8011c56:	1416      	asrs	r6, r2, #16
 8011c58:	d401      	bmi.n	8011c5e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8011c5a:	454e      	cmp	r6, r9
 8011c5c:	db07      	blt.n	8011c6e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c5e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8011c60:	3b01      	subs	r3, #1
 8011c62:	3403      	adds	r4, #3
 8011c64:	4430      	add	r0, r6
 8011c66:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8011c68:	4432      	add	r2, r6
 8011c6a:	e7ee      	b.n	8011c4a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8011c6c:	d060      	beq.n	8011d30 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8011c6e:	1e5e      	subs	r6, r3, #1
 8011c70:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011c72:	fb07 0706 	mla	r7, r7, r6, r0
 8011c76:	143f      	asrs	r7, r7, #16
 8011c78:	d451      	bmi.n	8011d1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011c7a:	4557      	cmp	r7, sl
 8011c7c:	da4f      	bge.n	8011d1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011c7e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8011c80:	fb07 2606 	mla	r6, r7, r6, r2
 8011c84:	1436      	asrs	r6, r6, #16
 8011c86:	d44a      	bmi.n	8011d1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011c88:	454e      	cmp	r6, r9
 8011c8a:	da48      	bge.n	8011d1e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011c8c:	1ce6      	adds	r6, r4, #3
 8011c8e:	4699      	mov	r9, r3
 8011c90:	f1b9 0f00 	cmp.w	r9, #0
 8011c94:	f106 0603 	add.w	r6, r6, #3
 8011c98:	dd45      	ble.n	8011d26 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8011c9a:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8011c9e:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8011ca2:	1417      	asrs	r7, r2, #16
 8011ca4:	f109 39ff 	add.w	r9, r9, #4294967295
 8011ca8:	fb0b a707 	mla	r7, fp, r7, sl
 8011cac:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 8011cb0:	fb1b fb05 	smulbb	fp, fp, r5
 8011cb4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8011cb8:	eb08 0a07 	add.w	sl, r8, r7
 8011cbc:	f818 7007 	ldrb.w	r7, [r8, r7]
 8011cc0:	fb07 b70e 	mla	r7, r7, lr, fp
 8011cc4:	b2bf      	uxth	r7, r7
 8011cc6:	f107 0b01 	add.w	fp, r7, #1
 8011cca:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011cce:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8011cd2:	fb1b fb05 	smulbb	fp, fp, r5
 8011cd6:	123f      	asrs	r7, r7, #8
 8011cd8:	f806 7c06 	strb.w	r7, [r6, #-6]
 8011cdc:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8011ce0:	fb07 b70e 	mla	r7, r7, lr, fp
 8011ce4:	b2bf      	uxth	r7, r7
 8011ce6:	f107 0b01 	add.w	fp, r7, #1
 8011cea:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011cee:	123f      	asrs	r7, r7, #8
 8011cf0:	f806 7c05 	strb.w	r7, [r6, #-5]
 8011cf4:	f89a 7002 	ldrb.w	r7, [sl, #2]
 8011cf8:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8011cfc:	fb1a fa05 	smulbb	sl, sl, r5
 8011d00:	fb07 a70e 	mla	r7, r7, lr, sl
 8011d04:	b2bf      	uxth	r7, r7
 8011d06:	f107 0a01 	add.w	sl, r7, #1
 8011d0a:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8011d0e:	123f      	asrs	r7, r7, #8
 8011d10:	f806 7c04 	strb.w	r7, [r6, #-4]
 8011d14:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011d16:	4438      	add	r0, r7
 8011d18:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8011d1a:	443a      	add	r2, r7
 8011d1c:	e7b8      	b.n	8011c90 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8011d1e:	2700      	movs	r7, #0
 8011d20:	1bde      	subs	r6, r3, r7
 8011d22:	2e00      	cmp	r6, #0
 8011d24:	dc3f      	bgt.n	8011da6 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8011d26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d2a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011d2e:	441c      	add	r4, r3
 8011d30:	2900      	cmp	r1, #0
 8011d32:	f340 808d 	ble.w	8011e50 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8011d36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011d3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011d3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d40:	3901      	subs	r1, #1
 8011d42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d46:	eef0 6a62 	vmov.f32	s13, s5
 8011d4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011d4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011d56:	edcd 6a0d 	vstr	s13, [sp, #52]	; 0x34
 8011d5a:	eef0 6a43 	vmov.f32	s13, s6
 8011d5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011d62:	edcd 6a0e 	vstr	s13, [sp, #56]	; 0x38
 8011d66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d7e:	ee12 2a90 	vmov	r2, s5
 8011d82:	eef0 2a47 	vmov.f32	s5, s14
 8011d86:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d8a:	ee13 2a10 	vmov	r2, s6
 8011d8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8011d90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011d92:	eeb0 3a67 	vmov.f32	s6, s15
 8011d96:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d9a:	9a01      	ldr	r2, [sp, #4]
 8011d9c:	9310      	str	r3, [sp, #64]	; 0x40
 8011d9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011da0:	bf08      	it	eq
 8011da2:	4613      	moveq	r3, r2
 8011da4:	e741      	b.n	8011c2a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011da6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011daa:	d44b      	bmi.n	8011e44 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8011dac:	f8dc b008 	ldr.w	fp, [ip, #8]
 8011db0:	45cb      	cmp	fp, r9
 8011db2:	dd47      	ble.n	8011e44 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8011db4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011db8:	d444      	bmi.n	8011e44 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8011dba:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8011dbe:	4556      	cmp	r6, sl
 8011dc0:	dd40      	ble.n	8011e44 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8011dc2:	fa0f f68b 	sxth.w	r6, fp
 8011dc6:	fb0a 9906 	mla	r9, sl, r6, r9
 8011dca:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8011dce:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8011dd2:	f814 b006 	ldrb.w	fp, [r4, r6]
 8011dd6:	fb1b fb05 	smulbb	fp, fp, r5
 8011dda:	eb08 0a09 	add.w	sl, r8, r9
 8011dde:	f818 9009 	ldrb.w	r9, [r8, r9]
 8011de2:	fb09 b90e 	mla	r9, r9, lr, fp
 8011de6:	fa1f f989 	uxth.w	r9, r9
 8011dea:	f109 0b01 	add.w	fp, r9, #1
 8011dee:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8011df2:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011df6:	f804 9006 	strb.w	r9, [r4, r6]
 8011dfa:	4426      	add	r6, r4
 8011dfc:	f89a 9001 	ldrb.w	r9, [sl, #1]
 8011e00:	f896 b001 	ldrb.w	fp, [r6, #1]
 8011e04:	fb1b fb05 	smulbb	fp, fp, r5
 8011e08:	fb09 b90e 	mla	r9, r9, lr, fp
 8011e0c:	fa1f f989 	uxth.w	r9, r9
 8011e10:	f109 0b01 	add.w	fp, r9, #1
 8011e14:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8011e18:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011e1c:	f886 9001 	strb.w	r9, [r6, #1]
 8011e20:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8011e24:	f896 a002 	ldrb.w	sl, [r6, #2]
 8011e28:	fb1a fa05 	smulbb	sl, sl, r5
 8011e2c:	fb09 a90e 	mla	r9, r9, lr, sl
 8011e30:	fa1f f989 	uxth.w	r9, r9
 8011e34:	f109 0a01 	add.w	sl, r9, #1
 8011e38:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8011e3c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8011e40:	f886 9002 	strb.w	r9, [r6, #2]
 8011e44:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8011e46:	3701      	adds	r7, #1
 8011e48:	4430      	add	r0, r6
 8011e4a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8011e4c:	4432      	add	r2, r6
 8011e4e:	e767      	b.n	8011d20 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8011e50:	b003      	add	sp, #12
 8011e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e56 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e56:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011e5c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011e60:	9201      	str	r2, [sp, #4]
 8011e62:	6868      	ldr	r0, [r5, #4]
 8011e64:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8011e66:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8011e6a:	e9dd ec0f 	ldrd	lr, ip, [sp, #60]	; 0x3c
 8011e6e:	fb00 2404 	mla	r4, r0, r4, r2
 8011e72:	682a      	ldr	r2, [r5, #0]
 8011e74:	f8d7 8000 	ldr.w	r8, [r7]
 8011e78:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011e7c:	4414      	add	r4, r2
 8011e7e:	2900      	cmp	r1, #0
 8011e80:	dc03      	bgt.n	8011e8a <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8011e82:	9a01      	ldr	r2, [sp, #4]
 8011e84:	2a00      	cmp	r2, #0
 8011e86:	f340 80af 	ble.w	8011fe8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8011e8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011e8c:	f9b7 a008 	ldrsh.w	sl, [r7, #8]
 8011e90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011e94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011e96:	f9b7 900c 	ldrsh.w	r9, [r7, #12]
 8011e9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011e9e:	2b00      	cmp	r3, #0
 8011ea0:	dd0c      	ble.n	8011ebc <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011ea2:	1405      	asrs	r5, r0, #16
 8011ea4:	d405      	bmi.n	8011eb2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011ea6:	4555      	cmp	r5, sl
 8011ea8:	da03      	bge.n	8011eb2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011eaa:	1415      	asrs	r5, r2, #16
 8011eac:	d401      	bmi.n	8011eb2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011eae:	454d      	cmp	r5, r9
 8011eb0:	db05      	blt.n	8011ebe <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011eb2:	4470      	add	r0, lr
 8011eb4:	4462      	add	r2, ip
 8011eb6:	3b01      	subs	r3, #1
 8011eb8:	3403      	adds	r4, #3
 8011eba:	e7f0      	b.n	8011e9e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011ebc:	d038      	beq.n	8011f30 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8011ebe:	1e5d      	subs	r5, r3, #1
 8011ec0:	fb0e 0605 	mla	r6, lr, r5, r0
 8011ec4:	1436      	asrs	r6, r6, #16
 8011ec6:	d42a      	bmi.n	8011f1e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8011ec8:	4556      	cmp	r6, sl
 8011eca:	da28      	bge.n	8011f1e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8011ecc:	fb0c 2505 	mla	r5, ip, r5, r2
 8011ed0:	142d      	asrs	r5, r5, #16
 8011ed2:	d424      	bmi.n	8011f1e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8011ed4:	454d      	cmp	r5, r9
 8011ed6:	da22      	bge.n	8011f1e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8011ed8:	1ce6      	adds	r6, r4, #3
 8011eda:	4699      	mov	r9, r3
 8011edc:	f1b9 0f00 	cmp.w	r9, #0
 8011ee0:	f106 0603 	add.w	r6, r6, #3
 8011ee4:	dd1f      	ble.n	8011f26 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8011ee6:	f9b7 b008 	ldrsh.w	fp, [r7, #8]
 8011eea:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8011eee:	1415      	asrs	r5, r2, #16
 8011ef0:	4470      	add	r0, lr
 8011ef2:	4462      	add	r2, ip
 8011ef4:	f109 39ff 	add.w	r9, r9, #4294967295
 8011ef8:	fb0b a505 	mla	r5, fp, r5, sl
 8011efc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011f00:	eb08 0a05 	add.w	sl, r8, r5
 8011f04:	f818 5005 	ldrb.w	r5, [r8, r5]
 8011f08:	f806 5c06 	strb.w	r5, [r6, #-6]
 8011f0c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8011f10:	f806 5c05 	strb.w	r5, [r6, #-5]
 8011f14:	f89a 5002 	ldrb.w	r5, [sl, #2]
 8011f18:	f806 5c04 	strb.w	r5, [r6, #-4]
 8011f1c:	e7de      	b.n	8011edc <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011f1e:	2600      	movs	r6, #0
 8011f20:	1b9d      	subs	r5, r3, r6
 8011f22:	2d00      	cmp	r5, #0
 8011f24:	dc38      	bgt.n	8011f98 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8011f26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011f2a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011f2e:	441c      	add	r4, r3
 8011f30:	2900      	cmp	r1, #0
 8011f32:	dd59      	ble.n	8011fe8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8011f34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011f38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011f3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011f3e:	3901      	subs	r1, #1
 8011f40:	eeb0 6a62 	vmov.f32	s12, s5
 8011f44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011f48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011f4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f50:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8011f54:	eeb0 6a43 	vmov.f32	s12, s6
 8011f58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f5c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8011f60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011f64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011f68:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011f6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011f70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011f78:	ee12 2a90 	vmov	r2, s5
 8011f7c:	eef0 2a47 	vmov.f32	s5, s14
 8011f80:	fb92 fef3 	sdiv	lr, r2, r3
 8011f84:	ee13 2a10 	vmov	r2, s6
 8011f88:	eeb0 3a67 	vmov.f32	s6, s15
 8011f8c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011f90:	9a01      	ldr	r2, [sp, #4]
 8011f92:	bf08      	it	eq
 8011f94:	4613      	moveq	r3, r2
 8011f96:	e772      	b.n	8011e7e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8011f98:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011f9c:	d420      	bmi.n	8011fe0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8011f9e:	f8d7 b008 	ldr.w	fp, [r7, #8]
 8011fa2:	45cb      	cmp	fp, r9
 8011fa4:	dd1c      	ble.n	8011fe0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8011fa6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011faa:	d419      	bmi.n	8011fe0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8011fac:	68fd      	ldr	r5, [r7, #12]
 8011fae:	4555      	cmp	r5, sl
 8011fb0:	dd16      	ble.n	8011fe0 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8011fb2:	fa0f f58b 	sxth.w	r5, fp
 8011fb6:	fb0a 9505 	mla	r5, sl, r5, r9
 8011fba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011fbe:	f818 9005 	ldrb.w	r9, [r8, r5]
 8011fc2:	eb08 0b05 	add.w	fp, r8, r5
 8011fc6:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011fca:	f804 9005 	strb.w	r9, [r4, r5]
 8011fce:	4425      	add	r5, r4
 8011fd0:	f89b 9001 	ldrb.w	r9, [fp, #1]
 8011fd4:	f885 9001 	strb.w	r9, [r5, #1]
 8011fd8:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011fdc:	f885 9002 	strb.w	r9, [r5, #2]
 8011fe0:	4470      	add	r0, lr
 8011fe2:	4462      	add	r2, ip
 8011fe4:	3601      	adds	r6, #1
 8011fe6:	e79b      	b.n	8011f20 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8011fe8:	b003      	add	sp, #12
 8011fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011fee <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011fee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ff2:	b085      	sub	sp, #20
 8011ff4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011ff8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011ffa:	9202      	str	r2, [sp, #8]
 8011ffc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8012000:	6860      	ldr	r0, [r4, #4]
 8012002:	9203      	str	r2, [sp, #12]
 8012004:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8012008:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 801200c:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 8012010:	fb00 2505 	mla	r5, r0, r5, r2
 8012014:	6822      	ldr	r2, [r4, #0]
 8012016:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801201a:	4415      	add	r5, r2
 801201c:	f8dc 2000 	ldr.w	r2, [ip]
 8012020:	9201      	str	r2, [sp, #4]
 8012022:	2900      	cmp	r1, #0
 8012024:	dc03      	bgt.n	801202e <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012026:	9a02      	ldr	r2, [sp, #8]
 8012028:	2a00      	cmp	r2, #0
 801202a:	f340 8122 	ble.w	8012272 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801202e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012030:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8012034:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012038:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801203a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801203e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012042:	2b00      	cmp	r3, #0
 8012044:	dd0d      	ble.n	8012062 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012046:	1422      	asrs	r2, r4, #16
 8012048:	d405      	bmi.n	8012056 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801204a:	4542      	cmp	r2, r8
 801204c:	da03      	bge.n	8012056 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801204e:	1402      	asrs	r2, r0, #16
 8012050:	d401      	bmi.n	8012056 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012052:	42ba      	cmp	r2, r7
 8012054:	db06      	blt.n	8012064 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012056:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012058:	4474      	add	r4, lr
 801205a:	3b01      	subs	r3, #1
 801205c:	3503      	adds	r5, #3
 801205e:	4410      	add	r0, r2
 8012060:	e7ef      	b.n	8012042 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012062:	d072      	beq.n	801214a <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8012064:	1e5a      	subs	r2, r3, #1
 8012066:	fb0e 4602 	mla	r6, lr, r2, r4
 801206a:	1436      	asrs	r6, r6, #16
 801206c:	d462      	bmi.n	8012134 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801206e:	4546      	cmp	r6, r8
 8012070:	da60      	bge.n	8012134 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012072:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8012074:	fb06 0202 	mla	r2, r6, r2, r0
 8012078:	1412      	asrs	r2, r2, #16
 801207a:	d45b      	bmi.n	8012134 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801207c:	42ba      	cmp	r2, r7
 801207e:	da59      	bge.n	8012134 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012080:	1cef      	adds	r7, r5, #3
 8012082:	4699      	mov	r9, r3
 8012084:	f1b9 0f00 	cmp.w	r9, #0
 8012088:	dd5a      	ble.n	8012140 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801208a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801208e:	1426      	asrs	r6, r4, #16
 8012090:	1402      	asrs	r2, r0, #16
 8012092:	fb08 6202 	mla	r2, r8, r2, r6
 8012096:	9e01      	ldr	r6, [sp, #4]
 8012098:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 801209c:	ea5f 6816 	movs.w	r8, r6, lsr #24
 80120a0:	d041      	beq.n	8012126 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80120a2:	9a03      	ldr	r2, [sp, #12]
 80120a4:	fa5f fb86 	uxtb.w	fp, r6
 80120a8:	fb02 f808 	mul.w	r8, r2, r8
 80120ac:	f108 0201 	add.w	r2, r8, #1
 80120b0:	eb02 2228 	add.w	r2, r2, r8, asr #8
 80120b4:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 80120b8:	1212      	asrs	r2, r2, #8
 80120ba:	fa1f fa82 	uxth.w	sl, r2
 80120be:	43d2      	mvns	r2, r2
 80120c0:	fb1b fb0a 	smulbb	fp, fp, sl
 80120c4:	b2d2      	uxtb	r2, r2
 80120c6:	fb08 b802 	mla	r8, r8, r2, fp
 80120ca:	fa1f f888 	uxth.w	r8, r8
 80120ce:	f108 0b01 	add.w	fp, r8, #1
 80120d2:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80120d6:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 80120da:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80120de:	fb1b fb0a 	smulbb	fp, fp, sl
 80120e2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80120e6:	fb16 fa0a 	smulbb	sl, r6, sl
 80120ea:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 80120ee:	f807 8c03 	strb.w	r8, [r7, #-3]
 80120f2:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 80120f6:	fb06 aa02 	mla	sl, r6, r2, sl
 80120fa:	fb08 b802 	mla	r8, r8, r2, fp
 80120fe:	fa1f fa8a 	uxth.w	sl, sl
 8012102:	fa1f f888 	uxth.w	r8, r8
 8012106:	f10a 0601 	add.w	r6, sl, #1
 801210a:	f108 0b01 	add.w	fp, r8, #1
 801210e:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 8012112:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8012116:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801211a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801211e:	f807 ac01 	strb.w	sl, [r7, #-1]
 8012122:	f807 8c02 	strb.w	r8, [r7, #-2]
 8012126:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012128:	4474      	add	r4, lr
 801212a:	3703      	adds	r7, #3
 801212c:	f109 39ff 	add.w	r9, r9, #4294967295
 8012130:	4410      	add	r0, r2
 8012132:	e7a7      	b.n	8012084 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012134:	f04f 0800 	mov.w	r8, #0
 8012138:	eba3 0208 	sub.w	r2, r3, r8
 801213c:	2a00      	cmp	r2, #0
 801213e:	dc3b      	bgt.n	80121b8 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8012140:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012144:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012148:	441d      	add	r5, r3
 801214a:	2900      	cmp	r1, #0
 801214c:	f340 8091 	ble.w	8012272 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012150:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012156:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801215a:	3901      	subs	r1, #1
 801215c:	eeb0 6a62 	vmov.f32	s12, s5
 8012160:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012164:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012168:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801216c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012170:	eeb0 6a43 	vmov.f32	s12, s6
 8012174:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012178:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801217c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012180:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012184:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012188:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801218c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012190:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012194:	ee12 2a90 	vmov	r2, s5
 8012198:	eef0 2a47 	vmov.f32	s5, s14
 801219c:	fb92 fef3 	sdiv	lr, r2, r3
 80121a0:	ee13 2a10 	vmov	r2, s6
 80121a4:	eeb0 3a67 	vmov.f32	s6, s15
 80121a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80121ac:	9a02      	ldr	r2, [sp, #8]
 80121ae:	9312      	str	r3, [sp, #72]	; 0x48
 80121b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80121b2:	bf08      	it	eq
 80121b4:	4613      	moveq	r3, r2
 80121b6:	e734      	b.n	8012022 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80121b8:	1427      	asrs	r7, r4, #16
 80121ba:	d454      	bmi.n	8012266 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80121bc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80121c0:	42be      	cmp	r6, r7
 80121c2:	dd50      	ble.n	8012266 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80121c4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80121c8:	d44d      	bmi.n	8012266 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80121ca:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80121ce:	454a      	cmp	r2, r9
 80121d0:	dd49      	ble.n	8012266 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80121d2:	b236      	sxth	r6, r6
 80121d4:	9a01      	ldr	r2, [sp, #4]
 80121d6:	fb09 7606 	mla	r6, r9, r6, r7
 80121da:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 80121de:	0e3a      	lsrs	r2, r7, #24
 80121e0:	d041      	beq.n	8012266 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80121e2:	9e03      	ldr	r6, [sp, #12]
 80121e4:	fa5f fb87 	uxtb.w	fp, r7
 80121e8:	4372      	muls	r2, r6
 80121ea:	1c56      	adds	r6, r2, #1
 80121ec:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80121f0:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 80121f4:	1212      	asrs	r2, r2, #8
 80121f6:	f815 9006 	ldrb.w	r9, [r5, r6]
 80121fa:	fa1f fa82 	uxth.w	sl, r2
 80121fe:	43d2      	mvns	r2, r2
 8012200:	fb1b fb0a 	smulbb	fp, fp, sl
 8012204:	b2d2      	uxtb	r2, r2
 8012206:	fb09 b902 	mla	r9, r9, r2, fp
 801220a:	fa1f f989 	uxth.w	r9, r9
 801220e:	f109 0b01 	add.w	fp, r9, #1
 8012212:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8012216:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 801221a:	f3c7 4707 	ubfx	r7, r7, #16, #8
 801221e:	fb1b fb0a 	smulbb	fp, fp, sl
 8012222:	ea4f 2929 	mov.w	r9, r9, asr #8
 8012226:	fb17 fa0a 	smulbb	sl, r7, sl
 801222a:	f805 9006 	strb.w	r9, [r5, r6]
 801222e:	442e      	add	r6, r5
 8012230:	78b7      	ldrb	r7, [r6, #2]
 8012232:	f896 9001 	ldrb.w	r9, [r6, #1]
 8012236:	fb07 aa02 	mla	sl, r7, r2, sl
 801223a:	fb09 b902 	mla	r9, r9, r2, fp
 801223e:	fa1f fa8a 	uxth.w	sl, sl
 8012242:	fa1f f989 	uxth.w	r9, r9
 8012246:	f10a 0701 	add.w	r7, sl, #1
 801224a:	f109 0b01 	add.w	fp, r9, #1
 801224e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8012252:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8012256:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801225a:	ea4f 2929 	mov.w	r9, r9, asr #8
 801225e:	f886 a002 	strb.w	sl, [r6, #2]
 8012262:	f886 9001 	strb.w	r9, [r6, #1]
 8012266:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012268:	4474      	add	r4, lr
 801226a:	f108 0801 	add.w	r8, r8, #1
 801226e:	4410      	add	r0, r2
 8012270:	e762      	b.n	8012138 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8012272:	b005      	add	sp, #20
 8012274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012278 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012278:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801227c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801227e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012282:	9201      	str	r2, [sp, #4]
 8012284:	6860      	ldr	r0, [r4, #4]
 8012286:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 801228a:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 801228e:	fb00 2505 	mla	r5, r0, r5, r2
 8012292:	6822      	ldr	r2, [r4, #0]
 8012294:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012298:	4415      	add	r5, r2
 801229a:	f8dc 2000 	ldr.w	r2, [ip]
 801229e:	9200      	str	r2, [sp, #0]
 80122a0:	2900      	cmp	r1, #0
 80122a2:	dc03      	bgt.n	80122ac <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80122a4:	9a01      	ldr	r2, [sp, #4]
 80122a6:	2a00      	cmp	r2, #0
 80122a8:	f340 812b 	ble.w	8012502 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80122ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80122ae:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80122b2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80122b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80122b8:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80122bc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80122c0:	2b00      	cmp	r3, #0
 80122c2:	dd0e      	ble.n	80122e2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80122c4:	1422      	asrs	r2, r4, #16
 80122c6:	d405      	bmi.n	80122d4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80122c8:	4572      	cmp	r2, lr
 80122ca:	da03      	bge.n	80122d4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80122cc:	1402      	asrs	r2, r0, #16
 80122ce:	d401      	bmi.n	80122d4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80122d0:	42ba      	cmp	r2, r7
 80122d2:	db07      	blt.n	80122e4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80122d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80122d6:	3b01      	subs	r3, #1
 80122d8:	3503      	adds	r5, #3
 80122da:	4414      	add	r4, r2
 80122dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80122de:	4410      	add	r0, r2
 80122e0:	e7ee      	b.n	80122c0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80122e2:	d06f      	beq.n	80123c4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80122e4:	1e5a      	subs	r2, r3, #1
 80122e6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80122e8:	fb06 4602 	mla	r6, r6, r2, r4
 80122ec:	1436      	asrs	r6, r6, #16
 80122ee:	d45e      	bmi.n	80123ae <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80122f0:	4576      	cmp	r6, lr
 80122f2:	da5c      	bge.n	80123ae <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80122f4:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80122f6:	fb06 0202 	mla	r2, r6, r2, r0
 80122fa:	1412      	asrs	r2, r2, #16
 80122fc:	d457      	bmi.n	80123ae <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 80122fe:	42ba      	cmp	r2, r7
 8012300:	da55      	bge.n	80123ae <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8012302:	1cee      	adds	r6, r5, #3
 8012304:	469a      	mov	sl, r3
 8012306:	f1ba 0f00 	cmp.w	sl, #0
 801230a:	dd56      	ble.n	80123ba <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801230c:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012310:	1427      	asrs	r7, r4, #16
 8012312:	1402      	asrs	r2, r0, #16
 8012314:	fb0e 7202 	mla	r2, lr, r2, r7
 8012318:	9f00      	ldr	r7, [sp, #0]
 801231a:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
 801231e:	ea5f 6e17 	movs.w	lr, r7, lsr #24
 8012322:	d03c      	beq.n	801239e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8012324:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8012328:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 801232c:	f3c7 2907 	ubfx	r9, r7, #8, #8
 8012330:	fa5f f28e 	uxtb.w	r2, lr
 8012334:	b2ff      	uxtb	r7, r7
 8012336:	f000 80dd 	beq.w	80124f4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801233a:	fa1f f882 	uxth.w	r8, r2
 801233e:	43d2      	mvns	r2, r2
 8012340:	f816 ec03 	ldrb.w	lr, [r6, #-3]
 8012344:	fb17 f708 	smulbb	r7, r7, r8
 8012348:	b2d2      	uxtb	r2, r2
 801234a:	fb19 f908 	smulbb	r9, r9, r8
 801234e:	fb0e 7702 	mla	r7, lr, r2, r7
 8012352:	fb1b f808 	smulbb	r8, fp, r8
 8012356:	b2bf      	uxth	r7, r7
 8012358:	f107 0e01 	add.w	lr, r7, #1
 801235c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8012360:	123f      	asrs	r7, r7, #8
 8012362:	f806 7c03 	strb.w	r7, [r6, #-3]
 8012366:	f816 7c02 	ldrb.w	r7, [r6, #-2]
 801236a:	fb07 9902 	mla	r9, r7, r2, r9
 801236e:	fa1f f989 	uxth.w	r9, r9
 8012372:	f109 0701 	add.w	r7, r9, #1
 8012376:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801237a:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 801237e:	fb07 8802 	mla	r8, r7, r2, r8
 8012382:	ea4f 2929 	mov.w	r9, r9, asr #8
 8012386:	fa1f f888 	uxth.w	r8, r8
 801238a:	f806 9c02 	strb.w	r9, [r6, #-2]
 801238e:	f108 0201 	add.w	r2, r8, #1
 8012392:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8012396:	ea4f 2828 	mov.w	r8, r8, asr #8
 801239a:	f806 8c01 	strb.w	r8, [r6, #-1]
 801239e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80123a0:	3603      	adds	r6, #3
 80123a2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80123a6:	4414      	add	r4, r2
 80123a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80123aa:	4410      	add	r0, r2
 80123ac:	e7ab      	b.n	8012306 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80123ae:	f04f 0e00 	mov.w	lr, #0
 80123b2:	eba3 020e 	sub.w	r2, r3, lr
 80123b6:	2a00      	cmp	r2, #0
 80123b8:	dc3d      	bgt.n	8012436 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80123ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80123be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80123c2:	441d      	add	r5, r3
 80123c4:	2900      	cmp	r1, #0
 80123c6:	f340 809c 	ble.w	8012502 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80123ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80123ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80123d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80123d4:	3901      	subs	r1, #1
 80123d6:	eeb0 6a62 	vmov.f32	s12, s5
 80123da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80123de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80123e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80123e6:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80123ea:	eeb0 6a43 	vmov.f32	s12, s6
 80123ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80123f2:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 80123f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80123fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80123fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012402:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012406:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801240a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801240e:	ee12 2a90 	vmov	r2, s5
 8012412:	eef0 2a47 	vmov.f32	s5, s14
 8012416:	fb92 f3f3 	sdiv	r3, r2, r3
 801241a:	ee13 2a10 	vmov	r2, s6
 801241e:	930f      	str	r3, [sp, #60]	; 0x3c
 8012420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012422:	eeb0 3a67 	vmov.f32	s6, s15
 8012426:	fb92 f3f3 	sdiv	r3, r2, r3
 801242a:	9a01      	ldr	r2, [sp, #4]
 801242c:	9310      	str	r3, [sp, #64]	; 0x40
 801242e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012430:	bf08      	it	eq
 8012432:	4613      	moveq	r3, r2
 8012434:	e734      	b.n	80122a0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8012436:	1427      	asrs	r7, r4, #16
 8012438:	d44d      	bmi.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801243a:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801243e:	42be      	cmp	r6, r7
 8012440:	dd49      	ble.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8012442:	ea5f 4820 	movs.w	r8, r0, asr #16
 8012446:	d446      	bmi.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8012448:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801244c:	4542      	cmp	r2, r8
 801244e:	dd42      	ble.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8012450:	b236      	sxth	r6, r6
 8012452:	9a00      	ldr	r2, [sp, #0]
 8012454:	fb08 7606 	mla	r6, r8, r6, r7
 8012458:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 801245c:	0e3a      	lsrs	r2, r7, #24
 801245e:	d03a      	beq.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8012460:	2aff      	cmp	r2, #255	; 0xff
 8012462:	b2d6      	uxtb	r6, r2
 8012464:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 8012468:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801246c:	ea4f 024e 	mov.w	r2, lr, lsl #1
 8012470:	b2ff      	uxtb	r7, r7
 8012472:	d037      	beq.n	80124e4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8012474:	fa1f f986 	uxth.w	r9, r6
 8012478:	4472      	add	r2, lr
 801247a:	43f6      	mvns	r6, r6
 801247c:	f815 8002 	ldrb.w	r8, [r5, r2]
 8012480:	fb17 f709 	smulbb	r7, r7, r9
 8012484:	fb1a fa09 	smulbb	sl, sl, r9
 8012488:	b2f6      	uxtb	r6, r6
 801248a:	fb1b f909 	smulbb	r9, fp, r9
 801248e:	fb08 7706 	mla	r7, r8, r6, r7
 8012492:	b2bf      	uxth	r7, r7
 8012494:	f107 0801 	add.w	r8, r7, #1
 8012498:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801249c:	123f      	asrs	r7, r7, #8
 801249e:	54af      	strb	r7, [r5, r2]
 80124a0:	442a      	add	r2, r5
 80124a2:	7857      	ldrb	r7, [r2, #1]
 80124a4:	fb07 aa06 	mla	sl, r7, r6, sl
 80124a8:	fa1f fa8a 	uxth.w	sl, sl
 80124ac:	f10a 0701 	add.w	r7, sl, #1
 80124b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80124b4:	7897      	ldrb	r7, [r2, #2]
 80124b6:	fb07 9906 	mla	r9, r7, r6, r9
 80124ba:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80124be:	fa1f f989 	uxth.w	r9, r9
 80124c2:	f882 a001 	strb.w	sl, [r2, #1]
 80124c6:	f109 0601 	add.w	r6, r9, #1
 80124ca:	eb06 2919 	add.w	r9, r6, r9, lsr #8
 80124ce:	ea4f 2929 	mov.w	r9, r9, asr #8
 80124d2:	f882 9002 	strb.w	r9, [r2, #2]
 80124d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80124d8:	f10e 0e01 	add.w	lr, lr, #1
 80124dc:	4414      	add	r4, r2
 80124de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80124e0:	4410      	add	r0, r2
 80124e2:	e766      	b.n	80123b2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80124e4:	4472      	add	r2, lr
 80124e6:	54af      	strb	r7, [r5, r2]
 80124e8:	442a      	add	r2, r5
 80124ea:	f882 a001 	strb.w	sl, [r2, #1]
 80124ee:	f882 b002 	strb.w	fp, [r2, #2]
 80124f2:	e7f0      	b.n	80124d6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80124f4:	f806 7c03 	strb.w	r7, [r6, #-3]
 80124f8:	f806 9c02 	strb.w	r9, [r6, #-2]
 80124fc:	f806 bc01 	strb.w	fp, [r6, #-1]
 8012500:	e74d      	b.n	801239e <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8012502:	b003      	add	sp, #12
 8012504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012508 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801250c:	b087      	sub	sp, #28
 801250e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012512:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012514:	9204      	str	r2, [sp, #16]
 8012516:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801251a:	6860      	ldr	r0, [r4, #4]
 801251c:	9205      	str	r2, [sp, #20]
 801251e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8012522:	f8dd e04c 	ldr.w	lr, [sp, #76]	; 0x4c
 8012526:	9101      	str	r1, [sp, #4]
 8012528:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801252c:	fb00 2505 	mla	r5, r0, r5, r2
 8012530:	6822      	ldr	r2, [r4, #0]
 8012532:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012536:	4415      	add	r5, r2
 8012538:	f8dc 2008 	ldr.w	r2, [ip, #8]
 801253c:	3201      	adds	r2, #1
 801253e:	f022 0201 	bic.w	r2, r2, #1
 8012542:	9202      	str	r2, [sp, #8]
 8012544:	f8dc 2000 	ldr.w	r2, [ip]
 8012548:	9203      	str	r2, [sp, #12]
 801254a:	9a01      	ldr	r2, [sp, #4]
 801254c:	2a00      	cmp	r2, #0
 801254e:	dc03      	bgt.n	8012558 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012550:	9a04      	ldr	r2, [sp, #16]
 8012552:	2a00      	cmp	r2, #0
 8012554:	f340 8135 	ble.w	80127c2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012558:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801255a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801255e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012562:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012564:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8012568:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801256c:	2b00      	cmp	r3, #0
 801256e:	dd0d      	ble.n	801258c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012570:	1422      	asrs	r2, r4, #16
 8012572:	d405      	bmi.n	8012580 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012574:	4542      	cmp	r2, r8
 8012576:	da03      	bge.n	8012580 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012578:	1402      	asrs	r2, r0, #16
 801257a:	d401      	bmi.n	8012580 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801257c:	42ba      	cmp	r2, r7
 801257e:	db06      	blt.n	801258e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012580:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012582:	4474      	add	r4, lr
 8012584:	3b01      	subs	r3, #1
 8012586:	3503      	adds	r5, #3
 8012588:	4410      	add	r0, r2
 801258a:	e7ef      	b.n	801256c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801258c:	d077      	beq.n	801267e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801258e:	1e5a      	subs	r2, r3, #1
 8012590:	fb0e 4602 	mla	r6, lr, r2, r4
 8012594:	1436      	asrs	r6, r6, #16
 8012596:	d469      	bmi.n	801266c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012598:	4546      	cmp	r6, r8
 801259a:	da67      	bge.n	801266c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801259c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801259e:	fb06 0202 	mla	r2, r6, r2, r0
 80125a2:	1412      	asrs	r2, r2, #16
 80125a4:	d462      	bmi.n	801266c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80125a6:	42ba      	cmp	r2, r7
 80125a8:	da60      	bge.n	801266c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80125aa:	1cee      	adds	r6, r5, #3
 80125ac:	4699      	mov	r9, r3
 80125ae:	f1b9 0f00 	cmp.w	r9, #0
 80125b2:	dd5f      	ble.n	8012674 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80125b4:	1422      	asrs	r2, r4, #16
 80125b6:	9902      	ldr	r1, [sp, #8]
 80125b8:	1407      	asrs	r7, r0, #16
 80125ba:	fb01 2707 	mla	r7, r1, r7, r2
 80125be:	9903      	ldr	r1, [sp, #12]
 80125c0:	087a      	lsrs	r2, r7, #1
 80125c2:	5c8a      	ldrb	r2, [r1, r2]
 80125c4:	07f9      	lsls	r1, r7, #31
 80125c6:	bf54      	ite	pl
 80125c8:	f002 020f 	andpl.w	r2, r2, #15
 80125cc:	1112      	asrmi	r2, r2, #4
 80125ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80125d2:	b2d2      	uxtb	r2, r2
 80125d4:	2a00      	cmp	r2, #0
 80125d6:	d042      	beq.n	801265e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80125d8:	497b      	ldr	r1, [pc, #492]	; (80127c8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80125da:	680f      	ldr	r7, [r1, #0]
 80125dc:	9905      	ldr	r1, [sp, #20]
 80125de:	fa5f fb87 	uxtb.w	fp, r7
 80125e2:	434a      	muls	r2, r1
 80125e4:	f102 0801 	add.w	r8, r2, #1
 80125e8:	eb08 2222 	add.w	r2, r8, r2, asr #8
 80125ec:	f816 8c03 	ldrb.w	r8, [r6, #-3]
 80125f0:	1212      	asrs	r2, r2, #8
 80125f2:	fa1f fa82 	uxth.w	sl, r2
 80125f6:	43d2      	mvns	r2, r2
 80125f8:	fb1b fb0a 	smulbb	fp, fp, sl
 80125fc:	b2d2      	uxtb	r2, r2
 80125fe:	fb08 b802 	mla	r8, r8, r2, fp
 8012602:	fa1f f888 	uxth.w	r8, r8
 8012606:	f108 0b01 	add.w	fp, r8, #1
 801260a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801260e:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8012612:	f3c7 4707 	ubfx	r7, r7, #16, #8
 8012616:	fb1b fb0a 	smulbb	fp, fp, sl
 801261a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801261e:	fb17 fa0a 	smulbb	sl, r7, sl
 8012622:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 8012626:	f806 8c03 	strb.w	r8, [r6, #-3]
 801262a:	f816 8c02 	ldrb.w	r8, [r6, #-2]
 801262e:	fb07 aa02 	mla	sl, r7, r2, sl
 8012632:	fb08 b802 	mla	r8, r8, r2, fp
 8012636:	fa1f fa8a 	uxth.w	sl, sl
 801263a:	fa1f f888 	uxth.w	r8, r8
 801263e:	f10a 0701 	add.w	r7, sl, #1
 8012642:	f108 0b01 	add.w	fp, r8, #1
 8012646:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801264a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801264e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8012652:	ea4f 2828 	mov.w	r8, r8, asr #8
 8012656:	f806 ac01 	strb.w	sl, [r6, #-1]
 801265a:	f806 8c02 	strb.w	r8, [r6, #-2]
 801265e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012660:	4474      	add	r4, lr
 8012662:	3603      	adds	r6, #3
 8012664:	f109 39ff 	add.w	r9, r9, #4294967295
 8012668:	4410      	add	r0, r2
 801266a:	e7a0      	b.n	80125ae <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801266c:	2700      	movs	r7, #0
 801266e:	1bda      	subs	r2, r3, r7
 8012670:	2a00      	cmp	r2, #0
 8012672:	dc3e      	bgt.n	80126f2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8012674:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012678:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801267c:	441d      	add	r5, r3
 801267e:	9b01      	ldr	r3, [sp, #4]
 8012680:	2b00      	cmp	r3, #0
 8012682:	f340 809e 	ble.w	80127c2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012686:	ee30 0a04 	vadd.f32	s0, s0, s8
 801268a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801268c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012690:	eeb0 6a62 	vmov.f32	s12, s5
 8012694:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012698:	ee31 1a05 	vadd.f32	s2, s2, s10
 801269c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80126a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80126a4:	eeb0 6a43 	vmov.f32	s12, s6
 80126a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80126ac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80126b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80126b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80126b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80126bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80126c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80126c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80126c8:	ee12 2a90 	vmov	r2, s5
 80126cc:	eef0 2a47 	vmov.f32	s5, s14
 80126d0:	fb92 fef3 	sdiv	lr, r2, r3
 80126d4:	ee13 2a10 	vmov	r2, s6
 80126d8:	eeb0 3a67 	vmov.f32	s6, s15
 80126dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80126e0:	9314      	str	r3, [sp, #80]	; 0x50
 80126e2:	9b01      	ldr	r3, [sp, #4]
 80126e4:	9a04      	ldr	r2, [sp, #16]
 80126e6:	3b01      	subs	r3, #1
 80126e8:	9301      	str	r3, [sp, #4]
 80126ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80126ec:	bf08      	it	eq
 80126ee:	4613      	moveq	r3, r2
 80126f0:	e72b      	b.n	801254a <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80126f2:	1426      	asrs	r6, r4, #16
 80126f4:	d460      	bmi.n	80127b8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80126f6:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80126fa:	42b2      	cmp	r2, r6
 80126fc:	dd5c      	ble.n	80127b8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80126fe:	ea5f 4820 	movs.w	r8, r0, asr #16
 8012702:	d459      	bmi.n	80127b8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8012704:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8012708:	4542      	cmp	r2, r8
 801270a:	dd55      	ble.n	80127b8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801270c:	9a02      	ldr	r2, [sp, #8]
 801270e:	9903      	ldr	r1, [sp, #12]
 8012710:	fb08 6602 	mla	r6, r8, r2, r6
 8012714:	0872      	lsrs	r2, r6, #1
 8012716:	07f6      	lsls	r6, r6, #31
 8012718:	5c8a      	ldrb	r2, [r1, r2]
 801271a:	bf54      	ite	pl
 801271c:	f002 020f 	andpl.w	r2, r2, #15
 8012720:	1112      	asrmi	r2, r2, #4
 8012722:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012726:	b2d2      	uxtb	r2, r2
 8012728:	2a00      	cmp	r2, #0
 801272a:	d045      	beq.n	80127b8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801272c:	4926      	ldr	r1, [pc, #152]	; (80127c8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801272e:	f8d1 8000 	ldr.w	r8, [r1]
 8012732:	9905      	ldr	r1, [sp, #20]
 8012734:	fa5f fb88 	uxtb.w	fp, r8
 8012738:	434a      	muls	r2, r1
 801273a:	1c56      	adds	r6, r2, #1
 801273c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012740:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8012744:	1212      	asrs	r2, r2, #8
 8012746:	f815 9006 	ldrb.w	r9, [r5, r6]
 801274a:	fa1f fa82 	uxth.w	sl, r2
 801274e:	43d2      	mvns	r2, r2
 8012750:	fb1b fb0a 	smulbb	fp, fp, sl
 8012754:	b2d2      	uxtb	r2, r2
 8012756:	fb09 b902 	mla	r9, r9, r2, fp
 801275a:	fa1f f989 	uxth.w	r9, r9
 801275e:	f109 0b01 	add.w	fp, r9, #1
 8012762:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8012766:	f3c8 2b07 	ubfx	fp, r8, #8, #8
 801276a:	f3c8 4807 	ubfx	r8, r8, #16, #8
 801276e:	fb1b fb0a 	smulbb	fp, fp, sl
 8012772:	ea4f 2929 	mov.w	r9, r9, asr #8
 8012776:	fb18 fa0a 	smulbb	sl, r8, sl
 801277a:	f805 9006 	strb.w	r9, [r5, r6]
 801277e:	442e      	add	r6, r5
 8012780:	f896 8002 	ldrb.w	r8, [r6, #2]
 8012784:	f896 9001 	ldrb.w	r9, [r6, #1]
 8012788:	fb08 aa02 	mla	sl, r8, r2, sl
 801278c:	fb09 b902 	mla	r9, r9, r2, fp
 8012790:	fa1f fa8a 	uxth.w	sl, sl
 8012794:	fa1f f989 	uxth.w	r9, r9
 8012798:	f10a 0801 	add.w	r8, sl, #1
 801279c:	f109 0b01 	add.w	fp, r9, #1
 80127a0:	eb08 2a1a 	add.w	sl, r8, sl, lsr #8
 80127a4:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80127a8:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80127ac:	ea4f 2929 	mov.w	r9, r9, asr #8
 80127b0:	f886 a002 	strb.w	sl, [r6, #2]
 80127b4:	f886 9001 	strb.w	r9, [r6, #1]
 80127b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80127ba:	4474      	add	r4, lr
 80127bc:	3701      	adds	r7, #1
 80127be:	4410      	add	r0, r2
 80127c0:	e755      	b.n	801266e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80127c2:	b007      	add	sp, #28
 80127c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127c8:	24006be0 	.word	0x24006be0

080127cc <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80127cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127d0:	b085      	sub	sp, #20
 80127d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80127d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80127d8:	9203      	str	r2, [sp, #12]
 80127da:	6860      	ldr	r0, [r4, #4]
 80127dc:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80127e0:	9100      	str	r1, [sp, #0]
 80127e2:	e9dd 2614 	ldrd	r2, r6, [sp, #80]	; 0x50
 80127e6:	fb00 2606 	mla	r6, r0, r6, r2
 80127ea:	6822      	ldr	r2, [r4, #0]
 80127ec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80127f0:	4416      	add	r6, r2
 80127f2:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80127f6:	3201      	adds	r2, #1
 80127f8:	f022 0201 	bic.w	r2, r2, #1
 80127fc:	9201      	str	r2, [sp, #4]
 80127fe:	f8dc 2000 	ldr.w	r2, [ip]
 8012802:	9202      	str	r2, [sp, #8]
 8012804:	9a00      	ldr	r2, [sp, #0]
 8012806:	2a00      	cmp	r2, #0
 8012808:	dc03      	bgt.n	8012812 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801280a:	9a03      	ldr	r2, [sp, #12]
 801280c:	2a00      	cmp	r2, #0
 801280e:	f340 8140 	ble.w	8012a92 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8012812:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012814:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012818:	f502 4500 	add.w	r5, r2, #32768	; 0x8000
 801281c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801281e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8012822:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012826:	2b00      	cmp	r3, #0
 8012828:	dd0e      	ble.n	8012848 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801282a:	142a      	asrs	r2, r5, #16
 801282c:	d405      	bmi.n	801283a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801282e:	4572      	cmp	r2, lr
 8012830:	da03      	bge.n	801283a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012832:	1422      	asrs	r2, r4, #16
 8012834:	d401      	bmi.n	801283a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012836:	42ba      	cmp	r2, r7
 8012838:	db07      	blt.n	801284a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801283a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801283c:	3b01      	subs	r3, #1
 801283e:	3603      	adds	r6, #3
 8012840:	4415      	add	r5, r2
 8012842:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012844:	4414      	add	r4, r2
 8012846:	e7ee      	b.n	8012826 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8012848:	d072      	beq.n	8012930 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801284a:	1e5a      	subs	r2, r3, #1
 801284c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801284e:	fb00 5002 	mla	r0, r0, r2, r5
 8012852:	1400      	asrs	r0, r0, #16
 8012854:	d463      	bmi.n	801291e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012856:	4570      	cmp	r0, lr
 8012858:	da61      	bge.n	801291e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801285a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801285c:	fb00 4202 	mla	r2, r0, r2, r4
 8012860:	1412      	asrs	r2, r2, #16
 8012862:	d45c      	bmi.n	801291e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012864:	42ba      	cmp	r2, r7
 8012866:	da5a      	bge.n	801291e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012868:	1cf0      	adds	r0, r6, #3
 801286a:	469a      	mov	sl, r3
 801286c:	f1ba 0f00 	cmp.w	sl, #0
 8012870:	dd59      	ble.n	8012926 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 8012872:	142a      	asrs	r2, r5, #16
 8012874:	9901      	ldr	r1, [sp, #4]
 8012876:	1427      	asrs	r7, r4, #16
 8012878:	fb01 2707 	mla	r7, r1, r7, r2
 801287c:	9902      	ldr	r1, [sp, #8]
 801287e:	087a      	lsrs	r2, r7, #1
 8012880:	5c8a      	ldrb	r2, [r1, r2]
 8012882:	07f9      	lsls	r1, r7, #31
 8012884:	bf54      	ite	pl
 8012886:	f002 020f 	andpl.w	r2, r2, #15
 801288a:	1112      	asrmi	r2, r2, #4
 801288c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012890:	b2d2      	uxtb	r2, r2
 8012892:	2a00      	cmp	r2, #0
 8012894:	d03b      	beq.n	801290e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8012896:	4980      	ldr	r1, [pc, #512]	; (8012a98 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 8012898:	2aff      	cmp	r2, #255	; 0xff
 801289a:	680f      	ldr	r7, [r1, #0]
 801289c:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 80128a0:	f3c7 2907 	ubfx	r9, r7, #8, #8
 80128a4:	b2ff      	uxtb	r7, r7
 80128a6:	f000 80ed 	beq.w	8012a84 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 80128aa:	fa1f f882 	uxth.w	r8, r2
 80128ae:	43d2      	mvns	r2, r2
 80128b0:	f810 ec03 	ldrb.w	lr, [r0, #-3]
 80128b4:	fb17 f708 	smulbb	r7, r7, r8
 80128b8:	b2d2      	uxtb	r2, r2
 80128ba:	fb19 f908 	smulbb	r9, r9, r8
 80128be:	fb0e 7702 	mla	r7, lr, r2, r7
 80128c2:	fb1b f808 	smulbb	r8, fp, r8
 80128c6:	b2bf      	uxth	r7, r7
 80128c8:	f107 0e01 	add.w	lr, r7, #1
 80128cc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80128d0:	123f      	asrs	r7, r7, #8
 80128d2:	f800 7c03 	strb.w	r7, [r0, #-3]
 80128d6:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 80128da:	fb07 9902 	mla	r9, r7, r2, r9
 80128de:	fa1f f989 	uxth.w	r9, r9
 80128e2:	f109 0701 	add.w	r7, r9, #1
 80128e6:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80128ea:	f810 7c01 	ldrb.w	r7, [r0, #-1]
 80128ee:	fb07 8802 	mla	r8, r7, r2, r8
 80128f2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80128f6:	fa1f f888 	uxth.w	r8, r8
 80128fa:	f800 9c02 	strb.w	r9, [r0, #-2]
 80128fe:	f108 0201 	add.w	r2, r8, #1
 8012902:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8012906:	ea4f 2828 	mov.w	r8, r8, asr #8
 801290a:	f800 8c01 	strb.w	r8, [r0, #-1]
 801290e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012910:	3003      	adds	r0, #3
 8012912:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012916:	4415      	add	r5, r2
 8012918:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801291a:	4414      	add	r4, r2
 801291c:	e7a6      	b.n	801286c <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801291e:	2700      	movs	r7, #0
 8012920:	1bda      	subs	r2, r3, r7
 8012922:	2a00      	cmp	r2, #0
 8012924:	dc40      	bgt.n	80129a8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012926:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801292a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801292e:	441e      	add	r6, r3
 8012930:	9b00      	ldr	r3, [sp, #0]
 8012932:	2b00      	cmp	r3, #0
 8012934:	f340 80ad 	ble.w	8012a92 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8012938:	ee30 0a04 	vadd.f32	s0, s0, s8
 801293c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801293e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012942:	eeb0 6a62 	vmov.f32	s12, s5
 8012946:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801294a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801294e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012952:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012956:	eeb0 6a43 	vmov.f32	s12, s6
 801295a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801295e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012962:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012966:	ee61 7a27 	vmul.f32	s15, s2, s15
 801296a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801296e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012972:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012976:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801297a:	ee12 2a90 	vmov	r2, s5
 801297e:	eef0 2a47 	vmov.f32	s5, s14
 8012982:	fb92 f3f3 	sdiv	r3, r2, r3
 8012986:	ee13 2a10 	vmov	r2, s6
 801298a:	9311      	str	r3, [sp, #68]	; 0x44
 801298c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801298e:	eeb0 3a67 	vmov.f32	s6, s15
 8012992:	fb92 f3f3 	sdiv	r3, r2, r3
 8012996:	9312      	str	r3, [sp, #72]	; 0x48
 8012998:	9b00      	ldr	r3, [sp, #0]
 801299a:	9a03      	ldr	r2, [sp, #12]
 801299c:	3b01      	subs	r3, #1
 801299e:	9300      	str	r3, [sp, #0]
 80129a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80129a2:	bf08      	it	eq
 80129a4:	4613      	moveq	r3, r2
 80129a6:	e72d      	b.n	8012804 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80129a8:	1428      	asrs	r0, r5, #16
 80129aa:	d45c      	bmi.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80129ac:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80129b0:	4282      	cmp	r2, r0
 80129b2:	dd58      	ble.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80129b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80129b8:	d455      	bmi.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80129ba:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80129be:	4572      	cmp	r2, lr
 80129c0:	dd51      	ble.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80129c2:	9a01      	ldr	r2, [sp, #4]
 80129c4:	9902      	ldr	r1, [sp, #8]
 80129c6:	fb0e 0002 	mla	r0, lr, r2, r0
 80129ca:	0842      	lsrs	r2, r0, #1
 80129cc:	07c0      	lsls	r0, r0, #31
 80129ce:	5c8a      	ldrb	r2, [r1, r2]
 80129d0:	bf54      	ite	pl
 80129d2:	f002 020f 	andpl.w	r2, r2, #15
 80129d6:	1112      	asrmi	r2, r2, #4
 80129d8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80129dc:	b2d2      	uxtb	r2, r2
 80129de:	2a00      	cmp	r2, #0
 80129e0:	d041      	beq.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80129e2:	492d      	ldr	r1, [pc, #180]	; (8012a98 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 80129e4:	2aff      	cmp	r2, #255	; 0xff
 80129e6:	6808      	ldr	r0, [r1, #0]
 80129e8:	f3c0 4b07 	ubfx	fp, r0, #16, #8
 80129ec:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80129f0:	fa5f fe80 	uxtb.w	lr, r0
 80129f4:	ea4f 0047 	mov.w	r0, r7, lsl #1
 80129f8:	d03b      	beq.n	8012a72 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80129fa:	fa1f f982 	uxth.w	r9, r2
 80129fe:	4438      	add	r0, r7
 8012a00:	43d2      	mvns	r2, r2
 8012a02:	f816 8000 	ldrb.w	r8, [r6, r0]
 8012a06:	fb1e fe09 	smulbb	lr, lr, r9
 8012a0a:	fb1a fa09 	smulbb	sl, sl, r9
 8012a0e:	b2d2      	uxtb	r2, r2
 8012a10:	fb1b f909 	smulbb	r9, fp, r9
 8012a14:	fb08 ee02 	mla	lr, r8, r2, lr
 8012a18:	fa1f fe8e 	uxth.w	lr, lr
 8012a1c:	f10e 0801 	add.w	r8, lr, #1
 8012a20:	eb08 2e1e 	add.w	lr, r8, lr, lsr #8
 8012a24:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8012a28:	f806 e000 	strb.w	lr, [r6, r0]
 8012a2c:	4430      	add	r0, r6
 8012a2e:	f890 e001 	ldrb.w	lr, [r0, #1]
 8012a32:	fb0e aa02 	mla	sl, lr, r2, sl
 8012a36:	fa1f fa8a 	uxth.w	sl, sl
 8012a3a:	f10a 0e01 	add.w	lr, sl, #1
 8012a3e:	eb0e 2a1a 	add.w	sl, lr, sl, lsr #8
 8012a42:	f890 e002 	ldrb.w	lr, [r0, #2]
 8012a46:	fb0e 9902 	mla	r9, lr, r2, r9
 8012a4a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8012a4e:	fa1f f989 	uxth.w	r9, r9
 8012a52:	f880 a001 	strb.w	sl, [r0, #1]
 8012a56:	f109 0201 	add.w	r2, r9, #1
 8012a5a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8012a5e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8012a62:	f880 9002 	strb.w	r9, [r0, #2]
 8012a66:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012a68:	3701      	adds	r7, #1
 8012a6a:	4415      	add	r5, r2
 8012a6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012a6e:	4414      	add	r4, r2
 8012a70:	e756      	b.n	8012920 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8012a72:	4438      	add	r0, r7
 8012a74:	f806 e000 	strb.w	lr, [r6, r0]
 8012a78:	4430      	add	r0, r6
 8012a7a:	f880 a001 	strb.w	sl, [r0, #1]
 8012a7e:	f880 b002 	strb.w	fp, [r0, #2]
 8012a82:	e7f0      	b.n	8012a66 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012a84:	f800 7c03 	strb.w	r7, [r0, #-3]
 8012a88:	f800 9c02 	strb.w	r9, [r0, #-2]
 8012a8c:	f800 bc01 	strb.w	fp, [r0, #-1]
 8012a90:	e73d      	b.n	801290e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8012a92:	b005      	add	sp, #20
 8012a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a98:	24006be0 	.word	0x24006be0

08012a9c <_ZN8touchgfx8LCD24bppD1Ev>:
 8012a9c:	4770      	bx	lr

08012a9e <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW9D1Ev>:
 8012a9e:	4770      	bx	lr

08012aa0 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLED1Ev>:
 8012aa0:	4770      	bx	lr

08012aa2 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L4D1Ev>:
 8012aa2:	4770      	bx	lr

08012aa4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012aa4:	4770      	bx	lr

08012aa6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012aa6:	4770      	bx	lr

08012aa8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012aa8:	4770      	bx	lr

08012aaa <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012aaa:	4770      	bx	lr

08012aac <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012aac:	4770      	bx	lr

08012aae <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012aae:	4770      	bx	lr

08012ab0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012ab0:	4770      	bx	lr

08012ab2 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012ab2:	4770      	bx	lr

08012ab4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012ab4:	4770      	bx	lr

08012ab6 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012ab6:	4770      	bx	lr

08012ab8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012ab8:	4770      	bx	lr

08012aba <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012aba:	4770      	bx	lr

08012abc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012abc:	4770      	bx	lr

08012abe <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012abe:	4770      	bx	lr

08012ac0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012ac0:	4770      	bx	lr

08012ac2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012ac2:	4770      	bx	lr

08012ac4 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012ac4:	4770      	bx	lr

08012ac6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012ac6:	4770      	bx	lr

08012ac8 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012ac8:	4770      	bx	lr

08012aca <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012aca:	4770      	bx	lr

08012acc <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012acc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ace:	4606      	mov	r6, r0
 8012ad0:	b087      	sub	sp, #28
 8012ad2:	4615      	mov	r5, r2
 8012ad4:	461f      	mov	r7, r3
 8012ad6:	b353      	cbz	r3, 8012b2e <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012ad8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012adc:	2b00      	cmp	r3, #0
 8012ade:	dd26      	ble.n	8012b2e <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012ae0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012ae4:	2b00      	cmp	r3, #0
 8012ae6:	dd22      	ble.n	8012b2e <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012ae8:	6808      	ldr	r0, [r1, #0]
 8012aea:	aa04      	add	r2, sp, #16
 8012aec:	6849      	ldr	r1, [r1, #4]
 8012aee:	4c1b      	ldr	r4, [pc, #108]	; (8012b5c <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8012af0:	c203      	stmia	r2!, {r0, r1}
 8012af2:	a804      	add	r0, sp, #16
 8012af4:	f7fb fa70 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012af8:	6820      	ldr	r0, [r4, #0]
 8012afa:	6803      	ldr	r3, [r0, #0]
 8012afc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012afe:	4798      	blx	r3
 8012b00:	2fff      	cmp	r7, #255	; 0xff
 8012b02:	d016      	beq.n	8012b32 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8012b04:	f010 0f08 	tst.w	r0, #8
 8012b08:	6820      	ldr	r0, [r4, #0]
 8012b0a:	d015      	beq.n	8012b38 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8012b0c:	2400      	movs	r4, #0
 8012b0e:	6801      	ldr	r1, [r0, #0]
 8012b10:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012b14:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012b18:	e9cd 7402 	strd	r7, r4, [sp, #8]
 8012b1c:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8012b20:	9401      	str	r4, [sp, #4]
 8012b22:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012b26:	9400      	str	r4, [sp, #0]
 8012b28:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8012b2a:	4629      	mov	r1, r5
 8012b2c:	47a0      	blx	r4
 8012b2e:	b007      	add	sp, #28
 8012b30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b32:	f010 0f02 	tst.w	r0, #2
 8012b36:	e7e7      	b.n	8012b08 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x3c>
 8012b38:	6803      	ldr	r3, [r0, #0]
 8012b3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012b3c:	4798      	blx	r3
 8012b3e:	4b08      	ldr	r3, [pc, #32]	; (8012b60 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x94>)
 8012b40:	4601      	mov	r1, r0
 8012b42:	4630      	mov	r0, r6
 8012b44:	881a      	ldrh	r2, [r3, #0]
 8012b46:	6833      	ldr	r3, [r6, #0]
 8012b48:	e9cd 5700 	strd	r5, r7, [sp]
 8012b4c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8012b4e:	ab04      	add	r3, sp, #16
 8012b50:	47a8      	blx	r5
 8012b52:	6820      	ldr	r0, [r4, #0]
 8012b54:	6803      	ldr	r3, [r0, #0]
 8012b56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b58:	4798      	blx	r3
 8012b5a:	e7e8      	b.n	8012b2e <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012b5c:	24006bd8 	.word	0x24006bd8
 8012b60:	24006bd2 	.word	0x24006bd2

08012b64 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012b64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b68:	b08b      	sub	sp, #44	; 0x2c
 8012b6a:	460d      	mov	r5, r1
 8012b6c:	4616      	mov	r6, r2
 8012b6e:	f89d 8048 	ldrb.w	r8, [sp, #72]	; 0x48
 8012b72:	f1b8 0f00 	cmp.w	r8, #0
 8012b76:	d047      	beq.n	8012c08 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8012b78:	6810      	ldr	r0, [r2, #0]
 8012b7a:	ac06      	add	r4, sp, #24
 8012b7c:	6851      	ldr	r1, [r2, #4]
 8012b7e:	4f51      	ldr	r7, [pc, #324]	; (8012cc4 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x160>)
 8012b80:	c403      	stmia	r4!, {r0, r1}
 8012b82:	6818      	ldr	r0, [r3, #0]
 8012b84:	ac08      	add	r4, sp, #32
 8012b86:	6859      	ldr	r1, [r3, #4]
 8012b88:	c403      	stmia	r4!, {r0, r1}
 8012b8a:	a806      	add	r0, sp, #24
 8012b8c:	f7fb fa24 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b90:	4631      	mov	r1, r6
 8012b92:	a808      	add	r0, sp, #32
 8012b94:	f7fb fa48 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b98:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012b9c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012ba0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012ba4:	6838      	ldr	r0, [r7, #0]
 8012ba6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012baa:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8012bae:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	; 0x26
 8012bb2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012bb6:	440d      	add	r5, r1
 8012bb8:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012bbc:	440a      	add	r2, r1
 8012bbe:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012bc2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012bc6:	4413      	add	r3, r2
 8012bc8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012bcc:	6803      	ldr	r3, [r0, #0]
 8012bce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012bd0:	4798      	blx	r3
 8012bd2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8012bd6:	d01a      	beq.n	8012c0e <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xaa>
 8012bd8:	f010 0f04 	tst.w	r0, #4
 8012bdc:	6838      	ldr	r0, [r7, #0]
 8012bde:	d019      	beq.n	8012c14 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb0>
 8012be0:	2100      	movs	r1, #0
 8012be2:	6807      	ldr	r7, [r0, #0]
 8012be4:	b2a4      	uxth	r4, r4
 8012be6:	f8cd 800c 	str.w	r8, [sp, #12]
 8012bea:	b2b6      	uxth	r6, r6
 8012bec:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012bf0:	9401      	str	r4, [sp, #4]
 8012bf2:	9600      	str	r6, [sp, #0]
 8012bf4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012bf8:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8012bfc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012c00:	9102      	str	r1, [sp, #8]
 8012c02:	4629      	mov	r1, r5
 8012c04:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 8012c06:	47a0      	blx	r4
 8012c08:	b00b      	add	sp, #44	; 0x2c
 8012c0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c0e:	f010 0f01 	tst.w	r0, #1
 8012c12:	e7e3      	b.n	8012bdc <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x78>
 8012c14:	6803      	ldr	r3, [r0, #0]
 8012c16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012c18:	4798      	blx	r3
 8012c1a:	4a2b      	ldr	r2, [pc, #172]	; (8012cc8 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x164>)
 8012c1c:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8012c20:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8012c24:	8813      	ldrh	r3, [r2, #0]
 8012c26:	f9bd c020 	ldrsh.w	ip, [sp, #32]
 8012c2a:	fb03 f404 	mul.w	r4, r3, r4
 8012c2e:	fb03 c101 	mla	r1, r3, r1, ip
 8012c32:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012c36:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012c3a:	4408      	add	r0, r1
 8012c3c:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 8012c40:	4404      	add	r4, r0
 8012c42:	d02e      	beq.n	8012ca2 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x13e>
 8012c44:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8012c48:	1b9b      	subs	r3, r3, r6
 8012c4a:	f1c8 0cff 	rsb	ip, r8, #255	; 0xff
 8012c4e:	1b96      	subs	r6, r2, r6
 8012c50:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012c54:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8012c58:	42a0      	cmp	r0, r4
 8012c5a:	d22d      	bcs.n	8012cb8 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8012c5c:	eb00 0e01 	add.w	lr, r0, r1
 8012c60:	4570      	cmp	r0, lr
 8012c62:	d210      	bcs.n	8012c86 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x122>
 8012c64:	f890 9000 	ldrb.w	r9, [r0]
 8012c68:	f815 2b01 	ldrb.w	r2, [r5], #1
 8012c6c:	fb19 f90c 	smulbb	r9, r9, ip
 8012c70:	fb02 9208 	mla	r2, r2, r8, r9
 8012c74:	b292      	uxth	r2, r2
 8012c76:	f102 0901 	add.w	r9, r2, #1
 8012c7a:	eb09 2212 	add.w	r2, r9, r2, lsr #8
 8012c7e:	1212      	asrs	r2, r2, #8
 8012c80:	f800 2b01 	strb.w	r2, [r0], #1
 8012c84:	e7ec      	b.n	8012c60 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8012c86:	4418      	add	r0, r3
 8012c88:	4435      	add	r5, r6
 8012c8a:	e7e5      	b.n	8012c58 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8012c8c:	8813      	ldrh	r3, [r2, #0]
 8012c8e:	1b9b      	subs	r3, r3, r6
 8012c90:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012c94:	4418      	add	r0, r3
 8012c96:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012c9a:	1b9b      	subs	r3, r3, r6
 8012c9c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012ca0:	441d      	add	r5, r3
 8012ca2:	42a0      	cmp	r0, r4
 8012ca4:	d208      	bcs.n	8012cb8 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8012ca6:	eb00 0c01 	add.w	ip, r0, r1
 8012caa:	4560      	cmp	r0, ip
 8012cac:	d2ee      	bcs.n	8012c8c <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x128>
 8012cae:	f815 3b01 	ldrb.w	r3, [r5], #1
 8012cb2:	f800 3b01 	strb.w	r3, [r0], #1
 8012cb6:	e7f8      	b.n	8012caa <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x146>
 8012cb8:	6838      	ldr	r0, [r7, #0]
 8012cba:	6803      	ldr	r3, [r0, #0]
 8012cbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012cbe:	4798      	blx	r3
 8012cc0:	e7a2      	b.n	8012c08 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8012cc2:	bf00      	nop
 8012cc4:	24006bd8 	.word	0x24006bd8
 8012cc8:	24006bd2 	.word	0x24006bd2

08012ccc <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8012ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012cce:	2300      	movs	r3, #0
 8012cd0:	b085      	sub	sp, #20
 8012cd2:	9300      	str	r3, [sp, #0]
 8012cd4:	4b41      	ldr	r3, [pc, #260]	; (8012ddc <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x110>)
 8012cd6:	781b      	ldrb	r3, [r3, #0]
 8012cd8:	2b00      	cmp	r3, #0
 8012cda:	d136      	bne.n	8012d4a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7e>
 8012cdc:	4a40      	ldr	r2, [pc, #256]	; (8012de0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8012cde:	f9b2 2000 	ldrsh.w	r2, [r2]
 8012ce2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012ce6:	2b00      	cmp	r3, #0
 8012ce8:	d131      	bne.n	8012d4e <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x82>
 8012cea:	4b3e      	ldr	r3, [pc, #248]	; (8012de4 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8012cec:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012cf0:	ac02      	add	r4, sp, #8
 8012cf2:	6808      	ldr	r0, [r1, #0]
 8012cf4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012cf8:	ab02      	add	r3, sp, #8
 8012cfa:	6849      	ldr	r1, [r1, #4]
 8012cfc:	4d3a      	ldr	r5, [pc, #232]	; (8012de8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x11c>)
 8012cfe:	c303      	stmia	r3!, {r0, r1}
 8012d00:	4669      	mov	r1, sp
 8012d02:	4620      	mov	r0, r4
 8012d04:	f7fb f990 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d08:	4668      	mov	r0, sp
 8012d0a:	f7fb f965 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d0e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012d12:	f8bd 2000 	ldrh.w	r2, [sp]
 8012d16:	462e      	mov	r6, r5
 8012d18:	6828      	ldr	r0, [r5, #0]
 8012d1a:	4413      	add	r3, r2
 8012d1c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012d20:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012d24:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012d28:	4413      	add	r3, r2
 8012d2a:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012d2e:	6803      	ldr	r3, [r0, #0]
 8012d30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d32:	4798      	blx	r3
 8012d34:	f010 0f01 	tst.w	r0, #1
 8012d38:	d00b      	beq.n	8012d52 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8012d3a:	6828      	ldr	r0, [r5, #0]
 8012d3c:	6803      	ldr	r3, [r0, #0]
 8012d3e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012d42:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012d44:	4798      	blx	r3
 8012d46:	b005      	add	sp, #20
 8012d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d4a:	4a26      	ldr	r2, [pc, #152]	; (8012de4 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8012d4c:	e7c7      	b.n	8012cde <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8012d4e:	4b24      	ldr	r3, [pc, #144]	; (8012de0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8012d50:	e7cc      	b.n	8012cec <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012d52:	6830      	ldr	r0, [r6, #0]
 8012d54:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8012d58:	6803      	ldr	r3, [r0, #0]
 8012d5a:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012d5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d60:	4798      	blx	r3
 8012d62:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8012d66:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012d6a:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 8012d6e:	fb14 3402 	smlabb	r4, r4, r2, r3
 8012d72:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012d76:	4404      	add	r4, r0
 8012d78:	6830      	ldr	r0, [r6, #0]
 8012d7a:	6803      	ldr	r3, [r0, #0]
 8012d7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012d7e:	4798      	blx	r3
 8012d80:	4917      	ldr	r1, [pc, #92]	; (8012de0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8012d82:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012d86:	880b      	ldrh	r3, [r1, #0]
 8012d88:	f9bd c008 	ldrsh.w	ip, [sp, #8]
 8012d8c:	fb03 c202 	mla	r2, r3, r2, ip
 8012d90:	437b      	muls	r3, r7
 8012d92:	eb05 0745 	add.w	r7, r5, r5, lsl #1
 8012d96:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012d9a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012d9e:	4410      	add	r0, r2
 8012da0:	18c2      	adds	r2, r0, r3
 8012da2:	4290      	cmp	r0, r2
 8012da4:	d214      	bcs.n	8012dd0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>
 8012da6:	eb00 0c07 	add.w	ip, r0, r7
 8012daa:	4560      	cmp	r0, ip
 8012dac:	d204      	bcs.n	8012db8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xec>
 8012dae:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012db2:	f800 3b01 	strb.w	r3, [r0], #1
 8012db6:	e7f8      	b.n	8012daa <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xde>
 8012db8:	880b      	ldrh	r3, [r1, #0]
 8012dba:	1b5b      	subs	r3, r3, r5
 8012dbc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012dc0:	4418      	add	r0, r3
 8012dc2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012dc6:	1b5b      	subs	r3, r3, r5
 8012dc8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012dcc:	441c      	add	r4, r3
 8012dce:	e7e8      	b.n	8012da2 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd6>
 8012dd0:	6830      	ldr	r0, [r6, #0]
 8012dd2:	6803      	ldr	r3, [r0, #0]
 8012dd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012dd6:	4798      	blx	r3
 8012dd8:	e7b5      	b.n	8012d46 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012dda:	bf00      	nop
 8012ddc:	24006bd0 	.word	0x24006bd0
 8012de0:	24006bd2 	.word	0x24006bd2
 8012de4:	24006bd4 	.word	0x24006bd4
 8012de8:	24006bd8 	.word	0x24006bd8

08012dec <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8012dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012df0:	b08f      	sub	sp, #60	; 0x3c
 8012df2:	461c      	mov	r4, r3
 8012df4:	9203      	str	r2, [sp, #12]
 8012df6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012dfa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012dfc:	6820      	ldr	r0, [r4, #0]
 8012dfe:	9100      	str	r1, [sp, #0]
 8012e00:	9204      	str	r2, [sp, #16]
 8012e02:	aa0a      	add	r2, sp, #40	; 0x28
 8012e04:	6861      	ldr	r1, [r4, #4]
 8012e06:	c203      	stmia	r2!, {r0, r1}
 8012e08:	6818      	ldr	r0, [r3, #0]
 8012e0a:	aa0c      	add	r2, sp, #48	; 0x30
 8012e0c:	6859      	ldr	r1, [r3, #4]
 8012e0e:	c203      	stmia	r2!, {r0, r1}
 8012e10:	a80a      	add	r0, sp, #40	; 0x28
 8012e12:	f7fb f8e1 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e16:	4621      	mov	r1, r4
 8012e18:	a80c      	add	r0, sp, #48	; 0x30
 8012e1a:	f7fb f905 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012e1e:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012e22:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8012e26:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8012e2a:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8012e2e:	bfdb      	ittet	le
 8012e30:	b2b3      	uxthle	r3, r6
 8012e32:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8012e36:	2301      	movgt	r3, #1
 8012e38:	fb92 f3f3 	sdivle	r3, r2, r3
 8012e3c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012e40:	441d      	add	r5, r3
 8012e42:	fb92 f1f3 	sdiv	r1, r2, r3
 8012e46:	fa1f fc81 	uxth.w	ip, r1
 8012e4a:	3d01      	subs	r5, #1
 8012e4c:	fb0c 2413 	mls	r4, ip, r3, r2
 8012e50:	4661      	mov	r1, ip
 8012e52:	fb14 f406 	smulbb	r4, r4, r6
 8012e56:	4404      	add	r4, r0
 8012e58:	fb95 f5f3 	sdiv	r5, r5, r3
 8012e5c:	b2a4      	uxth	r4, r4
 8012e5e:	b131      	cbz	r1, 8012e6e <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x82>
 8012e60:	9b03      	ldr	r3, [sp, #12]
 8012e62:	9900      	ldr	r1, [sp, #0]
 8012e64:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012e68:	ba1b      	rev	r3, r3
 8012e6a:	4419      	add	r1, r3
 8012e6c:	9100      	str	r1, [sp, #0]
 8012e6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012e72:	b2ad      	uxth	r5, r5
 8012e74:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012e78:	4418      	add	r0, r3
 8012e7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012e7e:	00ad      	lsls	r5, r5, #2
 8012e80:	441a      	add	r2, r3
 8012e82:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012e86:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8012e8a:	9301      	str	r3, [sp, #4]
 8012e8c:	4b79      	ldr	r3, [pc, #484]	; (8013074 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x288>)
 8012e8e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012e92:	6818      	ldr	r0, [r3, #0]
 8012e94:	6803      	ldr	r3, [r0, #0]
 8012e96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e98:	4798      	blx	r3
 8012e9a:	4a77      	ldr	r2, [pc, #476]	; (8013078 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x28c>)
 8012e9c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8012ea0:	2c00      	cmp	r4, #0
 8012ea2:	8813      	ldrh	r3, [r2, #0]
 8012ea4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8012ea8:	9209      	str	r2, [sp, #36]	; 0x24
 8012eaa:	fb03 c101 	mla	r1, r3, r1, ip
 8012eae:	fb06 f303 	mul.w	r3, r6, r3
 8012eb2:	bf18      	it	ne
 8012eb4:	2600      	movne	r6, #0
 8012eb6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012eba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012ebe:	4408      	add	r0, r1
 8012ec0:	4403      	add	r3, r0
 8012ec2:	9306      	str	r3, [sp, #24]
 8012ec4:	f105 0304 	add.w	r3, r5, #4
 8012ec8:	9305      	str	r3, [sp, #20]
 8012eca:	9b01      	ldr	r3, [sp, #4]
 8012ecc:	bf08      	it	eq
 8012ece:	461e      	moveq	r6, r3
 8012ed0:	2300      	movs	r3, #0
 8012ed2:	b2b6      	uxth	r6, r6
 8012ed4:	9302      	str	r3, [sp, #8]
 8012ed6:	9a06      	ldr	r2, [sp, #24]
 8012ed8:	4290      	cmp	r0, r2
 8012eda:	f080 80c2 	bcs.w	8013062 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x276>
 8012ede:	b963      	cbnz	r3, 8012efa <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x10e>
 8012ee0:	9b00      	ldr	r3, [sp, #0]
 8012ee2:	781a      	ldrb	r2, [r3, #0]
 8012ee4:	0993      	lsrs	r3, r2, #6
 8012ee6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8012eea:	9202      	str	r2, [sp, #8]
 8012eec:	1e5a      	subs	r2, r3, #1
 8012eee:	2a02      	cmp	r2, #2
 8012ef0:	d815      	bhi.n	8012f1e <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x132>
 8012ef2:	9a00      	ldr	r2, [sp, #0]
 8012ef4:	b29b      	uxth	r3, r3
 8012ef6:	3201      	adds	r2, #1
 8012ef8:	9200      	str	r2, [sp, #0]
 8012efa:	b1b4      	cbz	r4, 8012f2a <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8012efc:	429c      	cmp	r4, r3
 8012efe:	bf91      	iteee	ls
 8012f00:	1b1c      	subls	r4, r3, r4
 8012f02:	1ae4      	subhi	r4, r4, r3
 8012f04:	4635      	movhi	r5, r6
 8012f06:	f04f 0e00 	movhi.w	lr, #0
 8012f0a:	bf9b      	ittet	ls
 8012f0c:	fa1f fe84 	uxthls.w	lr, r4
 8012f10:	f8bd 5004 	ldrhls.w	r5, [sp, #4]
 8012f14:	b2a4      	uxthhi	r4, r4
 8012f16:	2400      	movls	r4, #0
 8012f18:	4673      	mov	r3, lr
 8012f1a:	462e      	mov	r6, r5
 8012f1c:	e7db      	b.n	8012ed6 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8012f1e:	9a00      	ldr	r2, [sp, #0]
 8012f20:	9b00      	ldr	r3, [sp, #0]
 8012f22:	3202      	adds	r2, #2
 8012f24:	785b      	ldrb	r3, [r3, #1]
 8012f26:	9200      	str	r2, [sp, #0]
 8012f28:	e7e7      	b.n	8012efa <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x10e>
 8012f2a:	2204      	movs	r2, #4
 8012f2c:	9905      	ldr	r1, [sp, #20]
 8012f2e:	429e      	cmp	r6, r3
 8012f30:	4615      	mov	r5, r2
 8012f32:	9a02      	ldr	r2, [sp, #8]
 8012f34:	bf94      	ite	ls
 8012f36:	eba3 0e06 	subls.w	lr, r3, r6
 8012f3a:	46a6      	movhi	lr, r4
 8012f3c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012f40:	9903      	ldr	r1, [sp, #12]
 8012f42:	bf8c      	ite	hi
 8012f44:	1af5      	subhi	r5, r6, r3
 8012f46:	fa1f fe8e 	uxthls.w	lr, lr
 8012f4a:	f851 c002 	ldr.w	ip, [r1, r2]
 8012f4e:	bf9a      	itte	ls
 8012f50:	4625      	movls	r5, r4
 8012f52:	4632      	movls	r2, r6
 8012f54:	b2ad      	uxthhi	r5, r5
 8012f56:	ea4f 611c 	mov.w	r1, ip, lsr #24
 8012f5a:	bf88      	it	hi
 8012f5c:	461a      	movhi	r2, r3
 8012f5e:	b179      	cbz	r1, 8012f80 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x194>
 8012f60:	29ff      	cmp	r1, #255	; 0xff
 8012f62:	fa5f f98c 	uxtb.w	r9, ip
 8012f66:	f3cc 2807 	ubfx	r8, ip, #8, #8
 8012f6a:	f3cc 4c07 	ubfx	ip, ip, #16, #8
 8012f6e:	d126      	bne.n	8012fbe <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8012f70:	9f04      	ldr	r7, [sp, #16]
 8012f72:	2fff      	cmp	r7, #255	; 0xff
 8012f74:	d123      	bne.n	8012fbe <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8012f76:	4682      	mov	sl, r0
 8012f78:	4611      	mov	r1, r2
 8012f7a:	f10a 0a03 	add.w	sl, sl, #3
 8012f7e:	b9a9      	cbnz	r1, 8012fac <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c0>
 8012f80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012f84:	429e      	cmp	r6, r3
 8012f86:	4410      	add	r0, r2
 8012f88:	d8c6      	bhi.n	8012f18 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8012f8a:	f8bd 5004 	ldrh.w	r5, [sp, #4]
 8012f8e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8012f92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f94:	1b64      	subs	r4, r4, r5
 8012f96:	9a01      	ldr	r2, [sp, #4]
 8012f98:	881b      	ldrh	r3, [r3, #0]
 8012f9a:	b2a4      	uxth	r4, r4
 8012f9c:	1a9b      	subs	r3, r3, r2
 8012f9e:	2c00      	cmp	r4, #0
 8012fa0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012fa4:	bf18      	it	ne
 8012fa6:	2500      	movne	r5, #0
 8012fa8:	4418      	add	r0, r3
 8012faa:	e7b5      	b.n	8012f18 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8012fac:	3901      	subs	r1, #1
 8012fae:	f80a 9c03 	strb.w	r9, [sl, #-3]
 8012fb2:	f80a 8c02 	strb.w	r8, [sl, #-2]
 8012fb6:	f80a cc01 	strb.w	ip, [sl, #-1]
 8012fba:	b289      	uxth	r1, r1
 8012fbc:	e7dd      	b.n	8012f7a <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8012fbe:	9f04      	ldr	r7, [sp, #16]
 8012fc0:	fb07 fa01 	mul.w	sl, r7, r1
 8012fc4:	f10a 0101 	add.w	r1, sl, #1
 8012fc8:	eb01 212a 	add.w	r1, r1, sl, asr #8
 8012fcc:	1209      	asrs	r1, r1, #8
 8012fce:	ea6f 0a01 	mvn.w	sl, r1
 8012fd2:	b289      	uxth	r1, r1
 8012fd4:	fb19 f901 	smulbb	r9, r9, r1
 8012fd8:	fa5f fa8a 	uxtb.w	sl, sl
 8012fdc:	fb18 f801 	smulbb	r8, r8, r1
 8012fe0:	fb1c f101 	smulbb	r1, ip, r1
 8012fe4:	fa1f f789 	uxth.w	r7, r9
 8012fe8:	4684      	mov	ip, r0
 8012fea:	4691      	mov	r9, r2
 8012fec:	9707      	str	r7, [sp, #28]
 8012fee:	b289      	uxth	r1, r1
 8012ff0:	fa1f f788 	uxth.w	r7, r8
 8012ff4:	9708      	str	r7, [sp, #32]
 8012ff6:	f10c 0c03 	add.w	ip, ip, #3
 8012ffa:	f1b9 0f00 	cmp.w	r9, #0
 8012ffe:	d0bf      	beq.n	8012f80 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x194>
 8013000:	f81c 8c03 	ldrb.w	r8, [ip, #-3]
 8013004:	f109 39ff 	add.w	r9, r9, #4294967295
 8013008:	9f07      	ldr	r7, [sp, #28]
 801300a:	fa1f f989 	uxth.w	r9, r9
 801300e:	fb08 780a 	mla	r8, r8, sl, r7
 8013012:	9f08      	ldr	r7, [sp, #32]
 8013014:	fa1f f888 	uxth.w	r8, r8
 8013018:	f108 0b01 	add.w	fp, r8, #1
 801301c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8013020:	ea4f 2828 	mov.w	r8, r8, asr #8
 8013024:	f80c 8c03 	strb.w	r8, [ip, #-3]
 8013028:	f81c 8c02 	ldrb.w	r8, [ip, #-2]
 801302c:	fb08 780a 	mla	r8, r8, sl, r7
 8013030:	fa1f f888 	uxth.w	r8, r8
 8013034:	f108 0b01 	add.w	fp, r8, #1
 8013038:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801303c:	ea4f 2828 	mov.w	r8, r8, asr #8
 8013040:	f80c 8c02 	strb.w	r8, [ip, #-2]
 8013044:	f81c 8c01 	ldrb.w	r8, [ip, #-1]
 8013048:	fb08 180a 	mla	r8, r8, sl, r1
 801304c:	fa1f f888 	uxth.w	r8, r8
 8013050:	f108 0b01 	add.w	fp, r8, #1
 8013054:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8013058:	ea4f 2828 	mov.w	r8, r8, asr #8
 801305c:	f80c 8c01 	strb.w	r8, [ip, #-1]
 8013060:	e7c9      	b.n	8012ff6 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8013062:	4b04      	ldr	r3, [pc, #16]	; (8013074 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x288>)
 8013064:	6818      	ldr	r0, [r3, #0]
 8013066:	6803      	ldr	r3, [r0, #0]
 8013068:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801306a:	4798      	blx	r3
 801306c:	b00f      	add	sp, #60	; 0x3c
 801306e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013072:	bf00      	nop
 8013074:	24006bd8 	.word	0x24006bd8
 8013078:	24006bd2 	.word	0x24006bd2

0801307c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801307c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013080:	b089      	sub	sp, #36	; 0x24
 8013082:	4607      	mov	r7, r0
 8013084:	4689      	mov	r9, r1
 8013086:	4692      	mov	sl, r2
 8013088:	ac08      	add	r4, sp, #32
 801308a:	461e      	mov	r6, r3
 801308c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013090:	4620      	mov	r0, r4
 8013092:	f7fd ffa5 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013096:	683b      	ldr	r3, [r7, #0]
 8013098:	4605      	mov	r5, r0
 801309a:	4620      	mov	r0, r4
 801309c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80130a0:	f7fd feea 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80130a4:	4683      	mov	fp, r0
 80130a6:	4620      	mov	r0, r4
 80130a8:	f7fd ff1a 	bl	8010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80130ac:	4653      	mov	r3, sl
 80130ae:	464a      	mov	r2, r9
 80130b0:	4639      	mov	r1, r7
 80130b2:	9500      	str	r5, [sp, #0]
 80130b4:	e9cd b001 	strd	fp, r0, [sp, #4]
 80130b8:	a806      	add	r0, sp, #24
 80130ba:	47c0      	blx	r8
 80130bc:	a906      	add	r1, sp, #24
 80130be:	4630      	mov	r0, r6
 80130c0:	f7fd fdbe 	bl	8010c40 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>
 80130c4:	4628      	mov	r0, r5
 80130c6:	b009      	add	sp, #36	; 0x24
 80130c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080130cc <_ZN8touchgfx8LCD24bppD0Ev>:
 80130cc:	b510      	push	{r4, lr}
 80130ce:	4604      	mov	r4, r0
 80130d0:	2164      	movs	r1, #100	; 0x64
 80130d2:	f007 f94f 	bl	801a374 <_ZdlPvj>
 80130d6:	4620      	mov	r0, r4
 80130d8:	bd10      	pop	{r4, pc}

080130da <_ZN8touchgfx8LCD24bpp17DecompressorL8_L4D0Ev>:
 80130da:	b510      	push	{r4, lr}
 80130dc:	4604      	mov	r4, r0
 80130de:	2104      	movs	r1, #4
 80130e0:	f007 f948 	bl	801a374 <_ZdlPvj>
 80130e4:	4620      	mov	r0, r4
 80130e6:	bd10      	pop	{r4, pc}

080130e8 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLED0Ev>:
 80130e8:	b510      	push	{r4, lr}
 80130ea:	4604      	mov	r4, r0
 80130ec:	2104      	movs	r1, #4
 80130ee:	f007 f941 	bl	801a374 <_ZdlPvj>
 80130f2:	4620      	mov	r0, r4
 80130f4:	bd10      	pop	{r4, pc}

080130f6 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW9D0Ev>:
 80130f6:	b510      	push	{r4, lr}
 80130f8:	4604      	mov	r4, r0
 80130fa:	f640 0144 	movw	r1, #2116	; 0x844
 80130fe:	f007 f939 	bl	801a374 <_ZdlPvj>
 8013102:	4620      	mov	r0, r4
 8013104:	bd10      	pop	{r4, pc}

08013106 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013106:	b510      	push	{r4, lr}
 8013108:	4604      	mov	r4, r0
 801310a:	2104      	movs	r1, #4
 801310c:	f007 f932 	bl	801a374 <_ZdlPvj>
 8013110:	4620      	mov	r0, r4
 8013112:	bd10      	pop	{r4, pc}

08013114 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013114:	b510      	push	{r4, lr}
 8013116:	4604      	mov	r4, r0
 8013118:	2104      	movs	r1, #4
 801311a:	f007 f92b 	bl	801a374 <_ZdlPvj>
 801311e:	4620      	mov	r0, r4
 8013120:	bd10      	pop	{r4, pc}

08013122 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013122:	b510      	push	{r4, lr}
 8013124:	4604      	mov	r4, r0
 8013126:	2104      	movs	r1, #4
 8013128:	f007 f924 	bl	801a374 <_ZdlPvj>
 801312c:	4620      	mov	r0, r4
 801312e:	bd10      	pop	{r4, pc}

08013130 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013130:	b510      	push	{r4, lr}
 8013132:	4604      	mov	r4, r0
 8013134:	2104      	movs	r1, #4
 8013136:	f007 f91d 	bl	801a374 <_ZdlPvj>
 801313a:	4620      	mov	r0, r4
 801313c:	bd10      	pop	{r4, pc}

0801313e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801313e:	b510      	push	{r4, lr}
 8013140:	4604      	mov	r4, r0
 8013142:	2104      	movs	r1, #4
 8013144:	f007 f916 	bl	801a374 <_ZdlPvj>
 8013148:	4620      	mov	r0, r4
 801314a:	bd10      	pop	{r4, pc}

0801314c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801314c:	b510      	push	{r4, lr}
 801314e:	4604      	mov	r4, r0
 8013150:	2104      	movs	r1, #4
 8013152:	f007 f90f 	bl	801a374 <_ZdlPvj>
 8013156:	4620      	mov	r0, r4
 8013158:	bd10      	pop	{r4, pc}

0801315a <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801315a:	b510      	push	{r4, lr}
 801315c:	4604      	mov	r4, r0
 801315e:	2104      	movs	r1, #4
 8013160:	f007 f908 	bl	801a374 <_ZdlPvj>
 8013164:	4620      	mov	r0, r4
 8013166:	bd10      	pop	{r4, pc}

08013168 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013168:	b510      	push	{r4, lr}
 801316a:	4604      	mov	r4, r0
 801316c:	2104      	movs	r1, #4
 801316e:	f007 f901 	bl	801a374 <_ZdlPvj>
 8013172:	4620      	mov	r0, r4
 8013174:	bd10      	pop	{r4, pc}

08013176 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013176:	b510      	push	{r4, lr}
 8013178:	4604      	mov	r4, r0
 801317a:	2104      	movs	r1, #4
 801317c:	f007 f8fa 	bl	801a374 <_ZdlPvj>
 8013180:	4620      	mov	r0, r4
 8013182:	bd10      	pop	{r4, pc}

08013184 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013184:	b510      	push	{r4, lr}
 8013186:	4604      	mov	r4, r0
 8013188:	2104      	movs	r1, #4
 801318a:	f007 f8f3 	bl	801a374 <_ZdlPvj>
 801318e:	4620      	mov	r0, r4
 8013190:	bd10      	pop	{r4, pc}

08013192 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013192:	b510      	push	{r4, lr}
 8013194:	4604      	mov	r4, r0
 8013196:	2104      	movs	r1, #4
 8013198:	f007 f8ec 	bl	801a374 <_ZdlPvj>
 801319c:	4620      	mov	r0, r4
 801319e:	bd10      	pop	{r4, pc}

080131a0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80131a0:	b510      	push	{r4, lr}
 80131a2:	4604      	mov	r4, r0
 80131a4:	2104      	movs	r1, #4
 80131a6:	f007 f8e5 	bl	801a374 <_ZdlPvj>
 80131aa:	4620      	mov	r0, r4
 80131ac:	bd10      	pop	{r4, pc}

080131ae <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80131ae:	b510      	push	{r4, lr}
 80131b0:	4604      	mov	r4, r0
 80131b2:	2104      	movs	r1, #4
 80131b4:	f007 f8de 	bl	801a374 <_ZdlPvj>
 80131b8:	4620      	mov	r0, r4
 80131ba:	bd10      	pop	{r4, pc}

080131bc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80131bc:	b510      	push	{r4, lr}
 80131be:	4604      	mov	r4, r0
 80131c0:	2104      	movs	r1, #4
 80131c2:	f007 f8d7 	bl	801a374 <_ZdlPvj>
 80131c6:	4620      	mov	r0, r4
 80131c8:	bd10      	pop	{r4, pc}

080131ca <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80131ca:	b510      	push	{r4, lr}
 80131cc:	4604      	mov	r4, r0
 80131ce:	2104      	movs	r1, #4
 80131d0:	f007 f8d0 	bl	801a374 <_ZdlPvj>
 80131d4:	4620      	mov	r0, r4
 80131d6:	bd10      	pop	{r4, pc}

080131d8 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80131d8:	b510      	push	{r4, lr}
 80131da:	4604      	mov	r4, r0
 80131dc:	2104      	movs	r1, #4
 80131de:	f007 f8c9 	bl	801a374 <_ZdlPvj>
 80131e2:	4620      	mov	r0, r4
 80131e4:	bd10      	pop	{r4, pc}

080131e6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80131e6:	b510      	push	{r4, lr}
 80131e8:	4604      	mov	r4, r0
 80131ea:	2104      	movs	r1, #4
 80131ec:	f007 f8c2 	bl	801a374 <_ZdlPvj>
 80131f0:	4620      	mov	r0, r4
 80131f2:	bd10      	pop	{r4, pc}

080131f4 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80131f4:	b510      	push	{r4, lr}
 80131f6:	4604      	mov	r4, r0
 80131f8:	2104      	movs	r1, #4
 80131fa:	f007 f8bb 	bl	801a374 <_ZdlPvj>
 80131fe:	4620      	mov	r0, r4
 8013200:	bd10      	pop	{r4, pc}

08013202 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013202:	b510      	push	{r4, lr}
 8013204:	4604      	mov	r4, r0
 8013206:	2104      	movs	r1, #4
 8013208:	f007 f8b4 	bl	801a374 <_ZdlPvj>
 801320c:	4620      	mov	r0, r4
 801320e:	bd10      	pop	{r4, pc}

08013210 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013210:	b510      	push	{r4, lr}
 8013212:	4604      	mov	r4, r0
 8013214:	2104      	movs	r1, #4
 8013216:	f007 f8ad 	bl	801a374 <_ZdlPvj>
 801321a:	4620      	mov	r0, r4
 801321c:	bd10      	pop	{r4, pc}
	...

08013220 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013224:	b08f      	sub	sp, #60	; 0x3c
 8013226:	461c      	mov	r4, r3
 8013228:	460e      	mov	r6, r1
 801322a:	9206      	str	r2, [sp, #24]
 801322c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013230:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8013232:	9202      	str	r2, [sp, #8]
 8013234:	2a00      	cmp	r2, #0
 8013236:	f000 8128 	beq.w	801348a <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26a>
 801323a:	6820      	ldr	r0, [r4, #0]
 801323c:	aa0a      	add	r2, sp, #40	; 0x28
 801323e:	6861      	ldr	r1, [r4, #4]
 8013240:	c203      	stmia	r2!, {r0, r1}
 8013242:	6818      	ldr	r0, [r3, #0]
 8013244:	aa0c      	add	r2, sp, #48	; 0x30
 8013246:	6859      	ldr	r1, [r3, #4]
 8013248:	c203      	stmia	r2!, {r0, r1}
 801324a:	a80a      	add	r0, sp, #40	; 0x28
 801324c:	f7fa fec4 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013250:	4621      	mov	r1, r4
 8013252:	a80c      	add	r0, sp, #48	; 0x30
 8013254:	f7fa fee8 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013258:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 801325c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8013260:	f5b7 6f80 	cmp.w	r7, #1024	; 0x400
 8013264:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8013268:	bfdb      	ittet	le
 801326a:	b2bb      	uxthle	r3, r7
 801326c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8013270:	2301      	movgt	r3, #1
 8013272:	fb92 f3f3 	sdivle	r3, r2, r3
 8013276:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801327a:	441d      	add	r5, r3
 801327c:	fb92 f1f3 	sdiv	r1, r2, r3
 8013280:	fa1f fc81 	uxth.w	ip, r1
 8013284:	3d01      	subs	r5, #1
 8013286:	fb0c 2413 	mls	r4, ip, r3, r2
 801328a:	4661      	mov	r1, ip
 801328c:	fb14 f407 	smulbb	r4, r4, r7
 8013290:	4404      	add	r4, r0
 8013292:	fb95 f5f3 	sdiv	r5, r5, r3
 8013296:	b2a4      	uxth	r4, r4
 8013298:	b121      	cbz	r1, 80132a4 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x84>
 801329a:	9b06      	ldr	r3, [sp, #24]
 801329c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80132a0:	ba1b      	rev	r3, r3
 80132a2:	441e      	add	r6, r3
 80132a4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80132a8:	b2ad      	uxth	r5, r5
 80132aa:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80132ae:	4418      	add	r0, r3
 80132b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80132b4:	f9bd 7036 	ldrsh.w	r7, [sp, #54]	; 0x36
 80132b8:	00ad      	lsls	r5, r5, #2
 80132ba:	441a      	add	r2, r3
 80132bc:	4b74      	ldr	r3, [pc, #464]	; (8013490 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x270>)
 80132be:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80132c2:	6818      	ldr	r0, [r3, #0]
 80132c4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80132c8:	6803      	ldr	r3, [r0, #0]
 80132ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80132cc:	4798      	blx	r3
 80132ce:	4a71      	ldr	r2, [pc, #452]	; (8013494 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>)
 80132d0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80132d4:	2c00      	cmp	r4, #0
 80132d6:	8813      	ldrh	r3, [r2, #0]
 80132d8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80132dc:	9209      	str	r2, [sp, #36]	; 0x24
 80132de:	fb03 c101 	mla	r1, r3, r1, ip
 80132e2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80132e6:	fb03 f307 	mul.w	r3, r3, r7
 80132ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80132ee:	9204      	str	r2, [sp, #16]
 80132f0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80132f4:	9a02      	ldr	r2, [sp, #8]
 80132f6:	4408      	add	r0, r1
 80132f8:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80132fc:	4403      	add	r3, r0
 80132fe:	b292      	uxth	r2, r2
 8013300:	9307      	str	r3, [sp, #28]
 8013302:	f105 0304 	add.w	r3, r5, #4
 8013306:	bf0c      	ite	eq
 8013308:	4645      	moveq	r5, r8
 801330a:	2500      	movne	r5, #0
 801330c:	9308      	str	r3, [sp, #32]
 801330e:	2300      	movs	r3, #0
 8013310:	b2ad      	uxth	r5, r5
 8013312:	9205      	str	r2, [sp, #20]
 8013314:	9303      	str	r3, [sp, #12]
 8013316:	9a07      	ldr	r2, [sp, #28]
 8013318:	4282      	cmp	r2, r0
 801331a:	f240 80b1 	bls.w	8013480 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x260>
 801331e:	b95b      	cbnz	r3, 8013338 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x118>
 8013320:	7832      	ldrb	r2, [r6, #0]
 8013322:	0993      	lsrs	r3, r2, #6
 8013324:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8013328:	9203      	str	r2, [sp, #12]
 801332a:	1e5a      	subs	r2, r3, #1
 801332c:	2a02      	cmp	r2, #2
 801332e:	bf8d      	iteet	hi
 8013330:	7873      	ldrbhi	r3, [r6, #1]
 8013332:	3601      	addls	r6, #1
 8013334:	b29b      	uxthls	r3, r3
 8013336:	3602      	addhi	r6, #2
 8013338:	b184      	cbz	r4, 801335c <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13c>
 801333a:	429c      	cmp	r4, r3
 801333c:	bf91      	iteee	ls
 801333e:	1b1c      	subls	r4, r3, r4
 8013340:	1ae4      	subhi	r4, r4, r3
 8013342:	4629      	movhi	r1, r5
 8013344:	f04f 0e00 	movhi.w	lr, #0
 8013348:	bf9b      	ittet	ls
 801334a:	fa1f fe84 	uxthls.w	lr, r4
 801334e:	2400      	movls	r4, #0
 8013350:	b2a4      	uxthhi	r4, r4
 8013352:	fa1f f188 	uxthls.w	r1, r8
 8013356:	4673      	mov	r3, lr
 8013358:	460d      	mov	r5, r1
 801335a:	e7dc      	b.n	8013316 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801335c:	2203      	movs	r2, #3
 801335e:	9908      	ldr	r1, [sp, #32]
 8013360:	42ab      	cmp	r3, r5
 8013362:	4617      	mov	r7, r2
 8013364:	9a03      	ldr	r2, [sp, #12]
 8013366:	bf24      	itt	cs
 8013368:	eba3 0e05 	subcs.w	lr, r3, r5
 801336c:	9501      	strcs	r5, [sp, #4]
 801336e:	fb17 1702 	smlabb	r7, r7, r2, r1
 8013372:	9a06      	ldr	r2, [sp, #24]
 8013374:	bf34      	ite	cc
 8013376:	1ae9      	subcc	r1, r5, r3
 8013378:	fa1f fe8e 	uxthcs.w	lr, lr
 801337c:	4417      	add	r7, r2
 801337e:	9a02      	ldr	r2, [sp, #8]
 8013380:	bf2f      	iteee	cs
 8013382:	4621      	movcs	r1, r4
 8013384:	b289      	uxthcc	r1, r1
 8013386:	9301      	strcc	r3, [sp, #4]
 8013388:	46a6      	movcc	lr, r4
 801338a:	2aff      	cmp	r2, #255	; 0xff
 801338c:	d11e      	bne.n	80133cc <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ac>
 801338e:	4681      	mov	r9, r0
 8013390:	f8dd c004 	ldr.w	ip, [sp, #4]
 8013394:	f109 0903 	add.w	r9, r9, #3
 8013398:	f1bc 0f00 	cmp.w	ip, #0
 801339c:	d15f      	bne.n	801345e <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x23e>
 801339e:	9a01      	ldr	r2, [sp, #4]
 80133a0:	42ab      	cmp	r3, r5
 80133a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80133a6:	4410      	add	r0, r2
 80133a8:	d3d5      	bcc.n	8013356 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x136>
 80133aa:	fa1f f188 	uxth.w	r1, r8
 80133ae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80133b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80133b4:	1a64      	subs	r4, r4, r1
 80133b6:	881b      	ldrh	r3, [r3, #0]
 80133b8:	b2a4      	uxth	r4, r4
 80133ba:	eba3 0308 	sub.w	r3, r3, r8
 80133be:	2c00      	cmp	r4, #0
 80133c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80133c4:	bf18      	it	ne
 80133c6:	2100      	movne	r1, #0
 80133c8:	4418      	add	r0, r3
 80133ca:	e7c4      	b.n	8013356 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x136>
 80133cc:	4684      	mov	ip, r0
 80133ce:	f8dd a004 	ldr.w	sl, [sp, #4]
 80133d2:	f10c 0c03 	add.w	ip, ip, #3
 80133d6:	f1ba 0f00 	cmp.w	sl, #0
 80133da:	d0e0      	beq.n	801339e <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 80133dc:	f81c bc03 	ldrb.w	fp, [ip, #-3]
 80133e0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80133e4:	9a05      	ldr	r2, [sp, #20]
 80133e6:	f897 9000 	ldrb.w	r9, [r7]
 80133ea:	fa1f fa8a 	uxth.w	sl, sl
 80133ee:	fb1b fb02 	smulbb	fp, fp, r2
 80133f2:	9a04      	ldr	r2, [sp, #16]
 80133f4:	fb09 b902 	mla	r9, r9, r2, fp
 80133f8:	9a05      	ldr	r2, [sp, #20]
 80133fa:	fa1f f989 	uxth.w	r9, r9
 80133fe:	f109 0b01 	add.w	fp, r9, #1
 8013402:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013406:	f81c bc02 	ldrb.w	fp, [ip, #-2]
 801340a:	fb1b fb02 	smulbb	fp, fp, r2
 801340e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013412:	9a04      	ldr	r2, [sp, #16]
 8013414:	f80c 9c03 	strb.w	r9, [ip, #-3]
 8013418:	f897 9001 	ldrb.w	r9, [r7, #1]
 801341c:	fb09 b902 	mla	r9, r9, r2, fp
 8013420:	9a05      	ldr	r2, [sp, #20]
 8013422:	fa1f f989 	uxth.w	r9, r9
 8013426:	f109 0b01 	add.w	fp, r9, #1
 801342a:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 801342e:	f81c bc01 	ldrb.w	fp, [ip, #-1]
 8013432:	fb1b fb02 	smulbb	fp, fp, r2
 8013436:	ea4f 2929 	mov.w	r9, r9, asr #8
 801343a:	9a04      	ldr	r2, [sp, #16]
 801343c:	f80c 9c02 	strb.w	r9, [ip, #-2]
 8013440:	f897 9002 	ldrb.w	r9, [r7, #2]
 8013444:	fb09 b902 	mla	r9, r9, r2, fp
 8013448:	fa1f f989 	uxth.w	r9, r9
 801344c:	f109 0b01 	add.w	fp, r9, #1
 8013450:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8013454:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013458:	f80c 9c01 	strb.w	r9, [ip, #-1]
 801345c:	e7b9      	b.n	80133d2 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1b2>
 801345e:	f897 a000 	ldrb.w	sl, [r7]
 8013462:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013466:	f809 ac03 	strb.w	sl, [r9, #-3]
 801346a:	fa1f fc8c 	uxth.w	ip, ip
 801346e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8013472:	f809 ac02 	strb.w	sl, [r9, #-2]
 8013476:	f897 a002 	ldrb.w	sl, [r7, #2]
 801347a:	f809 ac01 	strb.w	sl, [r9, #-1]
 801347e:	e789      	b.n	8013394 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8013480:	4b03      	ldr	r3, [pc, #12]	; (8013490 <_ZN8touchgfx8LCD24bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x270>)
 8013482:	6818      	ldr	r0, [r3, #0]
 8013484:	6803      	ldr	r3, [r0, #0]
 8013486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013488:	4798      	blx	r3
 801348a:	b00f      	add	sp, #60	; 0x3c
 801348c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013490:	24006bd8 	.word	0x24006bd8
 8013494:	24006bd2 	.word	0x24006bd2

08013498 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801349c:	b09b      	sub	sp, #108	; 0x6c
 801349e:	461d      	mov	r5, r3
 80134a0:	4604      	mov	r4, r0
 80134a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80134a4:	e9cd 1210 	strd	r1, r2, [sp, #64]	; 0x40
 80134a8:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80134ac:	9208      	str	r2, [sp, #32]
 80134ae:	2a00      	cmp	r2, #0
 80134b0:	f000 81f3 	beq.w	801389a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x402>
 80134b4:	6828      	ldr	r0, [r5, #0]
 80134b6:	aa16      	add	r2, sp, #88	; 0x58
 80134b8:	6869      	ldr	r1, [r5, #4]
 80134ba:	c203      	stmia	r2!, {r0, r1}
 80134bc:	6818      	ldr	r0, [r3, #0]
 80134be:	aa18      	add	r2, sp, #96	; 0x60
 80134c0:	6859      	ldr	r1, [r3, #4]
 80134c2:	c203      	stmia	r2!, {r0, r1}
 80134c4:	a816      	add	r0, sp, #88	; 0x58
 80134c6:	f7fa fd87 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80134ca:	4629      	mov	r1, r5
 80134cc:	a818      	add	r0, sp, #96	; 0x60
 80134ce:	f7fa fdab 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80134d2:	f9bd 305c 	ldrsh.w	r3, [sp, #92]	; 0x5c
 80134d6:	f9bd 605e 	ldrsh.w	r6, [sp, #94]	; 0x5e
 80134da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80134de:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	; 0x66
 80134e2:	bfdb      	ittet	le
 80134e4:	b29a      	uxthle	r2, r3
 80134e6:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80134ea:	f04f 0a01 	movgt.w	sl, #1
 80134ee:	fb91 faf2 	sdivle	sl, r1, r2
 80134f2:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	; 0x62
 80134f6:	4456      	add	r6, sl
 80134f8:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 80134fc:	3e01      	subs	r6, #1
 80134fe:	fb92 f0fa 	sdiv	r0, r2, sl
 8013502:	b280      	uxth	r0, r0
 8013504:	fb00 281a 	mls	r8, r0, sl, r2
 8013508:	900e      	str	r0, [sp, #56]	; 0x38
 801350a:	fb18 f803 	smulbb	r8, r8, r3
 801350e:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8013512:	4488      	add	r8, r1
 8013514:	4419      	add	r1, r3
 8013516:	f8bd 305a 	ldrh.w	r3, [sp, #90]	; 0x5a
 801351a:	f8ad 1060 	strh.w	r1, [sp, #96]	; 0x60
 801351e:	fa1f f888 	uxth.w	r8, r8
 8013522:	441a      	add	r2, r3
 8013524:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8013528:	9303      	str	r3, [sp, #12]
 801352a:	4b9c      	ldr	r3, [pc, #624]	; (801379c <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 801352c:	f8ad 2062 	strh.w	r2, [sp, #98]	; 0x62
 8013530:	6818      	ldr	r0, [r3, #0]
 8013532:	6803      	ldr	r3, [r0, #0]
 8013534:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013536:	4798      	blx	r3
 8013538:	4b99      	ldr	r3, [pc, #612]	; (80137a0 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>)
 801353a:	f9bd 1062 	ldrsh.w	r1, [sp, #98]	; 0x62
 801353e:	f1b8 0f00 	cmp.w	r8, #0
 8013542:	881a      	ldrh	r2, [r3, #0]
 8013544:	f9bd 7060 	ldrsh.w	r7, [sp, #96]	; 0x60
 8013548:	fb02 f505 	mul.w	r5, r2, r5
 801354c:	fb02 7101 	mla	r1, r2, r1, r7
 8013550:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013554:	9314      	str	r3, [sp, #80]	; 0x50
 8013556:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801355a:	9b08      	ldr	r3, [sp, #32]
 801355c:	fb96 f6fa 	sdiv	r6, r6, sl
 8013560:	4408      	add	r0, r1
 8013562:	f106 0601 	add.w	r6, r6, #1
 8013566:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 801356a:	f04f 0100 	mov.w	r1, #0
 801356e:	eb00 0205 	add.w	r2, r0, r5
 8013572:	b2b6      	uxth	r6, r6
 8013574:	b29b      	uxth	r3, r3
 8013576:	910b      	str	r1, [sp, #44]	; 0x2c
 8013578:	9209      	str	r2, [sp, #36]	; 0x24
 801357a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801357c:	930d      	str	r3, [sp, #52]	; 0x34
 801357e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013582:	4b88      	ldr	r3, [pc, #544]	; (80137a4 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30c>)
 8013584:	f106 0204 	add.w	r2, r6, #4
 8013588:	eba3 0304 	sub.w	r3, r3, r4
 801358c:	9205      	str	r2, [sp, #20]
 801358e:	9a03      	ldr	r2, [sp, #12]
 8013590:	bf18      	it	ne
 8013592:	2200      	movne	r2, #0
 8013594:	9315      	str	r3, [sp, #84]	; 0x54
 8013596:	b292      	uxth	r2, r2
 8013598:	990e      	ldr	r1, [sp, #56]	; 0x38
 801359a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801359c:	fa11 f383 	uxtah	r3, r1, r3
 80135a0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80135a2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80135a6:	3304      	adds	r3, #4
 80135a8:	9306      	str	r3, [sp, #24]
 80135aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135ac:	4283      	cmp	r3, r0
 80135ae:	f240 816f 	bls.w	8013890 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f8>
 80135b2:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 80135b6:	f04f 0900 	mov.w	r9, #0
 80135ba:	9d06      	ldr	r5, [sp, #24]
 80135bc:	fbb8 f3f3 	udiv	r3, r8, r3
 80135c0:	ebaa 0303 	sub.w	r3, sl, r3
 80135c4:	782d      	ldrb	r5, [r5, #0]
 80135c6:	b29b      	uxth	r3, r3
 80135c8:	950f      	str	r5, [sp, #60]	; 0x3c
 80135ca:	3501      	adds	r5, #1
 80135cc:	9312      	str	r3, [sp, #72]	; 0x48
 80135ce:	9b06      	ldr	r3, [sp, #24]
 80135d0:	9504      	str	r5, [sp, #16]
 80135d2:	7859      	ldrb	r1, [r3, #1]
 80135d4:	789b      	ldrb	r3, [r3, #2]
 80135d6:	021b      	lsls	r3, r3, #8
 80135d8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80135dc:	9906      	ldr	r1, [sp, #24]
 80135de:	78c9      	ldrb	r1, [r1, #3]
 80135e0:	430b      	orrs	r3, r1
 80135e2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80135e4:	4419      	add	r1, r3
 80135e6:	1c4d      	adds	r5, r1, #1
 80135e8:	7849      	ldrb	r1, [r1, #1]
 80135ea:	9502      	str	r5, [sp, #8]
 80135ec:	0209      	lsls	r1, r1, #8
 80135ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80135f0:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 80135f4:	5ceb      	ldrb	r3, [r5, r3]
 80135f6:	4319      	orrs	r1, r3
 80135f8:	b28b      	uxth	r3, r1
 80135fa:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80135fe:	930a      	str	r3, [sp, #40]	; 0x28
 8013600:	2300      	movs	r3, #0
 8013602:	9307      	str	r3, [sp, #28]
 8013604:	2301      	movs	r3, #1
 8013606:	e9cd 3300 	strd	r3, r3, [sp]
 801360a:	469c      	mov	ip, r3
 801360c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013610:	930c      	str	r3, [sp, #48]	; 0x30
 8013612:	f1b8 0f00 	cmp.w	r8, #0
 8013616:	f000 8082 	beq.w	801371e <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x286>
 801361a:	45c4      	cmp	ip, r8
 801361c:	d270      	bcs.n	8013700 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801361e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013620:	eba8 080c 	sub.w	r8, r8, ip
 8013624:	4611      	mov	r1, r2
 8013626:	4283      	cmp	r3, r0
 8013628:	fa1f f888 	uxth.w	r8, r8
 801362c:	d802      	bhi.n	8013634 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801362e:	e074      	b.n	801371a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x282>
 8013630:	2b00      	cmp	r3, #0
 8013632:	d15f      	bne.n	80136f4 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x25c>
 8013634:	9b02      	ldr	r3, [sp, #8]
 8013636:	9a01      	ldr	r2, [sp, #4]
 8013638:	785b      	ldrb	r3, [r3, #1]
 801363a:	f1c2 0207 	rsb	r2, r2, #7
 801363e:	9d01      	ldr	r5, [sp, #4]
 8013640:	4093      	lsls	r3, r2
 8013642:	005b      	lsls	r3, r3, #1
 8013644:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8013648:	9b02      	ldr	r3, [sp, #8]
 801364a:	781b      	ldrb	r3, [r3, #0]
 801364c:	412b      	asrs	r3, r5
 801364e:	b2db      	uxtb	r3, r3
 8013650:	4313      	orrs	r3, r2
 8013652:	462a      	mov	r2, r5
 8013654:	3201      	adds	r2, #1
 8013656:	b29e      	uxth	r6, r3
 8013658:	b2d2      	uxtb	r2, r2
 801365a:	2a08      	cmp	r2, #8
 801365c:	9201      	str	r2, [sp, #4]
 801365e:	9a02      	ldr	r2, [sp, #8]
 8013660:	bf09      	itett	eq
 8013662:	3202      	addeq	r2, #2
 8013664:	3201      	addne	r2, #1
 8013666:	9202      	streq	r2, [sp, #8]
 8013668:	2200      	moveq	r2, #0
 801366a:	bf14      	ite	ne
 801366c:	9202      	strne	r2, [sp, #8]
 801366e:	9201      	streq	r2, [sp, #4]
 8013670:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013672:	42b2      	cmp	r2, r6
 8013674:	d309      	bcc.n	801368a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8013676:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801367a:	2301      	movs	r3, #1
 801367c:	9a04      	ldr	r2, [sp, #16]
 801367e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8013682:	d30e      	bcc.n	80136a2 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8013684:	9300      	str	r3, [sp, #0]
 8013686:	2500      	movs	r5, #0
 8013688:	e035      	b.n	80136f6 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x25e>
 801368a:	9b04      	ldr	r3, [sp, #16]
 801368c:	429e      	cmp	r6, r3
 801368e:	d318      	bcc.n	80136c2 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8013690:	9b00      	ldr	r3, [sp, #0]
 8013692:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8013696:	18e3      	adds	r3, r4, r3
 8013698:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801369c:	9b00      	ldr	r3, [sp, #0]
 801369e:	3301      	adds	r3, #1
 80136a0:	b29b      	uxth	r3, r3
 80136a2:	9a04      	ldr	r2, [sp, #16]
 80136a4:	f894 5804 	ldrb.w	r5, [r4, #2052]	; 0x804
 80136a8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80136ac:	9f00      	ldr	r7, [sp, #0]
 80136ae:	7115      	strb	r5, [r2, #4]
 80136b0:	3701      	adds	r7, #1
 80136b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80136b4:	7157      	strb	r7, [r2, #5]
 80136b6:	80d5      	strh	r5, [r2, #6]
 80136b8:	9a04      	ldr	r2, [sp, #16]
 80136ba:	3201      	adds	r2, #1
 80136bc:	b292      	uxth	r2, r2
 80136be:	9204      	str	r2, [sp, #16]
 80136c0:	e7e0      	b.n	8013684 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ec>
 80136c2:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 80136c6:	4632      	mov	r2, r6
 80136c8:	795b      	ldrb	r3, [r3, #5]
 80136ca:	f603 0504 	addw	r5, r3, #2052	; 0x804
 80136ce:	4425      	add	r5, r4
 80136d0:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80136d2:	eb07 0c05 	add.w	ip, r7, r5
 80136d6:	f1bc 0f00 	cmp.w	ip, #0
 80136da:	dd07      	ble.n	80136ec <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x254>
 80136dc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80136e0:	f892 c004 	ldrb.w	ip, [r2, #4]
 80136e4:	f805 cd01 	strb.w	ip, [r5, #-1]!
 80136e8:	88d2      	ldrh	r2, [r2, #6]
 80136ea:	e7f1      	b.n	80136d0 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 80136ec:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80136f0:	b29b      	uxth	r3, r3
 80136f2:	e7c3      	b.n	801367c <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e4>
 80136f4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80136f6:	460a      	mov	r2, r1
 80136f8:	960a      	str	r6, [sp, #40]	; 0x28
 80136fa:	46a9      	mov	r9, r5
 80136fc:	469c      	mov	ip, r3
 80136fe:	e788      	b.n	8013612 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17a>
 8013700:	ebac 0308 	sub.w	r3, ip, r8
 8013704:	eb09 0508 	add.w	r5, r9, r8
 8013708:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801370c:	b29b      	uxth	r3, r3
 801370e:	b2ad      	uxth	r5, r5
 8013710:	f04f 0800 	mov.w	r8, #0
 8013714:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013716:	4282      	cmp	r2, r0
 8013718:	d88a      	bhi.n	8013630 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801371a:	460a      	mov	r2, r1
 801371c:	e745      	b.n	80135aa <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x112>
 801371e:	4594      	cmp	ip, r2
 8013720:	9d08      	ldr	r5, [sp, #32]
 8013722:	4686      	mov	lr, r0
 8013724:	bf27      	ittee	cs
 8013726:	ebac 0302 	subcs.w	r3, ip, r2
 801372a:	4616      	movcs	r6, r2
 801372c:	eba2 010c 	subcc.w	r1, r2, ip
 8013730:	4666      	movcc	r6, ip
 8013732:	bf27      	ittee	cs
 8013734:	b29b      	uxthcs	r3, r3
 8013736:	4641      	movcs	r1, r8
 8013738:	b289      	uxthcc	r1, r1
 801373a:	4643      	movcc	r3, r8
 801373c:	2dff      	cmp	r5, #255	; 0xff
 801373e:	eb09 0506 	add.w	r5, r9, r6
 8013742:	b2ad      	uxth	r5, r5
 8013744:	d130      	bne.n	80137a8 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x310>
 8013746:	45a9      	cmp	r9, r5
 8013748:	f10e 0e03 	add.w	lr, lr, #3
 801374c:	d17a      	bne.n	8013844 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ac>
 801374e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013752:	4594      	cmp	ip, r2
 8013754:	4430      	add	r0, r6
 8013756:	d3db      	bcc.n	8013710 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8013758:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801375a:	9903      	ldr	r1, [sp, #12]
 801375c:	8812      	ldrh	r2, [r2, #0]
 801375e:	1a52      	subs	r2, r2, r1
 8013760:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013762:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013766:	4410      	add	r0, r2
 8013768:	9a07      	ldr	r2, [sp, #28]
 801376a:	3201      	adds	r2, #1
 801376c:	428a      	cmp	r2, r1
 801376e:	9207      	str	r2, [sp, #28]
 8013770:	f040 8081 	bne.w	8013876 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3de>
 8013774:	f8bd 8060 	ldrh.w	r8, [sp, #96]	; 0x60
 8013778:	f8bd c058 	ldrh.w	ip, [sp, #88]	; 0x58
 801377c:	9b03      	ldr	r3, [sp, #12]
 801377e:	eba8 080c 	sub.w	r8, r8, ip
 8013782:	fa1f f888 	uxth.w	r8, r8
 8013786:	f1b8 0f00 	cmp.w	r8, #0
 801378a:	bf08      	it	eq
 801378c:	461a      	moveq	r2, r3
 801378e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013790:	bf18      	it	ne
 8013792:	2200      	movne	r2, #0
 8013794:	3301      	adds	r3, #1
 8013796:	b292      	uxth	r2, r2
 8013798:	930b      	str	r3, [sp, #44]	; 0x2c
 801379a:	e6fd      	b.n	8013598 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x100>
 801379c:	24006bd8 	.word	0x24006bd8
 80137a0:	24006bd2 	.word	0x24006bd2
 80137a4:	fffff7fb 	.word	0xfffff7fb
 80137a8:	45a9      	cmp	r9, r5
 80137aa:	f10e 0e03 	add.w	lr, lr, #3
 80137ae:	d0ce      	beq.n	801374e <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b6>
 80137b0:	f109 0701 	add.w	r7, r9, #1
 80137b4:	44a1      	add	r9, r4
 80137b6:	f81e bc03 	ldrb.w	fp, [lr, #-3]
 80137ba:	f899 8804 	ldrb.w	r8, [r9, #2052]	; 0x804
 80137be:	9713      	str	r7, [sp, #76]	; 0x4c
 80137c0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80137c4:	9f05      	ldr	r7, [sp, #20]
 80137c6:	eb07 0908 	add.w	r9, r7, r8
 80137ca:	f817 8008 	ldrb.w	r8, [r7, r8]
 80137ce:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80137d0:	fb1b fb07 	smulbb	fp, fp, r7
 80137d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80137d6:	fb08 b807 	mla	r8, r8, r7, fp
 80137da:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80137dc:	fa1f f888 	uxth.w	r8, r8
 80137e0:	f108 0b01 	add.w	fp, r8, #1
 80137e4:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80137e8:	f81e bc02 	ldrb.w	fp, [lr, #-2]
 80137ec:	fb1b fb07 	smulbb	fp, fp, r7
 80137f0:	ea4f 2828 	mov.w	r8, r8, asr #8
 80137f4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80137f6:	f80e 8c03 	strb.w	r8, [lr, #-3]
 80137fa:	f899 8001 	ldrb.w	r8, [r9, #1]
 80137fe:	fb08 b807 	mla	r8, r8, r7, fp
 8013802:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013804:	fa1f f888 	uxth.w	r8, r8
 8013808:	f108 0b01 	add.w	fp, r8, #1
 801380c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8013810:	ea4f 2828 	mov.w	r8, r8, asr #8
 8013814:	f80e 8c02 	strb.w	r8, [lr, #-2]
 8013818:	f899 8002 	ldrb.w	r8, [r9, #2]
 801381c:	f81e 9c01 	ldrb.w	r9, [lr, #-1]
 8013820:	fb19 f907 	smulbb	r9, r9, r7
 8013824:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8013826:	fb08 9807 	mla	r8, r8, r7, r9
 801382a:	fa1f f888 	uxth.w	r8, r8
 801382e:	f108 0901 	add.w	r9, r8, #1
 8013832:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8013836:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 801383a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801383e:	f80e 8c01 	strb.w	r8, [lr, #-1]
 8013842:	e7b1      	b.n	80137a8 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x310>
 8013844:	f109 0b01 	add.w	fp, r9, #1
 8013848:	44a1      	add	r9, r4
 801384a:	9f05      	ldr	r7, [sp, #20]
 801384c:	f899 8804 	ldrb.w	r8, [r9, #2052]	; 0x804
 8013850:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013854:	eb07 0908 	add.w	r9, r7, r8
 8013858:	f817 8008 	ldrb.w	r8, [r7, r8]
 801385c:	f80e 8c03 	strb.w	r8, [lr, #-3]
 8013860:	f899 8001 	ldrb.w	r8, [r9, #1]
 8013864:	f80e 8c02 	strb.w	r8, [lr, #-2]
 8013868:	f899 8002 	ldrb.w	r8, [r9, #2]
 801386c:	fa1f f98b 	uxth.w	r9, fp
 8013870:	f80e 8c01 	strb.w	r8, [lr, #-1]
 8013874:	e767      	b.n	8013746 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ae>
 8013876:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801387a:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 801387e:	eba8 0801 	sub.w	r8, r8, r1
 8013882:	fa1f f888 	uxth.w	r8, r8
 8013886:	f1b8 0f00 	cmp.w	r8, #0
 801388a:	bf18      	it	ne
 801388c:	2100      	movne	r1, #0
 801388e:	e741      	b.n	8013714 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>
 8013890:	4b03      	ldr	r3, [pc, #12]	; (80138a0 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x408>)
 8013892:	6818      	ldr	r0, [r3, #0]
 8013894:	6803      	ldr	r3, [r0, #0]
 8013896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013898:	4798      	blx	r3
 801389a:	b01b      	add	sp, #108	; 0x6c
 801389c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138a0:	24006bd8 	.word	0x24006bd8

080138a4 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80138a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138a8:	b09d      	sub	sp, #116	; 0x74
 80138aa:	461d      	mov	r5, r3
 80138ac:	4604      	mov	r4, r0
 80138ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80138b0:	e9cd 120f 	strd	r1, r2, [sp, #60]	; 0x3c
 80138b4:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 80138b8:	920c      	str	r2, [sp, #48]	; 0x30
 80138ba:	2a00      	cmp	r2, #0
 80138bc:	f000 81de 	beq.w	8013c7c <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d8>
 80138c0:	6828      	ldr	r0, [r5, #0]
 80138c2:	aa18      	add	r2, sp, #96	; 0x60
 80138c4:	6869      	ldr	r1, [r5, #4]
 80138c6:	c203      	stmia	r2!, {r0, r1}
 80138c8:	6818      	ldr	r0, [r3, #0]
 80138ca:	aa1a      	add	r2, sp, #104	; 0x68
 80138cc:	6859      	ldr	r1, [r3, #4]
 80138ce:	c203      	stmia	r2!, {r0, r1}
 80138d0:	a818      	add	r0, sp, #96	; 0x60
 80138d2:	f7fa fb81 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138d6:	4629      	mov	r1, r5
 80138d8:	a81a      	add	r0, sp, #104	; 0x68
 80138da:	f7fa fba5 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80138de:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 80138e2:	f9bd 7066 	ldrsh.w	r7, [sp, #102]	; 0x66
 80138e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80138ea:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80138ee:	bfdb      	ittet	le
 80138f0:	b29a      	uxthle	r2, r3
 80138f2:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80138f6:	2201      	movgt	r2, #1
 80138f8:	fb91 f2f2 	sdivle	r2, r1, r2
 80138fc:	9201      	str	r2, [sp, #4]
 80138fe:	9801      	ldr	r0, [sp, #4]
 8013900:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8013904:	9901      	ldr	r1, [sp, #4]
 8013906:	fb92 f0f0 	sdiv	r0, r2, r0
 801390a:	b280      	uxth	r0, r0
 801390c:	440f      	add	r7, r1
 801390e:	900d      	str	r0, [sp, #52]	; 0x34
 8013910:	3f01      	subs	r7, #1
 8013912:	9801      	ldr	r0, [sp, #4]
 8013914:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013916:	fb05 2510 	mls	r5, r5, r0, r2
 801391a:	fb97 f7f1 	sdiv	r7, r7, r1
 801391e:	fb15 f503 	smulbb	r5, r5, r3
 8013922:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8013926:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801392a:	3701      	adds	r7, #1
 801392c:	440d      	add	r5, r1
 801392e:	4419      	add	r1, r3
 8013930:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8013934:	b2bf      	uxth	r7, r7
 8013936:	441a      	add	r2, r3
 8013938:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801393c:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8013940:	00bf      	lsls	r7, r7, #2
 8013942:	9304      	str	r3, [sp, #16]
 8013944:	b2ad      	uxth	r5, r5
 8013946:	4bb0      	ldr	r3, [pc, #704]	; (8013c08 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x364>)
 8013948:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801394c:	6818      	ldr	r0, [r3, #0]
 801394e:	6803      	ldr	r3, [r0, #0]
 8013950:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013952:	4798      	blx	r3
 8013954:	4bad      	ldr	r3, [pc, #692]	; (8013c0c <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8013956:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801395a:	2d00      	cmp	r5, #0
 801395c:	881a      	ldrh	r2, [r3, #0]
 801395e:	f9bd c068 	ldrsh.w	ip, [sp, #104]	; 0x68
 8013962:	fb02 f606 	mul.w	r6, r2, r6
 8013966:	fb02 c101 	mla	r1, r2, r1, ip
 801396a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801396e:	9316      	str	r3, [sp, #88]	; 0x58
 8013970:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013974:	4ba6      	ldr	r3, [pc, #664]	; (8013c10 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8013976:	eb00 0801 	add.w	r8, r0, r1
 801397a:	bf18      	it	ne
 801397c:	2100      	movne	r1, #0
 801397e:	eba3 0304 	sub.w	r3, r3, r4
 8013982:	eb08 0206 	add.w	r2, r8, r6
 8013986:	9317      	str	r3, [sp, #92]	; 0x5c
 8013988:	9208      	str	r2, [sp, #32]
 801398a:	f107 0204 	add.w	r2, r7, #4
 801398e:	9211      	str	r2, [sp, #68]	; 0x44
 8013990:	9a04      	ldr	r2, [sp, #16]
 8013992:	bf08      	it	eq
 8013994:	4611      	moveq	r1, r2
 8013996:	2200      	movs	r2, #0
 8013998:	b289      	uxth	r1, r1
 801399a:	920b      	str	r2, [sp, #44]	; 0x2c
 801399c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801399e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139a0:	fa12 f383 	uxtah	r3, r2, r3
 80139a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80139a6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80139aa:	3304      	adds	r3, #4
 80139ac:	9306      	str	r3, [sp, #24]
 80139ae:	9b08      	ldr	r3, [sp, #32]
 80139b0:	4543      	cmp	r3, r8
 80139b2:	f240 815e 	bls.w	8013c72 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ce>
 80139b6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80139ba:	f04f 0b01 	mov.w	fp, #1
 80139be:	9a01      	ldr	r2, [sp, #4]
 80139c0:	9806      	ldr	r0, [sp, #24]
 80139c2:	465e      	mov	r6, fp
 80139c4:	f8cd b008 	str.w	fp, [sp, #8]
 80139c8:	7800      	ldrb	r0, [r0, #0]
 80139ca:	fbb5 f3f3 	udiv	r3, r5, r3
 80139ce:	1ad3      	subs	r3, r2, r3
 80139d0:	900e      	str	r0, [sp, #56]	; 0x38
 80139d2:	3001      	adds	r0, #1
 80139d4:	b29b      	uxth	r3, r3
 80139d6:	9005      	str	r0, [sp, #20]
 80139d8:	9312      	str	r3, [sp, #72]	; 0x48
 80139da:	9b06      	ldr	r3, [sp, #24]
 80139dc:	785a      	ldrb	r2, [r3, #1]
 80139de:	789b      	ldrb	r3, [r3, #2]
 80139e0:	021b      	lsls	r3, r3, #8
 80139e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80139e6:	9a06      	ldr	r2, [sp, #24]
 80139e8:	78d2      	ldrb	r2, [r2, #3]
 80139ea:	4313      	orrs	r3, r2
 80139ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80139ee:	441a      	add	r2, r3
 80139f0:	1c50      	adds	r0, r2, #1
 80139f2:	7852      	ldrb	r2, [r2, #1]
 80139f4:	9003      	str	r0, [sp, #12]
 80139f6:	0212      	lsls	r2, r2, #8
 80139f8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80139fa:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80139fe:	5cc3      	ldrb	r3, [r0, r3]
 8013a00:	431a      	orrs	r2, r3
 8013a02:	b293      	uxth	r3, r2
 8013a04:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8013a08:	930a      	str	r3, [sp, #40]	; 0x28
 8013a0a:	2300      	movs	r3, #0
 8013a0c:	461a      	mov	r2, r3
 8013a0e:	9307      	str	r3, [sp, #28]
 8013a10:	2d00      	cmp	r5, #0
 8013a12:	d07c      	beq.n	8013b0e <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8013a14:	42ae      	cmp	r6, r5
 8013a16:	d26c      	bcs.n	8013af2 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x24e>
 8013a18:	9b08      	ldr	r3, [sp, #32]
 8013a1a:	1bad      	subs	r5, r5, r6
 8013a1c:	4608      	mov	r0, r1
 8013a1e:	4543      	cmp	r3, r8
 8013a20:	b2ad      	uxth	r5, r5
 8013a22:	d802      	bhi.n	8013a2a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x186>
 8013a24:	e071      	b.n	8013b0a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8013a26:	2b00      	cmp	r3, #0
 8013a28:	d15d      	bne.n	8013ae6 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x242>
 8013a2a:	9b03      	ldr	r3, [sp, #12]
 8013a2c:	9a02      	ldr	r2, [sp, #8]
 8013a2e:	785b      	ldrb	r3, [r3, #1]
 8013a30:	f1c2 0207 	rsb	r2, r2, #7
 8013a34:	9902      	ldr	r1, [sp, #8]
 8013a36:	4093      	lsls	r3, r2
 8013a38:	005b      	lsls	r3, r3, #1
 8013a3a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8013a3e:	9b03      	ldr	r3, [sp, #12]
 8013a40:	781b      	ldrb	r3, [r3, #0]
 8013a42:	410b      	asrs	r3, r1
 8013a44:	3101      	adds	r1, #1
 8013a46:	b2c9      	uxtb	r1, r1
 8013a48:	b2db      	uxtb	r3, r3
 8013a4a:	2908      	cmp	r1, #8
 8013a4c:	9102      	str	r1, [sp, #8]
 8013a4e:	9903      	ldr	r1, [sp, #12]
 8013a50:	ea43 0302 	orr.w	r3, r3, r2
 8013a54:	bf0c      	ite	eq
 8013a56:	3102      	addeq	r1, #2
 8013a58:	3101      	addne	r1, #1
 8013a5a:	b29a      	uxth	r2, r3
 8013a5c:	bf05      	ittet	eq
 8013a5e:	9103      	streq	r1, [sp, #12]
 8013a60:	2100      	moveq	r1, #0
 8013a62:	9103      	strne	r1, [sp, #12]
 8013a64:	9102      	streq	r1, [sp, #8]
 8013a66:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013a68:	4291      	cmp	r1, r2
 8013a6a:	d30a      	bcc.n	8013a82 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1de>
 8013a6c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8013a70:	2301      	movs	r3, #1
 8013a72:	9905      	ldr	r1, [sp, #20]
 8013a74:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8013a78:	d30f      	bcc.n	8013a9a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f6>
 8013a7a:	469b      	mov	fp, r3
 8013a7c:	f04f 0c00 	mov.w	ip, #0
 8013a80:	e032      	b.n	8013ae8 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x244>
 8013a82:	9b05      	ldr	r3, [sp, #20]
 8013a84:	429a      	cmp	r2, r3
 8013a86:	d318      	bcc.n	8013aba <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x216>
 8013a88:	eb04 030b 	add.w	r3, r4, fp
 8013a8c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8013a90:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8013a94:	f10b 0301 	add.w	r3, fp, #1
 8013a98:	b29b      	uxth	r3, r3
 8013a9a:	9905      	ldr	r1, [sp, #20]
 8013a9c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8013aa0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013aa4:	710e      	strb	r6, [r1, #4]
 8013aa6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013aa8:	80ce      	strh	r6, [r1, #6]
 8013aaa:	f10b 0601 	add.w	r6, fp, #1
 8013aae:	714e      	strb	r6, [r1, #5]
 8013ab0:	9905      	ldr	r1, [sp, #20]
 8013ab2:	3101      	adds	r1, #1
 8013ab4:	b289      	uxth	r1, r1
 8013ab6:	9105      	str	r1, [sp, #20]
 8013ab8:	e7df      	b.n	8013a7a <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8013aba:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8013abe:	4611      	mov	r1, r2
 8013ac0:	795b      	ldrb	r3, [r3, #5]
 8013ac2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8013ac6:	4426      	add	r6, r4
 8013ac8:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8013aca:	4437      	add	r7, r6
 8013acc:	2f00      	cmp	r7, #0
 8013ace:	dd06      	ble.n	8013ade <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23a>
 8013ad0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013ad4:	790f      	ldrb	r7, [r1, #4]
 8013ad6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8013ada:	88c9      	ldrh	r1, [r1, #6]
 8013adc:	e7f4      	b.n	8013ac8 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x224>
 8013ade:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8013ae2:	b29b      	uxth	r3, r3
 8013ae4:	e7c5      	b.n	8013a72 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ce>
 8013ae6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013ae8:	920a      	str	r2, [sp, #40]	; 0x28
 8013aea:	4601      	mov	r1, r0
 8013aec:	4662      	mov	r2, ip
 8013aee:	461e      	mov	r6, r3
 8013af0:	e78e      	b.n	8013a10 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x16c>
 8013af2:	1b73      	subs	r3, r6, r5
 8013af4:	eb02 0c05 	add.w	ip, r2, r5
 8013af8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013afc:	b29b      	uxth	r3, r3
 8013afe:	fa1f fc8c 	uxth.w	ip, ip
 8013b02:	2500      	movs	r5, #0
 8013b04:	9a08      	ldr	r2, [sp, #32]
 8013b06:	4542      	cmp	r2, r8
 8013b08:	d88d      	bhi.n	8013a26 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8013b0a:	4601      	mov	r1, r0
 8013b0c:	e74f      	b.n	80139ae <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x10a>
 8013b0e:	428e      	cmp	r6, r1
 8013b10:	bf2b      	itete	cs
 8013b12:	468e      	movcs	lr, r1
 8013b14:	46b6      	movcc	lr, r6
 8013b16:	1a73      	subcs	r3, r6, r1
 8013b18:	1b88      	subcc	r0, r1, r6
 8013b1a:	eb02 0c0e 	add.w	ip, r2, lr
 8013b1e:	bf2b      	itete	cs
 8013b20:	4628      	movcs	r0, r5
 8013b22:	462b      	movcc	r3, r5
 8013b24:	b29b      	uxthcs	r3, r3
 8013b26:	b280      	uxthcc	r0, r0
 8013b28:	f108 0503 	add.w	r5, r8, #3
 8013b2c:	fa1f fc8c 	uxth.w	ip, ip
 8013b30:	4562      	cmp	r2, ip
 8013b32:	d06f      	beq.n	8013c14 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>
 8013b34:	1c57      	adds	r7, r2, #1
 8013b36:	4422      	add	r2, r4
 8013b38:	b2bf      	uxth	r7, r7
 8013b3a:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8013b3e:	9713      	str	r7, [sp, #76]	; 0x4c
 8013b40:	2704      	movs	r7, #4
 8013b42:	46b9      	mov	r9, r7
 8013b44:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8013b46:	fb19 7202 	smlabb	r2, r9, r2, r7
 8013b4a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8013b4c:	58bf      	ldr	r7, [r7, r2]
 8013b4e:	0e3a      	lsrs	r2, r7, #24
 8013b50:	9209      	str	r2, [sp, #36]	; 0x24
 8013b52:	d016      	beq.n	8013b82 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2de>
 8013b54:	f3c7 2907 	ubfx	r9, r7, #8, #8
 8013b58:	fa5f fa87 	uxtb.w	sl, r7
 8013b5c:	f3c7 4707 	ubfx	r7, r7, #16, #8
 8013b60:	fa5f f289 	uxtb.w	r2, r9
 8013b64:	9214      	str	r2, [sp, #80]	; 0x50
 8013b66:	b2fa      	uxtb	r2, r7
 8013b68:	9215      	str	r2, [sp, #84]	; 0x54
 8013b6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013b6c:	2aff      	cmp	r2, #255	; 0xff
 8013b6e:	d10b      	bne.n	8013b88 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2e4>
 8013b70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013b72:	2aff      	cmp	r2, #255	; 0xff
 8013b74:	d108      	bne.n	8013b88 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2e4>
 8013b76:	f805 ac03 	strb.w	sl, [r5, #-3]
 8013b7a:	f805 9c02 	strb.w	r9, [r5, #-2]
 8013b7e:	f805 7c01 	strb.w	r7, [r5, #-1]
 8013b82:	3503      	adds	r5, #3
 8013b84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013b86:	e7d3      	b.n	8013b30 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x28c>
 8013b88:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013b8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013b8c:	437a      	muls	r2, r7
 8013b8e:	1c57      	adds	r7, r2, #1
 8013b90:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8013b94:	f815 7c03 	ldrb.w	r7, [r5, #-3]
 8013b98:	1212      	asrs	r2, r2, #8
 8013b9a:	fa1f f982 	uxth.w	r9, r2
 8013b9e:	43d2      	mvns	r2, r2
 8013ba0:	fb1a fa09 	smulbb	sl, sl, r9
 8013ba4:	b2d2      	uxtb	r2, r2
 8013ba6:	fb07 a702 	mla	r7, r7, r2, sl
 8013baa:	9209      	str	r2, [sp, #36]	; 0x24
 8013bac:	b2bf      	uxth	r7, r7
 8013bae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013bb0:	f107 0a01 	add.w	sl, r7, #1
 8013bb4:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8013bb8:	fb12 fa09 	smulbb	sl, r2, r9
 8013bbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013bbe:	123f      	asrs	r7, r7, #8
 8013bc0:	f805 7c03 	strb.w	r7, [r5, #-3]
 8013bc4:	f815 7c02 	ldrb.w	r7, [r5, #-2]
 8013bc8:	fb07 aa02 	mla	sl, r7, r2, sl
 8013bcc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8013bce:	fb12 f909 	smulbb	r9, r2, r9
 8013bd2:	fa1f fa8a 	uxth.w	sl, sl
 8013bd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013bd8:	f10a 0701 	add.w	r7, sl, #1
 8013bdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8013be0:	f815 7c01 	ldrb.w	r7, [r5, #-1]
 8013be4:	fb07 9902 	mla	r9, r7, r2, r9
 8013be8:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8013bec:	fa1f f989 	uxth.w	r9, r9
 8013bf0:	f805 ac02 	strb.w	sl, [r5, #-2]
 8013bf4:	f109 0201 	add.w	r2, r9, #1
 8013bf8:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8013bfc:	ea4f 2929 	mov.w	r9, r9, asr #8
 8013c00:	f805 9c01 	strb.w	r9, [r5, #-1]
 8013c04:	e7bd      	b.n	8013b82 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2de>
 8013c06:	bf00      	nop
 8013c08:	24006bd8 	.word	0x24006bd8
 8013c0c:	24006bd2 	.word	0x24006bd2
 8013c10:	fffff7fb 	.word	0xfffff7fb
 8013c14:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013c18:	428e      	cmp	r6, r1
 8013c1a:	44f0      	add	r8, lr
 8013c1c:	f4ff af71 	bcc.w	8013b02 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8013c20:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8013c22:	9904      	ldr	r1, [sp, #16]
 8013c24:	8812      	ldrh	r2, [r2, #0]
 8013c26:	1a52      	subs	r2, r2, r1
 8013c28:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013c2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013c2e:	4490      	add	r8, r2
 8013c30:	9a07      	ldr	r2, [sp, #28]
 8013c32:	3201      	adds	r2, #1
 8013c34:	428a      	cmp	r2, r1
 8013c36:	9207      	str	r2, [sp, #28]
 8013c38:	d111      	bne.n	8013c5e <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8013c3a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8013c3e:	f8bd c060 	ldrh.w	ip, [sp, #96]	; 0x60
 8013c42:	9b04      	ldr	r3, [sp, #16]
 8013c44:	eba5 050c 	sub.w	r5, r5, ip
 8013c48:	b2ad      	uxth	r5, r5
 8013c4a:	2d00      	cmp	r5, #0
 8013c4c:	bf08      	it	eq
 8013c4e:	4619      	moveq	r1, r3
 8013c50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013c52:	bf18      	it	ne
 8013c54:	2100      	movne	r1, #0
 8013c56:	3301      	adds	r3, #1
 8013c58:	b289      	uxth	r1, r1
 8013c5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8013c5c:	e69e      	b.n	801399c <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf8>
 8013c5e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013c62:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8013c66:	1a2d      	subs	r5, r5, r0
 8013c68:	b2ad      	uxth	r5, r5
 8013c6a:	2d00      	cmp	r5, #0
 8013c6c:	bf18      	it	ne
 8013c6e:	2000      	movne	r0, #0
 8013c70:	e748      	b.n	8013b04 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8013c72:	4b04      	ldr	r3, [pc, #16]	; (8013c84 <_ZN8touchgfx8LCD24bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e0>)
 8013c74:	6818      	ldr	r0, [r3, #0]
 8013c76:	6803      	ldr	r3, [r0, #0]
 8013c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c7a:	4798      	blx	r3
 8013c7c:	b01d      	add	sp, #116	; 0x74
 8013c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c82:	bf00      	nop
 8013c84:	24006bd8 	.word	0x24006bd8

08013c88 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8013c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c8c:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8013c90:	9c06      	ldr	r4, [sp, #24]
 8013c92:	2800      	cmp	r0, #0
 8013c94:	d06e      	beq.n	8013d74 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013c96:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8013c9a:	2d00      	cmp	r5, #0
 8013c9c:	dd6a      	ble.n	8013d74 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013c9e:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
 8013ca2:	f1bc 0f00 	cmp.w	ip, #0
 8013ca6:	dd65      	ble.n	8013d74 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013ca8:	f9b3 6002 	ldrsh.w	r6, [r3, #2]
 8013cac:	28ff      	cmp	r0, #255	; 0xff
 8013cae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013cb2:	f3c4 2707 	ubfx	r7, r4, #8, #8
 8013cb6:	fb02 3306 	mla	r3, r2, r6, r3
 8013cba:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8013cbe:	b2e4      	uxtb	r4, r4
 8013cc0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013cc4:	4419      	add	r1, r3
 8013cc6:	fb02 f30c 	mul.w	r3, r2, ip
 8013cca:	eba2 0205 	sub.w	r2, r2, r5
 8013cce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013cd2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013cd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013cda:	440b      	add	r3, r1
 8013cdc:	d03e      	beq.n	8013d5c <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd4>
 8013cde:	fa1f fc80 	uxth.w	ip, r0
 8013ce2:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8013ce6:	fb06 f60c 	mul.w	r6, r6, ip
 8013cea:	b280      	uxth	r0, r0
 8013cec:	fb07 f70c 	mul.w	r7, r7, ip
 8013cf0:	fb04 f40c 	mul.w	r4, r4, ip
 8013cf4:	4299      	cmp	r1, r3
 8013cf6:	d23d      	bcs.n	8013d74 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013cf8:	eb01 0c05 	add.w	ip, r1, r5
 8013cfc:	458c      	cmp	ip, r1
 8013cfe:	f101 0e03 	add.w	lr, r1, #3
 8013d02:	d928      	bls.n	8013d56 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 8013d04:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 8013d08:	fb11 f100 	smulbb	r1, r1, r0
 8013d0c:	4421      	add	r1, r4
 8013d0e:	b289      	uxth	r1, r1
 8013d10:	f101 0801 	add.w	r8, r1, #1
 8013d14:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013d18:	1209      	asrs	r1, r1, #8
 8013d1a:	f80e 1c03 	strb.w	r1, [lr, #-3]
 8013d1e:	f81e 1c02 	ldrb.w	r1, [lr, #-2]
 8013d22:	fb11 f100 	smulbb	r1, r1, r0
 8013d26:	4439      	add	r1, r7
 8013d28:	b289      	uxth	r1, r1
 8013d2a:	f101 0801 	add.w	r8, r1, #1
 8013d2e:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013d32:	1209      	asrs	r1, r1, #8
 8013d34:	f80e 1c02 	strb.w	r1, [lr, #-2]
 8013d38:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 8013d3c:	fb11 f100 	smulbb	r1, r1, r0
 8013d40:	4431      	add	r1, r6
 8013d42:	b289      	uxth	r1, r1
 8013d44:	f101 0801 	add.w	r8, r1, #1
 8013d48:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013d4c:	1209      	asrs	r1, r1, #8
 8013d4e:	f80e 1c01 	strb.w	r1, [lr, #-1]
 8013d52:	4671      	mov	r1, lr
 8013d54:	e7d2      	b.n	8013cfc <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x74>
 8013d56:	4411      	add	r1, r2
 8013d58:	e7cc      	b.n	8013cf4 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6c>
 8013d5a:	4411      	add	r1, r2
 8013d5c:	4299      	cmp	r1, r3
 8013d5e:	d209      	bcs.n	8013d74 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013d60:	1948      	adds	r0, r1, r5
 8013d62:	4281      	cmp	r1, r0
 8013d64:	d2f9      	bcs.n	8013d5a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd2>
 8013d66:	700c      	strb	r4, [r1, #0]
 8013d68:	3103      	adds	r1, #3
 8013d6a:	f801 7c02 	strb.w	r7, [r1, #-2]
 8013d6e:	f801 6c01 	strb.w	r6, [r1, #-1]
 8013d72:	e7f6      	b.n	8013d62 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xda>
 8013d74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d78 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d7c:	b093      	sub	sp, #76	; 0x4c
 8013d7e:	4699      	mov	r9, r3
 8013d80:	4617      	mov	r7, r2
 8013d82:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d86:	f9bd 8074 	ldrsh.w	r8, [sp, #116]	; 0x74
 8013d8a:	4604      	mov	r4, r0
 8013d8c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013d90:	a80c      	add	r0, sp, #48	; 0x30
 8013d92:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	; 0x78
 8013d96:	460d      	mov	r5, r1
 8013d98:	4649      	mov	r1, r9
 8013d9a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8013d9e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013da2:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 8013da6:	f8ad 6036 	strh.w	r6, [sp, #54]	; 0x36
 8013daa:	f7f6 f9c9 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 8013dae:	4639      	mov	r1, r7
 8013db0:	a80c      	add	r0, sp, #48	; 0x30
 8013db2:	f7f6 f9c5 	bl	800a140 <_ZN8touchgfx4RectaNERKS0_>
 8013db6:	4b78      	ldr	r3, [pc, #480]	; (8013f98 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8013db8:	8818      	ldrh	r0, [r3, #0]
 8013dba:	4b78      	ldr	r3, [pc, #480]	; (8013f9c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>)
 8013dbc:	b202      	sxth	r2, r0
 8013dbe:	8819      	ldrh	r1, [r3, #0]
 8013dc0:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8013dc4:	b20f      	sxth	r7, r1
 8013dc6:	2b00      	cmp	r3, #0
 8013dc8:	da07      	bge.n	8013dda <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x62>
 8013dca:	f8bd c034 	ldrh.w	ip, [sp, #52]	; 0x34
 8013dce:	4463      	add	r3, ip
 8013dd0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013dd4:	2300      	movs	r3, #0
 8013dd6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013dda:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8013dde:	f9bd c034 	ldrsh.w	ip, [sp, #52]	; 0x34
 8013de2:	1ad2      	subs	r2, r2, r3
 8013de4:	4594      	cmp	ip, r2
 8013de6:	bfc4      	itt	gt
 8013de8:	1ac2      	subgt	r2, r0, r3
 8013dea:	f8ad 2034 	strhgt.w	r2, [sp, #52]	; 0x34
 8013dee:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013df2:	2a00      	cmp	r2, #0
 8013df4:	da07      	bge.n	8013e06 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x8e>
 8013df6:	f8bd c036 	ldrh.w	ip, [sp, #54]	; 0x36
 8013dfa:	4462      	add	r2, ip
 8013dfc:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8013e00:	2200      	movs	r2, #0
 8013e02:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8013e06:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013e0a:	f9bd c036 	ldrsh.w	ip, [sp, #54]	; 0x36
 8013e0e:	1abf      	subs	r7, r7, r2
 8013e10:	45bc      	cmp	ip, r7
 8013e12:	f8df c190 	ldr.w	ip, [pc, #400]	; 8013fa4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22c>
 8013e16:	bfc8      	it	gt
 8013e18:	1a8f      	subgt	r7, r1, r2
 8013e1a:	f89c c000 	ldrb.w	ip, [ip]
 8013e1e:	bfc8      	it	gt
 8013e20:	f8ad 7036 	strhgt.w	r7, [sp, #54]	; 0x36
 8013e24:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8013e28:	f1bc 0f00 	cmp.w	ip, #0
 8013e2c:	d176      	bne.n	8013f1c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a4>
 8013e2e:	4287      	cmp	r7, r0
 8013e30:	bf14      	ite	ne
 8013e32:	2100      	movne	r1, #0
 8013e34:	2101      	moveq	r1, #1
 8013e36:	2f00      	cmp	r7, #0
 8013e38:	9107      	str	r1, [sp, #28]
 8013e3a:	dd73      	ble.n	8013f24 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ac>
 8013e3c:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	; 0x36
 8013e40:	2900      	cmp	r1, #0
 8013e42:	9104      	str	r1, [sp, #16]
 8013e44:	dd6e      	ble.n	8013f24 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ac>
 8013e46:	f8b9 1000 	ldrh.w	r1, [r9]
 8013e4a:	a80e      	add	r0, sp, #56	; 0x38
 8013e4c:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8013e50:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8013e54:	1a5b      	subs	r3, r3, r1
 8013e56:	a910      	add	r1, sp, #64	; 0x40
 8013e58:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013e5c:	b21b      	sxth	r3, r3
 8013e5e:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 8013e62:	f8df a144 	ldr.w	sl, [pc, #324]	; 8013fa8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x230>
 8013e66:	9305      	str	r3, [sp, #20]
 8013e68:	f8b9 3002 	ldrh.w	r3, [r9, #2]
 8013e6c:	1ad2      	subs	r2, r2, r3
 8013e6e:	b213      	sxth	r3, r2
 8013e70:	9306      	str	r3, [sp, #24]
 8013e72:	9b05      	ldr	r3, [sp, #20]
 8013e74:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013e78:	9b06      	ldr	r3, [sp, #24]
 8013e7a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8013e7e:	9b04      	ldr	r3, [sp, #16]
 8013e80:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8013e84:	2300      	movs	r3, #0
 8013e86:	9310      	str	r3, [sp, #64]	; 0x40
 8013e88:	f7fa f8ce 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e8c:	4640      	mov	r0, r8
 8013e8e:	f7fa f8a3 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e92:	a810      	add	r0, sp, #64	; 0x40
 8013e94:	f7fa f8a0 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e98:	4b41      	ldr	r3, [pc, #260]	; (8013fa0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x228>)
 8013e9a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8013e9e:	4628      	mov	r0, r5
 8013ea0:	881b      	ldrh	r3, [r3, #0]
 8013ea2:	9308      	str	r3, [sp, #32]
 8013ea4:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 8013ea8:	b21b      	sxth	r3, r3
 8013eaa:	9303      	str	r3, [sp, #12]
 8013eac:	682b      	ldr	r3, [r5, #0]
 8013eae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013eb0:	4798      	blx	r3
 8013eb2:	9a03      	ldr	r2, [sp, #12]
 8013eb4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8013eb8:	4681      	mov	r9, r0
 8013eba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8013ebe:	fb13 f302 	smulbb	r3, r3, r2
 8013ec2:	2203      	movs	r2, #3
 8013ec4:	f8da 0000 	ldr.w	r0, [sl]
 8013ec8:	fb15 3302 	smlabb	r3, r5, r2, r3
 8013ecc:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8013ece:	920b      	str	r2, [sp, #44]	; 0x2c
 8013ed0:	441d      	add	r5, r3
 8013ed2:	6803      	ldr	r3, [r0, #0]
 8013ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ed6:	4798      	blx	r3
 8013ed8:	9009      	str	r0, [sp, #36]	; 0x24
 8013eda:	f8da 0000 	ldr.w	r0, [sl]
 8013ede:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8013ee2:	6803      	ldr	r3, [r0, #0]
 8013ee4:	910a      	str	r1, [sp, #40]	; 0x28
 8013ee6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ee8:	f9bd 6032 	ldrsh.w	r6, [sp, #50]	; 0x32
 8013eec:	4798      	blx	r3
 8013eee:	f010 0f01 	tst.w	r0, #1
 8013ef2:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
 8013ef6:	d01e      	beq.n	8013f36 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1be>
 8013ef8:	f8da 0000 	ldr.w	r0, [sl]
 8013efc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8013f00:	6803      	ldr	r3, [r0, #0]
 8013f02:	9200      	str	r2, [sp, #0]
 8013f04:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8013f06:	462b      	mov	r3, r5
 8013f08:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013f0c:	47b0      	blx	r6
 8013f0e:	9b05      	ldr	r3, [sp, #20]
 8013f10:	80a7      	strh	r7, [r4, #4]
 8013f12:	8023      	strh	r3, [r4, #0]
 8013f14:	9b06      	ldr	r3, [sp, #24]
 8013f16:	8063      	strh	r3, [r4, #2]
 8013f18:	9b04      	ldr	r3, [sp, #16]
 8013f1a:	e007      	b.n	8013f2c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b4>
 8013f1c:	f9bd 0036 	ldrsh.w	r0, [sp, #54]	; 0x36
 8013f20:	4288      	cmp	r0, r1
 8013f22:	e785      	b.n	8013e30 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb8>
 8013f24:	2300      	movs	r3, #0
 8013f26:	8023      	strh	r3, [r4, #0]
 8013f28:	8063      	strh	r3, [r4, #2]
 8013f2a:	80a3      	strh	r3, [r4, #4]
 8013f2c:	4620      	mov	r0, r4
 8013f2e:	80e3      	strh	r3, [r4, #6]
 8013f30:	b013      	add	sp, #76	; 0x4c
 8013f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f36:	fb09 f606 	mul.w	r6, r9, r6
 8013f3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f3c:	fb11 6602 	smlabb	r6, r1, r2, r6
 8013f40:	9a07      	ldr	r2, [sp, #28]
 8013f42:	4433      	add	r3, r6
 8013f44:	461e      	mov	r6, r3
 8013f46:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8013f4a:	b16a      	cbz	r2, 8013f68 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f0>
 8013f4c:	9a08      	ldr	r2, [sp, #32]
 8013f4e:	4593      	cmp	fp, r2
 8013f50:	d10a      	bne.n	8013f68 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f0>
 8013f52:	f8da 0000 	ldr.w	r0, [sl]
 8013f56:	fb09 f303 	mul.w	r3, r9, r3
 8013f5a:	4629      	mov	r1, r5
 8013f5c:	6802      	ldr	r2, [r0, #0]
 8013f5e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8013f62:	4632      	mov	r2, r6
 8013f64:	47d0      	blx	sl
 8013f66:	e7d2      	b.n	8013f0e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x196>
 8013f68:	9a03      	ldr	r2, [sp, #12]
 8013f6a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8013fa8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x230>
 8013f6e:	fb02 5803 	mla	r8, r2, r3, r5
 8013f72:	4545      	cmp	r5, r8
 8013f74:	d2cb      	bcs.n	8013f0e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x196>
 8013f76:	f8db 0000 	ldr.w	r0, [fp]
 8013f7a:	4629      	mov	r1, r5
 8013f7c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013f80:	6802      	ldr	r2, [r0, #0]
 8013f82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013f86:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8013f8a:	4632      	mov	r2, r6
 8013f8c:	47d0      	blx	sl
 8013f8e:	9b03      	ldr	r3, [sp, #12]
 8013f90:	444e      	add	r6, r9
 8013f92:	441d      	add	r5, r3
 8013f94:	e7ed      	b.n	8013f72 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1fa>
 8013f96:	bf00      	nop
 8013f98:	24006bcc 	.word	0x24006bcc
 8013f9c:	24006bce 	.word	0x24006bce
 8013fa0:	24006bd2 	.word	0x24006bd2
 8013fa4:	24006bd0 	.word	0x24006bd0
 8013fa8:	24006bd8 	.word	0x24006bd8

08013fac <_ZN8touchgfx8LCD24bppC1Ev>:
 8013fac:	2200      	movs	r2, #0
 8013fae:	490d      	ldr	r1, [pc, #52]	; (8013fe4 <_ZN8touchgfx8LCD24bppC1Ev+0x38>)
 8013fb0:	6042      	str	r2, [r0, #4]
 8013fb2:	6001      	str	r1, [r0, #0]
 8013fb4:	6602      	str	r2, [r0, #96]	; 0x60
 8013fb6:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013fba:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8013fbe:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013fc2:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013fc6:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013fca:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8013fce:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013fd2:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013fd6:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8013fda:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8013fde:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013fe2:	4770      	bx	lr
 8013fe4:	0801cb0c 	.word	0x0801cb0c

08013fe8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fec:	b091      	sub	sp, #68	; 0x44
 8013fee:	4607      	mov	r7, r0
 8013ff0:	4688      	mov	r8, r1
 8013ff2:	6810      	ldr	r0, [r2, #0]
 8013ff4:	6851      	ldr	r1, [r2, #4]
 8013ff6:	ac0c      	add	r4, sp, #48	; 0x30
 8013ff8:	4616      	mov	r6, r2
 8013ffa:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 8013ffe:	4d64      	ldr	r5, [pc, #400]	; (8014190 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8014000:	f8df a190 	ldr.w	sl, [pc, #400]	; 8014194 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8014004:	c403      	stmia	r4!, {r0, r1}
 8014006:	6818      	ldr	r0, [r3, #0]
 8014008:	ac0e      	add	r4, sp, #56	; 0x38
 801400a:	6859      	ldr	r1, [r3, #4]
 801400c:	c403      	stmia	r4!, {r0, r1}
 801400e:	a80c      	add	r0, sp, #48	; 0x30
 8014010:	f7f9 ffe2 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014014:	4631      	mov	r1, r6
 8014016:	a80e      	add	r0, sp, #56	; 0x38
 8014018:	f7fa f806 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801401c:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014020:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014024:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014028:	6828      	ldr	r0, [r5, #0]
 801402a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801402e:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8014032:	f9bd 603e 	ldrsh.w	r6, [sp, #62]	; 0x3e
 8014036:	440f      	add	r7, r1
 8014038:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801403c:	440a      	add	r2, r1
 801403e:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8014042:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014046:	4413      	add	r3, r2
 8014048:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801404c:	6803      	ldr	r3, [r0, #0]
 801404e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014050:	4798      	blx	r3
 8014052:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014056:	6828      	ldr	r0, [r5, #0]
 8014058:	d01f      	beq.n	801409a <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb2>
 801405a:	2201      	movs	r2, #1
 801405c:	2500      	movs	r5, #0
 801405e:	6801      	ldr	r1, [r0, #0]
 8014060:	b2a4      	uxth	r4, r4
 8014062:	b2b6      	uxth	r6, r6
 8014064:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014068:	e9cd 2508 	strd	r2, r5, [sp, #32]
 801406c:	250b      	movs	r5, #11
 801406e:	9507      	str	r5, [sp, #28]
 8014070:	f8ba 5000 	ldrh.w	r5, [sl]
 8014074:	f8cd 9010 	str.w	r9, [sp, #16]
 8014078:	9602      	str	r6, [sp, #8]
 801407a:	9401      	str	r4, [sp, #4]
 801407c:	e9cd 2505 	strd	r2, r5, [sp, #20]
 8014080:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8014084:	9203      	str	r2, [sp, #12]
 8014086:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801408a:	9200      	str	r2, [sp, #0]
 801408c:	4642      	mov	r2, r8
 801408e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8014090:	4639      	mov	r1, r7
 8014092:	47a0      	blx	r4
 8014094:	b011      	add	sp, #68	; 0x44
 8014096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801409a:	6803      	ldr	r3, [r0, #0]
 801409c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801409e:	4798      	blx	r3
 80140a0:	f8ba 5000 	ldrh.w	r5, [sl]
 80140a4:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80140a8:	f04f 0e04 	mov.w	lr, #4
 80140ac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80140b0:	436e      	muls	r6, r5
 80140b2:	fb05 2303 	mla	r3, r5, r3, r2
 80140b6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80140ba:	1b2d      	subs	r5, r5, r4
 80140bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80140c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80140c4:	4418      	add	r0, r3
 80140c6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80140ca:	1982      	adds	r2, r0, r6
 80140cc:	1b1b      	subs	r3, r3, r4
 80140ce:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80140d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80140d4:	4290      	cmp	r0, r2
 80140d6:	d254      	bcs.n	8014182 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x19a>
 80140d8:	eb00 0a04 	add.w	sl, r0, r4
 80140dc:	4550      	cmp	r0, sl
 80140de:	d24c      	bcs.n	801417a <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x192>
 80140e0:	f817 1b01 	ldrb.w	r1, [r7], #1
 80140e4:	fb1e e101 	smlabb	r1, lr, r1, lr
 80140e8:	eb08 0c01 	add.w	ip, r8, r1
 80140ec:	f89c 3003 	ldrb.w	r3, [ip, #3]
 80140f0:	b173      	cbz	r3, 8014110 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80140f2:	2bff      	cmp	r3, #255	; 0xff
 80140f4:	f818 b001 	ldrb.w	fp, [r8, r1]
 80140f8:	d10c      	bne.n	8014114 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80140fa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80140fe:	d109      	bne.n	8014114 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014100:	f880 b000 	strb.w	fp, [r0]
 8014104:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014108:	7043      	strb	r3, [r0, #1]
 801410a:	f89c 3002 	ldrb.w	r3, [ip, #2]
 801410e:	7083      	strb	r3, [r0, #2]
 8014110:	3003      	adds	r0, #3
 8014112:	e7e3      	b.n	80140dc <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf4>
 8014114:	fb09 f103 	mul.w	r1, r9, r3
 8014118:	1c4b      	adds	r3, r1, #1
 801411a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801411e:	7801      	ldrb	r1, [r0, #0]
 8014120:	121b      	asrs	r3, r3, #8
 8014122:	b29e      	uxth	r6, r3
 8014124:	43db      	mvns	r3, r3
 8014126:	fb1b fb06 	smulbb	fp, fp, r6
 801412a:	b2db      	uxtb	r3, r3
 801412c:	fb01 b103 	mla	r1, r1, r3, fp
 8014130:	b289      	uxth	r1, r1
 8014132:	f101 0b01 	add.w	fp, r1, #1
 8014136:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 801413a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801413e:	fb1b fb03 	smulbb	fp, fp, r3
 8014142:	1209      	asrs	r1, r1, #8
 8014144:	7001      	strb	r1, [r0, #0]
 8014146:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801414a:	fb01 b106 	mla	r1, r1, r6, fp
 801414e:	b289      	uxth	r1, r1
 8014150:	f101 0b01 	add.w	fp, r1, #1
 8014154:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8014158:	1209      	asrs	r1, r1, #8
 801415a:	7041      	strb	r1, [r0, #1]
 801415c:	f89c 1002 	ldrb.w	r1, [ip, #2]
 8014160:	f890 c002 	ldrb.w	ip, [r0, #2]
 8014164:	fb1c f303 	smulbb	r3, ip, r3
 8014168:	fb01 3606 	mla	r6, r1, r6, r3
 801416c:	b2b6      	uxth	r6, r6
 801416e:	1c73      	adds	r3, r6, #1
 8014170:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8014174:	1236      	asrs	r6, r6, #8
 8014176:	7086      	strb	r6, [r0, #2]
 8014178:	e7ca      	b.n	8014110 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801417a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801417c:	4428      	add	r0, r5
 801417e:	441f      	add	r7, r3
 8014180:	e7a8      	b.n	80140d4 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xec>
 8014182:	4b03      	ldr	r3, [pc, #12]	; (8014190 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8014184:	6818      	ldr	r0, [r3, #0]
 8014186:	6803      	ldr	r3, [r0, #0]
 8014188:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801418a:	4798      	blx	r3
 801418c:	e782      	b.n	8014094 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801418e:	bf00      	nop
 8014190:	24006bd8 	.word	0x24006bd8
 8014194:	24006bd2 	.word	0x24006bd2

08014198 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801419c:	b091      	sub	sp, #68	; 0x44
 801419e:	4680      	mov	r8, r0
 80141a0:	460e      	mov	r6, r1
 80141a2:	6810      	ldr	r0, [r2, #0]
 80141a4:	6851      	ldr	r1, [r2, #4]
 80141a6:	ad0c      	add	r5, sp, #48	; 0x30
 80141a8:	4614      	mov	r4, r2
 80141aa:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 80141ae:	f8df 9198 	ldr.w	r9, [pc, #408]	; 8014348 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b0>
 80141b2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801434c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80141b6:	c503      	stmia	r5!, {r0, r1}
 80141b8:	6818      	ldr	r0, [r3, #0]
 80141ba:	ad0e      	add	r5, sp, #56	; 0x38
 80141bc:	6859      	ldr	r1, [r3, #4]
 80141be:	c503      	stmia	r5!, {r0, r1}
 80141c0:	a80c      	add	r0, sp, #48	; 0x30
 80141c2:	f7f9 ff09 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80141c6:	4621      	mov	r1, r4
 80141c8:	a80e      	add	r0, sp, #56	; 0x38
 80141ca:	f7f9 ff2d 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80141ce:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80141d2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80141d6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80141da:	f8d9 0000 	ldr.w	r0, [r9]
 80141de:	fb11 2103 	smlabb	r1, r1, r3, r2
 80141e2:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80141e6:	eb08 0401 	add.w	r4, r8, r1
 80141ea:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80141ee:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80141f2:	440a      	add	r2, r1
 80141f4:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80141f8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80141fc:	4413      	add	r3, r2
 80141fe:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8014202:	6803      	ldr	r3, [r0, #0]
 8014204:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014206:	4798      	blx	r3
 8014208:	f010 0f80 	tst.w	r0, #128	; 0x80
 801420c:	f8d9 0000 	ldr.w	r0, [r9]
 8014210:	d022      	beq.n	8014258 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8014212:	2200      	movs	r2, #0
 8014214:	f04f 0c01 	mov.w	ip, #1
 8014218:	6801      	ldr	r1, [r0, #0]
 801421a:	b2ad      	uxth	r5, r5
 801421c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014220:	e9cd c208 	strd	ip, r2, [sp, #32]
 8014224:	f04f 0c0b 	mov.w	ip, #11
 8014228:	f8cd c01c 	str.w	ip, [sp, #28]
 801422c:	f8ba c000 	ldrh.w	ip, [sl]
 8014230:	9704      	str	r7, [sp, #16]
 8014232:	9502      	str	r5, [sp, #8]
 8014234:	e9cd 2c05 	strd	r2, ip, [sp, #20]
 8014238:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801423c:	9203      	str	r2, [sp, #12]
 801423e:	fa1f f288 	uxth.w	r2, r8
 8014242:	9201      	str	r2, [sp, #4]
 8014244:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014248:	9200      	str	r2, [sp, #0]
 801424a:	4632      	mov	r2, r6
 801424c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801424e:	4621      	mov	r1, r4
 8014250:	47a8      	blx	r5
 8014252:	b011      	add	sp, #68	; 0x44
 8014254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014258:	6803      	ldr	r3, [r0, #0]
 801425a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801425c:	4798      	blx	r3
 801425e:	f8ba 2000 	ldrh.w	r2, [sl]
 8014262:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014266:	f04f 0e03 	mov.w	lr, #3
 801426a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801426e:	4355      	muls	r5, r2
 8014270:	fa1f fc87 	uxth.w	ip, r7
 8014274:	fb02 1303 	mla	r3, r2, r3, r1
 8014278:	eba2 0208 	sub.w	r2, r2, r8
 801427c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014280:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014284:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014288:	4418      	add	r0, r3
 801428a:	920b      	str	r2, [sp, #44]	; 0x2c
 801428c:	1943      	adds	r3, r0, r5
 801428e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8014292:	f1c7 05ff 	rsb	r5, r7, #255	; 0xff
 8014296:	eba2 0208 	sub.w	r2, r2, r8
 801429a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801429e:	b2ad      	uxth	r5, r5
 80142a0:	4298      	cmp	r0, r3
 80142a2:	d24a      	bcs.n	801433a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a2>
 80142a4:	eb00 0908 	add.w	r9, r0, r8
 80142a8:	4621      	mov	r1, r4
 80142aa:	4548      	cmp	r0, r9
 80142ac:	460c      	mov	r4, r1
 80142ae:	d240      	bcs.n	8014332 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19a>
 80142b0:	f04f 0a04 	mov.w	sl, #4
 80142b4:	7824      	ldrb	r4, [r4, #0]
 80142b6:	2fff      	cmp	r7, #255	; 0xff
 80142b8:	f101 0101 	add.w	r1, r1, #1
 80142bc:	fb1e a404 	smlabb	r4, lr, r4, sl
 80142c0:	eb06 0a04 	add.w	sl, r6, r4
 80142c4:	f816 b004 	ldrb.w	fp, [r6, r4]
 80142c8:	d02b      	beq.n	8014322 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x18a>
 80142ca:	7804      	ldrb	r4, [r0, #0]
 80142cc:	fb14 f405 	smulbb	r4, r4, r5
 80142d0:	fb0b 440c 	mla	r4, fp, ip, r4
 80142d4:	b2a4      	uxth	r4, r4
 80142d6:	f104 0b01 	add.w	fp, r4, #1
 80142da:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80142de:	f890 b001 	ldrb.w	fp, [r0, #1]
 80142e2:	fb1b fb05 	smulbb	fp, fp, r5
 80142e6:	1224      	asrs	r4, r4, #8
 80142e8:	7004      	strb	r4, [r0, #0]
 80142ea:	f89a 4001 	ldrb.w	r4, [sl, #1]
 80142ee:	fb04 b40c 	mla	r4, r4, ip, fp
 80142f2:	b2a4      	uxth	r4, r4
 80142f4:	f104 0b01 	add.w	fp, r4, #1
 80142f8:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80142fc:	1224      	asrs	r4, r4, #8
 80142fe:	7044      	strb	r4, [r0, #1]
 8014300:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8014304:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014308:	fb1a fa05 	smulbb	sl, sl, r5
 801430c:	fb04 a40c 	mla	r4, r4, ip, sl
 8014310:	b2a4      	uxth	r4, r4
 8014312:	f104 0a01 	add.w	sl, r4, #1
 8014316:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801431a:	1224      	asrs	r4, r4, #8
 801431c:	7084      	strb	r4, [r0, #2]
 801431e:	3003      	adds	r0, #3
 8014320:	e7c3      	b.n	80142aa <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x112>
 8014322:	f880 b000 	strb.w	fp, [r0]
 8014326:	f89a 4001 	ldrb.w	r4, [sl, #1]
 801432a:	7044      	strb	r4, [r0, #1]
 801432c:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8014330:	e7f4      	b.n	801431c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x184>
 8014332:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014334:	4420      	add	r0, r4
 8014336:	188c      	adds	r4, r1, r2
 8014338:	e7b2      	b.n	80142a0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x108>
 801433a:	4b03      	ldr	r3, [pc, #12]	; (8014348 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801433c:	6818      	ldr	r0, [r3, #0]
 801433e:	6803      	ldr	r3, [r0, #0]
 8014340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014342:	4798      	blx	r3
 8014344:	e785      	b.n	8014252 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xba>
 8014346:	bf00      	nop
 8014348:	24006bd8 	.word	0x24006bd8
 801434c:	24006bd2 	.word	0x24006bd2

08014350 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014350:	b4f0      	push	{r4, r5, r6, r7}
 8014352:	460c      	mov	r4, r1
 8014354:	4611      	mov	r1, r2
 8014356:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801435a:	461a      	mov	r2, r3
 801435c:	780f      	ldrb	r7, [r1, #0]
 801435e:	9b04      	ldr	r3, [sp, #16]
 8014360:	784e      	ldrb	r6, [r1, #1]
 8014362:	b11f      	cbz	r7, 801436c <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1c>
 8014364:	2f01      	cmp	r7, #1
 8014366:	d01d      	beq.n	80143a4 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x54>
 8014368:	bcf0      	pop	{r4, r5, r6, r7}
 801436a:	4770      	bx	lr
 801436c:	2e03      	cmp	r6, #3
 801436e:	d8fb      	bhi.n	8014368 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x18>
 8014370:	e8df f006 	tbb	[pc, r6]
 8014374:	16140702 	.word	0x16140702
 8014378:	9504      	str	r5, [sp, #16]
 801437a:	4620      	mov	r0, r4
 801437c:	bcf0      	pop	{r4, r5, r6, r7}
 801437e:	f7ff be33 	b.w	8013fe8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014382:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014384:	2800      	cmp	r0, #0
 8014386:	d0ef      	beq.n	8014368 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x18>
 8014388:	6806      	ldr	r6, [r0, #0]
 801438a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801438e:	68f5      	ldr	r5, [r6, #12]
 8014390:	4613      	mov	r3, r2
 8014392:	46ac      	mov	ip, r5
 8014394:	460a      	mov	r2, r1
 8014396:	4621      	mov	r1, r4
 8014398:	bcf0      	pop	{r4, r5, r6, r7}
 801439a:	4760      	bx	ip
 801439c:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801439e:	e7f1      	b.n	8014384 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80143a0:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80143a2:	e7ef      	b.n	8014384 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80143a4:	2e03      	cmp	r6, #3
 80143a6:	d8df      	bhi.n	8014368 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x18>
 80143a8:	e8df f006 	tbb	[pc, r6]
 80143ac:	110f0702 	.word	0x110f0702
 80143b0:	9504      	str	r5, [sp, #16]
 80143b2:	4620      	mov	r0, r4
 80143b4:	bcf0      	pop	{r4, r5, r6, r7}
 80143b6:	f7ff beef 	b.w	8014198 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80143ba:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80143bc:	2800      	cmp	r0, #0
 80143be:	d0d3      	beq.n	8014368 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x18>
 80143c0:	6806      	ldr	r6, [r0, #0]
 80143c2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80143c6:	68b5      	ldr	r5, [r6, #8]
 80143c8:	e7e2      	b.n	8014390 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80143ca:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80143cc:	e7f6      	b.n	80143bc <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6c>
 80143ce:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80143d0:	e7f4      	b.n	80143bc <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6c>
	...

080143d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>:
 80143d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80143d8:	4605      	mov	r5, r0
 80143da:	b08f      	sub	sp, #60	; 0x3c
 80143dc:	460c      	mov	r4, r1
 80143de:	461f      	mov	r7, r3
 80143e0:	2b00      	cmp	r3, #0
 80143e2:	d052      	beq.n	801448a <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 80143e4:	6808      	ldr	r0, [r1, #0]
 80143e6:	ab0a      	add	r3, sp, #40	; 0x28
 80143e8:	6849      	ldr	r1, [r1, #4]
 80143ea:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 80145b4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>
 80143ee:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80145b8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e4>
 80143f2:	c303      	stmia	r3!, {r0, r1}
 80143f4:	6810      	ldr	r0, [r2, #0]
 80143f6:	ab0c      	add	r3, sp, #48	; 0x30
 80143f8:	6851      	ldr	r1, [r2, #4]
 80143fa:	c303      	stmia	r3!, {r0, r1}
 80143fc:	a80a      	add	r0, sp, #40	; 0x28
 80143fe:	f7f9 fdeb 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014402:	4621      	mov	r1, r4
 8014404:	a80c      	add	r0, sp, #48	; 0x30
 8014406:	f7f9 fe0f 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801440a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801440e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014412:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014416:	f8d8 0000 	ldr.w	r0, [r8]
 801441a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801441e:	f9bd 6034 	ldrsh.w	r6, [sp, #52]	; 0x34
 8014422:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	; 0x36
 8014426:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801442a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801442e:	440a      	add	r2, r1
 8014430:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8014434:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8014438:	4413      	add	r3, r2
 801443a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801443e:	6803      	ldr	r3, [r0, #0]
 8014440:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014442:	4798      	blx	r3
 8014444:	2fff      	cmp	r7, #255	; 0xff
 8014446:	d023      	beq.n	8014490 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xbc>
 8014448:	f010 0f04 	tst.w	r0, #4
 801444c:	f8d8 0000 	ldr.w	r0, [r8]
 8014450:	d021      	beq.n	8014496 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xc2>
 8014452:	2100      	movs	r1, #0
 8014454:	f04f 0e01 	mov.w	lr, #1
 8014458:	f8d0 c000 	ldr.w	ip, [r0]
 801445c:	b2a4      	uxth	r4, r4
 801445e:	9106      	str	r1, [sp, #24]
 8014460:	b2b6      	uxth	r6, r6
 8014462:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014466:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801446a:	e9cd e107 	strd	lr, r1, [sp, #28]
 801446e:	f8b9 e000 	ldrh.w	lr, [r9]
 8014472:	9703      	str	r7, [sp, #12]
 8014474:	9401      	str	r4, [sp, #4]
 8014476:	9600      	str	r6, [sp, #0]
 8014478:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801447c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014480:	9102      	str	r1, [sp, #8]
 8014482:	4629      	mov	r1, r5
 8014484:	f8dc 4040 	ldr.w	r4, [ip, #64]	; 0x40
 8014488:	47a0      	blx	r4
 801448a:	b00f      	add	sp, #60	; 0x3c
 801448c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014490:	f010 0f01 	tst.w	r0, #1
 8014494:	e7da      	b.n	801444c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x78>
 8014496:	6803      	ldr	r3, [r0, #0]
 8014498:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801449a:	4798      	blx	r3
 801449c:	f8b9 1000 	ldrh.w	r1, [r9]
 80144a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80144a4:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 80144a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80144ac:	434c      	muls	r4, r1
 80144ae:	2fff      	cmp	r7, #255	; 0xff
 80144b0:	fb01 2303 	mla	r3, r1, r3, r2
 80144b4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80144b8:	eba1 0106 	sub.w	r1, r1, r6
 80144bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80144c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80144c4:	4418      	add	r0, r3
 80144c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80144ca:	eba3 0606 	sub.w	r6, r3, r6
 80144ce:	4404      	add	r4, r0
 80144d0:	ea4f 0646 	mov.w	r6, r6, lsl #1
 80144d4:	d04a      	beq.n	801456c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x198>
 80144d6:	43fa      	mvns	r2, r7
 80144d8:	b2bb      	uxth	r3, r7
 80144da:	b2d7      	uxtb	r7, r2
 80144dc:	42a0      	cmp	r0, r4
 80144de:	d263      	bcs.n	80145a8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 80144e0:	eb00 0e0c 	add.w	lr, r0, ip
 80144e4:	4586      	cmp	lr, r0
 80144e6:	f100 0803 	add.w	r8, r0, #3
 80144ea:	d93a      	bls.n	8014562 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x18e>
 80144ec:	f835 2b02 	ldrh.w	r2, [r5], #2
 80144f0:	f818 9c03 	ldrb.w	r9, [r8, #-3]
 80144f4:	00d0      	lsls	r0, r2, #3
 80144f6:	fb19 f907 	smulbb	r9, r9, r7
 80144fa:	b2c0      	uxtb	r0, r0
 80144fc:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8014500:	fb00 9003 	mla	r0, r0, r3, r9
 8014504:	b280      	uxth	r0, r0
 8014506:	f100 0901 	add.w	r9, r0, #1
 801450a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801450e:	f818 9c02 	ldrb.w	r9, [r8, #-2]
 8014512:	fb19 f907 	smulbb	r9, r9, r7
 8014516:	1200      	asrs	r0, r0, #8
 8014518:	f808 0c03 	strb.w	r0, [r8, #-3]
 801451c:	10d0      	asrs	r0, r2, #3
 801451e:	1212      	asrs	r2, r2, #8
 8014520:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8014524:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014528:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801452c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014530:	fb00 9003 	mla	r0, r0, r3, r9
 8014534:	b280      	uxth	r0, r0
 8014536:	f100 0901 	add.w	r9, r0, #1
 801453a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801453e:	1200      	asrs	r0, r0, #8
 8014540:	f808 0c02 	strb.w	r0, [r8, #-2]
 8014544:	f818 0c01 	ldrb.w	r0, [r8, #-1]
 8014548:	fb10 f007 	smulbb	r0, r0, r7
 801454c:	fb02 0203 	mla	r2, r2, r3, r0
 8014550:	b292      	uxth	r2, r2
 8014552:	1c50      	adds	r0, r2, #1
 8014554:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014558:	4640      	mov	r0, r8
 801455a:	1212      	asrs	r2, r2, #8
 801455c:	f808 2c01 	strb.w	r2, [r8, #-1]
 8014560:	e7c0      	b.n	80144e4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x110>
 8014562:	4408      	add	r0, r1
 8014564:	4435      	add	r5, r6
 8014566:	e7b9      	b.n	80144dc <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x108>
 8014568:	4408      	add	r0, r1
 801456a:	4435      	add	r5, r6
 801456c:	42a0      	cmp	r0, r4
 801456e:	d21b      	bcs.n	80145a8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 8014570:	eb00 070c 	add.w	r7, r0, ip
 8014574:	42b8      	cmp	r0, r7
 8014576:	d2f7      	bcs.n	8014568 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x194>
 8014578:	f835 3b02 	ldrh.w	r3, [r5], #2
 801457c:	3003      	adds	r0, #3
 801457e:	00da      	lsls	r2, r3, #3
 8014580:	b2d2      	uxtb	r2, r2
 8014582:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014586:	f800 2c03 	strb.w	r2, [r0, #-3]
 801458a:	10da      	asrs	r2, r3, #3
 801458c:	121b      	asrs	r3, r3, #8
 801458e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014592:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014596:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801459a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801459e:	f800 2c02 	strb.w	r2, [r0, #-2]
 80145a2:	f800 3c01 	strb.w	r3, [r0, #-1]
 80145a6:	e7e5      	b.n	8014574 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1a0>
 80145a8:	4b02      	ldr	r3, [pc, #8]	; (80145b4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>)
 80145aa:	6818      	ldr	r0, [r3, #0]
 80145ac:	6803      	ldr	r3, [r0, #0]
 80145ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80145b0:	4798      	blx	r3
 80145b2:	e76a      	b.n	801448a <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 80145b4:	24006bd8 	.word	0x24006bd8
 80145b8:	24006bd2 	.word	0x24006bd2

080145bc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80145bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80145c0:	b08a      	sub	sp, #40	; 0x28
 80145c2:	460d      	mov	r5, r1
 80145c4:	4604      	mov	r4, r0
 80145c6:	461e      	mov	r6, r3
 80145c8:	6808      	ldr	r0, [r1, #0]
 80145ca:	ab06      	add	r3, sp, #24
 80145cc:	6849      	ldr	r1, [r1, #4]
 80145ce:	4f5d      	ldr	r7, [pc, #372]	; (8014744 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x188>)
 80145d0:	c303      	stmia	r3!, {r0, r1}
 80145d2:	6810      	ldr	r0, [r2, #0]
 80145d4:	ab08      	add	r3, sp, #32
 80145d6:	6851      	ldr	r1, [r2, #4]
 80145d8:	c303      	stmia	r3!, {r0, r1}
 80145da:	a806      	add	r0, sp, #24
 80145dc:	f7f9 fcfc 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80145e0:	4629      	mov	r1, r5
 80145e2:	a808      	add	r0, sp, #32
 80145e4:	f7f9 fd20 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80145e8:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80145ec:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80145f0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80145f4:	6838      	ldr	r0, [r7, #0]
 80145f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80145fa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80145fe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8014602:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014606:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801460a:	440a      	add	r2, r1
 801460c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014610:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014614:	4413      	add	r3, r2
 8014616:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801461a:	6803      	ldr	r3, [r0, #0]
 801461c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801461e:	4798      	blx	r3
 8014620:	2eff      	cmp	r6, #255	; 0xff
 8014622:	d119      	bne.n	8014658 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8014624:	f010 0f20 	tst.w	r0, #32
 8014628:	6838      	ldr	r0, [r7, #0]
 801462a:	d018      	beq.n	801465e <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 801462c:	b2ad      	uxth	r5, r5
 801462e:	2700      	movs	r7, #0
 8014630:	6801      	ldr	r1, [r0, #0]
 8014632:	9501      	str	r5, [sp, #4]
 8014634:	fa1f f588 	uxth.w	r5, r8
 8014638:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801463c:	9500      	str	r5, [sp, #0]
 801463e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8014642:	e9cd 6703 	strd	r6, r7, [sp, #12]
 8014646:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801464a:	9602      	str	r6, [sp, #8]
 801464c:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801464e:	4621      	mov	r1, r4
 8014650:	47a8      	blx	r5
 8014652:	b00a      	add	sp, #40	; 0x28
 8014654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014658:	f010 0f40 	tst.w	r0, #64	; 0x40
 801465c:	e7e4      	b.n	8014628 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6c>
 801465e:	6803      	ldr	r3, [r0, #0]
 8014660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014662:	4798      	blx	r3
 8014664:	4b38      	ldr	r3, [pc, #224]	; (8014748 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18c>)
 8014666:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801466a:	f8b3 c000 	ldrh.w	ip, [r3]
 801466e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014672:	fb0c f505 	mul.w	r5, ip, r5
 8014676:	f9bd e01c 	ldrsh.w	lr, [sp, #28]
 801467a:	fb0c 2303 	mla	r3, ip, r3, r2
 801467e:	ebac 0c08 	sub.w	ip, ip, r8
 8014682:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014686:	ebae 0e08 	sub.w	lr, lr, r8
 801468a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801468e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014692:	4418      	add	r0, r3
 8014694:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8014698:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 801469c:	4405      	add	r5, r0
 801469e:	42a8      	cmp	r0, r5
 80146a0:	d24a      	bcs.n	8014738 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x17c>
 80146a2:	eb00 0803 	add.w	r8, r0, r3
 80146a6:	4540      	cmp	r0, r8
 80146a8:	d243      	bcs.n	8014732 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x176>
 80146aa:	78e2      	ldrb	r2, [r4, #3]
 80146ac:	b15a      	cbz	r2, 80146c6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80146ae:	2aff      	cmp	r2, #255	; 0xff
 80146b0:	f894 9000 	ldrb.w	r9, [r4]
 80146b4:	d10a      	bne.n	80146cc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80146b6:	2eff      	cmp	r6, #255	; 0xff
 80146b8:	d108      	bne.n	80146cc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80146ba:	f880 9000 	strb.w	r9, [r0]
 80146be:	7862      	ldrb	r2, [r4, #1]
 80146c0:	7042      	strb	r2, [r0, #1]
 80146c2:	78a2      	ldrb	r2, [r4, #2]
 80146c4:	7082      	strb	r2, [r0, #2]
 80146c6:	3003      	adds	r0, #3
 80146c8:	3404      	adds	r4, #4
 80146ca:	e7ec      	b.n	80146a6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xea>
 80146cc:	4372      	muls	r2, r6
 80146ce:	1c51      	adds	r1, r2, #1
 80146d0:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80146d4:	1209      	asrs	r1, r1, #8
 80146d6:	fa1f fa81 	uxth.w	sl, r1
 80146da:	43c9      	mvns	r1, r1
 80146dc:	fb19 f90a 	smulbb	r9, r9, sl
 80146e0:	b2ca      	uxtb	r2, r1
 80146e2:	7801      	ldrb	r1, [r0, #0]
 80146e4:	fb01 9902 	mla	r9, r1, r2, r9
 80146e8:	fa1f f989 	uxth.w	r9, r9
 80146ec:	f109 0101 	add.w	r1, r9, #1
 80146f0:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 80146f4:	ea4f 2929 	mov.w	r9, r9, asr #8
 80146f8:	f880 9000 	strb.w	r9, [r0]
 80146fc:	f890 9001 	ldrb.w	r9, [r0, #1]
 8014700:	7861      	ldrb	r1, [r4, #1]
 8014702:	fb19 f902 	smulbb	r9, r9, r2
 8014706:	fb01 910a 	mla	r1, r1, sl, r9
 801470a:	b289      	uxth	r1, r1
 801470c:	f101 0901 	add.w	r9, r1, #1
 8014710:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8014714:	1209      	asrs	r1, r1, #8
 8014716:	7041      	strb	r1, [r0, #1]
 8014718:	7881      	ldrb	r1, [r0, #2]
 801471a:	f894 9002 	ldrb.w	r9, [r4, #2]
 801471e:	fb11 f202 	smulbb	r2, r1, r2
 8014722:	fb09 220a 	mla	r2, r9, sl, r2
 8014726:	b292      	uxth	r2, r2
 8014728:	1c51      	adds	r1, r2, #1
 801472a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801472e:	1212      	asrs	r2, r2, #8
 8014730:	e7c8      	b.n	80146c4 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x108>
 8014732:	4460      	add	r0, ip
 8014734:	4474      	add	r4, lr
 8014736:	e7b2      	b.n	801469e <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 8014738:	6838      	ldr	r0, [r7, #0]
 801473a:	6803      	ldr	r3, [r0, #0]
 801473c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801473e:	4798      	blx	r3
 8014740:	e787      	b.n	8014652 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8014742:	bf00      	nop
 8014744:	24006bd8 	.word	0x24006bd8
 8014748:	24006bd2 	.word	0x24006bd2

0801474c <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801474c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8014750:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8014754:	4607      	mov	r7, r0
 8014756:	460c      	mov	r4, r1
 8014758:	4692      	mov	sl, r2
 801475a:	4699      	mov	r9, r3
 801475c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801475e:	b31d      	cbz	r5, 80147a8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8014760:	4608      	mov	r0, r1
 8014762:	f7fc fb89 	bl	8010e78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014766:	4680      	mov	r8, r0
 8014768:	4620      	mov	r0, r4
 801476a:	f7fc fbb9 	bl	8010ee0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801476e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014772:	4620      	mov	r0, r4
 8014774:	f8ad a008 	strh.w	sl, [sp, #8]
 8014778:	f8ad 900a 	strh.w	r9, [sp, #10]
 801477c:	f8ad 800c 	strh.w	r8, [sp, #12]
 8014780:	f7fc fcb2 	bl	80110e8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014784:	280b      	cmp	r0, #11
 8014786:	d80f      	bhi.n	80147a8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8014788:	e8df f000 	tbb	[pc, r0]
 801478c:	0e062a21 	.word	0x0e062a21
 8014790:	0e0e0e0e 	.word	0x0e0e0e0e
 8014794:	110e0e0e 	.word	0x110e0e0e
 8014798:	4620      	mov	r0, r4
 801479a:	f7fc fc21 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801479e:	462b      	mov	r3, r5
 80147a0:	4632      	mov	r2, r6
 80147a2:	a902      	add	r1, sp, #8
 80147a4:	f7ff ff0a 	bl	80145bc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80147a8:	b004      	add	sp, #16
 80147aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80147ae:	4620      	mov	r0, r4
 80147b0:	f7fc fc16 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80147b4:	4680      	mov	r8, r0
 80147b6:	4620      	mov	r0, r4
 80147b8:	f7fc fc42 	bl	8011040 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80147bc:	ab02      	add	r3, sp, #8
 80147be:	4602      	mov	r2, r0
 80147c0:	4641      	mov	r1, r8
 80147c2:	4638      	mov	r0, r7
 80147c4:	e9cd 6500 	strd	r6, r5, [sp]
 80147c8:	f7ff fdc2 	bl	8014350 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80147cc:	e7ec      	b.n	80147a8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80147ce:	4620      	mov	r0, r4
 80147d0:	f7fc fc06 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80147d4:	462b      	mov	r3, r5
 80147d6:	4632      	mov	r2, r6
 80147d8:	a902      	add	r1, sp, #8
 80147da:	f7ff fdfb 	bl	80143d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 80147de:	e7e3      	b.n	80147a8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80147e0:	683b      	ldr	r3, [r7, #0]
 80147e2:	4620      	mov	r0, r4
 80147e4:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80147e8:	f7fc fbfa 	bl	8010fe0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80147ec:	2300      	movs	r3, #0
 80147ee:	4601      	mov	r1, r0
 80147f0:	aa02      	add	r2, sp, #8
 80147f2:	4638      	mov	r0, r7
 80147f4:	e9cd 5300 	strd	r5, r3, [sp]
 80147f8:	4633      	mov	r3, r6
 80147fa:	47c0      	blx	r8
 80147fc:	e7d4      	b.n	80147a8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>

080147fe <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80147fe:	b4f0      	push	{r4, r5, r6, r7}
 8014800:	4616      	mov	r6, r2
 8014802:	461c      	mov	r4, r3
 8014804:	460d      	mov	r5, r1
 8014806:	9a04      	ldr	r2, [sp, #16]
 8014808:	2e01      	cmp	r6, #1
 801480a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801480e:	d00e      	beq.n	801482e <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x30>
 8014810:	d303      	bcc.n	801481a <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1c>
 8014812:	2e02      	cmp	r6, #2
 8014814:	d006      	beq.n	8014824 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x26>
 8014816:	bcf0      	pop	{r4, r5, r6, r7}
 8014818:	4770      	bx	lr
 801481a:	4621      	mov	r1, r4
 801481c:	4628      	mov	r0, r5
 801481e:	bcf0      	pop	{r4, r5, r6, r7}
 8014820:	f7ff bdd8 	b.w	80143d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8014824:	4621      	mov	r1, r4
 8014826:	4628      	mov	r0, r5
 8014828:	bcf0      	pop	{r4, r5, r6, r7}
 801482a:	f7ff bec7 	b.w	80145bc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801482e:	6805      	ldr	r5, [r0, #0]
 8014830:	2600      	movs	r6, #0
 8014832:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8014836:	68ed      	ldr	r5, [r5, #12]
 8014838:	4613      	mov	r3, r2
 801483a:	4622      	mov	r2, r4
 801483c:	46ac      	mov	ip, r5
 801483e:	bcf0      	pop	{r4, r5, r6, r7}
 8014840:	4760      	bx	ip
	...

08014844 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>:
 8014844:	b160      	cbz	r0, 8014860 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x1c>
 8014846:	2903      	cmp	r1, #3
 8014848:	d818      	bhi.n	801487c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x38>
 801484a:	e8df f001 	tbb	[pc, r1]
 801484e:	1902      	.short	0x1902
 8014850:	1b06      	.short	0x1b06
 8014852:	4b0e      	ldr	r3, [pc, #56]	; (801488c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x48>)
 8014854:	8818      	ldrh	r0, [r3, #0]
 8014856:	4240      	negs	r0, r0
 8014858:	4770      	bx	lr
 801485a:	4b0c      	ldr	r3, [pc, #48]	; (801488c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x48>)
 801485c:	8818      	ldrh	r0, [r3, #0]
 801485e:	4770      	bx	lr
 8014860:	2903      	cmp	r1, #3
 8014862:	d80b      	bhi.n	801487c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x38>
 8014864:	a301      	add	r3, pc, #4	; (adr r3, 801486c <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x28>)
 8014866:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801486a:	bf00      	nop
 801486c:	08014881 	.word	0x08014881
 8014870:	0801485b 	.word	0x0801485b
 8014874:	08014885 	.word	0x08014885
 8014878:	08014853 	.word	0x08014853
 801487c:	2000      	movs	r0, #0
 801487e:	4770      	bx	lr
 8014880:	2001      	movs	r0, #1
 8014882:	4770      	bx	lr
 8014884:	f04f 30ff 	mov.w	r0, #4294967295
 8014888:	4770      	bx	lr
 801488a:	bf00      	nop
 801488c:	24006bd2 	.word	0x24006bd2

08014890 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>:
 8014890:	b160      	cbz	r0, 80148ac <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x1c>
 8014892:	2903      	cmp	r1, #3
 8014894:	d818      	bhi.n	80148c8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x38>
 8014896:	e8df f001 	tbb	[pc, r1]
 801489a:	0219      	.short	0x0219
 801489c:	051b      	.short	0x051b
 801489e:	4b0e      	ldr	r3, [pc, #56]	; (80148d8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x48>)
 80148a0:	8818      	ldrh	r0, [r3, #0]
 80148a2:	4770      	bx	lr
 80148a4:	4b0c      	ldr	r3, [pc, #48]	; (80148d8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x48>)
 80148a6:	8818      	ldrh	r0, [r3, #0]
 80148a8:	4240      	negs	r0, r0
 80148aa:	4770      	bx	lr
 80148ac:	2903      	cmp	r1, #3
 80148ae:	d80b      	bhi.n	80148c8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x38>
 80148b0:	a301      	add	r3, pc, #4	; (adr r3, 80148b8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x28>)
 80148b2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80148b6:	bf00      	nop
 80148b8:	0801489f 	.word	0x0801489f
 80148bc:	080148d1 	.word	0x080148d1
 80148c0:	080148a5 	.word	0x080148a5
 80148c4:	080148cd 	.word	0x080148cd
 80148c8:	2000      	movs	r0, #0
 80148ca:	4770      	bx	lr
 80148cc:	2001      	movs	r0, #1
 80148ce:	4770      	bx	lr
 80148d0:	f04f 30ff 	mov.w	r0, #4294967295
 80148d4:	4770      	bx	lr
 80148d6:	bf00      	nop
 80148d8:	24006bd2 	.word	0x24006bd2

080148dc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80148dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148e0:	b097      	sub	sp, #92	; 0x5c
 80148e2:	910b      	str	r1, [sp, #44]	; 0x2c
 80148e4:	a912      	add	r1, sp, #72	; 0x48
 80148e6:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 80148ea:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 80148ee:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 80148f2:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80148f6:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 80148fa:	e881 000c 	stmia.w	r1, {r2, r3}
 80148fe:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8014902:	930a      	str	r3, [sp, #40]	; 0x28
 8014904:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8014908:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801490c:	9311      	str	r3, [sp, #68]	; 0x44
 801490e:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8014912:	798d      	ldrb	r5, [r1, #6]
 8014914:	930c      	str	r3, [sp, #48]	; 0x30
 8014916:	7b4b      	ldrb	r3, [r1, #13]
 8014918:	0158      	lsls	r0, r3, #5
 801491a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801491e:	4328      	orrs	r0, r5
 8014920:	9009      	str	r0, [sp, #36]	; 0x24
 8014922:	f000 817c 	beq.w	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014926:	011b      	lsls	r3, r3, #4
 8014928:	79c8      	ldrb	r0, [r1, #7]
 801492a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801492e:	4303      	orrs	r3, r0
 8014930:	930e      	str	r3, [sp, #56]	; 0x38
 8014932:	f000 8174 	beq.w	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014936:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801493a:	b29b      	uxth	r3, r3
 801493c:	2f00      	cmp	r7, #0
 801493e:	f000 8116 	beq.w	8014b6e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x292>
 8014942:	1aff      	subs	r7, r7, r3
 8014944:	b2bf      	uxth	r7, r7
 8014946:	043b      	lsls	r3, r7, #16
 8014948:	d502      	bpl.n	8014950 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801494a:	1bf6      	subs	r6, r6, r7
 801494c:	2700      	movs	r7, #0
 801494e:	b236      	sxth	r6, r6
 8014950:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014954:	a812      	add	r0, sp, #72	; 0x48
 8014956:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 801495a:	428e      	cmp	r6, r1
 801495c:	b28b      	uxth	r3, r1
 801495e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8014962:	bfbf      	itttt	lt
 8014964:	18ff      	addlt	r7, r7, r3
 8014966:	1bbe      	sublt	r6, r7, r6
 8014968:	b2b7      	uxthlt	r7, r6
 801496a:	460e      	movlt	r6, r1
 801496c:	8891      	ldrh	r1, [r2, #4]
 801496e:	440b      	add	r3, r1
 8014970:	4631      	mov	r1, r6
 8014972:	b21b      	sxth	r3, r3
 8014974:	9310      	str	r3, [sp, #64]	; 0x40
 8014976:	88d3      	ldrh	r3, [r2, #6]
 8014978:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801497a:	449a      	add	sl, r3
 801497c:	fa0f f38a 	sxth.w	r3, sl
 8014980:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8014984:	930f      	str	r3, [sp, #60]	; 0x3c
 8014986:	4bb5      	ldr	r3, [pc, #724]	; (8014c5c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8014988:	f893 b000 	ldrb.w	fp, [r3]
 801498c:	f10b 3cff 	add.w	ip, fp, #4294967295
 8014990:	f1dc 0300 	rsbs	r3, ip, #0
 8014994:	eb43 030c 	adc.w	r3, r3, ip
 8014998:	930d      	str	r3, [sp, #52]	; 0x34
 801499a:	464b      	mov	r3, r9
 801499c:	f7f9 f991 	bl	800dcc2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80149a0:	4631      	mov	r1, r6
 80149a2:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 80149a6:	464b      	mov	r3, r9
 80149a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80149aa:	a812      	add	r0, sp, #72	; 0x48
 80149ac:	f7f9 f9a6 	bl	800dcfc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80149b0:	a916      	add	r1, sp, #88	; 0x58
 80149b2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80149b6:	a815      	add	r0, sp, #84	; 0x54
 80149b8:	f7f9 facc 	bl	800df54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80149bc:	f1b9 0f00 	cmp.w	r9, #0
 80149c0:	f040 80d8 	bne.w	8014b74 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x298>
 80149c4:	f1bb 0f01 	cmp.w	fp, #1
 80149c8:	f040 80dc 	bne.w	8014b84 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80149cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80149ce:	b153      	cbz	r3, 80149e6 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 80149d0:	2508      	movs	r5, #8
 80149d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80149d4:	fb95 f3f8 	sdiv	r3, r5, r8
 80149d8:	1e5d      	subs	r5, r3, #1
 80149da:	4415      	add	r5, r2
 80149dc:	fb95 f5f3 	sdiv	r5, r5, r3
 80149e0:	fb15 f503 	smulbb	r5, r5, r3
 80149e4:	b2ad      	uxth	r5, r5
 80149e6:	b907      	cbnz	r7, 80149ea <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 80149e8:	b16c      	cbz	r4, 8014a06 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 80149ea:	fb04 7305 	mla	r3, r4, r5, r7
 80149ee:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80149f0:	ebaa 0a04 	sub.w	sl, sl, r4
 80149f4:	fb08 f303 	mul.w	r3, r8, r3
 80149f8:	fa1f fa8a 	uxth.w	sl, sl
 80149fc:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8014a00:	f003 0407 	and.w	r4, r3, #7
 8014a04:	9226      	str	r2, [sp, #152]	; 0x98
 8014a06:	4649      	mov	r1, r9
 8014a08:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014a0a:	f7ff ff1b 	bl	8014844 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>
 8014a0e:	4683      	mov	fp, r0
 8014a10:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014a12:	f7ff ff3d 	bl	8014890 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>
 8014a16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014a18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014a1a:	4681      	mov	r9, r0
 8014a1c:	1a9b      	subs	r3, r3, r2
 8014a1e:	459a      	cmp	sl, r3
 8014a20:	bfa8      	it	ge
 8014a22:	469a      	movge	sl, r3
 8014a24:	f1ba 0f00 	cmp.w	sl, #0
 8014a28:	f340 80f9 	ble.w	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014a2c:	1bf6      	subs	r6, r6, r7
 8014a2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014a30:	1b9e      	subs	r6, r3, r6
 8014a32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a34:	429e      	cmp	r6, r3
 8014a36:	bfd4      	ite	le
 8014a38:	ebc7 0706 	rsble	r7, r7, r6
 8014a3c:	ebc7 0703 	rsbgt	r7, r7, r3
 8014a40:	2f00      	cmp	r7, #0
 8014a42:	f340 80ec 	ble.w	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014a46:	1bed      	subs	r5, r5, r7
 8014a48:	fb08 f305 	mul.w	r3, r8, r5
 8014a4c:	930d      	str	r3, [sp, #52]	; 0x34
 8014a4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a50:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8014a54:	930e      	str	r3, [sp, #56]	; 0x38
 8014a56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014a5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8014a5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a60:	b2db      	uxtb	r3, r3
 8014a62:	9310      	str	r3, [sp, #64]	; 0x40
 8014a64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014a66:	2b00      	cmp	r3, #0
 8014a68:	f040 80de 	bne.w	8014c28 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34c>
 8014a6c:	4b7c      	ldr	r3, [pc, #496]	; (8014c60 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8014a6e:	6818      	ldr	r0, [r3, #0]
 8014a70:	6803      	ldr	r3, [r0, #0]
 8014a72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014a74:	4798      	blx	r3
 8014a76:	2301      	movs	r3, #1
 8014a78:	4a7a      	ldr	r2, [pc, #488]	; (8014c64 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8014a7a:	eb0b 064b 	add.w	r6, fp, fp, lsl #1
 8014a7e:	fb07 9b1b 	mls	fp, r7, fp, r9
 8014a82:	fa03 f308 	lsl.w	r3, r3, r8
 8014a86:	8811      	ldrh	r1, [r2, #0]
 8014a88:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8014a8c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8014a90:	3b01      	subs	r3, #1
 8014a92:	fb06 bb07 	mla	fp, r6, r7, fp
 8014a96:	b2db      	uxtb	r3, r3
 8014a98:	930a      	str	r3, [sp, #40]	; 0x28
 8014a9a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014a9e:	fb01 2303 	mla	r3, r1, r3, r2
 8014aa2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014aa6:	18c3      	adds	r3, r0, r3
 8014aa8:	9309      	str	r3, [sp, #36]	; 0x24
 8014aaa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014aac:	781a      	ldrb	r2, [r3, #0]
 8014aae:	4122      	asrs	r2, r4
 8014ab0:	b2d2      	uxtb	r2, r2
 8014ab2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014ab6:	f0c0 80d7 	bcc.w	8014c68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8014aba:	46be      	mov	lr, r7
 8014abc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014abe:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8014ac2:	f0c0 80ba 	bcc.w	8014c3a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x35e>
 8014ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014ac8:	4013      	ands	r3, r2
 8014aca:	d041      	beq.n	8014b50 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x274>
 8014acc:	20ff      	movs	r0, #255	; 0xff
 8014ace:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014ad0:	fb90 f5f5 	sdiv	r5, r0, r5
 8014ad4:	436b      	muls	r3, r5
 8014ad6:	2bfe      	cmp	r3, #254	; 0xfe
 8014ad8:	dd03      	ble.n	8014ae2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x206>
 8014ada:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014adc:	4285      	cmp	r5, r0
 8014ade:	f000 80a5 	beq.w	8014c2c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8014ae2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014ae4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014ae6:	fb15 f303 	smulbb	r3, r5, r3
 8014aea:	b29b      	uxth	r3, r3
 8014aec:	1c5d      	adds	r5, r3, #1
 8014aee:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8014af2:	780d      	ldrb	r5, [r1, #0]
 8014af4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014af8:	fa1f fc83 	uxth.w	ip, r3
 8014afc:	43db      	mvns	r3, r3
 8014afe:	fb10 f90c 	smulbb	r9, r0, ip
 8014b02:	b2db      	uxtb	r3, r3
 8014b04:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014b06:	fb05 9503 	mla	r5, r5, r3, r9
 8014b0a:	b2ad      	uxth	r5, r5
 8014b0c:	f105 0901 	add.w	r9, r5, #1
 8014b10:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8014b14:	fb10 f90c 	smulbb	r9, r0, ip
 8014b18:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014b1a:	122d      	asrs	r5, r5, #8
 8014b1c:	fb10 fc0c 	smulbb	ip, r0, ip
 8014b20:	700d      	strb	r5, [r1, #0]
 8014b22:	784d      	ldrb	r5, [r1, #1]
 8014b24:	fb05 9503 	mla	r5, r5, r3, r9
 8014b28:	b2ad      	uxth	r5, r5
 8014b2a:	f105 0901 	add.w	r9, r5, #1
 8014b2e:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8014b32:	122d      	asrs	r5, r5, #8
 8014b34:	704d      	strb	r5, [r1, #1]
 8014b36:	788d      	ldrb	r5, [r1, #2]
 8014b38:	fb05 cc03 	mla	ip, r5, r3, ip
 8014b3c:	fa1f fc8c 	uxth.w	ip, ip
 8014b40:	f10c 0301 	add.w	r3, ip, #1
 8014b44:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014b48:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8014b4c:	f881 c002 	strb.w	ip, [r1, #2]
 8014b50:	4444      	add	r4, r8
 8014b52:	4431      	add	r1, r6
 8014b54:	b2a4      	uxth	r4, r4
 8014b56:	2c07      	cmp	r4, #7
 8014b58:	bf89      	itett	hi
 8014b5a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8014b5c:	fa42 f208 	asrls.w	r2, r2, r8
 8014b60:	2400      	movhi	r4, #0
 8014b62:	785a      	ldrbhi	r2, [r3, #1]
 8014b64:	bf8a      	itet	hi
 8014b66:	3301      	addhi	r3, #1
 8014b68:	b2d2      	uxtbls	r2, r2
 8014b6a:	9326      	strhi	r3, [sp, #152]	; 0x98
 8014b6c:	e7a7      	b.n	8014abe <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8014b6e:	441e      	add	r6, r3
 8014b70:	b236      	sxth	r6, r6
 8014b72:	e6ed      	b.n	8014950 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8014b74:	f1b9 0f01 	cmp.w	r9, #1
 8014b78:	f47f af28 	bne.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014b7c:	f1bb 0f01 	cmp.w	fp, #1
 8014b80:	f47f af24 	bne.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014b84:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8014c60 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8014b88:	f8db 0000 	ldr.w	r0, [fp]
 8014b8c:	6803      	ldr	r3, [r0, #0]
 8014b8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b90:	4798      	blx	r3
 8014b92:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8014b96:	465a      	mov	r2, fp
 8014b98:	d006      	beq.n	8014ba8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8014b9a:	f1b8 0f04 	cmp.w	r8, #4
 8014b9e:	d141      	bne.n	8014c24 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x348>
 8014ba0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014ba2:	3300      	adds	r3, #0
 8014ba4:	bf18      	it	ne
 8014ba6:	2301      	movne	r3, #1
 8014ba8:	0580      	lsls	r0, r0, #22
 8014baa:	d566      	bpl.n	8014c7a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8014bac:	f1b8 0f08 	cmp.w	r8, #8
 8014bb0:	d163      	bne.n	8014c7a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	bf0c      	ite	eq
 8014bb6:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8014bba:	f44f 7180 	movne.w	r1, #256	; 0x100
 8014bbe:	2f00      	cmp	r7, #0
 8014bc0:	f47f af04 	bne.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014bc4:	2c00      	cmp	r4, #0
 8014bc6:	f47f af01 	bne.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014bca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bcc:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014bce:	18f3      	adds	r3, r6, r3
 8014bd0:	4283      	cmp	r3, r0
 8014bd2:	f73f aefb 	bgt.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014bd6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014bd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014bda:	4403      	add	r3, r0
 8014bdc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014bde:	4283      	cmp	r3, r0
 8014be0:	f73f aef4 	bgt.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014be4:	f1b8 0f08 	cmp.w	r8, #8
 8014be8:	6810      	ldr	r0, [r2, #0]
 8014bea:	f04f 0600 	mov.w	r6, #0
 8014bee:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8014bf2:	bf18      	it	ne
 8014bf4:	3501      	addne	r5, #1
 8014bf6:	6804      	ldr	r4, [r0, #0]
 8014bf8:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8014bfc:	bf18      	it	ne
 8014bfe:	f025 0501 	bicne.w	r5, r5, #1
 8014c02:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8014c06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014c08:	bf18      	it	ne
 8014c0a:	b2ad      	uxthne	r5, r5
 8014c0c:	9104      	str	r1, [sp, #16]
 8014c0e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014c10:	e9cd 5a00 	strd	r5, sl, [sp]
 8014c14:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8014c18:	9926      	ldr	r1, [sp, #152]	; 0x98
 8014c1a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8014c1c:	47a0      	blx	r4
 8014c1e:	b017      	add	sp, #92	; 0x5c
 8014c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c24:	2300      	movs	r3, #0
 8014c26:	e7bf      	b.n	8014ba8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8014c28:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014c2a:	e724      	b.n	8014a76 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x19a>
 8014c2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c2e:	700b      	strb	r3, [r1, #0]
 8014c30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c32:	704b      	strb	r3, [r1, #1]
 8014c34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c36:	708b      	strb	r3, [r1, #2]
 8014c38:	e78a      	b.n	8014b50 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x274>
 8014c3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c3c:	b153      	cbz	r3, 8014c54 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8014c3e:	441c      	add	r4, r3
 8014c40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014c42:	b2a4      	uxth	r4, r4
 8014c44:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8014c48:	f004 0407 	and.w	r4, r4, #7
 8014c4c:	781a      	ldrb	r2, [r3, #0]
 8014c4e:	9326      	str	r3, [sp, #152]	; 0x98
 8014c50:	4122      	asrs	r2, r4
 8014c52:	b2d2      	uxtb	r2, r2
 8014c54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c56:	445b      	add	r3, fp
 8014c58:	9309      	str	r3, [sp, #36]	; 0x24
 8014c5a:	e72a      	b.n	8014ab2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d6>
 8014c5c:	24006bd0 	.word	0x24006bd0
 8014c60:	24006bd8 	.word	0x24006bd8
 8014c64:	24006bd2 	.word	0x24006bd2
 8014c68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c6a:	2b00      	cmp	r3, #0
 8014c6c:	d1d7      	bne.n	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014c6e:	4b06      	ldr	r3, [pc, #24]	; (8014c88 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8014c70:	6818      	ldr	r0, [r3, #0]
 8014c72:	6803      	ldr	r3, [r0, #0]
 8014c74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c76:	4798      	blx	r3
 8014c78:	e7d1      	b.n	8014c1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x342>
 8014c7a:	2b00      	cmp	r3, #0
 8014c7c:	f43f aea6 	beq.w	80149cc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014c80:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014c84:	e79b      	b.n	8014bbe <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8014c86:	bf00      	nop
 8014c88:	24006bd8 	.word	0x24006bd8

08014c8c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014c8c:	b538      	push	{r3, r4, r5, lr}
 8014c8e:	4c15      	ldr	r4, [pc, #84]	; (8014ce4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014c90:	4605      	mov	r5, r0
 8014c92:	7823      	ldrb	r3, [r4, #0]
 8014c94:	f3bf 8f5b 	dmb	ish
 8014c98:	07da      	lsls	r2, r3, #31
 8014c9a:	d40b      	bmi.n	8014cb4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014c9c:	4620      	mov	r0, r4
 8014c9e:	f005 fb6b 	bl	801a378 <__cxa_guard_acquire>
 8014ca2:	b138      	cbz	r0, 8014cb4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014ca4:	4620      	mov	r0, r4
 8014ca6:	f005 fb73 	bl	801a390 <__cxa_guard_release>
 8014caa:	4a0f      	ldr	r2, [pc, #60]	; (8014ce8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014cac:	490f      	ldr	r1, [pc, #60]	; (8014cec <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014cae:	4810      	ldr	r0, [pc, #64]	; (8014cf0 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014cb0:	f005 fb5b 	bl	801a36a <__aeabi_atexit>
 8014cb4:	4c0f      	ldr	r4, [pc, #60]	; (8014cf4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014cb6:	7823      	ldrb	r3, [r4, #0]
 8014cb8:	f3bf 8f5b 	dmb	ish
 8014cbc:	07db      	lsls	r3, r3, #31
 8014cbe:	d40b      	bmi.n	8014cd8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014cc0:	4620      	mov	r0, r4
 8014cc2:	f005 fb59 	bl	801a378 <__cxa_guard_acquire>
 8014cc6:	b138      	cbz	r0, 8014cd8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014cc8:	4620      	mov	r0, r4
 8014cca:	f005 fb61 	bl	801a390 <__cxa_guard_release>
 8014cce:	4a06      	ldr	r2, [pc, #24]	; (8014ce8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014cd0:	4909      	ldr	r1, [pc, #36]	; (8014cf8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8014cd2:	480a      	ldr	r0, [pc, #40]	; (8014cfc <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014cd4:	f005 fb49 	bl	801a36a <__aeabi_atexit>
 8014cd8:	4b05      	ldr	r3, [pc, #20]	; (8014cf0 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014cda:	612b      	str	r3, [r5, #16]
 8014cdc:	4b07      	ldr	r3, [pc, #28]	; (8014cfc <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014cde:	616b      	str	r3, [r5, #20]
 8014ce0:	bd38      	pop	{r3, r4, r5, pc}
 8014ce2:	bf00      	nop
 8014ce4:	24006cb0 	.word	0x24006cb0
 8014ce8:	24000000 	.word	0x24000000
 8014cec:	08012ac7 	.word	0x08012ac7
 8014cf0:	2400009c 	.word	0x2400009c
 8014cf4:	24006cb4 	.word	0x24006cb4
 8014cf8:	08012ac5 	.word	0x08012ac5
 8014cfc:	240000a0 	.word	0x240000a0

08014d00 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8014d00:	b538      	push	{r3, r4, r5, lr}
 8014d02:	4c15      	ldr	r4, [pc, #84]	; (8014d58 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014d04:	4605      	mov	r5, r0
 8014d06:	7823      	ldrb	r3, [r4, #0]
 8014d08:	f3bf 8f5b 	dmb	ish
 8014d0c:	07da      	lsls	r2, r3, #31
 8014d0e:	d40b      	bmi.n	8014d28 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014d10:	4620      	mov	r0, r4
 8014d12:	f005 fb31 	bl	801a378 <__cxa_guard_acquire>
 8014d16:	b138      	cbz	r0, 8014d28 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014d18:	4620      	mov	r0, r4
 8014d1a:	f005 fb39 	bl	801a390 <__cxa_guard_release>
 8014d1e:	4a0f      	ldr	r2, [pc, #60]	; (8014d5c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014d20:	490f      	ldr	r1, [pc, #60]	; (8014d60 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014d22:	4810      	ldr	r0, [pc, #64]	; (8014d64 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014d24:	f005 fb21 	bl	801a36a <__aeabi_atexit>
 8014d28:	4c0f      	ldr	r4, [pc, #60]	; (8014d68 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014d2a:	7823      	ldrb	r3, [r4, #0]
 8014d2c:	f3bf 8f5b 	dmb	ish
 8014d30:	07db      	lsls	r3, r3, #31
 8014d32:	d40b      	bmi.n	8014d4c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014d34:	4620      	mov	r0, r4
 8014d36:	f005 fb1f 	bl	801a378 <__cxa_guard_acquire>
 8014d3a:	b138      	cbz	r0, 8014d4c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014d3c:	4620      	mov	r0, r4
 8014d3e:	f005 fb27 	bl	801a390 <__cxa_guard_release>
 8014d42:	4a06      	ldr	r2, [pc, #24]	; (8014d5c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014d44:	4909      	ldr	r1, [pc, #36]	; (8014d6c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014d46:	480a      	ldr	r0, [pc, #40]	; (8014d70 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014d48:	f005 fb0f 	bl	801a36a <__aeabi_atexit>
 8014d4c:	4b05      	ldr	r3, [pc, #20]	; (8014d64 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014d4e:	60ab      	str	r3, [r5, #8]
 8014d50:	4b07      	ldr	r3, [pc, #28]	; (8014d70 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014d52:	60eb      	str	r3, [r5, #12]
 8014d54:	bd38      	pop	{r3, r4, r5, pc}
 8014d56:	bf00      	nop
 8014d58:	24006c90 	.word	0x24006c90
 8014d5c:	24000000 	.word	0x24000000
 8014d60:	08012acb 	.word	0x08012acb
 8014d64:	2400007c 	.word	0x2400007c
 8014d68:	24006c94 	.word	0x24006c94
 8014d6c:	08012ac9 	.word	0x08012ac9
 8014d70:	24000080 	.word	0x24000080

08014d74 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>:
 8014d74:	b510      	push	{r4, lr}
 8014d76:	4604      	mov	r4, r0
 8014d78:	f7ff ff88 	bl	8014c8c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014d7c:	4620      	mov	r0, r4
 8014d7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014d82:	f7ff bfbd 	b.w	8014d00 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014d88 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014d88:	b538      	push	{r3, r4, r5, lr}
 8014d8a:	4c15      	ldr	r4, [pc, #84]	; (8014de0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014d8c:	4605      	mov	r5, r0
 8014d8e:	7823      	ldrb	r3, [r4, #0]
 8014d90:	f3bf 8f5b 	dmb	ish
 8014d94:	07da      	lsls	r2, r3, #31
 8014d96:	d40b      	bmi.n	8014db0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014d98:	4620      	mov	r0, r4
 8014d9a:	f005 faed 	bl	801a378 <__cxa_guard_acquire>
 8014d9e:	b138      	cbz	r0, 8014db0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014da0:	4620      	mov	r0, r4
 8014da2:	f005 faf5 	bl	801a390 <__cxa_guard_release>
 8014da6:	4a0f      	ldr	r2, [pc, #60]	; (8014de4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014da8:	490f      	ldr	r1, [pc, #60]	; (8014de8 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014daa:	4810      	ldr	r0, [pc, #64]	; (8014dec <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014dac:	f005 fadd 	bl	801a36a <__aeabi_atexit>
 8014db0:	4c0f      	ldr	r4, [pc, #60]	; (8014df0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8014db2:	7823      	ldrb	r3, [r4, #0]
 8014db4:	f3bf 8f5b 	dmb	ish
 8014db8:	07db      	lsls	r3, r3, #31
 8014dba:	d40b      	bmi.n	8014dd4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014dbc:	4620      	mov	r0, r4
 8014dbe:	f005 fadb 	bl	801a378 <__cxa_guard_acquire>
 8014dc2:	b138      	cbz	r0, 8014dd4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014dc4:	4620      	mov	r0, r4
 8014dc6:	f005 fae3 	bl	801a390 <__cxa_guard_release>
 8014dca:	4a06      	ldr	r2, [pc, #24]	; (8014de4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014dcc:	4909      	ldr	r1, [pc, #36]	; (8014df4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8014dce:	480a      	ldr	r0, [pc, #40]	; (8014df8 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014dd0:	f005 facb 	bl	801a36a <__aeabi_atexit>
 8014dd4:	4b05      	ldr	r3, [pc, #20]	; (8014dec <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014dd6:	622b      	str	r3, [r5, #32]
 8014dd8:	4b07      	ldr	r3, [pc, #28]	; (8014df8 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014dda:	626b      	str	r3, [r5, #36]	; 0x24
 8014ddc:	bd38      	pop	{r3, r4, r5, pc}
 8014dde:	bf00      	nop
 8014de0:	24006cb8 	.word	0x24006cb8
 8014de4:	24000000 	.word	0x24000000
 8014de8:	08012abf 	.word	0x08012abf
 8014dec:	240000a4 	.word	0x240000a4
 8014df0:	24006cbc 	.word	0x24006cbc
 8014df4:	08012abd 	.word	0x08012abd
 8014df8:	240000a8 	.word	0x240000a8

08014dfc <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8014dfc:	b538      	push	{r3, r4, r5, lr}
 8014dfe:	4c15      	ldr	r4, [pc, #84]	; (8014e54 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8014e00:	4605      	mov	r5, r0
 8014e02:	7823      	ldrb	r3, [r4, #0]
 8014e04:	f3bf 8f5b 	dmb	ish
 8014e08:	07da      	lsls	r2, r3, #31
 8014e0a:	d40b      	bmi.n	8014e24 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014e0c:	4620      	mov	r0, r4
 8014e0e:	f005 fab3 	bl	801a378 <__cxa_guard_acquire>
 8014e12:	b138      	cbz	r0, 8014e24 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014e14:	4620      	mov	r0, r4
 8014e16:	f005 fabb 	bl	801a390 <__cxa_guard_release>
 8014e1a:	4a0f      	ldr	r2, [pc, #60]	; (8014e58 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014e1c:	490f      	ldr	r1, [pc, #60]	; (8014e5c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8014e1e:	4810      	ldr	r0, [pc, #64]	; (8014e60 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014e20:	f005 faa3 	bl	801a36a <__aeabi_atexit>
 8014e24:	4c0f      	ldr	r4, [pc, #60]	; (8014e64 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014e26:	7823      	ldrb	r3, [r4, #0]
 8014e28:	f3bf 8f5b 	dmb	ish
 8014e2c:	07db      	lsls	r3, r3, #31
 8014e2e:	d40b      	bmi.n	8014e48 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014e30:	4620      	mov	r0, r4
 8014e32:	f005 faa1 	bl	801a378 <__cxa_guard_acquire>
 8014e36:	b138      	cbz	r0, 8014e48 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014e38:	4620      	mov	r0, r4
 8014e3a:	f005 faa9 	bl	801a390 <__cxa_guard_release>
 8014e3e:	4a06      	ldr	r2, [pc, #24]	; (8014e58 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014e40:	4909      	ldr	r1, [pc, #36]	; (8014e68 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8014e42:	480a      	ldr	r0, [pc, #40]	; (8014e6c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014e44:	f005 fa91 	bl	801a36a <__aeabi_atexit>
 8014e48:	4b05      	ldr	r3, [pc, #20]	; (8014e60 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014e4a:	61ab      	str	r3, [r5, #24]
 8014e4c:	4b07      	ldr	r3, [pc, #28]	; (8014e6c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014e4e:	61eb      	str	r3, [r5, #28]
 8014e50:	bd38      	pop	{r3, r4, r5, pc}
 8014e52:	bf00      	nop
 8014e54:	24006c98 	.word	0x24006c98
 8014e58:	24000000 	.word	0x24000000
 8014e5c:	08012ac3 	.word	0x08012ac3
 8014e60:	24000084 	.word	0x24000084
 8014e64:	24006c9c 	.word	0x24006c9c
 8014e68:	08012ac1 	.word	0x08012ac1
 8014e6c:	24000088 	.word	0x24000088

08014e70 <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014e70:	b510      	push	{r4, lr}
 8014e72:	4604      	mov	r4, r0
 8014e74:	f7ff ff88 	bl	8014d88 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014e78:	4620      	mov	r0, r4
 8014e7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e7e:	f7ff bfbd 	b.w	8014dfc <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014e84 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>:
 8014e84:	b538      	push	{r3, r4, r5, lr}
 8014e86:	4c15      	ldr	r4, [pc, #84]	; (8014edc <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x58>)
 8014e88:	4605      	mov	r5, r0
 8014e8a:	7823      	ldrb	r3, [r4, #0]
 8014e8c:	f3bf 8f5b 	dmb	ish
 8014e90:	07da      	lsls	r2, r3, #31
 8014e92:	d40b      	bmi.n	8014eac <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 8014e94:	4620      	mov	r0, r4
 8014e96:	f005 fa6f 	bl	801a378 <__cxa_guard_acquire>
 8014e9a:	b138      	cbz	r0, 8014eac <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 8014e9c:	4620      	mov	r0, r4
 8014e9e:	f005 fa77 	bl	801a390 <__cxa_guard_release>
 8014ea2:	4a0f      	ldr	r2, [pc, #60]	; (8014ee0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 8014ea4:	490f      	ldr	r1, [pc, #60]	; (8014ee4 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x60>)
 8014ea6:	4810      	ldr	r0, [pc, #64]	; (8014ee8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 8014ea8:	f005 fa5f 	bl	801a36a <__aeabi_atexit>
 8014eac:	4c0f      	ldr	r4, [pc, #60]	; (8014eec <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x68>)
 8014eae:	7823      	ldrb	r3, [r4, #0]
 8014eb0:	f3bf 8f5b 	dmb	ish
 8014eb4:	07db      	lsls	r3, r3, #31
 8014eb6:	d40b      	bmi.n	8014ed0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 8014eb8:	4620      	mov	r0, r4
 8014eba:	f005 fa5d 	bl	801a378 <__cxa_guard_acquire>
 8014ebe:	b138      	cbz	r0, 8014ed0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 8014ec0:	4620      	mov	r0, r4
 8014ec2:	f005 fa65 	bl	801a390 <__cxa_guard_release>
 8014ec6:	4a06      	ldr	r2, [pc, #24]	; (8014ee0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 8014ec8:	4909      	ldr	r1, [pc, #36]	; (8014ef0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x6c>)
 8014eca:	480a      	ldr	r0, [pc, #40]	; (8014ef4 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 8014ecc:	f005 fa4d 	bl	801a36a <__aeabi_atexit>
 8014ed0:	4b05      	ldr	r3, [pc, #20]	; (8014ee8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 8014ed2:	632b      	str	r3, [r5, #48]	; 0x30
 8014ed4:	4b07      	ldr	r3, [pc, #28]	; (8014ef4 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 8014ed6:	636b      	str	r3, [r5, #52]	; 0x34
 8014ed8:	bd38      	pop	{r3, r4, r5, pc}
 8014eda:	bf00      	nop
 8014edc:	24006ca0 	.word	0x24006ca0
 8014ee0:	24000000 	.word	0x24000000
 8014ee4:	08012ab7 	.word	0x08012ab7
 8014ee8:	2400008c 	.word	0x2400008c
 8014eec:	24006ca4 	.word	0x24006ca4
 8014ef0:	08012ab5 	.word	0x08012ab5
 8014ef4:	24000090 	.word	0x24000090

08014ef8 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>:
 8014ef8:	b538      	push	{r3, r4, r5, lr}
 8014efa:	4c15      	ldr	r4, [pc, #84]	; (8014f50 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x58>)
 8014efc:	4605      	mov	r5, r0
 8014efe:	7823      	ldrb	r3, [r4, #0]
 8014f00:	f3bf 8f5b 	dmb	ish
 8014f04:	07da      	lsls	r2, r3, #31
 8014f06:	d40b      	bmi.n	8014f20 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8014f08:	4620      	mov	r0, r4
 8014f0a:	f005 fa35 	bl	801a378 <__cxa_guard_acquire>
 8014f0e:	b138      	cbz	r0, 8014f20 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8014f10:	4620      	mov	r0, r4
 8014f12:	f005 fa3d 	bl	801a390 <__cxa_guard_release>
 8014f16:	4a0f      	ldr	r2, [pc, #60]	; (8014f54 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8014f18:	490f      	ldr	r1, [pc, #60]	; (8014f58 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x60>)
 8014f1a:	4810      	ldr	r0, [pc, #64]	; (8014f5c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8014f1c:	f005 fa25 	bl	801a36a <__aeabi_atexit>
 8014f20:	4c0f      	ldr	r4, [pc, #60]	; (8014f60 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x68>)
 8014f22:	7823      	ldrb	r3, [r4, #0]
 8014f24:	f3bf 8f5b 	dmb	ish
 8014f28:	07db      	lsls	r3, r3, #31
 8014f2a:	d40b      	bmi.n	8014f44 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8014f2c:	4620      	mov	r0, r4
 8014f2e:	f005 fa23 	bl	801a378 <__cxa_guard_acquire>
 8014f32:	b138      	cbz	r0, 8014f44 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8014f34:	4620      	mov	r0, r4
 8014f36:	f005 fa2b 	bl	801a390 <__cxa_guard_release>
 8014f3a:	4a06      	ldr	r2, [pc, #24]	; (8014f54 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8014f3c:	4909      	ldr	r1, [pc, #36]	; (8014f64 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x6c>)
 8014f3e:	480a      	ldr	r0, [pc, #40]	; (8014f68 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 8014f40:	f005 fa13 	bl	801a36a <__aeabi_atexit>
 8014f44:	4b05      	ldr	r3, [pc, #20]	; (8014f5c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8014f46:	62ab      	str	r3, [r5, #40]	; 0x28
 8014f48:	4b07      	ldr	r3, [pc, #28]	; (8014f68 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 8014f4a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014f4c:	bd38      	pop	{r3, r4, r5, pc}
 8014f4e:	bf00      	nop
 8014f50:	24006c78 	.word	0x24006c78
 8014f54:	24000000 	.word	0x24000000
 8014f58:	08012abb 	.word	0x08012abb
 8014f5c:	24000064 	.word	0x24000064
 8014f60:	24006c7c 	.word	0x24006c7c
 8014f64:	08012ab9 	.word	0x08012ab9
 8014f68:	24000068 	.word	0x24000068

08014f6c <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>:
 8014f6c:	b510      	push	{r4, lr}
 8014f6e:	4604      	mov	r4, r0
 8014f70:	f7ff ff88 	bl	8014e84 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>
 8014f74:	4620      	mov	r0, r4
 8014f76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f7a:	f7ff bfbd 	b.w	8014ef8 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>
	...

08014f80 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014f80:	b538      	push	{r3, r4, r5, lr}
 8014f82:	4c15      	ldr	r4, [pc, #84]	; (8014fd8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014f84:	4605      	mov	r5, r0
 8014f86:	7823      	ldrb	r3, [r4, #0]
 8014f88:	f3bf 8f5b 	dmb	ish
 8014f8c:	07da      	lsls	r2, r3, #31
 8014f8e:	d40b      	bmi.n	8014fa8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014f90:	4620      	mov	r0, r4
 8014f92:	f005 f9f1 	bl	801a378 <__cxa_guard_acquire>
 8014f96:	b138      	cbz	r0, 8014fa8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014f98:	4620      	mov	r0, r4
 8014f9a:	f005 f9f9 	bl	801a390 <__cxa_guard_release>
 8014f9e:	4a0f      	ldr	r2, [pc, #60]	; (8014fdc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014fa0:	490f      	ldr	r1, [pc, #60]	; (8014fe0 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014fa2:	4810      	ldr	r0, [pc, #64]	; (8014fe4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014fa4:	f005 f9e1 	bl	801a36a <__aeabi_atexit>
 8014fa8:	4c0f      	ldr	r4, [pc, #60]	; (8014fe8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014faa:	7823      	ldrb	r3, [r4, #0]
 8014fac:	f3bf 8f5b 	dmb	ish
 8014fb0:	07db      	lsls	r3, r3, #31
 8014fb2:	d40b      	bmi.n	8014fcc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014fb4:	4620      	mov	r0, r4
 8014fb6:	f005 f9df 	bl	801a378 <__cxa_guard_acquire>
 8014fba:	b138      	cbz	r0, 8014fcc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014fbc:	4620      	mov	r0, r4
 8014fbe:	f005 f9e7 	bl	801a390 <__cxa_guard_release>
 8014fc2:	4a06      	ldr	r2, [pc, #24]	; (8014fdc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014fc4:	4909      	ldr	r1, [pc, #36]	; (8014fec <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8014fc6:	480a      	ldr	r0, [pc, #40]	; (8014ff0 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014fc8:	f005 f9cf 	bl	801a36a <__aeabi_atexit>
 8014fcc:	4b05      	ldr	r3, [pc, #20]	; (8014fe4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014fce:	642b      	str	r3, [r5, #64]	; 0x40
 8014fd0:	4b07      	ldr	r3, [pc, #28]	; (8014ff0 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014fd2:	646b      	str	r3, [r5, #68]	; 0x44
 8014fd4:	bd38      	pop	{r3, r4, r5, pc}
 8014fd6:	bf00      	nop
 8014fd8:	24006ca8 	.word	0x24006ca8
 8014fdc:	24000000 	.word	0x24000000
 8014fe0:	08012aaf 	.word	0x08012aaf
 8014fe4:	24000094 	.word	0x24000094
 8014fe8:	24006cac 	.word	0x24006cac
 8014fec:	08012aad 	.word	0x08012aad
 8014ff0:	24000098 	.word	0x24000098

08014ff4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014ff4:	b538      	push	{r3, r4, r5, lr}
 8014ff6:	4c15      	ldr	r4, [pc, #84]	; (801504c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8014ff8:	4605      	mov	r5, r0
 8014ffa:	7823      	ldrb	r3, [r4, #0]
 8014ffc:	f3bf 8f5b 	dmb	ish
 8015000:	07da      	lsls	r2, r3, #31
 8015002:	d40b      	bmi.n	801501c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015004:	4620      	mov	r0, r4
 8015006:	f005 f9b7 	bl	801a378 <__cxa_guard_acquire>
 801500a:	b138      	cbz	r0, 801501c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801500c:	4620      	mov	r0, r4
 801500e:	f005 f9bf 	bl	801a390 <__cxa_guard_release>
 8015012:	4a0f      	ldr	r2, [pc, #60]	; (8015050 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015014:	490f      	ldr	r1, [pc, #60]	; (8015054 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8015016:	4810      	ldr	r0, [pc, #64]	; (8015058 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015018:	f005 f9a7 	bl	801a36a <__aeabi_atexit>
 801501c:	4c0f      	ldr	r4, [pc, #60]	; (801505c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801501e:	7823      	ldrb	r3, [r4, #0]
 8015020:	f3bf 8f5b 	dmb	ish
 8015024:	07db      	lsls	r3, r3, #31
 8015026:	d40b      	bmi.n	8015040 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015028:	4620      	mov	r0, r4
 801502a:	f005 f9a5 	bl	801a378 <__cxa_guard_acquire>
 801502e:	b138      	cbz	r0, 8015040 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015030:	4620      	mov	r0, r4
 8015032:	f005 f9ad 	bl	801a390 <__cxa_guard_release>
 8015036:	4a06      	ldr	r2, [pc, #24]	; (8015050 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015038:	4909      	ldr	r1, [pc, #36]	; (8015060 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801503a:	480a      	ldr	r0, [pc, #40]	; (8015064 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801503c:	f005 f995 	bl	801a36a <__aeabi_atexit>
 8015040:	4b05      	ldr	r3, [pc, #20]	; (8015058 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015042:	63ab      	str	r3, [r5, #56]	; 0x38
 8015044:	4b07      	ldr	r3, [pc, #28]	; (8015064 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015046:	63eb      	str	r3, [r5, #60]	; 0x3c
 8015048:	bd38      	pop	{r3, r4, r5, pc}
 801504a:	bf00      	nop
 801504c:	24006c88 	.word	0x24006c88
 8015050:	24000000 	.word	0x24000000
 8015054:	08012ab3 	.word	0x08012ab3
 8015058:	24000074 	.word	0x24000074
 801505c:	24006c8c 	.word	0x24006c8c
 8015060:	08012ab1 	.word	0x08012ab1
 8015064:	24000078 	.word	0x24000078

08015068 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>:
 8015068:	b510      	push	{r4, lr}
 801506a:	4604      	mov	r4, r0
 801506c:	f7ff ff88 	bl	8014f80 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8015070:	4620      	mov	r0, r4
 8015072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015076:	f7ff bfbd 	b.w	8014ff4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801507c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801507c:	b538      	push	{r3, r4, r5, lr}
 801507e:	4c15      	ldr	r4, [pc, #84]	; (80150d4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8015080:	4605      	mov	r5, r0
 8015082:	7823      	ldrb	r3, [r4, #0]
 8015084:	f3bf 8f5b 	dmb	ish
 8015088:	07da      	lsls	r2, r3, #31
 801508a:	d40b      	bmi.n	80150a4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801508c:	4620      	mov	r0, r4
 801508e:	f005 f973 	bl	801a378 <__cxa_guard_acquire>
 8015092:	b138      	cbz	r0, 80150a4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015094:	4620      	mov	r0, r4
 8015096:	f005 f97b 	bl	801a390 <__cxa_guard_release>
 801509a:	4a0f      	ldr	r2, [pc, #60]	; (80150d8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801509c:	490f      	ldr	r1, [pc, #60]	; (80150dc <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801509e:	4810      	ldr	r0, [pc, #64]	; (80150e0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80150a0:	f005 f963 	bl	801a36a <__aeabi_atexit>
 80150a4:	4c0f      	ldr	r4, [pc, #60]	; (80150e4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80150a6:	7823      	ldrb	r3, [r4, #0]
 80150a8:	f3bf 8f5b 	dmb	ish
 80150ac:	07db      	lsls	r3, r3, #31
 80150ae:	d40b      	bmi.n	80150c8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80150b0:	4620      	mov	r0, r4
 80150b2:	f005 f961 	bl	801a378 <__cxa_guard_acquire>
 80150b6:	b138      	cbz	r0, 80150c8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80150b8:	4620      	mov	r0, r4
 80150ba:	f005 f969 	bl	801a390 <__cxa_guard_release>
 80150be:	4a06      	ldr	r2, [pc, #24]	; (80150d8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80150c0:	4909      	ldr	r1, [pc, #36]	; (80150e8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80150c2:	480a      	ldr	r0, [pc, #40]	; (80150ec <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80150c4:	f005 f951 	bl	801a36a <__aeabi_atexit>
 80150c8:	4b05      	ldr	r3, [pc, #20]	; (80150e0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80150ca:	652b      	str	r3, [r5, #80]	; 0x50
 80150cc:	4b07      	ldr	r3, [pc, #28]	; (80150ec <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80150ce:	656b      	str	r3, [r5, #84]	; 0x54
 80150d0:	bd38      	pop	{r3, r4, r5, pc}
 80150d2:	bf00      	nop
 80150d4:	24006c80 	.word	0x24006c80
 80150d8:	24000000 	.word	0x24000000
 80150dc:	08012aa7 	.word	0x08012aa7
 80150e0:	2400006c 	.word	0x2400006c
 80150e4:	24006c84 	.word	0x24006c84
 80150e8:	08012aa5 	.word	0x08012aa5
 80150ec:	24000070 	.word	0x24000070

080150f0 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>:
 80150f0:	b538      	push	{r3, r4, r5, lr}
 80150f2:	4c15      	ldr	r4, [pc, #84]	; (8015148 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80150f4:	4605      	mov	r5, r0
 80150f6:	7823      	ldrb	r3, [r4, #0]
 80150f8:	f3bf 8f5b 	dmb	ish
 80150fc:	07da      	lsls	r2, r3, #31
 80150fe:	d40b      	bmi.n	8015118 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015100:	4620      	mov	r0, r4
 8015102:	f005 f939 	bl	801a378 <__cxa_guard_acquire>
 8015106:	b138      	cbz	r0, 8015118 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015108:	4620      	mov	r0, r4
 801510a:	f005 f941 	bl	801a390 <__cxa_guard_release>
 801510e:	4a0f      	ldr	r2, [pc, #60]	; (801514c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015110:	490f      	ldr	r1, [pc, #60]	; (8015150 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8015112:	4810      	ldr	r0, [pc, #64]	; (8015154 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015114:	f005 f929 	bl	801a36a <__aeabi_atexit>
 8015118:	4c0f      	ldr	r4, [pc, #60]	; (8015158 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801511a:	7823      	ldrb	r3, [r4, #0]
 801511c:	f3bf 8f5b 	dmb	ish
 8015120:	07db      	lsls	r3, r3, #31
 8015122:	d40b      	bmi.n	801513c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015124:	4620      	mov	r0, r4
 8015126:	f005 f927 	bl	801a378 <__cxa_guard_acquire>
 801512a:	b138      	cbz	r0, 801513c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801512c:	4620      	mov	r0, r4
 801512e:	f005 f92f 	bl	801a390 <__cxa_guard_release>
 8015132:	4a06      	ldr	r2, [pc, #24]	; (801514c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015134:	4909      	ldr	r1, [pc, #36]	; (801515c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8015136:	480a      	ldr	r0, [pc, #40]	; (8015160 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015138:	f005 f917 	bl	801a36a <__aeabi_atexit>
 801513c:	4b05      	ldr	r3, [pc, #20]	; (8015154 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801513e:	64ab      	str	r3, [r5, #72]	; 0x48
 8015140:	4b07      	ldr	r3, [pc, #28]	; (8015160 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015142:	64eb      	str	r3, [r5, #76]	; 0x4c
 8015144:	bd38      	pop	{r3, r4, r5, pc}
 8015146:	bf00      	nop
 8015148:	24006c70 	.word	0x24006c70
 801514c:	24000000 	.word	0x24000000
 8015150:	08012aab 	.word	0x08012aab
 8015154:	2400005c 	.word	0x2400005c
 8015158:	24006c74 	.word	0x24006c74
 801515c:	08012aa9 	.word	0x08012aa9
 8015160:	24000060 	.word	0x24000060

08015164 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>:
 8015164:	b510      	push	{r4, lr}
 8015166:	4604      	mov	r4, r0
 8015168:	f7ff ff88 	bl	801507c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801516c:	4620      	mov	r0, r4
 801516e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015172:	f7ff bfbd 	b.w	80150f0 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>

08015176 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>:
 8015176:	b510      	push	{r4, lr}
 8015178:	4604      	mov	r4, r0
 801517a:	f7ff fff3 	bl	8015164 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>
 801517e:	4620      	mov	r0, r4
 8015180:	f7ff ff72 	bl	8015068 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>
 8015184:	4620      	mov	r0, r4
 8015186:	f7ff fe73 	bl	8014e70 <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>
 801518a:	4620      	mov	r0, r4
 801518c:	f7ff fdf2 	bl	8014d74 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>
 8015190:	4620      	mov	r0, r4
 8015192:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015196:	f7ff bee9 	b.w	8014f6c <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>
	...

0801519c <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev>:
 801519c:	b538      	push	{r3, r4, r5, lr}
 801519e:	4c0b      	ldr	r4, [pc, #44]	; (80151cc <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x30>)
 80151a0:	4605      	mov	r5, r0
 80151a2:	7823      	ldrb	r3, [r4, #0]
 80151a4:	f3bf 8f5b 	dmb	ish
 80151a8:	07db      	lsls	r3, r3, #31
 80151aa:	d40b      	bmi.n	80151c4 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x28>
 80151ac:	4620      	mov	r0, r4
 80151ae:	f005 f8e3 	bl	801a378 <__cxa_guard_acquire>
 80151b2:	b138      	cbz	r0, 80151c4 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x28>
 80151b4:	4620      	mov	r0, r4
 80151b6:	f005 f8eb 	bl	801a390 <__cxa_guard_release>
 80151ba:	4a05      	ldr	r2, [pc, #20]	; (80151d0 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x34>)
 80151bc:	4905      	ldr	r1, [pc, #20]	; (80151d4 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x38>)
 80151be:	4806      	ldr	r0, [pc, #24]	; (80151d8 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x3c>)
 80151c0:	f005 f8d3 	bl	801a36a <__aeabi_atexit>
 80151c4:	4b04      	ldr	r3, [pc, #16]	; (80151d8 <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev+0x3c>)
 80151c6:	65ab      	str	r3, [r5, #88]	; 0x58
 80151c8:	bd38      	pop	{r3, r4, r5, pc}
 80151ca:	bf00      	nop
 80151cc:	24006c64 	.word	0x24006c64
 80151d0:	24000000 	.word	0x24000000
 80151d4:	08012aa3 	.word	0x08012aa3
 80151d8:	24000054 	.word	0x24000054

080151dc <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv>:
 80151dc:	b538      	push	{r3, r4, r5, lr}
 80151de:	4c0b      	ldr	r4, [pc, #44]	; (801520c <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x30>)
 80151e0:	4605      	mov	r5, r0
 80151e2:	7823      	ldrb	r3, [r4, #0]
 80151e4:	f3bf 8f5b 	dmb	ish
 80151e8:	07db      	lsls	r3, r3, #31
 80151ea:	d40b      	bmi.n	8015204 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x28>
 80151ec:	4620      	mov	r0, r4
 80151ee:	f005 f8c3 	bl	801a378 <__cxa_guard_acquire>
 80151f2:	b138      	cbz	r0, 8015204 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x28>
 80151f4:	4620      	mov	r0, r4
 80151f6:	f005 f8cb 	bl	801a390 <__cxa_guard_release>
 80151fa:	4a05      	ldr	r2, [pc, #20]	; (8015210 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x34>)
 80151fc:	4905      	ldr	r1, [pc, #20]	; (8015214 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x38>)
 80151fe:	4806      	ldr	r0, [pc, #24]	; (8015218 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x3c>)
 8015200:	f005 f8b3 	bl	801a36a <__aeabi_atexit>
 8015204:	4b04      	ldr	r3, [pc, #16]	; (8015218 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv+0x3c>)
 8015206:	65eb      	str	r3, [r5, #92]	; 0x5c
 8015208:	bd38      	pop	{r3, r4, r5, pc}
 801520a:	bf00      	nop
 801520c:	24006c68 	.word	0x24006c68
 8015210:	24000000 	.word	0x24000000
 8015214:	08012aa1 	.word	0x08012aa1
 8015218:	24000058 	.word	0x24000058

0801521c <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev>:
 801521c:	b570      	push	{r4, r5, r6, lr}
 801521e:	4d0c      	ldr	r5, [pc, #48]	; (8015250 <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x34>)
 8015220:	4606      	mov	r6, r0
 8015222:	4c0c      	ldr	r4, [pc, #48]	; (8015254 <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8015224:	782b      	ldrb	r3, [r5, #0]
 8015226:	f3bf 8f5b 	dmb	ish
 801522a:	f013 0f01 	tst.w	r3, #1
 801522e:	d10d      	bne.n	801524c <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x30>
 8015230:	4628      	mov	r0, r5
 8015232:	f005 f8a1 	bl	801a378 <__cxa_guard_acquire>
 8015236:	b148      	cbz	r0, 801524c <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x30>
 8015238:	4b07      	ldr	r3, [pc, #28]	; (8015258 <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801523a:	4628      	mov	r0, r5
 801523c:	6023      	str	r3, [r4, #0]
 801523e:	f005 f8a7 	bl	801a390 <__cxa_guard_release>
 8015242:	4a06      	ldr	r2, [pc, #24]	; (801525c <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8015244:	4620      	mov	r0, r4
 8015246:	4906      	ldr	r1, [pc, #24]	; (8015260 <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8015248:	f005 f88f 	bl	801a36a <__aeabi_atexit>
 801524c:	6634      	str	r4, [r6, #96]	; 0x60
 801524e:	bd70      	pop	{r4, r5, r6, pc}
 8015250:	24006c6c 	.word	0x24006c6c
 8015254:	24006cc0 	.word	0x24006cc0
 8015258:	0801c964 	.word	0x0801c964
 801525c:	24000000 	.word	0x24000000
 8015260:	08012a9f 	.word	0x08012a9f

08015264 <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_AllEv>:
 8015264:	b510      	push	{r4, lr}
 8015266:	4604      	mov	r4, r0
 8015268:	f7ff ff98 	bl	801519c <_ZN8touchgfx8LCD24bpp23enableDecompressorL8_L4Ev>
 801526c:	4620      	mov	r0, r4
 801526e:	f7ff ffb5 	bl	80151dc <_ZN8touchgfx8LCD24bpp24enableDecompressorL8_RLEEv>
 8015272:	4620      	mov	r0, r4
 8015274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015278:	f7ff bfd0 	b.w	801521c <_ZN8touchgfx8LCD24bpp25enableDecompressorL8_LZW9Ev>

0801527c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 801527c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015280:	b087      	sub	sp, #28
 8015282:	788d      	ldrb	r5, [r1, #2]
 8015284:	f891 9000 	ldrb.w	r9, [r1]
 8015288:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 801528c:	9501      	str	r5, [sp, #4]
 801528e:	784d      	ldrb	r5, [r1, #1]
 8015290:	9203      	str	r2, [sp, #12]
 8015292:	9502      	str	r5, [sp, #8]
 8015294:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8015298:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801529c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80152a0:	f89d e058 	ldrb.w	lr, [sp, #88]	; 0x58
 80152a4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80152a8:	fb06 0708 	mla	r7, r6, r8, r0
 80152ac:	2e00      	cmp	r6, #0
 80152ae:	eb02 0a07 	add.w	sl, r2, r7
 80152b2:	ea4f 2205 	mov.w	r2, r5, lsl #8
 80152b6:	9d01      	ldr	r5, [sp, #4]
 80152b8:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
 80152bc:	ea45 0509 	orr.w	r5, r5, r9
 80152c0:	9505      	str	r5, [sp, #20]
 80152c2:	f2c0 80b2 	blt.w	801542a <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ae>
 80152c6:	45b3      	cmp	fp, r6
 80152c8:	f340 80af 	ble.w	801542a <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ae>
 80152cc:	2800      	cmp	r0, #0
 80152ce:	f2c0 80aa 	blt.w	8015426 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1aa>
 80152d2:	4580      	cmp	r8, r0
 80152d4:	f340 80a7 	ble.w	8015426 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1aa>
 80152d8:	9a03      	ldr	r2, [sp, #12]
 80152da:	5dd7      	ldrb	r7, [r2, r7]
 80152dc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80152e0:	441f      	add	r7, r3
 80152e2:	1c42      	adds	r2, r0, #1
 80152e4:	f100 80a4 	bmi.w	8015430 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 80152e8:	4590      	cmp	r8, r2
 80152ea:	f340 80a1 	ble.w	8015430 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 80152ee:	2c00      	cmp	r4, #0
 80152f0:	f000 809e 	beq.w	8015430 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b4>
 80152f4:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80152f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80152fc:	441d      	add	r5, r3
 80152fe:	3601      	adds	r6, #1
 8015300:	f100 809a 	bmi.w	8015438 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 8015304:	45b3      	cmp	fp, r6
 8015306:	f340 8097 	ble.w	8015438 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 801530a:	f1bc 0f00 	cmp.w	ip, #0
 801530e:	f000 8093 	beq.w	8015438 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1bc>
 8015312:	2800      	cmp	r0, #0
 8015314:	f2c0 808e 	blt.w	8015434 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b8>
 8015318:	4580      	cmp	r8, r0
 801531a:	f340 808b 	ble.w	8015434 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b8>
 801531e:	f81a 6008 	ldrb.w	r6, [sl, r8]
 8015322:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015326:	441e      	add	r6, r3
 8015328:	3001      	adds	r0, #1
 801532a:	f100 8088 	bmi.w	801543e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 801532e:	4580      	cmp	r8, r0
 8015330:	f340 8085 	ble.w	801543e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 8015334:	2c00      	cmp	r4, #0
 8015336:	f000 8082 	beq.w	801543e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c2>
 801533a:	44d0      	add	r8, sl
 801533c:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015340:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015344:	4413      	add	r3, r2
 8015346:	b2a4      	uxth	r4, r4
 8015348:	f895 a000 	ldrb.w	sl, [r5]
 801534c:	fa1f fc8c 	uxth.w	ip, ip
 8015350:	fb04 fb0c 	mul.w	fp, r4, ip
 8015354:	0124      	lsls	r4, r4, #4
 8015356:	ebcb 1c0c 	rsb	ip, fp, ip, lsl #4
 801535a:	f5c4 7880 	rsb	r8, r4, #256	; 0x100
 801535e:	eba4 040b 	sub.w	r4, r4, fp
 8015362:	fa1f f08c 	uxth.w	r0, ip
 8015366:	b2a2      	uxth	r2, r4
 8015368:	783c      	ldrb	r4, [r7, #0]
 801536a:	eba8 0800 	sub.w	r8, r8, r0
 801536e:	fa1f fc8e 	uxth.w	ip, lr
 8015372:	fb02 fa0a 	mul.w	sl, r2, sl
 8015376:	ea6f 0e0e 	mvn.w	lr, lr
 801537a:	fa1f f888 	uxth.w	r8, r8
 801537e:	fa5f fe8e 	uxtb.w	lr, lr
 8015382:	fb08 aa04 	mla	sl, r8, r4, sl
 8015386:	7834      	ldrb	r4, [r6, #0]
 8015388:	fb19 f90e 	smulbb	r9, r9, lr
 801538c:	fb00 aa04 	mla	sl, r0, r4, sl
 8015390:	781c      	ldrb	r4, [r3, #0]
 8015392:	fb0b a404 	mla	r4, fp, r4, sl
 8015396:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801539a:	fb04 990c 	mla	r9, r4, ip, r9
 801539e:	fa1f f989 	uxth.w	r9, r9
 80153a2:	f109 0401 	add.w	r4, r9, #1
 80153a6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80153aa:	ea4f 2929 	mov.w	r9, r9, asr #8
 80153ae:	f881 9000 	strb.w	r9, [r1]
 80153b2:	f895 9001 	ldrb.w	r9, [r5, #1]
 80153b6:	787c      	ldrb	r4, [r7, #1]
 80153b8:	fb02 f909 	mul.w	r9, r2, r9
 80153bc:	fb08 9904 	mla	r9, r8, r4, r9
 80153c0:	7874      	ldrb	r4, [r6, #1]
 80153c2:	fb00 9904 	mla	r9, r0, r4, r9
 80153c6:	785c      	ldrb	r4, [r3, #1]
 80153c8:	fb0b 9404 	mla	r4, fp, r4, r9
 80153cc:	f3c4 2a07 	ubfx	sl, r4, #8, #8
 80153d0:	9c02      	ldr	r4, [sp, #8]
 80153d2:	fb14 f90e 	smulbb	r9, r4, lr
 80153d6:	fb0a 940c 	mla	r4, sl, ip, r9
 80153da:	b2a4      	uxth	r4, r4
 80153dc:	f104 0901 	add.w	r9, r4, #1
 80153e0:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 80153e4:	1224      	asrs	r4, r4, #8
 80153e6:	704c      	strb	r4, [r1, #1]
 80153e8:	78ad      	ldrb	r5, [r5, #2]
 80153ea:	78bc      	ldrb	r4, [r7, #2]
 80153ec:	436a      	muls	r2, r5
 80153ee:	789b      	ldrb	r3, [r3, #2]
 80153f0:	fb08 2204 	mla	r2, r8, r4, r2
 80153f4:	78b4      	ldrb	r4, [r6, #2]
 80153f6:	fb00 2004 	mla	r0, r0, r4, r2
 80153fa:	fb0b 0b03 	mla	fp, fp, r3, r0
 80153fe:	9b01      	ldr	r3, [sp, #4]
 8015400:	fb13 fe0e 	smulbb	lr, r3, lr
 8015404:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8015408:	fb0b ec0c 	mla	ip, fp, ip, lr
 801540c:	fa1f fc8c 	uxth.w	ip, ip
 8015410:	f10c 0e01 	add.w	lr, ip, #1
 8015414:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 8015418:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801541c:	f881 c002 	strb.w	ip, [r1, #2]
 8015420:	b007      	add	sp, #28
 8015422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015426:	af05      	add	r7, sp, #20
 8015428:	e75b      	b.n	80152e2 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x66>
 801542a:	ad05      	add	r5, sp, #20
 801542c:	462f      	mov	r7, r5
 801542e:	e766      	b.n	80152fe <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x82>
 8015430:	ad05      	add	r5, sp, #20
 8015432:	e764      	b.n	80152fe <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x82>
 8015434:	ae05      	add	r6, sp, #20
 8015436:	e777      	b.n	8015328 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xac>
 8015438:	ab05      	add	r3, sp, #20
 801543a:	461e      	mov	r6, r3
 801543c:	e783      	b.n	8015346 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xca>
 801543e:	ab05      	add	r3, sp, #20
 8015440:	e781      	b.n	8015346 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xca>

08015442 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015442:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015446:	b093      	sub	sp, #76	; 0x4c
 8015448:	9210      	str	r2, [sp, #64]	; 0x40
 801544a:	9309      	str	r3, [sp, #36]	; 0x24
 801544c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801544e:	f89d 3094 	ldrb.w	r3, [sp, #148]	; 0x94
 8015452:	9011      	str	r0, [sp, #68]	; 0x44
 8015454:	930e      	str	r3, [sp, #56]	; 0x38
 8015456:	6850      	ldr	r0, [r2, #4]
 8015458:	910d      	str	r1, [sp, #52]	; 0x34
 801545a:	6812      	ldr	r2, [r2, #0]
 801545c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8015460:	fb00 1303 	mla	r3, r0, r3, r1
 8015464:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015468:	18d3      	adds	r3, r2, r3
 801546a:	930a      	str	r3, [sp, #40]	; 0x28
 801546c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801546e:	681b      	ldr	r3, [r3, #0]
 8015470:	930c      	str	r3, [sp, #48]	; 0x30
 8015472:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015474:	685c      	ldr	r4, [r3, #4]
 8015476:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015478:	3404      	adds	r4, #4
 801547a:	43db      	mvns	r3, r3
 801547c:	b2db      	uxtb	r3, r3
 801547e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015480:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015482:	2b00      	cmp	r3, #0
 8015484:	dc03      	bgt.n	801548e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015486:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015488:	2b00      	cmp	r3, #0
 801548a:	f340 8250 	ble.w	801592e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 801548e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015490:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015494:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015498:	1e48      	subs	r0, r1, #1
 801549a:	1e55      	subs	r5, r2, #1
 801549c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801549e:	2b00      	cmp	r3, #0
 80154a0:	f340 80ee 	ble.w	8015680 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 80154a4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80154a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80154a8:	1436      	asrs	r6, r6, #16
 80154aa:	ea4f 4323 	mov.w	r3, r3, asr #16
 80154ae:	d406      	bmi.n	80154be <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80154b0:	4286      	cmp	r6, r0
 80154b2:	da04      	bge.n	80154be <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80154b4:	2b00      	cmp	r3, #0
 80154b6:	db02      	blt.n	80154be <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80154b8:	42ab      	cmp	r3, r5
 80154ba:	f2c0 80e2 	blt.w	8015682 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80154be:	3601      	adds	r6, #1
 80154c0:	f100 80cf 	bmi.w	8015662 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 80154c4:	42b1      	cmp	r1, r6
 80154c6:	f2c0 80cc 	blt.w	8015662 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 80154ca:	3301      	adds	r3, #1
 80154cc:	f100 80c9 	bmi.w	8015662 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 80154d0:	429a      	cmp	r2, r3
 80154d2:	f2c0 80c6 	blt.w	8015662 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 80154d6:	e9dd b609 	ldrd	fp, r6, [sp, #36]	; 0x24
 80154da:	f1bb 0f00 	cmp.w	fp, #0
 80154de:	f340 80f1 	ble.w	80156c4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80154e2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80154e4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80154e6:	9824      	ldr	r0, [sp, #144]	; 0x90
 80154e8:	141d      	asrs	r5, r3, #16
 80154ea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80154ec:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80154f0:	68c7      	ldr	r7, [r0, #12]
 80154f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80154f4:	1418      	asrs	r0, r3, #16
 80154f6:	f3c3 3803 	ubfx	r8, r3, #12, #4
 80154fa:	6892      	ldr	r2, [r2, #8]
 80154fc:	f100 8137 	bmi.w	801576e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8015500:	f102 3cff 	add.w	ip, r2, #4294967295
 8015504:	4560      	cmp	r0, ip
 8015506:	f280 8132 	bge.w	801576e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801550a:	2d00      	cmp	r5, #0
 801550c:	f2c0 812f 	blt.w	801576e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8015510:	f107 3cff 	add.w	ip, r7, #4294967295
 8015514:	4565      	cmp	r5, ip
 8015516:	f280 812a 	bge.w	801576e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801551a:	b212      	sxth	r2, r2
 801551c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801551e:	fb05 0002 	mla	r0, r5, r2, r0
 8015522:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015524:	f817 c000 	ldrb.w	ip, [r7, r0]
 8015528:	4405      	add	r5, r0
 801552a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801552e:	eb04 0e0c 	add.w	lr, r4, ip
 8015532:	f1b8 0f00 	cmp.w	r8, #0
 8015536:	f000 810c 	beq.w	8015752 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801553a:	786f      	ldrb	r7, [r5, #1]
 801553c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015540:	4427      	add	r7, r4
 8015542:	2900      	cmp	r1, #0
 8015544:	f000 810d 	beq.w	8015762 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x320>
 8015548:	18a8      	adds	r0, r5, r2
 801554a:	5caa      	ldrb	r2, [r5, r2]
 801554c:	7840      	ldrb	r0, [r0, #1]
 801554e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015552:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015556:	4422      	add	r2, r4
 8015558:	4420      	add	r0, r4
 801555a:	fa1f f388 	uxth.w	r3, r8
 801555e:	f814 a00c 	ldrb.w	sl, [r4, ip]
 8015562:	b289      	uxth	r1, r1
 8015564:	f897 c000 	ldrb.w	ip, [r7]
 8015568:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801556c:	fb03 f901 	mul.w	r9, r3, r1
 8015570:	011b      	lsls	r3, r3, #4
 8015572:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015576:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801557a:	eba3 0309 	sub.w	r3, r3, r9
 801557e:	b289      	uxth	r1, r1
 8015580:	b29b      	uxth	r3, r3
 8015582:	eba8 0801 	sub.w	r8, r8, r1
 8015586:	fb03 fc0c 	mul.w	ip, r3, ip
 801558a:	fa1f f888 	uxth.w	r8, r8
 801558e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015590:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015592:	fb08 cc0a 	mla	ip, r8, sl, ip
 8015596:	f892 a000 	ldrb.w	sl, [r2]
 801559a:	fb01 cc0a 	mla	ip, r1, sl, ip
 801559e:	f890 a000 	ldrb.w	sl, [r0]
 80155a2:	fb09 cc0a 	mla	ip, r9, sl, ip
 80155a6:	f896 a000 	ldrb.w	sl, [r6]
 80155aa:	fb1a fa03 	smulbb	sl, sl, r3
 80155ae:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80155b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80155b4:	fb0c ac05 	mla	ip, ip, r5, sl
 80155b8:	fa1f fc8c 	uxth.w	ip, ip
 80155bc:	f10c 0a01 	add.w	sl, ip, #1
 80155c0:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80155c4:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80155c8:	f886 a000 	strb.w	sl, [r6]
 80155cc:	f897 c001 	ldrb.w	ip, [r7, #1]
 80155d0:	f89e a001 	ldrb.w	sl, [lr, #1]
 80155d4:	fb03 fc0c 	mul.w	ip, r3, ip
 80155d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80155da:	fb08 cc0a 	mla	ip, r8, sl, ip
 80155de:	f892 a001 	ldrb.w	sl, [r2, #1]
 80155e2:	fb01 cc0a 	mla	ip, r1, sl, ip
 80155e6:	f890 a001 	ldrb.w	sl, [r0, #1]
 80155ea:	fb09 cc0a 	mla	ip, r9, sl, ip
 80155ee:	f896 a001 	ldrb.w	sl, [r6, #1]
 80155f2:	fb1a fa03 	smulbb	sl, sl, r3
 80155f6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80155fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80155fc:	fb0c ac05 	mla	ip, ip, r5, sl
 8015600:	fa1f fc8c 	uxth.w	ip, ip
 8015604:	f10c 0a01 	add.w	sl, ip, #1
 8015608:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 801560c:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8015610:	f886 c001 	strb.w	ip, [r6, #1]
 8015614:	78bf      	ldrb	r7, [r7, #2]
 8015616:	f89e c002 	ldrb.w	ip, [lr, #2]
 801561a:	437b      	muls	r3, r7
 801561c:	fb08 330c 	mla	r3, r8, ip, r3
 8015620:	f892 c002 	ldrb.w	ip, [r2, #2]
 8015624:	7882      	ldrb	r2, [r0, #2]
 8015626:	fb01 310c 	mla	r1, r1, ip, r3
 801562a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801562c:	fb09 1902 	mla	r9, r9, r2, r1
 8015630:	78b1      	ldrb	r1, [r6, #2]
 8015632:	fb11 f103 	smulbb	r1, r1, r3
 8015636:	f3c9 2907 	ubfx	r9, r9, #8, #8
 801563a:	fb09 1505 	mla	r5, r9, r5, r1
 801563e:	b2ad      	uxth	r5, r5
 8015640:	1c6b      	adds	r3, r5, #1
 8015642:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015646:	122d      	asrs	r5, r5, #8
 8015648:	70b5      	strb	r5, [r6, #2]
 801564a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801564c:	3603      	adds	r6, #3
 801564e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8015650:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015654:	4413      	add	r3, r2
 8015656:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015658:	931d      	str	r3, [sp, #116]	; 0x74
 801565a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801565c:	4413      	add	r3, r2
 801565e:	931e      	str	r3, [sp, #120]	; 0x78
 8015660:	e73b      	b.n	80154da <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015662:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8015664:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8015666:	4433      	add	r3, r6
 8015668:	9e20      	ldr	r6, [sp, #128]	; 0x80
 801566a:	931d      	str	r3, [sp, #116]	; 0x74
 801566c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801566e:	4433      	add	r3, r6
 8015670:	931e      	str	r3, [sp, #120]	; 0x78
 8015672:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015674:	3b01      	subs	r3, #1
 8015676:	9309      	str	r3, [sp, #36]	; 0x24
 8015678:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801567a:	3303      	adds	r3, #3
 801567c:	930a      	str	r3, [sp, #40]	; 0x28
 801567e:	e70d      	b.n	801549c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015680:	d028      	beq.n	80156d4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015682:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015684:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015686:	3b01      	subs	r3, #1
 8015688:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801568a:	fb00 5003 	mla	r0, r0, r3, r5
 801568e:	1400      	asrs	r0, r0, #16
 8015690:	f53f af21 	bmi.w	80154d6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015694:	3901      	subs	r1, #1
 8015696:	4288      	cmp	r0, r1
 8015698:	f6bf af1d 	bge.w	80154d6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801569c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801569e:	981e      	ldr	r0, [sp, #120]	; 0x78
 80156a0:	fb01 0303 	mla	r3, r1, r3, r0
 80156a4:	141b      	asrs	r3, r3, #16
 80156a6:	f53f af16 	bmi.w	80154d6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80156aa:	3a01      	subs	r2, #1
 80156ac:	4293      	cmp	r3, r2
 80156ae:	f6bf af12 	bge.w	80154d6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80156b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156b4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80156b8:	1cdf      	adds	r7, r3, #3
 80156ba:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 80156be:	f1b9 0f00 	cmp.w	r9, #0
 80156c2:	dc73      	bgt.n	80157ac <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36a>
 80156c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80156c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156cc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80156d0:	441a      	add	r2, r3
 80156d2:	920a      	str	r2, [sp, #40]	; 0x28
 80156d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156d6:	2b00      	cmp	r3, #0
 80156d8:	f340 8129 	ble.w	801592e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 80156dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80156e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80156e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156ea:	eef0 6a62 	vmov.f32	s13, s5
 80156ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80156f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156fa:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80156fe:	eef0 6a43 	vmov.f32	s13, s6
 8015702:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015706:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801570a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801570e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015712:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015716:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801571a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801571e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015722:	ee12 2a90 	vmov	r2, s5
 8015726:	eef0 2a47 	vmov.f32	s5, s14
 801572a:	fb92 f3f3 	sdiv	r3, r2, r3
 801572e:	ee13 2a10 	vmov	r2, s6
 8015732:	931f      	str	r3, [sp, #124]	; 0x7c
 8015734:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015736:	eeb0 3a67 	vmov.f32	s6, s15
 801573a:	fb92 f3f3 	sdiv	r3, r2, r3
 801573e:	9320      	str	r3, [sp, #128]	; 0x80
 8015740:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015742:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015744:	3b01      	subs	r3, #1
 8015746:	930d      	str	r3, [sp, #52]	; 0x34
 8015748:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801574a:	bf08      	it	eq
 801574c:	4613      	moveq	r3, r2
 801574e:	9309      	str	r3, [sp, #36]	; 0x24
 8015750:	e696      	b.n	8015480 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015752:	b149      	cbz	r1, 8015768 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015754:	5caa      	ldrb	r2, [r5, r2]
 8015756:	4670      	mov	r0, lr
 8015758:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801575c:	4422      	add	r2, r4
 801575e:	4677      	mov	r7, lr
 8015760:	e6fb      	b.n	801555a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8015762:	4670      	mov	r0, lr
 8015764:	4672      	mov	r2, lr
 8015766:	e6f8      	b.n	801555a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8015768:	4670      	mov	r0, lr
 801576a:	4672      	mov	r2, lr
 801576c:	e7f7      	b.n	801575e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801576e:	f110 0c01 	adds.w	ip, r0, #1
 8015772:	f53f af6a 	bmi.w	801564a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015776:	4562      	cmp	r2, ip
 8015778:	f6ff af67 	blt.w	801564a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801577c:	f115 0c01 	adds.w	ip, r5, #1
 8015780:	f53f af63 	bmi.w	801564a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015784:	4567      	cmp	r7, ip
 8015786:	f6ff af60 	blt.w	801564a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801578a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801578c:	b23f      	sxth	r7, r7
 801578e:	b212      	sxth	r2, r2
 8015790:	9002      	str	r0, [sp, #8]
 8015792:	9701      	str	r7, [sp, #4]
 8015794:	9200      	str	r2, [sp, #0]
 8015796:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015798:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801579a:	e9cd 1305 	strd	r1, r3, [sp, #20]
 801579e:	e9cd 5803 	strd	r5, r8, [sp, #12]
 80157a2:	4623      	mov	r3, r4
 80157a4:	4631      	mov	r1, r6
 80157a6:	f7ff fd69 	bl	801527c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 80157aa:	e74e      	b.n	801564a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80157ac:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80157ae:	981e      	ldr	r0, [sp, #120]	; 0x78
 80157b0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80157b4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80157b6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80157b8:	1400      	asrs	r0, r0, #16
 80157ba:	142d      	asrs	r5, r5, #16
 80157bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80157be:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80157c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80157c6:	fb02 5000 	mla	r0, r2, r0, r5
 80157ca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80157cc:	f815 e000 	ldrb.w	lr, [r5, r0]
 80157d0:	eb05 0c00 	add.w	ip, r5, r0
 80157d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80157d8:	eb04 060e 	add.w	r6, r4, lr
 80157dc:	2b00      	cmp	r3, #0
 80157de:	f000 8097 	beq.w	8015910 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80157e2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80157e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80157ea:	4425      	add	r5, r4
 80157ec:	2900      	cmp	r1, #0
 80157ee:	f000 8098 	beq.w	8015922 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e0>
 80157f2:	eb0c 0002 	add.w	r0, ip, r2
 80157f6:	f81c 2002 	ldrb.w	r2, [ip, r2]
 80157fa:	7840      	ldrb	r0, [r0, #1]
 80157fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015800:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015804:	4422      	add	r2, r4
 8015806:	4420      	add	r0, r4
 8015808:	b29b      	uxth	r3, r3
 801580a:	f814 b00e 	ldrb.w	fp, [r4, lr]
 801580e:	b289      	uxth	r1, r1
 8015810:	f895 e000 	ldrb.w	lr, [r5]
 8015814:	3703      	adds	r7, #3
 8015816:	f109 39ff 	add.w	r9, r9, #4294967295
 801581a:	fb03 f801 	mul.w	r8, r3, r1
 801581e:	011b      	lsls	r3, r3, #4
 8015820:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015824:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8015828:	eba3 0308 	sub.w	r3, r3, r8
 801582c:	b289      	uxth	r1, r1
 801582e:	b29b      	uxth	r3, r3
 8015830:	ebac 0c01 	sub.w	ip, ip, r1
 8015834:	fb03 fe0e 	mul.w	lr, r3, lr
 8015838:	fa1f fc8c 	uxth.w	ip, ip
 801583c:	930f      	str	r3, [sp, #60]	; 0x3c
 801583e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015840:	fb0c ee0b 	mla	lr, ip, fp, lr
 8015844:	f892 b000 	ldrb.w	fp, [r2]
 8015848:	fb01 ee0b 	mla	lr, r1, fp, lr
 801584c:	f890 b000 	ldrb.w	fp, [r0]
 8015850:	fb08 ee0b 	mla	lr, r8, fp, lr
 8015854:	f817 bc06 	ldrb.w	fp, [r7, #-6]
 8015858:	fb1b fb03 	smulbb	fp, fp, r3
 801585c:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8015860:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015862:	fb0e be0a 	mla	lr, lr, sl, fp
 8015866:	fa1f fe8e 	uxth.w	lr, lr
 801586a:	f10e 0b01 	add.w	fp, lr, #1
 801586e:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8015872:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8015876:	f807 ec06 	strb.w	lr, [r7, #-6]
 801587a:	f895 e001 	ldrb.w	lr, [r5, #1]
 801587e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015882:	fb03 fe0e 	mul.w	lr, r3, lr
 8015886:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015888:	fb0c ee0b 	mla	lr, ip, fp, lr
 801588c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015890:	fb01 ee0b 	mla	lr, r1, fp, lr
 8015894:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015898:	fb08 ee0b 	mla	lr, r8, fp, lr
 801589c:	f817 bc05 	ldrb.w	fp, [r7, #-5]
 80158a0:	fb1b fb03 	smulbb	fp, fp, r3
 80158a4:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80158a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80158aa:	fb0e be0a 	mla	lr, lr, sl, fp
 80158ae:	fa1f fe8e 	uxth.w	lr, lr
 80158b2:	f10e 0b01 	add.w	fp, lr, #1
 80158b6:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 80158ba:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80158be:	f807 ec05 	strb.w	lr, [r7, #-5]
 80158c2:	78ad      	ldrb	r5, [r5, #2]
 80158c4:	78b6      	ldrb	r6, [r6, #2]
 80158c6:	436b      	muls	r3, r5
 80158c8:	7895      	ldrb	r5, [r2, #2]
 80158ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80158cc:	fb0c 3306 	mla	r3, ip, r6, r3
 80158d0:	fb01 3305 	mla	r3, r1, r5, r3
 80158d4:	7885      	ldrb	r5, [r0, #2]
 80158d6:	fb08 3805 	mla	r8, r8, r5, r3
 80158da:	f817 3c04 	ldrb.w	r3, [r7, #-4]
 80158de:	fb13 f302 	smulbb	r3, r3, r2
 80158e2:	f3c8 2807 	ubfx	r8, r8, #8, #8
 80158e6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80158e8:	fb08 380a 	mla	r8, r8, sl, r3
 80158ec:	fa1f f888 	uxth.w	r8, r8
 80158f0:	f108 0301 	add.w	r3, r8, #1
 80158f4:	eb03 2818 	add.w	r8, r3, r8, lsr #8
 80158f8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80158fa:	4413      	add	r3, r2
 80158fc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80158fe:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015902:	931d      	str	r3, [sp, #116]	; 0x74
 8015904:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015906:	f807 8c04 	strb.w	r8, [r7, #-4]
 801590a:	4413      	add	r3, r2
 801590c:	931e      	str	r3, [sp, #120]	; 0x78
 801590e:	e6d6      	b.n	80156be <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015910:	b151      	cbz	r1, 8015928 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 8015912:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8015916:	4630      	mov	r0, r6
 8015918:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801591c:	4422      	add	r2, r4
 801591e:	4635      	mov	r5, r6
 8015920:	e772      	b.n	8015808 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8015922:	4630      	mov	r0, r6
 8015924:	4632      	mov	r2, r6
 8015926:	e76f      	b.n	8015808 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8015928:	4630      	mov	r0, r6
 801592a:	4632      	mov	r2, r6
 801592c:	e7f7      	b.n	801591e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801592e:	b013      	add	sp, #76	; 0x4c
 8015930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015934 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 8015934:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015938:	784c      	ldrb	r4, [r1, #1]
 801593a:	f891 a002 	ldrb.w	sl, [r1, #2]
 801593e:	0224      	lsls	r4, r4, #8
 8015940:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015944:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 8015948:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 801594c:	f891 a000 	ldrb.w	sl, [r1]
 8015950:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8015954:	ea44 040a 	orr.w	r4, r4, sl
 8015958:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801595c:	e9dd c50c 	ldrd	ip, r5, [sp, #48]	; 0x30
 8015960:	9401      	str	r4, [sp, #4]
 8015962:	fb05 c70e 	mla	r7, r5, lr, ip
 8015966:	2d00      	cmp	r5, #0
 8015968:	eb02 0807 	add.w	r8, r2, r7
 801596c:	db72      	blt.n	8015a54 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x120>
 801596e:	45a9      	cmp	r9, r5
 8015970:	dd70      	ble.n	8015a54 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x120>
 8015972:	f1bc 0f00 	cmp.w	ip, #0
 8015976:	db6b      	blt.n	8015a50 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x11c>
 8015978:	45e6      	cmp	lr, ip
 801597a:	dd69      	ble.n	8015a50 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x11c>
 801597c:	5dd7      	ldrb	r7, [r2, r7]
 801597e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015982:	441f      	add	r7, r3
 8015984:	f11c 0201 	adds.w	r2, ip, #1
 8015988:	d467      	bmi.n	8015a5a <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 801598a:	4596      	cmp	lr, r2
 801598c:	dd65      	ble.n	8015a5a <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 801598e:	2800      	cmp	r0, #0
 8015990:	d063      	beq.n	8015a5a <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x126>
 8015992:	f898 4001 	ldrb.w	r4, [r8, #1]
 8015996:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801599a:	441c      	add	r4, r3
 801599c:	3501      	adds	r5, #1
 801599e:	d460      	bmi.n	8015a62 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 80159a0:	45a9      	cmp	r9, r5
 80159a2:	dd5e      	ble.n	8015a62 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 80159a4:	2e00      	cmp	r6, #0
 80159a6:	d05c      	beq.n	8015a62 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 80159a8:	f1bc 0f00 	cmp.w	ip, #0
 80159ac:	db57      	blt.n	8015a5e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 80159ae:	45e6      	cmp	lr, ip
 80159b0:	dd55      	ble.n	8015a5e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 80159b2:	f818 500e 	ldrb.w	r5, [r8, lr]
 80159b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80159ba:	441d      	add	r5, r3
 80159bc:	f11c 0201 	adds.w	r2, ip, #1
 80159c0:	d452      	bmi.n	8015a68 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 80159c2:	4596      	cmp	lr, r2
 80159c4:	dd50      	ble.n	8015a68 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 80159c6:	2800      	cmp	r0, #0
 80159c8:	d04e      	beq.n	8015a68 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x134>
 80159ca:	44c6      	add	lr, r8
 80159cc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80159d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159d4:	4413      	add	r3, r2
 80159d6:	b280      	uxth	r0, r0
 80159d8:	f897 8000 	ldrb.w	r8, [r7]
 80159dc:	b2b2      	uxth	r2, r6
 80159de:	fb00 f602 	mul.w	r6, r0, r2
 80159e2:	0100      	lsls	r0, r0, #4
 80159e4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80159e8:	f5c0 7e80 	rsb	lr, r0, #256	; 0x100
 80159ec:	1b80      	subs	r0, r0, r6
 80159ee:	fa1f fc82 	uxth.w	ip, r2
 80159f2:	b282      	uxth	r2, r0
 80159f4:	7820      	ldrb	r0, [r4, #0]
 80159f6:	ebae 0e0c 	sub.w	lr, lr, ip
 80159fa:	4350      	muls	r0, r2
 80159fc:	fa1f fe8e 	uxth.w	lr, lr
 8015a00:	fb0e 0808 	mla	r8, lr, r8, r0
 8015a04:	7828      	ldrb	r0, [r5, #0]
 8015a06:	fb0c 8800 	mla	r8, ip, r0, r8
 8015a0a:	7818      	ldrb	r0, [r3, #0]
 8015a0c:	fb06 8000 	mla	r0, r6, r0, r8
 8015a10:	1200      	asrs	r0, r0, #8
 8015a12:	7008      	strb	r0, [r1, #0]
 8015a14:	7860      	ldrb	r0, [r4, #1]
 8015a16:	f897 8001 	ldrb.w	r8, [r7, #1]
 8015a1a:	4350      	muls	r0, r2
 8015a1c:	fb0e 0808 	mla	r8, lr, r8, r0
 8015a20:	7868      	ldrb	r0, [r5, #1]
 8015a22:	fb0c 8800 	mla	r8, ip, r0, r8
 8015a26:	7858      	ldrb	r0, [r3, #1]
 8015a28:	fb06 8000 	mla	r0, r6, r0, r8
 8015a2c:	1200      	asrs	r0, r0, #8
 8015a2e:	7048      	strb	r0, [r1, #1]
 8015a30:	78a0      	ldrb	r0, [r4, #2]
 8015a32:	78bf      	ldrb	r7, [r7, #2]
 8015a34:	4350      	muls	r0, r2
 8015a36:	78aa      	ldrb	r2, [r5, #2]
 8015a38:	fb0e 0007 	mla	r0, lr, r7, r0
 8015a3c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015a40:	789a      	ldrb	r2, [r3, #2]
 8015a42:	fb06 c202 	mla	r2, r6, r2, ip
 8015a46:	1212      	asrs	r2, r2, #8
 8015a48:	708a      	strb	r2, [r1, #2]
 8015a4a:	b002      	add	sp, #8
 8015a4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015a50:	af01      	add	r7, sp, #4
 8015a52:	e797      	b.n	8015984 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x50>
 8015a54:	ac01      	add	r4, sp, #4
 8015a56:	4627      	mov	r7, r4
 8015a58:	e7a0      	b.n	801599c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8015a5a:	ac01      	add	r4, sp, #4
 8015a5c:	e79e      	b.n	801599c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 8015a5e:	ad01      	add	r5, sp, #4
 8015a60:	e7ac      	b.n	80159bc <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x88>
 8015a62:	ab01      	add	r3, sp, #4
 8015a64:	461d      	mov	r5, r3
 8015a66:	e7b6      	b.n	80159d6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xa2>
 8015a68:	ab01      	add	r3, sp, #4
 8015a6a:	e7b4      	b.n	80159d6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xa2>

08015a6c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a70:	b08d      	sub	sp, #52	; 0x34
 8015a72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015a76:	e9cd 1209 	strd	r1, r2, [sp, #36]	; 0x24
 8015a7a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8015a7c:	900b      	str	r0, [sp, #44]	; 0x2c
 8015a7e:	9306      	str	r3, [sp, #24]
 8015a80:	6850      	ldr	r0, [r2, #4]
 8015a82:	6812      	ldr	r2, [r2, #0]
 8015a84:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015a86:	e9dd 131c 	ldrd	r1, r3, [sp, #112]	; 0x70
 8015a8a:	fb00 1303 	mla	r3, r0, r3, r1
 8015a8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015a92:	18d3      	adds	r3, r2, r3
 8015a94:	9307      	str	r3, [sp, #28]
 8015a96:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015a98:	681b      	ldr	r3, [r3, #0]
 8015a9a:	9308      	str	r3, [sp, #32]
 8015a9c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015a9e:	685d      	ldr	r5, [r3, #4]
 8015aa0:	3504      	adds	r5, #4
 8015aa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015aa4:	2b00      	cmp	r3, #0
 8015aa6:	dc03      	bgt.n	8015ab0 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015aa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015aaa:	2b00      	cmp	r3, #0
 8015aac:	f340 81e6 	ble.w	8015e7c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015ab0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015ab2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015ab6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015aba:	1e48      	subs	r0, r1, #1
 8015abc:	1e56      	subs	r6, r2, #1
 8015abe:	9b06      	ldr	r3, [sp, #24]
 8015ac0:	2b00      	cmp	r3, #0
 8015ac2:	f340 80bd 	ble.w	8015c40 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015ac6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015ac8:	1427      	asrs	r7, r4, #16
 8015aca:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015ace:	d406      	bmi.n	8015ade <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ad0:	4287      	cmp	r7, r0
 8015ad2:	da04      	bge.n	8015ade <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ad4:	2b00      	cmp	r3, #0
 8015ad6:	db02      	blt.n	8015ade <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ad8:	42b3      	cmp	r3, r6
 8015ada:	f2c0 80b2 	blt.w	8015c42 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8015ade:	3701      	adds	r7, #1
 8015ae0:	f100 80a1 	bmi.w	8015c26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015ae4:	42b9      	cmp	r1, r7
 8015ae6:	f2c0 809e 	blt.w	8015c26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015aea:	3301      	adds	r3, #1
 8015aec:	f100 809b 	bmi.w	8015c26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015af0:	429a      	cmp	r2, r3
 8015af2:	f2c0 8098 	blt.w	8015c26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015af6:	e9dd b606 	ldrd	fp, r6, [sp, #24]
 8015afa:	f1bb 0f00 	cmp.w	fp, #0
 8015afe:	f340 80bf 	ble.w	8015c80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b02:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015b04:	981e      	ldr	r0, [sp, #120]	; 0x78
 8015b06:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015b08:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015b0c:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8015b10:	1420      	asrs	r0, r4, #16
 8015b12:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8015b14:	ea4f 4723 	mov.w	r7, r3, asr #16
 8015b18:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8015b1c:	6892      	ldr	r2, [r2, #8]
 8015b1e:	f100 8103 	bmi.w	8015d28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015b22:	f102 3eff 	add.w	lr, r2, #4294967295
 8015b26:	4570      	cmp	r0, lr
 8015b28:	f280 80fe 	bge.w	8015d28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015b2c:	2f00      	cmp	r7, #0
 8015b2e:	f2c0 80fb 	blt.w	8015d28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015b32:	f10c 3eff 	add.w	lr, ip, #4294967295
 8015b36:	4577      	cmp	r7, lr
 8015b38:	f280 80f6 	bge.w	8015d28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015b3c:	b212      	sxth	r2, r2
 8015b3e:	fb07 0002 	mla	r0, r7, r2, r0
 8015b42:	9f08      	ldr	r7, [sp, #32]
 8015b44:	f817 8000 	ldrb.w	r8, [r7, r0]
 8015b48:	eb07 0e00 	add.w	lr, r7, r0
 8015b4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015b50:	eb05 0c08 	add.w	ip, r5, r8
 8015b54:	2b00      	cmp	r3, #0
 8015b56:	f000 80d8 	beq.w	8015d0a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8015b5a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 8015b5e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b62:	442f      	add	r7, r5
 8015b64:	2900      	cmp	r1, #0
 8015b66:	f000 80d9 	beq.w	8015d1c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015b6a:	eb0e 0002 	add.w	r0, lr, r2
 8015b6e:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8015b72:	7840      	ldrb	r0, [r0, #1]
 8015b74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b7c:	442a      	add	r2, r5
 8015b7e:	4428      	add	r0, r5
 8015b80:	b29b      	uxth	r3, r3
 8015b82:	f815 a008 	ldrb.w	sl, [r5, r8]
 8015b86:	b289      	uxth	r1, r1
 8015b88:	f897 8000 	ldrb.w	r8, [r7]
 8015b8c:	fb03 f901 	mul.w	r9, r3, r1
 8015b90:	011b      	lsls	r3, r3, #4
 8015b92:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015b96:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015b9a:	eba3 0309 	sub.w	r3, r3, r9
 8015b9e:	b289      	uxth	r1, r1
 8015ba0:	b29b      	uxth	r3, r3
 8015ba2:	ebae 0e01 	sub.w	lr, lr, r1
 8015ba6:	fb03 f808 	mul.w	r8, r3, r8
 8015baa:	fa1f fe8e 	uxth.w	lr, lr
 8015bae:	fb0e 880a 	mla	r8, lr, sl, r8
 8015bb2:	f892 a000 	ldrb.w	sl, [r2]
 8015bb6:	fb01 880a 	mla	r8, r1, sl, r8
 8015bba:	f890 a000 	ldrb.w	sl, [r0]
 8015bbe:	fb09 880a 	mla	r8, r9, sl, r8
 8015bc2:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015bc6:	f886 8000 	strb.w	r8, [r6]
 8015bca:	f897 8001 	ldrb.w	r8, [r7, #1]
 8015bce:	f89c a001 	ldrb.w	sl, [ip, #1]
 8015bd2:	fb03 f808 	mul.w	r8, r3, r8
 8015bd6:	fb0e 880a 	mla	r8, lr, sl, r8
 8015bda:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015bde:	fb01 880a 	mla	r8, r1, sl, r8
 8015be2:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015be6:	fb09 880a 	mla	r8, r9, sl, r8
 8015bea:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015bee:	f886 8001 	strb.w	r8, [r6, #1]
 8015bf2:	78bf      	ldrb	r7, [r7, #2]
 8015bf4:	f89c c002 	ldrb.w	ip, [ip, #2]
 8015bf8:	437b      	muls	r3, r7
 8015bfa:	7892      	ldrb	r2, [r2, #2]
 8015bfc:	fb0e 330c 	mla	r3, lr, ip, r3
 8015c00:	fb01 3102 	mla	r1, r1, r2, r3
 8015c04:	7882      	ldrb	r2, [r0, #2]
 8015c06:	fb09 1902 	mla	r9, r9, r2, r1
 8015c0a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015c0e:	f886 9002 	strb.w	r9, [r6, #2]
 8015c12:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015c14:	3603      	adds	r6, #3
 8015c16:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015c18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015c1c:	441c      	add	r4, r3
 8015c1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015c20:	4413      	add	r3, r2
 8015c22:	9318      	str	r3, [sp, #96]	; 0x60
 8015c24:	e769      	b.n	8015afa <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8015c26:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015c28:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8015c2a:	441c      	add	r4, r3
 8015c2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015c2e:	443b      	add	r3, r7
 8015c30:	9318      	str	r3, [sp, #96]	; 0x60
 8015c32:	9b06      	ldr	r3, [sp, #24]
 8015c34:	3b01      	subs	r3, #1
 8015c36:	9306      	str	r3, [sp, #24]
 8015c38:	9b07      	ldr	r3, [sp, #28]
 8015c3a:	3303      	adds	r3, #3
 8015c3c:	9307      	str	r3, [sp, #28]
 8015c3e:	e73e      	b.n	8015abe <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015c40:	d026      	beq.n	8015c90 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015c42:	9b06      	ldr	r3, [sp, #24]
 8015c44:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015c46:	3b01      	subs	r3, #1
 8015c48:	fb00 4003 	mla	r0, r0, r3, r4
 8015c4c:	1400      	asrs	r0, r0, #16
 8015c4e:	f53f af52 	bmi.w	8015af6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c52:	3901      	subs	r1, #1
 8015c54:	4288      	cmp	r0, r1
 8015c56:	f6bf af4e 	bge.w	8015af6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c5a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015c5c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015c5e:	fb01 0303 	mla	r3, r1, r3, r0
 8015c62:	141b      	asrs	r3, r3, #16
 8015c64:	f53f af47 	bmi.w	8015af6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c68:	3a01      	subs	r2, #1
 8015c6a:	4293      	cmp	r3, r2
 8015c6c:	f6bf af43 	bge.w	8015af6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c70:	9b07      	ldr	r3, [sp, #28]
 8015c72:	f8dd a018 	ldr.w	sl, [sp, #24]
 8015c76:	f103 0803 	add.w	r8, r3, #3
 8015c7a:	f1ba 0f00 	cmp.w	sl, #0
 8015c7e:	dc71      	bgt.n	8015d64 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8015c80:	9b06      	ldr	r3, [sp, #24]
 8015c82:	9a07      	ldr	r2, [sp, #28]
 8015c84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c88:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015c8c:	441a      	add	r2, r3
 8015c8e:	9207      	str	r2, [sp, #28]
 8015c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c92:	2b00      	cmp	r3, #0
 8015c94:	f340 80f2 	ble.w	8015e7c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015c98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015c9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ca2:	eeb0 6a62 	vmov.f32	s12, s5
 8015ca6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015caa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015cae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015cb2:	ee16 4a10 	vmov	r4, s12
 8015cb6:	eeb0 6a43 	vmov.f32	s12, s6
 8015cba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015cbe:	ed8d 6a18 	vstr	s12, [sp, #96]	; 0x60
 8015cc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015cc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015cca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015cce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015cd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015cd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015cda:	ee12 2a90 	vmov	r2, s5
 8015cde:	eef0 2a47 	vmov.f32	s5, s14
 8015ce2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ce6:	ee13 2a10 	vmov	r2, s6
 8015cea:	9319      	str	r3, [sp, #100]	; 0x64
 8015cec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015cee:	eeb0 3a67 	vmov.f32	s6, s15
 8015cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cf6:	931a      	str	r3, [sp, #104]	; 0x68
 8015cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015cfc:	3b01      	subs	r3, #1
 8015cfe:	9309      	str	r3, [sp, #36]	; 0x24
 8015d00:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015d02:	bf08      	it	eq
 8015d04:	4613      	moveq	r3, r2
 8015d06:	9306      	str	r3, [sp, #24]
 8015d08:	e6cb      	b.n	8015aa2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015d0a:	b151      	cbz	r1, 8015d22 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015d0c:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8015d10:	4660      	mov	r0, ip
 8015d12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015d16:	442a      	add	r2, r5
 8015d18:	4667      	mov	r7, ip
 8015d1a:	e731      	b.n	8015b80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8015d1c:	4660      	mov	r0, ip
 8015d1e:	4662      	mov	r2, ip
 8015d20:	e72e      	b.n	8015b80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8015d22:	4660      	mov	r0, ip
 8015d24:	4662      	mov	r2, ip
 8015d26:	e7f7      	b.n	8015d18 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8015d28:	f110 0e01 	adds.w	lr, r0, #1
 8015d2c:	f53f af71 	bmi.w	8015c12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015d30:	4572      	cmp	r2, lr
 8015d32:	f6ff af6e 	blt.w	8015c12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015d36:	f117 0e01 	adds.w	lr, r7, #1
 8015d3a:	f53f af6a 	bmi.w	8015c12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015d3e:	45f4      	cmp	ip, lr
 8015d40:	f6ff af67 	blt.w	8015c12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015d44:	b212      	sxth	r2, r2
 8015d46:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015d4a:	fa0f f38c 	sxth.w	r3, ip
 8015d4e:	9200      	str	r2, [sp, #0]
 8015d50:	4631      	mov	r1, r6
 8015d52:	9a08      	ldr	r2, [sp, #32]
 8015d54:	9301      	str	r3, [sp, #4]
 8015d56:	462b      	mov	r3, r5
 8015d58:	e9cd 0702 	strd	r0, r7, [sp, #8]
 8015d5c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015d5e:	f7ff fde9 	bl	8015934 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8015d62:	e756      	b.n	8015c12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015d64:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015d66:	1426      	asrs	r6, r4, #16
 8015d68:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015d6a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8015d6e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015d72:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8015d74:	1400      	asrs	r0, r0, #16
 8015d76:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015d7a:	fb02 6000 	mla	r0, r2, r0, r6
 8015d7e:	9e08      	ldr	r6, [sp, #32]
 8015d80:	f816 e000 	ldrb.w	lr, [r6, r0]
 8015d84:	eb06 0c00 	add.w	ip, r6, r0
 8015d88:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015d8c:	eb05 070e 	add.w	r7, r5, lr
 8015d90:	2b00      	cmp	r3, #0
 8015d92:	d064      	beq.n	8015e5e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8015d94:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8015d98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015d9c:	442e      	add	r6, r5
 8015d9e:	2900      	cmp	r1, #0
 8015da0:	d066      	beq.n	8015e70 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015da2:	eb0c 0002 	add.w	r0, ip, r2
 8015da6:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8015daa:	7840      	ldrb	r0, [r0, #1]
 8015dac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015db0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015db4:	442a      	add	r2, r5
 8015db6:	4428      	add	r0, r5
 8015db8:	b29b      	uxth	r3, r3
 8015dba:	f815 b00e 	ldrb.w	fp, [r5, lr]
 8015dbe:	b289      	uxth	r1, r1
 8015dc0:	f896 e000 	ldrb.w	lr, [r6]
 8015dc4:	f108 0803 	add.w	r8, r8, #3
 8015dc8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015dcc:	fb03 f901 	mul.w	r9, r3, r1
 8015dd0:	011b      	lsls	r3, r3, #4
 8015dd2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015dd6:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8015dda:	eba3 0309 	sub.w	r3, r3, r9
 8015dde:	b289      	uxth	r1, r1
 8015de0:	b29b      	uxth	r3, r3
 8015de2:	ebac 0c01 	sub.w	ip, ip, r1
 8015de6:	fb03 fe0e 	mul.w	lr, r3, lr
 8015dea:	fa1f fc8c 	uxth.w	ip, ip
 8015dee:	fb0c ee0b 	mla	lr, ip, fp, lr
 8015df2:	f892 b000 	ldrb.w	fp, [r2]
 8015df6:	fb01 ee0b 	mla	lr, r1, fp, lr
 8015dfa:	f890 b000 	ldrb.w	fp, [r0]
 8015dfe:	fb09 ee0b 	mla	lr, r9, fp, lr
 8015e02:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8015e06:	f808 ec06 	strb.w	lr, [r8, #-6]
 8015e0a:	f896 e001 	ldrb.w	lr, [r6, #1]
 8015e0e:	f897 b001 	ldrb.w	fp, [r7, #1]
 8015e12:	fb03 fe0e 	mul.w	lr, r3, lr
 8015e16:	fb0c ee0b 	mla	lr, ip, fp, lr
 8015e1a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015e1e:	fb01 ee0b 	mla	lr, r1, fp, lr
 8015e22:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015e26:	fb09 ee0b 	mla	lr, r9, fp, lr
 8015e2a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8015e2e:	f808 ec05 	strb.w	lr, [r8, #-5]
 8015e32:	78b6      	ldrb	r6, [r6, #2]
 8015e34:	78bf      	ldrb	r7, [r7, #2]
 8015e36:	4373      	muls	r3, r6
 8015e38:	7896      	ldrb	r6, [r2, #2]
 8015e3a:	7882      	ldrb	r2, [r0, #2]
 8015e3c:	fb0c 3307 	mla	r3, ip, r7, r3
 8015e40:	fb01 3306 	mla	r3, r1, r6, r3
 8015e44:	fb09 3902 	mla	r9, r9, r2, r3
 8015e48:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015e4a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015e4c:	441c      	add	r4, r3
 8015e4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015e50:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015e54:	4413      	add	r3, r2
 8015e56:	f808 9c04 	strb.w	r9, [r8, #-4]
 8015e5a:	9318      	str	r3, [sp, #96]	; 0x60
 8015e5c:	e70d      	b.n	8015c7a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8015e5e:	b151      	cbz	r1, 8015e76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015e60:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8015e64:	4638      	mov	r0, r7
 8015e66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015e6a:	442a      	add	r2, r5
 8015e6c:	463e      	mov	r6, r7
 8015e6e:	e7a3      	b.n	8015db8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8015e70:	4638      	mov	r0, r7
 8015e72:	463a      	mov	r2, r7
 8015e74:	e7a0      	b.n	8015db8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8015e76:	4638      	mov	r0, r7
 8015e78:	463a      	mov	r2, r7
 8015e7a:	e7f7      	b.n	8015e6c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015e7c:	b00d      	add	sp, #52	; 0x34
 8015e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e82 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8015e82:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e86:	e9dd 750e 	ldrd	r7, r5, [sp, #56]	; 0x38
 8015e8a:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8015e8e:	2d00      	cmp	r5, #0
 8015e90:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8015e94:	fb05 700c 	mla	r0, r5, ip, r7
 8015e98:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8015e9c:	f89d e044 	ldrb.w	lr, [sp, #68]	; 0x44
 8015ea0:	eb02 0800 	add.w	r8, r2, r0
 8015ea4:	f2c0 8118 	blt.w	80160d8 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x256>
 8015ea8:	45a9      	cmp	r9, r5
 8015eaa:	f340 8115 	ble.w	80160d8 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x256>
 8015eae:	2f00      	cmp	r7, #0
 8015eb0:	f2c0 8110 	blt.w	80160d4 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x252>
 8015eb4:	45bc      	cmp	ip, r7
 8015eb6:	f340 810d 	ble.w	80160d4 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x252>
 8015eba:	5c12      	ldrb	r2, [r2, r0]
 8015ebc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015ec0:	1c7a      	adds	r2, r7, #1
 8015ec2:	f100 810c 	bmi.w	80160de <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x25c>
 8015ec6:	4594      	cmp	ip, r2
 8015ec8:	f340 8109 	ble.w	80160de <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x25c>
 8015ecc:	2c00      	cmp	r4, #0
 8015ece:	f000 8108 	beq.w	80160e2 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x260>
 8015ed2:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015ed6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8015eda:	3501      	adds	r5, #1
 8015edc:	f100 8105 	bmi.w	80160ea <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x268>
 8015ee0:	45a9      	cmp	r9, r5
 8015ee2:	f340 8102 	ble.w	80160ea <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x268>
 8015ee6:	f1be 0f00 	cmp.w	lr, #0
 8015eea:	f000 8101 	beq.w	80160f0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x26e>
 8015eee:	2f00      	cmp	r7, #0
 8015ef0:	f2c0 80f9 	blt.w	80160e6 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 8015ef4:	45bc      	cmp	ip, r7
 8015ef6:	f340 80f6 	ble.w	80160e6 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 8015efa:	f818 200c 	ldrb.w	r2, [r8, ip]
 8015efe:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015f02:	3701      	adds	r7, #1
 8015f04:	f100 80f7 	bmi.w	80160f6 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>
 8015f08:	45bc      	cmp	ip, r7
 8015f0a:	f340 80f4 	ble.w	80160f6 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>
 8015f0e:	2c00      	cmp	r4, #0
 8015f10:	f000 80f3 	beq.w	80160fa <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x278>
 8015f14:	44c4      	add	ip, r8
 8015f16:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8015f1a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015f1e:	fa1f fc84 	uxth.w	ip, r4
 8015f22:	fa1f f48e 	uxth.w	r4, lr
 8015f26:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8015f2a:	fb04 fe0c 	mul.w	lr, r4, ip
 8015f2e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8015f32:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8015f36:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015f3a:	ebac 070e 	sub.w	r7, ip, lr
 8015f3e:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8015f42:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8015f46:	b2a4      	uxth	r4, r4
 8015f48:	b2bf      	uxth	r7, r7
 8015f4a:	1b1b      	subs	r3, r3, r4
 8015f4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015f50:	fb07 fc0a 	mul.w	ip, r7, sl
 8015f54:	b29b      	uxth	r3, r3
 8015f56:	fb03 cc0b 	mla	ip, r3, fp, ip
 8015f5a:	9300      	str	r3, [sp, #0]
 8015f5c:	fb04 cc09 	mla	ip, r4, r9, ip
 8015f60:	fb0e cc08 	mla	ip, lr, r8, ip
 8015f64:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8015f68:	9301      	str	r3, [sp, #4]
 8015f6a:	2b00      	cmp	r3, #0
 8015f6c:	f000 80af 	beq.w	80160ce <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 8015f70:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015f74:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015f78:	fb0b fc0c 	mul.w	ip, fp, ip
 8015f7c:	fb0b f606 	mul.w	r6, fp, r6
 8015f80:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8015f84:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015f88:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8015f8c:	44dc      	add	ip, fp
 8015f8e:	f000 1bff 	and.w	fp, r0, #16711935	; 0xff00ff
 8015f92:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015f96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015f9a:	fb0a fb0b 	mul.w	fp, sl, fp
 8015f9e:	fb0a fa00 	mul.w	sl, sl, r0
 8015fa2:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 8015fa6:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8015faa:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015fae:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8015fb2:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8015fb6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015fba:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8015fbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015fc2:	0a36      	lsrs	r6, r6, #8
 8015fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015fc8:	44dc      	add	ip, fp
 8015fca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8015fce:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015fd2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015fd6:	fb09 fb0b 	mul.w	fp, r9, fp
 8015fda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015fde:	fb09 f905 	mul.w	r9, r9, r5
 8015fe2:	ea4f 201b 	mov.w	r0, fp, lsr #8
 8015fe6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015fea:	f509 7580 	add.w	r5, r9, #256	; 0x100
 8015fee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015ff2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015ff6:	fb0c fc07 	mul.w	ip, ip, r7
 8015ffa:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 8015ffe:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 8016002:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016006:	4458      	add	r0, fp
 8016008:	fb08 f505 	mul.w	r5, r8, r5
 801600c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016010:	fb08 f802 	mul.w	r8, r8, r2
 8016014:	0a00      	lsrs	r0, r0, #8
 8016016:	0a2a      	lsrs	r2, r5, #8
 8016018:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801601c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016020:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016024:	4415      	add	r5, r2
 8016026:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801602a:	0a2d      	lsrs	r5, r5, #8
 801602c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8016030:	9a00      	ldr	r2, [sp, #0]
 8016032:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016036:	fb03 cc02 	mla	ip, r3, r2, ip
 801603a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801603e:	9b01      	ldr	r3, [sp, #4]
 8016040:	fb05 c50e 	mla	r5, r5, lr, ip
 8016044:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016048:	fb00 5004 	mla	r0, r0, r4, r5
 801604c:	0a00      	lsrs	r0, r0, #8
 801604e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8016052:	f40a 407f 	and.w	r0, sl, #65280	; 0xff00
 8016056:	4378      	muls	r0, r7
 8016058:	fb02 0006 	mla	r0, r2, r6, r0
 801605c:	fb0e 0e08 	mla	lr, lr, r8, r0
 8016060:	f409 407f 	and.w	r0, r9, #65280	; 0xff00
 8016064:	fb04 e000 	mla	r0, r4, r0, lr
 8016068:	0a00      	lsrs	r0, r0, #8
 801606a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801606e:	4328      	orrs	r0, r5
 8016070:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8016074:	b2ad      	uxth	r5, r5
 8016076:	b2c4      	uxtb	r4, r0
 8016078:	436b      	muls	r3, r5
 801607a:	fb14 f405 	smulbb	r4, r4, r5
 801607e:	1c5a      	adds	r2, r3, #1
 8016080:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016084:	780b      	ldrb	r3, [r1, #0]
 8016086:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801608a:	b2d2      	uxtb	r2, r2
 801608c:	fb03 4302 	mla	r3, r3, r2, r4
 8016090:	b29b      	uxth	r3, r3
 8016092:	1c5c      	adds	r4, r3, #1
 8016094:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8016098:	784c      	ldrb	r4, [r1, #1]
 801609a:	fb14 f402 	smulbb	r4, r4, r2
 801609e:	121b      	asrs	r3, r3, #8
 80160a0:	700b      	strb	r3, [r1, #0]
 80160a2:	f3c0 2307 	ubfx	r3, r0, #8, #8
 80160a6:	fb03 4305 	mla	r3, r3, r5, r4
 80160aa:	b29b      	uxth	r3, r3
 80160ac:	1c5c      	adds	r4, r3, #1
 80160ae:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80160b2:	0c04      	lsrs	r4, r0, #16
 80160b4:	7888      	ldrb	r0, [r1, #2]
 80160b6:	121b      	asrs	r3, r3, #8
 80160b8:	fb10 f002 	smulbb	r0, r0, r2
 80160bc:	704b      	strb	r3, [r1, #1]
 80160be:	fb04 0005 	mla	r0, r4, r5, r0
 80160c2:	b280      	uxth	r0, r0
 80160c4:	1c43      	adds	r3, r0, #1
 80160c6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80160ca:	1200      	asrs	r0, r0, #8
 80160cc:	7088      	strb	r0, [r1, #2]
 80160ce:	b003      	add	sp, #12
 80160d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160d4:	2600      	movs	r6, #0
 80160d6:	e6f3      	b.n	8015ec0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 80160d8:	2000      	movs	r0, #0
 80160da:	4606      	mov	r6, r0
 80160dc:	e6fd      	b.n	8015eda <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 80160de:	2000      	movs	r0, #0
 80160e0:	e6fb      	b.n	8015eda <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 80160e2:	4620      	mov	r0, r4
 80160e4:	e6f9      	b.n	8015eda <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x58>
 80160e6:	2500      	movs	r5, #0
 80160e8:	e70b      	b.n	8015f02 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x80>
 80160ea:	2200      	movs	r2, #0
 80160ec:	4615      	mov	r5, r2
 80160ee:	e716      	b.n	8015f1e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 80160f0:	4672      	mov	r2, lr
 80160f2:	4675      	mov	r5, lr
 80160f4:	e713      	b.n	8015f1e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 80160f6:	2200      	movs	r2, #0
 80160f8:	e711      	b.n	8015f1e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>
 80160fa:	4622      	mov	r2, r4
 80160fc:	e70f      	b.n	8015f1e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x9c>

080160fe <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80160fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016102:	b09f      	sub	sp, #124	; 0x7c
 8016104:	921b      	str	r2, [sp, #108]	; 0x6c
 8016106:	9309      	str	r3, [sp, #36]	; 0x24
 8016108:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801610a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801610e:	901d      	str	r0, [sp, #116]	; 0x74
 8016110:	931c      	str	r3, [sp, #112]	; 0x70
 8016112:	6850      	ldr	r0, [r2, #4]
 8016114:	9119      	str	r1, [sp, #100]	; 0x64
 8016116:	6812      	ldr	r2, [r2, #0]
 8016118:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801611a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801611e:	fb00 1303 	mla	r3, r0, r3, r1
 8016122:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016126:	18d3      	adds	r3, r2, r3
 8016128:	930c      	str	r3, [sp, #48]	; 0x30
 801612a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801612c:	681b      	ldr	r3, [r3, #0]
 801612e:	9312      	str	r3, [sp, #72]	; 0x48
 8016130:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016132:	685e      	ldr	r6, [r3, #4]
 8016134:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8016138:	3604      	adds	r6, #4
 801613a:	930d      	str	r3, [sp, #52]	; 0x34
 801613c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801613e:	2b00      	cmp	r3, #0
 8016140:	dc03      	bgt.n	801614a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016142:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016144:	2b00      	cmp	r3, #0
 8016146:	f340 8378 	ble.w	801683a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801614a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801614c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016150:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016154:	1e48      	subs	r0, r1, #1
 8016156:	1e57      	subs	r7, r2, #1
 8016158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801615a:	2b00      	cmp	r3, #0
 801615c:	f340 818c 	ble.w	8016478 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8016160:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8016162:	142b      	asrs	r3, r5, #16
 8016164:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016168:	d406      	bmi.n	8016178 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801616a:	4584      	cmp	ip, r0
 801616c:	da04      	bge.n	8016178 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801616e:	2b00      	cmp	r3, #0
 8016170:	db02      	blt.n	8016178 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016172:	42bb      	cmp	r3, r7
 8016174:	f2c0 8181 	blt.w	801647a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37c>
 8016178:	f11c 0c01 	adds.w	ip, ip, #1
 801617c:	f100 816f 	bmi.w	801645e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 8016180:	4561      	cmp	r1, ip
 8016182:	f2c0 816c 	blt.w	801645e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 8016186:	3301      	adds	r3, #1
 8016188:	f100 8169 	bmi.w	801645e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 801618c:	429a      	cmp	r2, r3
 801618e:	f2c0 8166 	blt.w	801645e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 8016192:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016194:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016196:	931a      	str	r3, [sp, #104]	; 0x68
 8016198:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801619a:	2b00      	cmp	r3, #0
 801619c:	f340 818c 	ble.w	80164b8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 80161a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161a2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80161a6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80161aa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80161ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80161b0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80161b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161b6:	141b      	asrs	r3, r3, #16
 80161b8:	f100 81d0 	bmi.w	801655c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 80161bc:	f100 38ff 	add.w	r8, r0, #4294967295
 80161c0:	4543      	cmp	r3, r8
 80161c2:	f280 81cb 	bge.w	801655c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 80161c6:	f1bc 0f00 	cmp.w	ip, #0
 80161ca:	f2c0 81c7 	blt.w	801655c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 80161ce:	f10e 38ff 	add.w	r8, lr, #4294967295
 80161d2:	45c4      	cmp	ip, r8
 80161d4:	f280 81c2 	bge.w	801655c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 80161d8:	b200      	sxth	r0, r0
 80161da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80161dc:	fb0c 3300 	mla	r3, ip, r0, r3
 80161e0:	eb04 0803 	add.w	r8, r4, r3
 80161e4:	5ce3      	ldrb	r3, [r4, r3]
 80161e6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80161ea:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80161ee:	2a00      	cmp	r2, #0
 80161f0:	f000 81a9 	beq.w	8016546 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x448>
 80161f4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80161f8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80161fc:	940e      	str	r4, [sp, #56]	; 0x38
 80161fe:	0e24      	lsrs	r4, r4, #24
 8016200:	9415      	str	r4, [sp, #84]	; 0x54
 8016202:	b179      	cbz	r1, 8016224 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016204:	eb08 0c00 	add.w	ip, r8, r0
 8016208:	f818 0000 	ldrb.w	r0, [r8, r0]
 801620c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016210:	900a      	str	r0, [sp, #40]	; 0x28
 8016212:	0e00      	lsrs	r0, r0, #24
 8016214:	9013      	str	r0, [sp, #76]	; 0x4c
 8016216:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801621a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801621e:	900f      	str	r0, [sp, #60]	; 0x3c
 8016220:	0e00      	lsrs	r0, r0, #24
 8016222:	9016      	str	r0, [sp, #88]	; 0x58
 8016224:	b292      	uxth	r2, r2
 8016226:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016228:	b289      	uxth	r1, r1
 801622a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801622c:	fb02 f901 	mul.w	r9, r2, r1
 8016230:	0112      	lsls	r2, r2, #4
 8016232:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016236:	eba2 0809 	sub.w	r8, r2, r9
 801623a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801623e:	b289      	uxth	r1, r1
 8016240:	fa1f f888 	uxth.w	r8, r8
 8016244:	1a52      	subs	r2, r2, r1
 8016246:	fb08 f000 	mul.w	r0, r8, r0
 801624a:	b292      	uxth	r2, r2
 801624c:	fb02 000e 	mla	r0, r2, lr, r0
 8016250:	fb01 0004 	mla	r0, r1, r4, r0
 8016254:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016256:	fb09 0004 	mla	r0, r9, r4, r0
 801625a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801625e:	2800      	cmp	r0, #0
 8016260:	f000 80f2 	beq.w	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8016264:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016268:	d01b      	beq.n	80162a2 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801626a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801626e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016272:	fb0e fa0a 	mul.w	sl, lr, sl
 8016276:	fb0e fe03 	mul.w	lr, lr, r3
 801627a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801627e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016282:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016286:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801628a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801628e:	4453      	add	r3, sl
 8016290:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016294:	0a1b      	lsrs	r3, r3, #8
 8016296:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801629a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801629e:	ea43 030c 	orr.w	r3, r3, ip
 80162a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80162a4:	2cff      	cmp	r4, #255	; 0xff
 80162a6:	d021      	beq.n	80162ec <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80162a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80162aa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80162ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80162b0:	fb04 fb0b 	mul.w	fp, r4, fp
 80162b4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80162b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80162ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80162bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80162c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80162c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80162c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80162cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80162d0:	44de      	add	lr, fp
 80162d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80162d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80162da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80162de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80162e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80162e6:	ea4e 040a 	orr.w	r4, lr, sl
 80162ea:	940e      	str	r4, [sp, #56]	; 0x38
 80162ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80162ee:	2cff      	cmp	r4, #255	; 0xff
 80162f0:	d021      	beq.n	8016336 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80162f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80162f4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80162f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80162fa:	fb04 fb0b 	mul.w	fp, r4, fp
 80162fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016300:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016304:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016306:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801630a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801630e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016312:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016316:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801631a:	44de      	add	lr, fp
 801631c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016320:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016328:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801632c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016330:	ea4e 040a 	orr.w	r4, lr, sl
 8016334:	940a      	str	r4, [sp, #40]	; 0x28
 8016336:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016338:	2cff      	cmp	r4, #255	; 0xff
 801633a:	d021      	beq.n	8016380 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801633c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801633e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016342:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016344:	fb04 fb0b 	mul.w	fp, r4, fp
 8016348:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801634a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801634e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016350:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016354:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016358:	fb04 fa0a 	mul.w	sl, r4, sl
 801635c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016360:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016364:	44de      	add	lr, fp
 8016366:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801636a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801636e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016372:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016376:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801637a:	ea4e 040a 	orr.w	r4, lr, sl
 801637e:	940f      	str	r4, [sp, #60]	; 0x3c
 8016380:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016382:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016386:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801638a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801638e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016390:	fb08 fc0c 	mul.w	ip, r8, ip
 8016394:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016398:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801639c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801639e:	fb01 cc0e 	mla	ip, r1, lr, ip
 80163a2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80163a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80163a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80163ac:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80163b0:	fb08 f80e 	mul.w	r8, r8, lr
 80163b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80163b8:	fb02 8303 	mla	r3, r2, r3, r8
 80163bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80163be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80163c2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80163c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80163c8:	fb01 330a 	mla	r3, r1, sl, r3
 80163cc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80163d0:	fb09 3901 	mla	r9, r9, r1, r3
 80163d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80163d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80163d8:	4343      	muls	r3, r0
 80163da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80163de:	1c58      	adds	r0, r3, #1
 80163e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80163e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80163e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80163ec:	783b      	ldrb	r3, [r7, #0]
 80163ee:	fa5f f28c 	uxtb.w	r2, ip
 80163f2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80163f6:	fb12 f201 	smulbb	r2, r2, r1
 80163fa:	b2c0      	uxtb	r0, r0
 80163fc:	fb03 2300 	mla	r3, r3, r0, r2
 8016400:	b29b      	uxth	r3, r3
 8016402:	1c5a      	adds	r2, r3, #1
 8016404:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016408:	787a      	ldrb	r2, [r7, #1]
 801640a:	fb12 f200 	smulbb	r2, r2, r0
 801640e:	121b      	asrs	r3, r3, #8
 8016410:	703b      	strb	r3, [r7, #0]
 8016412:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8016416:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801641a:	fb03 2301 	mla	r3, r3, r1, r2
 801641e:	b29b      	uxth	r3, r3
 8016420:	1c5a      	adds	r2, r3, #1
 8016422:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016426:	121b      	asrs	r3, r3, #8
 8016428:	707b      	strb	r3, [r7, #1]
 801642a:	78bb      	ldrb	r3, [r7, #2]
 801642c:	fb13 f000 	smulbb	r0, r3, r0
 8016430:	fb0c 0c01 	mla	ip, ip, r1, r0
 8016434:	fa1f fc8c 	uxth.w	ip, ip
 8016438:	f10c 0301 	add.w	r3, ip, #1
 801643c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016440:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8016444:	f887 c002 	strb.w	ip, [r7, #2]
 8016448:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801644a:	3703      	adds	r7, #3
 801644c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801644e:	441a      	add	r2, r3
 8016450:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016452:	441d      	add	r5, r3
 8016454:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016456:	9229      	str	r2, [sp, #164]	; 0xa4
 8016458:	3b01      	subs	r3, #1
 801645a:	931a      	str	r3, [sp, #104]	; 0x68
 801645c:	e69c      	b.n	8016198 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801645e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016460:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8016462:	441c      	add	r4, r3
 8016464:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016466:	441d      	add	r5, r3
 8016468:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801646a:	9429      	str	r4, [sp, #164]	; 0xa4
 801646c:	3b01      	subs	r3, #1
 801646e:	9309      	str	r3, [sp, #36]	; 0x24
 8016470:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016472:	3303      	adds	r3, #3
 8016474:	930c      	str	r3, [sp, #48]	; 0x30
 8016476:	e66f      	b.n	8016158 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016478:	d026      	beq.n	80164c8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801647a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801647c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801647e:	3b01      	subs	r3, #1
 8016480:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8016482:	fb00 4003 	mla	r0, r0, r3, r4
 8016486:	1400      	asrs	r0, r0, #16
 8016488:	f53f ae83 	bmi.w	8016192 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801648c:	3901      	subs	r1, #1
 801648e:	4288      	cmp	r0, r1
 8016490:	f6bf ae7f 	bge.w	8016192 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016494:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8016496:	fb01 5303 	mla	r3, r1, r3, r5
 801649a:	141b      	asrs	r3, r3, #16
 801649c:	f53f ae79 	bmi.w	8016192 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80164a0:	3a01      	subs	r2, #1
 80164a2:	4293      	cmp	r3, r2
 80164a4:	f6bf ae75 	bge.w	8016192 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80164a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80164aa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80164ae:	f103 0e03 	add.w	lr, r3, #3
 80164b2:	f1bb 0f00 	cmp.w	fp, #0
 80164b6:	dc71      	bgt.n	801659c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80164b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164ba:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80164be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80164c0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80164c4:	4423      	add	r3, r4
 80164c6:	930c      	str	r3, [sp, #48]	; 0x30
 80164c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80164ca:	2b00      	cmp	r3, #0
 80164cc:	f340 81b5 	ble.w	801683a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 80164d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80164d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80164d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164de:	eef0 6a62 	vmov.f32	s13, s5
 80164e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80164e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80164ee:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80164f2:	eef0 6a43 	vmov.f32	s13, s6
 80164f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80164fa:	ee16 5a90 	vmov	r5, s13
 80164fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016502:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016506:	ee77 2a62 	vsub.f32	s5, s14, s5
 801650a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801650e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016512:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016516:	ee12 2a90 	vmov	r2, s5
 801651a:	eef0 2a47 	vmov.f32	s5, s14
 801651e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016522:	ee13 2a10 	vmov	r2, s6
 8016526:	932b      	str	r3, [sp, #172]	; 0xac
 8016528:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801652a:	eeb0 3a67 	vmov.f32	s6, s15
 801652e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016532:	932c      	str	r3, [sp, #176]	; 0xb0
 8016534:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016536:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8016538:	3b01      	subs	r3, #1
 801653a:	9319      	str	r3, [sp, #100]	; 0x64
 801653c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801653e:	bf08      	it	eq
 8016540:	4613      	moveq	r3, r2
 8016542:	9309      	str	r3, [sp, #36]	; 0x24
 8016544:	e5fa      	b.n	801613c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016546:	2900      	cmp	r1, #0
 8016548:	f43f ae6c 	beq.w	8016224 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801654c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016550:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016554:	900a      	str	r0, [sp, #40]	; 0x28
 8016556:	0e00      	lsrs	r0, r0, #24
 8016558:	9013      	str	r0, [sp, #76]	; 0x4c
 801655a:	e663      	b.n	8016224 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801655c:	f113 0801 	adds.w	r8, r3, #1
 8016560:	f53f af72 	bmi.w	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8016564:	4540      	cmp	r0, r8
 8016566:	f6ff af6f 	blt.w	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 801656a:	f11c 0801 	adds.w	r8, ip, #1
 801656e:	f53f af6b 	bmi.w	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8016572:	45c6      	cmp	lr, r8
 8016574:	f6ff af68 	blt.w	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8016578:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801657a:	b200      	sxth	r0, r0
 801657c:	9302      	str	r3, [sp, #8]
 801657e:	fa0f f38e 	sxth.w	r3, lr
 8016582:	9000      	str	r0, [sp, #0]
 8016584:	9301      	str	r3, [sp, #4]
 8016586:	4633      	mov	r3, r6
 8016588:	981d      	ldr	r0, [sp, #116]	; 0x74
 801658a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801658e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016592:	4639      	mov	r1, r7
 8016594:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016596:	f7ff fc74 	bl	8015e82 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 801659a:	e755      	b.n	8016448 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 801659c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801659e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80165a2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80165a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80165a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80165aa:	1427      	asrs	r7, r4, #16
 80165ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80165ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80165b2:	142b      	asrs	r3, r5, #16
 80165b4:	fb01 7303 	mla	r3, r1, r3, r7
 80165b8:	18e7      	adds	r7, r4, r3
 80165ba:	5ce3      	ldrb	r3, [r4, r3]
 80165bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80165c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80165c4:	2a00      	cmp	r2, #0
 80165c6:	f000 812e 	beq.w	8016826 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80165ca:	f897 8001 	ldrb.w	r8, [r7, #1]
 80165ce:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 80165d2:	9410      	str	r4, [sp, #64]	; 0x40
 80165d4:	0e24      	lsrs	r4, r4, #24
 80165d6:	9417      	str	r4, [sp, #92]	; 0x5c
 80165d8:	b170      	cbz	r0, 80165f8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 80165da:	eb07 0801 	add.w	r8, r7, r1
 80165de:	5c79      	ldrb	r1, [r7, r1]
 80165e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80165e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80165e6:	0e09      	lsrs	r1, r1, #24
 80165e8:	9114      	str	r1, [sp, #80]	; 0x50
 80165ea:	f898 1001 	ldrb.w	r1, [r8, #1]
 80165ee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80165f2:	9111      	str	r1, [sp, #68]	; 0x44
 80165f4:	0e09      	lsrs	r1, r1, #24
 80165f6:	9118      	str	r1, [sp, #96]	; 0x60
 80165f8:	b292      	uxth	r2, r2
 80165fa:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80165fc:	b280      	uxth	r0, r0
 80165fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016600:	fb02 f900 	mul.w	r9, r2, r0
 8016604:	0112      	lsls	r2, r2, #4
 8016606:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801660a:	eba2 0809 	sub.w	r8, r2, r9
 801660e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016612:	b280      	uxth	r0, r0
 8016614:	fa1f f888 	uxth.w	r8, r8
 8016618:	1a12      	subs	r2, r2, r0
 801661a:	fb08 f101 	mul.w	r1, r8, r1
 801661e:	b292      	uxth	r2, r2
 8016620:	fb02 110c 	mla	r1, r2, ip, r1
 8016624:	fb00 1104 	mla	r1, r0, r4, r1
 8016628:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801662a:	fb09 1104 	mla	r1, r9, r4, r1
 801662e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016632:	2900      	cmp	r1, #0
 8016634:	f000 80ec 	beq.w	8016810 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x712>
 8016638:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801663c:	d019      	beq.n	8016672 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x574>
 801663e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016642:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016646:	fb0c fa0a 	mul.w	sl, ip, sl
 801664a:	fb0c fc03 	mul.w	ip, ip, r3
 801664e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016652:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016656:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801665a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801665e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016662:	4453      	add	r3, sl
 8016664:	0a3f      	lsrs	r7, r7, #8
 8016666:	0a1b      	lsrs	r3, r3, #8
 8016668:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801666c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016670:	433b      	orrs	r3, r7
 8016672:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016674:	2cff      	cmp	r4, #255	; 0xff
 8016676:	d020      	beq.n	80166ba <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5bc>
 8016678:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801667a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801667e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016680:	4367      	muls	r7, r4
 8016682:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016684:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016688:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801668c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801668e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016692:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016696:	fb04 fa0a 	mul.w	sl, r4, sl
 801669a:	44bc      	add	ip, r7
 801669c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80166a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80166a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80166a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80166ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80166b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80166b4:	ea4c 040a 	orr.w	r4, ip, sl
 80166b8:	9410      	str	r4, [sp, #64]	; 0x40
 80166ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80166bc:	2cff      	cmp	r4, #255	; 0xff
 80166be:	d020      	beq.n	8016702 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x604>
 80166c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80166c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80166c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80166c8:	4367      	muls	r7, r4
 80166ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80166cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80166d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80166d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80166d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80166da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80166de:	fb04 fa0a 	mul.w	sl, r4, sl
 80166e2:	44bc      	add	ip, r7
 80166e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80166e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80166ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80166f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80166f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80166f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80166fc:	ea4c 040a 	orr.w	r4, ip, sl
 8016700:	940b      	str	r4, [sp, #44]	; 0x2c
 8016702:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016704:	2cff      	cmp	r4, #255	; 0xff
 8016706:	d020      	beq.n	801674a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8016708:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801670a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801670e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016710:	4367      	muls	r7, r4
 8016712:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016714:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016718:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801671c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801671e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016722:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016726:	fb04 fa0a 	mul.w	sl, r4, sl
 801672a:	44bc      	add	ip, r7
 801672c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016730:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016734:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016738:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801673c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016740:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016744:	ea4c 040a 	orr.w	r4, ip, sl
 8016748:	9411      	str	r4, [sp, #68]	; 0x44
 801674a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801674c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016750:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016754:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016758:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801675a:	fb08 f707 	mul.w	r7, r8, r7
 801675e:	fb02 770c 	mla	r7, r2, ip, r7
 8016762:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016766:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016768:	fb00 770c 	mla	r7, r0, ip, r7
 801676c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016770:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016772:	fb09 770c 	mla	r7, r9, ip, r7
 8016776:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801677a:	fb08 f80c 	mul.w	r8, r8, ip
 801677e:	0a3f      	lsrs	r7, r7, #8
 8016780:	fb02 8303 	mla	r3, r2, r3, r8
 8016784:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016786:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801678a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801678e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016790:	fb00 330a 	mla	r3, r0, sl, r3
 8016794:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016798:	980d      	ldr	r0, [sp, #52]	; 0x34
 801679a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801679e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80167a4:	434b      	muls	r3, r1
 80167a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80167aa:	1c59      	adds	r1, r3, #1
 80167ac:	ea47 070c 	orr.w	r7, r7, ip
 80167b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80167b4:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 80167b8:	b2fa      	uxtb	r2, r7
 80167ba:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80167be:	fb12 f200 	smulbb	r2, r2, r0
 80167c2:	b2c9      	uxtb	r1, r1
 80167c4:	fb03 2301 	mla	r3, r3, r1, r2
 80167c8:	b29b      	uxth	r3, r3
 80167ca:	1c5a      	adds	r2, r3, #1
 80167cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80167d0:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 80167d4:	fb12 f201 	smulbb	r2, r2, r1
 80167d8:	121b      	asrs	r3, r3, #8
 80167da:	f80e 3c03 	strb.w	r3, [lr, #-3]
 80167de:	f3c7 2307 	ubfx	r3, r7, #8, #8
 80167e2:	0c3f      	lsrs	r7, r7, #16
 80167e4:	fb03 2300 	mla	r3, r3, r0, r2
 80167e8:	b29b      	uxth	r3, r3
 80167ea:	1c5a      	adds	r2, r3, #1
 80167ec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80167f0:	121b      	asrs	r3, r3, #8
 80167f2:	f80e 3c02 	strb.w	r3, [lr, #-2]
 80167f6:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 80167fa:	fb13 f101 	smulbb	r1, r3, r1
 80167fe:	fb07 1700 	mla	r7, r7, r0, r1
 8016802:	b2bf      	uxth	r7, r7
 8016804:	1c7b      	adds	r3, r7, #1
 8016806:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801680a:	123f      	asrs	r7, r7, #8
 801680c:	f80e 7c01 	strb.w	r7, [lr, #-1]
 8016810:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016812:	f10e 0e03 	add.w	lr, lr, #3
 8016816:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016818:	f10b 3bff 	add.w	fp, fp, #4294967295
 801681c:	441a      	add	r2, r3
 801681e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016820:	9229      	str	r2, [sp, #164]	; 0xa4
 8016822:	441d      	add	r5, r3
 8016824:	e645      	b.n	80164b2 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8016826:	2800      	cmp	r0, #0
 8016828:	f43f aee6 	beq.w	80165f8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 801682c:	5c79      	ldrb	r1, [r7, r1]
 801682e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016832:	910b      	str	r1, [sp, #44]	; 0x2c
 8016834:	0e09      	lsrs	r1, r1, #24
 8016836:	9114      	str	r1, [sp, #80]	; 0x50
 8016838:	e6de      	b.n	80165f8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 801683a:	b01f      	add	sp, #124	; 0x7c
 801683c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016840 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 8016840:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016844:	e9dd 750e 	ldrd	r7, r5, [sp, #56]	; 0x38
 8016848:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801684c:	2d00      	cmp	r5, #0
 801684e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8016852:	fb05 700e 	mla	r0, r5, lr, r7
 8016856:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 801685a:	f89d c044 	ldrb.w	ip, [sp, #68]	; 0x44
 801685e:	eb02 0800 	add.w	r8, r2, r0
 8016862:	f2c0 8105 	blt.w	8016a70 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x230>
 8016866:	45a9      	cmp	r9, r5
 8016868:	f340 8102 	ble.w	8016a70 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x230>
 801686c:	2f00      	cmp	r7, #0
 801686e:	f2c0 80fd 	blt.w	8016a6c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x22c>
 8016872:	45be      	cmp	lr, r7
 8016874:	f340 80fa 	ble.w	8016a6c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x22c>
 8016878:	5c12      	ldrb	r2, [r2, r0]
 801687a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801687e:	1c7a      	adds	r2, r7, #1
 8016880:	f100 80f9 	bmi.w	8016a76 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x236>
 8016884:	4596      	cmp	lr, r2
 8016886:	f340 80f6 	ble.w	8016a76 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x236>
 801688a:	2c00      	cmp	r4, #0
 801688c:	f000 80f5 	beq.w	8016a7a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23a>
 8016890:	f898 2001 	ldrb.w	r2, [r8, #1]
 8016894:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8016898:	3501      	adds	r5, #1
 801689a:	f100 80f2 	bmi.w	8016a82 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x242>
 801689e:	45a9      	cmp	r9, r5
 80168a0:	f340 80ef 	ble.w	8016a82 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x242>
 80168a4:	f1bc 0f00 	cmp.w	ip, #0
 80168a8:	f000 80ee 	beq.w	8016a88 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x248>
 80168ac:	2f00      	cmp	r7, #0
 80168ae:	f2c0 80e6 	blt.w	8016a7e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 80168b2:	45be      	cmp	lr, r7
 80168b4:	f340 80e3 	ble.w	8016a7e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 80168b8:	f818 200e 	ldrb.w	r2, [r8, lr]
 80168bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80168c0:	3701      	adds	r7, #1
 80168c2:	f100 80e4 	bmi.w	8016a8e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24e>
 80168c6:	45be      	cmp	lr, r7
 80168c8:	f340 80e1 	ble.w	8016a8e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24e>
 80168cc:	2c00      	cmp	r4, #0
 80168ce:	f000 80e0 	beq.w	8016a92 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 80168d2:	44c6      	add	lr, r8
 80168d4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80168d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80168dc:	b2a3      	uxth	r3, r4
 80168de:	fa1f fc8c 	uxth.w	ip, ip
 80168e2:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80168e6:	fb0c fe03 	mul.w	lr, ip, r3
 80168ea:	011b      	lsls	r3, r3, #4
 80168ec:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80168f0:	ebce 1c0c 	rsb	ip, lr, ip, lsl #4
 80168f4:	eba3 070e 	sub.w	r7, r3, lr
 80168f8:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 80168fc:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8016900:	fa1f f48c 	uxth.w	r4, ip
 8016904:	b2bf      	uxth	r7, r7
 8016906:	1b1b      	subs	r3, r3, r4
 8016908:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801690c:	fb07 fc0a 	mul.w	ip, r7, sl
 8016910:	b29b      	uxth	r3, r3
 8016912:	fb03 cc0b 	mla	ip, r3, fp, ip
 8016916:	9300      	str	r3, [sp, #0]
 8016918:	fb04 cc09 	mla	ip, r4, r9, ip
 801691c:	fb0e cc08 	mla	ip, lr, r8, ip
 8016920:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8016924:	9301      	str	r3, [sp, #4]
 8016926:	2b00      	cmp	r3, #0
 8016928:	f000 809d 	beq.w	8016a66 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x226>
 801692c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016930:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016934:	fb0b fc0c 	mul.w	ip, fp, ip
 8016938:	fb0b f606 	mul.w	r6, fp, r6
 801693c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8016940:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016944:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8016948:	44dc      	add	ip, fp
 801694a:	f000 1bff 	and.w	fp, r0, #16711935	; 0xff00ff
 801694e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016952:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016956:	fb0a fb0b 	mul.w	fp, sl, fp
 801695a:	fb0a fa00 	mul.w	sl, sl, r0
 801695e:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 8016962:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8016966:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801696a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801696e:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8016972:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016976:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801697a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801697e:	0a36      	lsrs	r6, r6, #8
 8016980:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016984:	44dc      	add	ip, fp
 8016986:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801698a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801698e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016992:	fb09 fb0b 	mul.w	fp, r9, fp
 8016996:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801699a:	fb09 f905 	mul.w	r9, r9, r5
 801699e:	ea4f 201b 	mov.w	r0, fp, lsr #8
 80169a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80169a6:	f509 7580 	add.w	r5, r9, #256	; 0x100
 80169aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80169ae:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80169b2:	fb0c fc07 	mul.w	ip, ip, r7
 80169b6:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 80169ba:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 80169be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80169c2:	4458      	add	r0, fp
 80169c4:	fb08 f505 	mul.w	r5, r8, r5
 80169c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80169cc:	fb08 f802 	mul.w	r8, r8, r2
 80169d0:	0a00      	lsrs	r0, r0, #8
 80169d2:	0a2a      	lsrs	r2, r5, #8
 80169d4:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80169d8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80169dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80169e0:	4415      	add	r5, r2
 80169e2:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80169e6:	0a2d      	lsrs	r5, r5, #8
 80169e8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80169ec:	9a00      	ldr	r2, [sp, #0]
 80169ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80169f2:	fb03 cc02 	mla	ip, r3, r2, ip
 80169f6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80169fa:	9b01      	ldr	r3, [sp, #4]
 80169fc:	fb05 c50e 	mla	r5, r5, lr, ip
 8016a00:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016a04:	43db      	mvns	r3, r3
 8016a06:	fb00 5004 	mla	r0, r0, r4, r5
 8016a0a:	b2db      	uxtb	r3, r3
 8016a0c:	0a00      	lsrs	r0, r0, #8
 8016a0e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8016a12:	f40a 407f 	and.w	r0, sl, #65280	; 0xff00
 8016a16:	4378      	muls	r0, r7
 8016a18:	fb02 0006 	mla	r0, r2, r6, r0
 8016a1c:	780a      	ldrb	r2, [r1, #0]
 8016a1e:	fb0e 0e08 	mla	lr, lr, r8, r0
 8016a22:	f409 407f 	and.w	r0, r9, #65280	; 0xff00
 8016a26:	fb04 e000 	mla	r0, r4, r0, lr
 8016a2a:	fb02 f403 	mul.w	r4, r2, r3
 8016a2e:	0a00      	lsrs	r0, r0, #8
 8016a30:	1c62      	adds	r2, r4, #1
 8016a32:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016a36:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016a3a:	4328      	orrs	r0, r5
 8016a3c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016a40:	700a      	strb	r2, [r1, #0]
 8016a42:	784a      	ldrb	r2, [r1, #1]
 8016a44:	435a      	muls	r2, r3
 8016a46:	1c54      	adds	r4, r2, #1
 8016a48:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016a4c:	0a02      	lsrs	r2, r0, #8
 8016a4e:	0c00      	lsrs	r0, r0, #16
 8016a50:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016a54:	704a      	strb	r2, [r1, #1]
 8016a56:	788a      	ldrb	r2, [r1, #2]
 8016a58:	4353      	muls	r3, r2
 8016a5a:	1c5a      	adds	r2, r3, #1
 8016a5c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016a60:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016a64:	7088      	strb	r0, [r1, #2]
 8016a66:	b003      	add	sp, #12
 8016a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a6c:	2600      	movs	r6, #0
 8016a6e:	e706      	b.n	801687e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3e>
 8016a70:	2000      	movs	r0, #0
 8016a72:	4606      	mov	r6, r0
 8016a74:	e710      	b.n	8016898 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8016a76:	2000      	movs	r0, #0
 8016a78:	e70e      	b.n	8016898 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8016a7a:	4620      	mov	r0, r4
 8016a7c:	e70c      	b.n	8016898 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x58>
 8016a7e:	2500      	movs	r5, #0
 8016a80:	e71e      	b.n	80168c0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x80>
 8016a82:	2200      	movs	r2, #0
 8016a84:	4615      	mov	r5, r2
 8016a86:	e729      	b.n	80168dc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8016a88:	4662      	mov	r2, ip
 8016a8a:	4665      	mov	r5, ip
 8016a8c:	e726      	b.n	80168dc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8016a8e:	2200      	movs	r2, #0
 8016a90:	e724      	b.n	80168dc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8016a92:	4622      	mov	r2, r4
 8016a94:	e722      	b.n	80168dc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>

08016a96 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a9a:	b09b      	sub	sp, #108	; 0x6c
 8016a9c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016aa0:	9218      	str	r2, [sp, #96]	; 0x60
 8016aa2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016aa4:	9019      	str	r0, [sp, #100]	; 0x64
 8016aa6:	9116      	str	r1, [sp, #88]	; 0x58
 8016aa8:	6850      	ldr	r0, [r2, #4]
 8016aaa:	9307      	str	r3, [sp, #28]
 8016aac:	6812      	ldr	r2, [r2, #0]
 8016aae:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8016ab0:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8016ab4:	fb00 1303 	mla	r3, r0, r3, r1
 8016ab8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016abc:	18d3      	adds	r3, r2, r3
 8016abe:	930a      	str	r3, [sp, #40]	; 0x28
 8016ac0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ac2:	681b      	ldr	r3, [r3, #0]
 8016ac4:	930f      	str	r3, [sp, #60]	; 0x3c
 8016ac6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ac8:	685e      	ldr	r6, [r3, #4]
 8016aca:	3604      	adds	r6, #4
 8016acc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016ace:	2b00      	cmp	r3, #0
 8016ad0:	dc03      	bgt.n	8016ada <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016ad2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016ad4:	2b00      	cmp	r3, #0
 8016ad6:	f340 834f 	ble.w	8017178 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e2>
 8016ada:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016adc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016ae0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016ae4:	1e48      	subs	r0, r1, #1
 8016ae6:	1e57      	subs	r7, r2, #1
 8016ae8:	9b07      	ldr	r3, [sp, #28]
 8016aea:	2b00      	cmp	r3, #0
 8016aec:	f340 8178 	ble.w	8016de0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8016af0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8016af2:	142b      	asrs	r3, r5, #16
 8016af4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016af8:	d406      	bmi.n	8016b08 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016afa:	4584      	cmp	ip, r0
 8016afc:	da04      	bge.n	8016b08 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016afe:	2b00      	cmp	r3, #0
 8016b00:	db02      	blt.n	8016b08 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016b02:	42bb      	cmp	r3, r7
 8016b04:	f2c0 816d 	blt.w	8016de2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8016b08:	f11c 0c01 	adds.w	ip, ip, #1
 8016b0c:	f100 815b 	bmi.w	8016dc6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8016b10:	4561      	cmp	r1, ip
 8016b12:	f2c0 8158 	blt.w	8016dc6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8016b16:	3301      	adds	r3, #1
 8016b18:	f100 8155 	bmi.w	8016dc6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8016b1c:	429a      	cmp	r2, r3
 8016b1e:	f2c0 8152 	blt.w	8016dc6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8016b22:	9b07      	ldr	r3, [sp, #28]
 8016b24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016b26:	9317      	str	r3, [sp, #92]	; 0x5c
 8016b28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016b2a:	2b00      	cmp	r3, #0
 8016b2c:	f340 8178 	ble.w	8016e20 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016b30:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016b32:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016b36:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016b3a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016b3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016b40:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016b44:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016b46:	141b      	asrs	r3, r3, #16
 8016b48:	f100 81ba 	bmi.w	8016ec0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8016b4c:	f101 38ff 	add.w	r8, r1, #4294967295
 8016b50:	4543      	cmp	r3, r8
 8016b52:	f280 81b5 	bge.w	8016ec0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8016b56:	f1bc 0f00 	cmp.w	ip, #0
 8016b5a:	f2c0 81b1 	blt.w	8016ec0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8016b5e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016b62:	45c4      	cmp	ip, r8
 8016b64:	f280 81ac 	bge.w	8016ec0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8016b68:	b209      	sxth	r1, r1
 8016b6a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016b6c:	fb0c 3301 	mla	r3, ip, r1, r3
 8016b70:	eb04 0803 	add.w	r8, r4, r3
 8016b74:	5ce3      	ldrb	r3, [r4, r3]
 8016b76:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016b7a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016b7e:	2a00      	cmp	r2, #0
 8016b80:	f000 8193 	beq.w	8016eaa <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 8016b84:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016b88:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016b8c:	940b      	str	r4, [sp, #44]	; 0x2c
 8016b8e:	0e24      	lsrs	r4, r4, #24
 8016b90:	9412      	str	r4, [sp, #72]	; 0x48
 8016b92:	b178      	cbz	r0, 8016bb4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016b94:	eb08 0c01 	add.w	ip, r8, r1
 8016b98:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016b9c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ba0:	9108      	str	r1, [sp, #32]
 8016ba2:	0e09      	lsrs	r1, r1, #24
 8016ba4:	9110      	str	r1, [sp, #64]	; 0x40
 8016ba6:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016baa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016bae:	910c      	str	r1, [sp, #48]	; 0x30
 8016bb0:	0e09      	lsrs	r1, r1, #24
 8016bb2:	9113      	str	r1, [sp, #76]	; 0x4c
 8016bb4:	b292      	uxth	r2, r2
 8016bb6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016bb8:	b280      	uxth	r0, r0
 8016bba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016bbc:	fb02 f900 	mul.w	r9, r2, r0
 8016bc0:	0112      	lsls	r2, r2, #4
 8016bc2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016bc6:	eba2 0809 	sub.w	r8, r2, r9
 8016bca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016bce:	b280      	uxth	r0, r0
 8016bd0:	fa1f f888 	uxth.w	r8, r8
 8016bd4:	1a12      	subs	r2, r2, r0
 8016bd6:	fb08 f101 	mul.w	r1, r8, r1
 8016bda:	b292      	uxth	r2, r2
 8016bdc:	fb02 110e 	mla	r1, r2, lr, r1
 8016be0:	fb00 1104 	mla	r1, r0, r4, r1
 8016be4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016be6:	fb09 1104 	mla	r1, r9, r4, r1
 8016bea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016bee:	2900      	cmp	r1, #0
 8016bf0:	f000 80de 	beq.w	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016bf4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016bf8:	d01b      	beq.n	8016c32 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 8016bfa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016bfe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c02:	fb0e fa0a 	mul.w	sl, lr, sl
 8016c06:	fb0e fe03 	mul.w	lr, lr, r3
 8016c0a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016c0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016c12:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016c16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c1a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016c1e:	4453      	add	r3, sl
 8016c20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c24:	0a1b      	lsrs	r3, r3, #8
 8016c26:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016c2a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c2e:	ea43 030c 	orr.w	r3, r3, ip
 8016c32:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016c34:	2cff      	cmp	r4, #255	; 0xff
 8016c36:	d021      	beq.n	8016c7c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016c38:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016c3a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016c3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016c40:	fb04 fb0b 	mul.w	fp, r4, fp
 8016c44:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016c46:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016c4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016c4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016c50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016c54:	fb04 fa0a 	mul.w	sl, r4, sl
 8016c58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016c60:	44de      	add	lr, fp
 8016c62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016c66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016c6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016c6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016c76:	ea4e 040a 	orr.w	r4, lr, sl
 8016c7a:	940b      	str	r4, [sp, #44]	; 0x2c
 8016c7c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016c7e:	2cff      	cmp	r4, #255	; 0xff
 8016c80:	d021      	beq.n	8016cc6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016c82:	9c08      	ldr	r4, [sp, #32]
 8016c84:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016c88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016c8a:	fb04 fb0b 	mul.w	fp, r4, fp
 8016c8e:	9c08      	ldr	r4, [sp, #32]
 8016c90:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016c94:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016c96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016c9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016c9e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ca2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ca6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016caa:	44de      	add	lr, fp
 8016cac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016cb0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016cb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016cb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016cbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016cc0:	ea4e 040a 	orr.w	r4, lr, sl
 8016cc4:	9408      	str	r4, [sp, #32]
 8016cc6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016cc8:	2cff      	cmp	r4, #255	; 0xff
 8016cca:	d021      	beq.n	8016d10 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016ccc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016cce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016cd2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016cd4:	fb04 fb0b 	mul.w	fp, r4, fp
 8016cd8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016cda:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016cde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ce0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016ce4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016ce8:	fb04 fa0a 	mul.w	sl, r4, sl
 8016cec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016cf0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016cf4:	44de      	add	lr, fp
 8016cf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016cfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016cfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016d02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016d06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016d0a:	ea4e 040a 	orr.w	r4, lr, sl
 8016d0e:	940c      	str	r4, [sp, #48]	; 0x30
 8016d10:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016d12:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016d16:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016d1a:	43c9      	mvns	r1, r1
 8016d1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016d20:	9c08      	ldr	r4, [sp, #32]
 8016d22:	b2c9      	uxtb	r1, r1
 8016d24:	fb08 fc0c 	mul.w	ip, r8, ip
 8016d28:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016d2c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016d30:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016d32:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016d36:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016d3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016d3c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016d40:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016d44:	fb08 f80e 	mul.w	r8, r8, lr
 8016d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d4c:	fb02 8303 	mla	r3, r2, r3, r8
 8016d50:	9a08      	ldr	r2, [sp, #32]
 8016d52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d56:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016d5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016d5c:	fb00 330a 	mla	r3, r0, sl, r3
 8016d60:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016d64:	fb09 3900 	mla	r9, r9, r0, r3
 8016d68:	783b      	ldrb	r3, [r7, #0]
 8016d6a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016d6e:	fb03 f201 	mul.w	r2, r3, r1
 8016d72:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016d76:	1c53      	adds	r3, r2, #1
 8016d78:	ea4c 0c09 	orr.w	ip, ip, r9
 8016d7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016d80:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016d84:	703b      	strb	r3, [r7, #0]
 8016d86:	787b      	ldrb	r3, [r7, #1]
 8016d88:	434b      	muls	r3, r1
 8016d8a:	1c5a      	adds	r2, r3, #1
 8016d8c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016d90:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016d94:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8016d98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016d9c:	707b      	strb	r3, [r7, #1]
 8016d9e:	78bb      	ldrb	r3, [r7, #2]
 8016da0:	4359      	muls	r1, r3
 8016da2:	1c4b      	adds	r3, r1, #1
 8016da4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016da8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016dac:	f887 c002 	strb.w	ip, [r7, #2]
 8016db0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016db2:	3703      	adds	r7, #3
 8016db4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016db6:	441a      	add	r2, r3
 8016db8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016dba:	441d      	add	r5, r3
 8016dbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016dbe:	9225      	str	r2, [sp, #148]	; 0x94
 8016dc0:	3b01      	subs	r3, #1
 8016dc2:	9317      	str	r3, [sp, #92]	; 0x5c
 8016dc4:	e6b0      	b.n	8016b28 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016dc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016dc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8016dca:	441c      	add	r4, r3
 8016dcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016dce:	441d      	add	r5, r3
 8016dd0:	9b07      	ldr	r3, [sp, #28]
 8016dd2:	9425      	str	r4, [sp, #148]	; 0x94
 8016dd4:	3b01      	subs	r3, #1
 8016dd6:	9307      	str	r3, [sp, #28]
 8016dd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016dda:	3303      	adds	r3, #3
 8016ddc:	930a      	str	r3, [sp, #40]	; 0x28
 8016dde:	e683      	b.n	8016ae8 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016de0:	d026      	beq.n	8016e30 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016de2:	9b07      	ldr	r3, [sp, #28]
 8016de4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8016de6:	3b01      	subs	r3, #1
 8016de8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8016dea:	fb00 4003 	mla	r0, r0, r3, r4
 8016dee:	1400      	asrs	r0, r0, #16
 8016df0:	f53f ae97 	bmi.w	8016b22 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016df4:	3901      	subs	r1, #1
 8016df6:	4288      	cmp	r0, r1
 8016df8:	f6bf ae93 	bge.w	8016b22 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016dfc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8016dfe:	fb01 5303 	mla	r3, r1, r3, r5
 8016e02:	141b      	asrs	r3, r3, #16
 8016e04:	f53f ae8d 	bmi.w	8016b22 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e08:	3a01      	subs	r2, #1
 8016e0a:	4293      	cmp	r3, r2
 8016e0c:	f6bf ae89 	bge.w	8016b22 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e12:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016e16:	f103 0e03 	add.w	lr, r3, #3
 8016e1a:	f1bb 0f00 	cmp.w	fp, #0
 8016e1e:	dc6d      	bgt.n	8016efc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x466>
 8016e20:	9b07      	ldr	r3, [sp, #28]
 8016e22:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016e26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e28:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016e2c:	4423      	add	r3, r4
 8016e2e:	930a      	str	r3, [sp, #40]	; 0x28
 8016e30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016e32:	2b00      	cmp	r3, #0
 8016e34:	f340 81a0 	ble.w	8017178 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e2>
 8016e38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016e3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016e3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016e42:	eeb0 6a62 	vmov.f32	s12, s5
 8016e46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016e4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016e4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e52:	ed8d 6a25 	vstr	s12, [sp, #148]	; 0x94
 8016e56:	eeb0 6a43 	vmov.f32	s12, s6
 8016e5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e5e:	ee16 5a10 	vmov	r5, s12
 8016e62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016e66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016e6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016e6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016e7a:	ee12 2a90 	vmov	r2, s5
 8016e7e:	eef0 2a47 	vmov.f32	s5, s14
 8016e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e86:	ee13 2a10 	vmov	r2, s6
 8016e8a:	9327      	str	r3, [sp, #156]	; 0x9c
 8016e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016e8e:	eeb0 3a67 	vmov.f32	s6, s15
 8016e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e96:	9328      	str	r3, [sp, #160]	; 0xa0
 8016e98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016e9a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016e9c:	3b01      	subs	r3, #1
 8016e9e:	9316      	str	r3, [sp, #88]	; 0x58
 8016ea0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016ea2:	bf08      	it	eq
 8016ea4:	4613      	moveq	r3, r2
 8016ea6:	9307      	str	r3, [sp, #28]
 8016ea8:	e610      	b.n	8016acc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016eaa:	2800      	cmp	r0, #0
 8016eac:	f43f ae82 	beq.w	8016bb4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016eb0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016eb4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016eb8:	9108      	str	r1, [sp, #32]
 8016eba:	0e09      	lsrs	r1, r1, #24
 8016ebc:	9110      	str	r1, [sp, #64]	; 0x40
 8016ebe:	e679      	b.n	8016bb4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016ec0:	f113 0801 	adds.w	r8, r3, #1
 8016ec4:	f53f af74 	bmi.w	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016ec8:	4541      	cmp	r1, r8
 8016eca:	f6ff af71 	blt.w	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016ece:	f11c 0801 	adds.w	r8, ip, #1
 8016ed2:	f53f af6d 	bmi.w	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016ed6:	45c6      	cmp	lr, r8
 8016ed8:	f6ff af6a 	blt.w	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016edc:	b209      	sxth	r1, r1
 8016ede:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016ee2:	fa0f f38e 	sxth.w	r3, lr
 8016ee6:	9100      	str	r1, [sp, #0]
 8016ee8:	4639      	mov	r1, r7
 8016eea:	9301      	str	r3, [sp, #4]
 8016eec:	4633      	mov	r3, r6
 8016eee:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8016ef2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016ef4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016ef6:	f7ff fca3 	bl	8016840 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 8016efa:	e759      	b.n	8016db0 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8016efc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016efe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016f02:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8016f04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016f08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016f0a:	1427      	asrs	r7, r4, #16
 8016f0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016f0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016f12:	142b      	asrs	r3, r5, #16
 8016f14:	fb01 7303 	mla	r3, r1, r3, r7
 8016f18:	18e7      	adds	r7, r4, r3
 8016f1a:	5ce3      	ldrb	r3, [r4, r3]
 8016f1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016f20:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016f24:	2a00      	cmp	r2, #0
 8016f26:	f000 811d 	beq.w	8017164 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 8016f2a:	f897 8001 	ldrb.w	r8, [r7, #1]
 8016f2e:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 8016f32:	940d      	str	r4, [sp, #52]	; 0x34
 8016f34:	0e24      	lsrs	r4, r4, #24
 8016f36:	9414      	str	r4, [sp, #80]	; 0x50
 8016f38:	b170      	cbz	r0, 8016f58 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 8016f3a:	eb07 0801 	add.w	r8, r7, r1
 8016f3e:	5c79      	ldrb	r1, [r7, r1]
 8016f40:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016f44:	9109      	str	r1, [sp, #36]	; 0x24
 8016f46:	0e09      	lsrs	r1, r1, #24
 8016f48:	9111      	str	r1, [sp, #68]	; 0x44
 8016f4a:	f898 1001 	ldrb.w	r1, [r8, #1]
 8016f4e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016f52:	910e      	str	r1, [sp, #56]	; 0x38
 8016f54:	0e09      	lsrs	r1, r1, #24
 8016f56:	9115      	str	r1, [sp, #84]	; 0x54
 8016f58:	b292      	uxth	r2, r2
 8016f5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016f5c:	b280      	uxth	r0, r0
 8016f5e:	fb02 f900 	mul.w	r9, r2, r0
 8016f62:	0112      	lsls	r2, r2, #4
 8016f64:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016f68:	eba2 0809 	sub.w	r8, r2, r9
 8016f6c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016f70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016f72:	b280      	uxth	r0, r0
 8016f74:	fa1f f888 	uxth.w	r8, r8
 8016f78:	1a09      	subs	r1, r1, r0
 8016f7a:	fb08 f202 	mul.w	r2, r8, r2
 8016f7e:	b289      	uxth	r1, r1
 8016f80:	fb01 220c 	mla	r2, r1, ip, r2
 8016f84:	fb00 2204 	mla	r2, r0, r4, r2
 8016f88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016f8a:	fb09 2204 	mla	r2, r9, r4, r2
 8016f8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016f92:	2a00      	cmp	r2, #0
 8016f94:	f000 80db 	beq.w	801714e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8016f98:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016f9c:	d019      	beq.n	8016fd2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 8016f9e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016fa2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016fa6:	fb0c fa0a 	mul.w	sl, ip, sl
 8016faa:	fb0c fc03 	mul.w	ip, ip, r3
 8016fae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016fb2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016fb6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016fba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016fbe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016fc2:	4453      	add	r3, sl
 8016fc4:	0a3f      	lsrs	r7, r7, #8
 8016fc6:	0a1b      	lsrs	r3, r3, #8
 8016fc8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016fcc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016fd0:	433b      	orrs	r3, r7
 8016fd2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016fd4:	2cff      	cmp	r4, #255	; 0xff
 8016fd6:	d020      	beq.n	801701a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 8016fd8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016fda:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016fde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016fe0:	4367      	muls	r7, r4
 8016fe2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016fe4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016fe8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016fec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016fee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ff2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ff6:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ffa:	44bc      	add	ip, r7
 8016ffc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017000:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017004:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017008:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801700c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017014:	ea4c 040a 	orr.w	r4, ip, sl
 8017018:	940d      	str	r4, [sp, #52]	; 0x34
 801701a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801701c:	2cff      	cmp	r4, #255	; 0xff
 801701e:	d020      	beq.n	8017062 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 8017020:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017022:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017026:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017028:	4367      	muls	r7, r4
 801702a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801702c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017030:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017034:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017036:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801703a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801703e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017042:	44bc      	add	ip, r7
 8017044:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017048:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801704c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017050:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017054:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017058:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801705c:	ea4c 040a 	orr.w	r4, ip, sl
 8017060:	9409      	str	r4, [sp, #36]	; 0x24
 8017062:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017064:	2cff      	cmp	r4, #255	; 0xff
 8017066:	d020      	beq.n	80170aa <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 8017068:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801706a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801706e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017070:	4367      	muls	r7, r4
 8017072:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017074:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017078:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801707c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801707e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017082:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017086:	fb04 fa0a 	mul.w	sl, r4, sl
 801708a:	44bc      	add	ip, r7
 801708c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017090:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017094:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017098:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801709c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80170a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80170a4:	ea4c 040a 	orr.w	r4, ip, sl
 80170a8:	940e      	str	r4, [sp, #56]	; 0x38
 80170aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80170ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80170b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80170b4:	43d2      	mvns	r2, r2
 80170b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80170ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80170bc:	b2d2      	uxtb	r2, r2
 80170be:	fb08 f707 	mul.w	r7, r8, r7
 80170c2:	fb01 770c 	mla	r7, r1, ip, r7
 80170c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80170ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80170cc:	fb00 770c 	mla	r7, r0, ip, r7
 80170d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80170d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80170d6:	fb09 770c 	mla	r7, r9, ip, r7
 80170da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80170de:	fb08 f80c 	mul.w	r8, r8, ip
 80170e2:	0a3f      	lsrs	r7, r7, #8
 80170e4:	fb01 8303 	mla	r3, r1, r3, r8
 80170e8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80170ea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80170ee:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80170f2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80170f4:	fb00 330a 	mla	r3, r0, sl, r3
 80170f8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80170fc:	fb09 3c0c 	mla	ip, r9, ip, r3
 8017100:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 8017104:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017108:	fb03 f102 	mul.w	r1, r3, r2
 801710c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017110:	1c4b      	adds	r3, r1, #1
 8017112:	ea47 070c 	orr.w	r7, r7, ip
 8017116:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801711a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801711e:	f80e 3c03 	strb.w	r3, [lr, #-3]
 8017122:	f81e 3c02 	ldrb.w	r3, [lr, #-2]
 8017126:	4353      	muls	r3, r2
 8017128:	1c59      	adds	r1, r3, #1
 801712a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801712e:	0a3b      	lsrs	r3, r7, #8
 8017130:	0c3f      	lsrs	r7, r7, #16
 8017132:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017136:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801713a:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801713e:	435a      	muls	r2, r3
 8017140:	1c53      	adds	r3, r2, #1
 8017142:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8017146:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801714a:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801714e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017150:	f10e 0e03 	add.w	lr, lr, #3
 8017154:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017156:	f10b 3bff 	add.w	fp, fp, #4294967295
 801715a:	441a      	add	r2, r3
 801715c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801715e:	9225      	str	r2, [sp, #148]	; 0x94
 8017160:	441d      	add	r5, r3
 8017162:	e65a      	b.n	8016e1a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 8017164:	2800      	cmp	r0, #0
 8017166:	f43f aef7 	beq.w	8016f58 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801716a:	5c79      	ldrb	r1, [r7, r1]
 801716c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017170:	9109      	str	r1, [sp, #36]	; 0x24
 8017172:	0e09      	lsrs	r1, r1, #24
 8017174:	9111      	str	r1, [sp, #68]	; 0x44
 8017176:	e6ef      	b.n	8016f58 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 8017178:	b01b      	add	sp, #108	; 0x6c
 801717a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801717e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>:
 801717e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017182:	b08d      	sub	sp, #52	; 0x34
 8017184:	468b      	mov	fp, r1
 8017186:	e9dd 5c17 	ldrd	r5, ip, [sp, #92]	; 0x5c
 801718a:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 801718e:	fb0c 5703 	mla	r7, ip, r3, r5
 8017192:	f1bc 0f00 	cmp.w	ip, #0
 8017196:	910b      	str	r1, [sp, #44]	; 0x2c
 8017198:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801719c:	f9bd e058 	ldrsh.w	lr, [sp, #88]	; 0x58
 80171a0:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 80171a4:	f89d a068 	ldrb.w	sl, [sp, #104]	; 0x68
 80171a8:	eb02 0607 	add.w	r6, r2, r7
 80171ac:	f89b 4000 	ldrb.w	r4, [fp]
 80171b0:	f89b 0001 	ldrb.w	r0, [fp, #1]
 80171b4:	f89b 1002 	ldrb.w	r1, [fp, #2]
 80171b8:	f2c0 80c1 	blt.w	801733e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1c0>
 80171bc:	45e6      	cmp	lr, ip
 80171be:	f340 80be 	ble.w	801733e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1c0>
 80171c2:	2d00      	cmp	r5, #0
 80171c4:	f2c0 80b7 	blt.w	8017336 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1b8>
 80171c8:	42ab      	cmp	r3, r5
 80171ca:	f340 80b4 	ble.w	8017336 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1b8>
 80171ce:	5dd2      	ldrb	r2, [r2, r7]
 80171d0:	9205      	str	r2, [sp, #20]
 80171d2:	7872      	ldrb	r2, [r6, #1]
 80171d4:	9206      	str	r2, [sp, #24]
 80171d6:	78b2      	ldrb	r2, [r6, #2]
 80171d8:	9207      	str	r2, [sp, #28]
 80171da:	1c6a      	adds	r2, r5, #1
 80171dc:	f100 80b6 	bmi.w	801734c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 80171e0:	4293      	cmp	r3, r2
 80171e2:	f340 80b3 	ble.w	801734c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 80171e6:	f1b8 0f00 	cmp.w	r8, #0
 80171ea:	f000 80af 	beq.w	801734c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ce>
 80171ee:	78f2      	ldrb	r2, [r6, #3]
 80171f0:	9201      	str	r2, [sp, #4]
 80171f2:	7932      	ldrb	r2, [r6, #4]
 80171f4:	9202      	str	r2, [sp, #8]
 80171f6:	7972      	ldrb	r2, [r6, #5]
 80171f8:	9203      	str	r2, [sp, #12]
 80171fa:	f11c 0c01 	adds.w	ip, ip, #1
 80171fe:	f100 80ad 	bmi.w	801735c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 8017202:	45e6      	cmp	lr, ip
 8017204:	f340 80aa 	ble.w	801735c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 8017208:	f1ba 0f00 	cmp.w	sl, #0
 801720c:	f000 80a6 	beq.w	801735c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1de>
 8017210:	2d00      	cmp	r5, #0
 8017212:	f2c0 809f 	blt.w	8017354 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1d6>
 8017216:	42ab      	cmp	r3, r5
 8017218:	f340 809c 	ble.w	8017354 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1d6>
 801721c:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8017220:	f816 9002 	ldrb.w	r9, [r6, r2]
 8017224:	2203      	movs	r2, #3
 8017226:	fb03 6c02 	mla	ip, r3, r2, r6
 801722a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801722e:	f89c e002 	ldrb.w	lr, [ip, #2]
 8017232:	9704      	str	r7, [sp, #16]
 8017234:	3501      	adds	r5, #1
 8017236:	f100 8098 	bmi.w	801736a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 801723a:	42ab      	cmp	r3, r5
 801723c:	f340 8095 	ble.w	801736a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 8017240:	f1b8 0f00 	cmp.w	r8, #0
 8017244:	f000 8091 	beq.w	801736a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x1ec>
 8017248:	f04f 0c03 	mov.w	ip, #3
 801724c:	fb13 c20c 	smlabb	r2, r3, ip, ip
 8017250:	5cb5      	ldrb	r5, [r6, r2]
 8017252:	fb03 620c 	mla	r2, r3, ip, r6
 8017256:	fb03 630c 	mla	r3, r3, ip, r6
 801725a:	7912      	ldrb	r2, [r2, #4]
 801725c:	795e      	ldrb	r6, [r3, #5]
 801725e:	fa1f f388 	uxth.w	r3, r8
 8017262:	fa1f fc8a 	uxth.w	ip, sl
 8017266:	fb03 f70c 	mul.w	r7, r3, ip
 801726a:	011b      	lsls	r3, r3, #4
 801726c:	9708      	str	r7, [sp, #32]
 801726e:	ebc7 1c0c 	rsb	ip, r7, ip, lsl #4
 8017272:	f5c3 7a80 	rsb	sl, r3, #256	; 0x100
 8017276:	1bdb      	subs	r3, r3, r7
 8017278:	f8bd 702c 	ldrh.w	r7, [sp, #44]	; 0x2c
 801727c:	fa1f fc8c 	uxth.w	ip, ip
 8017280:	b29b      	uxth	r3, r3
 8017282:	9709      	str	r7, [sp, #36]	; 0x24
 8017284:	ebaa 0a0c 	sub.w	sl, sl, ip
 8017288:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801728a:	930a      	str	r3, [sp, #40]	; 0x28
 801728c:	fa1f fa8a 	uxth.w	sl, sl
 8017290:	ea6f 0807 	mvn.w	r8, r7
 8017294:	9f01      	ldr	r7, [sp, #4]
 8017296:	435f      	muls	r7, r3
 8017298:	9b05      	ldr	r3, [sp, #20]
 801729a:	fa5f f888 	uxtb.w	r8, r8
 801729e:	fb0a 7703 	mla	r7, sl, r3, r7
 80172a2:	9b08      	ldr	r3, [sp, #32]
 80172a4:	fb14 f408 	smulbb	r4, r4, r8
 80172a8:	fb0c 7709 	mla	r7, ip, r9, r7
 80172ac:	fb10 f008 	smulbb	r0, r0, r8
 80172b0:	fb11 f108 	smulbb	r1, r1, r8
 80172b4:	fb03 7705 	mla	r7, r3, r5, r7
 80172b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80172be:	fb07 4703 	mla	r7, r7, r3, r4
 80172c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172c4:	b2bf      	uxth	r7, r7
 80172c6:	1c7c      	adds	r4, r7, #1
 80172c8:	eb04 2417 	add.w	r4, r4, r7, lsr #8
 80172cc:	1224      	asrs	r4, r4, #8
 80172ce:	f88b 4000 	strb.w	r4, [fp]
 80172d2:	9c02      	ldr	r4, [sp, #8]
 80172d4:	435c      	muls	r4, r3
 80172d6:	9b06      	ldr	r3, [sp, #24]
 80172d8:	fb0a 4403 	mla	r4, sl, r3, r4
 80172dc:	9b04      	ldr	r3, [sp, #16]
 80172de:	fb0c 4403 	mla	r4, ip, r3, r4
 80172e2:	9b08      	ldr	r3, [sp, #32]
 80172e4:	fb03 4402 	mla	r4, r3, r2, r4
 80172e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80172ec:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80172f0:	fb04 0403 	mla	r4, r4, r3, r0
 80172f4:	9b03      	ldr	r3, [sp, #12]
 80172f6:	435a      	muls	r2, r3
 80172f8:	b2a4      	uxth	r4, r4
 80172fa:	4613      	mov	r3, r2
 80172fc:	9a07      	ldr	r2, [sp, #28]
 80172fe:	1c60      	adds	r0, r4, #1
 8017300:	fb0a 3a02 	mla	sl, sl, r2, r3
 8017304:	9b08      	ldr	r3, [sp, #32]
 8017306:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801730a:	fb0c ac0e 	mla	ip, ip, lr, sl
 801730e:	1224      	asrs	r4, r4, #8
 8017310:	fb03 c606 	mla	r6, r3, r6, ip
 8017314:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017316:	f88b 4001 	strb.w	r4, [fp, #1]
 801731a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801731e:	fb06 1103 	mla	r1, r6, r3, r1
 8017322:	b289      	uxth	r1, r1
 8017324:	1c4e      	adds	r6, r1, #1
 8017326:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 801732a:	1209      	asrs	r1, r1, #8
 801732c:	f88b 1002 	strb.w	r1, [fp, #2]
 8017330:	b00d      	add	sp, #52	; 0x34
 8017332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017336:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801733a:	9405      	str	r4, [sp, #20]
 801733c:	e74d      	b.n	80171da <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x5c>
 801733e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8017342:	9401      	str	r4, [sp, #4]
 8017344:	9405      	str	r4, [sp, #20]
 8017346:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801734a:	e756      	b.n	80171fa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x7c>
 801734c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8017350:	9401      	str	r4, [sp, #4]
 8017352:	e752      	b.n	80171fa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x7c>
 8017354:	468e      	mov	lr, r1
 8017356:	9004      	str	r0, [sp, #16]
 8017358:	46a1      	mov	r9, r4
 801735a:	e76b      	b.n	8017234 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xb6>
 801735c:	460e      	mov	r6, r1
 801735e:	4602      	mov	r2, r0
 8017360:	4625      	mov	r5, r4
 8017362:	468e      	mov	lr, r1
 8017364:	9004      	str	r0, [sp, #16]
 8017366:	46a1      	mov	r9, r4
 8017368:	e779      	b.n	801725e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xe0>
 801736a:	460e      	mov	r6, r1
 801736c:	4602      	mov	r2, r0
 801736e:	4625      	mov	r5, r4
 8017370:	e775      	b.n	801725e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xe0>

08017372 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017376:	b09f      	sub	sp, #124	; 0x7c
 8017378:	920e      	str	r2, [sp, #56]	; 0x38
 801737a:	9307      	str	r3, [sp, #28]
 801737c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801737e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017382:	901d      	str	r0, [sp, #116]	; 0x74
 8017384:	930c      	str	r3, [sp, #48]	; 0x30
 8017386:	6850      	ldr	r0, [r2, #4]
 8017388:	910b      	str	r1, [sp, #44]	; 0x2c
 801738a:	6812      	ldr	r2, [r2, #0]
 801738c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017390:	e9dd a829 	ldrd	sl, r8, [sp, #164]	; 0xa4
 8017394:	fb00 1303 	mla	r3, r0, r3, r1
 8017398:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801739c:	18d3      	adds	r3, r2, r3
 801739e:	9308      	str	r3, [sp, #32]
 80173a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80173a2:	681b      	ldr	r3, [r3, #0]
 80173a4:	930a      	str	r3, [sp, #40]	; 0x28
 80173a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80173a8:	43db      	mvns	r3, r3
 80173aa:	b2db      	uxtb	r3, r3
 80173ac:	9309      	str	r3, [sp, #36]	; 0x24
 80173ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173b0:	2b00      	cmp	r3, #0
 80173b2:	dc03      	bgt.n	80173bc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80173b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80173b6:	2b00      	cmp	r3, #0
 80173b8:	f340 81f5 	ble.w	80177a6 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 80173bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80173be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80173c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80173c6:	1e48      	subs	r0, r1, #1
 80173c8:	1e54      	subs	r4, r2, #1
 80173ca:	9b07      	ldr	r3, [sp, #28]
 80173cc:	2b00      	cmp	r3, #0
 80173ce:	f340 80d5 	ble.w	801757c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80173d2:	ea5f 452a 	movs.w	r5, sl, asr #16
 80173d6:	ea4f 4328 	mov.w	r3, r8, asr #16
 80173da:	d406      	bmi.n	80173ea <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80173dc:	4285      	cmp	r5, r0
 80173de:	da04      	bge.n	80173ea <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80173e0:	2b00      	cmp	r3, #0
 80173e2:	db02      	blt.n	80173ea <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80173e4:	42a3      	cmp	r3, r4
 80173e6:	f2c0 80ca 	blt.w	801757e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80173ea:	3501      	adds	r5, #1
 80173ec:	f100 80bb 	bmi.w	8017566 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80173f0:	42a9      	cmp	r1, r5
 80173f2:	f2c0 80b8 	blt.w	8017566 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80173f6:	3301      	adds	r3, #1
 80173f8:	f100 80b5 	bmi.w	8017566 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80173fc:	429a      	cmp	r2, r3
 80173fe:	f2c0 80b2 	blt.w	8017566 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8017402:	9b07      	ldr	r3, [sp, #28]
 8017404:	9d08      	ldr	r5, [sp, #32]
 8017406:	930d      	str	r3, [sp, #52]	; 0x34
 8017408:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801740a:	2b00      	cmp	r3, #0
 801740c:	f340 80d6 	ble.w	80175bc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 8017410:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8017412:	ea4f 4428 	mov.w	r4, r8, asr #16
 8017416:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017418:	f3ca 3203 	ubfx	r2, sl, #12, #4
 801741c:	68c6      	ldr	r6, [r0, #12]
 801741e:	ea5f 402a 	movs.w	r0, sl, asr #16
 8017422:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8017426:	689b      	ldr	r3, [r3, #8]
 8017428:	f100 810f 	bmi.w	801764a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801742c:	1e5f      	subs	r7, r3, #1
 801742e:	42b8      	cmp	r0, r7
 8017430:	f280 810b 	bge.w	801764a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8017434:	2c00      	cmp	r4, #0
 8017436:	f2c0 8108 	blt.w	801764a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801743a:	1e77      	subs	r7, r6, #1
 801743c:	42bc      	cmp	r4, r7
 801743e:	f280 8104 	bge.w	801764a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8017442:	b21b      	sxth	r3, r3
 8017444:	fb04 0003 	mla	r0, r4, r3, r0
 8017448:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801744a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801744e:	1826      	adds	r6, r4, r0
 8017450:	5c24      	ldrb	r4, [r4, r0]
 8017452:	78b7      	ldrb	r7, [r6, #2]
 8017454:	7870      	ldrb	r0, [r6, #1]
 8017456:	970f      	str	r7, [sp, #60]	; 0x3c
 8017458:	7977      	ldrb	r7, [r6, #5]
 801745a:	f896 e003 	ldrb.w	lr, [r6, #3]
 801745e:	f896 c004 	ldrb.w	ip, [r6, #4]
 8017462:	9710      	str	r7, [sp, #64]	; 0x40
 8017464:	b1c9      	cbz	r1, 801749a <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017466:	f04f 0b03 	mov.w	fp, #3
 801746a:	f06f 0904 	mvn.w	r9, #4
 801746e:	3605      	adds	r6, #5
 8017470:	fb13 930b 	smlabb	r3, r3, fp, r9
 8017474:	eb06 0b03 	add.w	fp, r6, r3
 8017478:	5cf3      	ldrb	r3, [r6, r3]
 801747a:	9311      	str	r3, [sp, #68]	; 0x44
 801747c:	f89b 3001 	ldrb.w	r3, [fp, #1]
 8017480:	9313      	str	r3, [sp, #76]	; 0x4c
 8017482:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017486:	9315      	str	r3, [sp, #84]	; 0x54
 8017488:	f89b 3003 	ldrb.w	r3, [fp, #3]
 801748c:	9312      	str	r3, [sp, #72]	; 0x48
 801748e:	f89b 3004 	ldrb.w	r3, [fp, #4]
 8017492:	9314      	str	r3, [sp, #80]	; 0x50
 8017494:	f89b 3005 	ldrb.w	r3, [fp, #5]
 8017498:	9316      	str	r3, [sp, #88]	; 0x58
 801749a:	b292      	uxth	r2, r2
 801749c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801749e:	b289      	uxth	r1, r1
 80174a0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80174a4:	fb02 f601 	mul.w	r6, r2, r1
 80174a8:	0112      	lsls	r2, r2, #4
 80174aa:	ebc6 1101 	rsb	r1, r6, r1, lsl #4
 80174ae:	f5c2 7980 	rsb	r9, r2, #256	; 0x100
 80174b2:	1b92      	subs	r2, r2, r6
 80174b4:	b289      	uxth	r1, r1
 80174b6:	b292      	uxth	r2, r2
 80174b8:	eba9 0901 	sub.w	r9, r9, r1
 80174bc:	fb02 fe0e 	mul.w	lr, r2, lr
 80174c0:	fa1f f989 	uxth.w	r9, r9
 80174c4:	fb02 fc0c 	mul.w	ip, r2, ip
 80174c8:	fb09 e404 	mla	r4, r9, r4, lr
 80174cc:	f895 e000 	ldrb.w	lr, [r5]
 80174d0:	fb09 c000 	mla	r0, r9, r0, ip
 80174d4:	fb01 4407 	mla	r4, r1, r7, r4
 80174d8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80174da:	fb06 4407 	mla	r4, r6, r7, r4
 80174de:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80174e0:	fb1e fe07 	smulbb	lr, lr, r7
 80174e4:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80174e8:	fb04 e403 	mla	r4, r4, r3, lr
 80174ec:	b2a4      	uxth	r4, r4
 80174ee:	f104 0e01 	add.w	lr, r4, #1
 80174f2:	eb0e 2e14 	add.w	lr, lr, r4, lsr #8
 80174f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80174f8:	fb01 0004 	mla	r0, r1, r4, r0
 80174fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80174fe:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8017502:	fb06 0004 	mla	r0, r6, r4, r0
 8017506:	786c      	ldrb	r4, [r5, #1]
 8017508:	f885 e000 	strb.w	lr, [r5]
 801750c:	fb14 f407 	smulbb	r4, r4, r7
 8017510:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017514:	fb00 4003 	mla	r0, r0, r3, r4
 8017518:	b280      	uxth	r0, r0
 801751a:	1c44      	adds	r4, r0, #1
 801751c:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8017520:	1200      	asrs	r0, r0, #8
 8017522:	7068      	strb	r0, [r5, #1]
 8017524:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017526:	4342      	muls	r2, r0
 8017528:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801752a:	fb09 2200 	mla	r2, r9, r0, r2
 801752e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017530:	fb01 2100 	mla	r1, r1, r0, r2
 8017534:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017536:	fb06 1602 	mla	r6, r6, r2, r1
 801753a:	78a9      	ldrb	r1, [r5, #2]
 801753c:	fb11 f107 	smulbb	r1, r1, r7
 8017540:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017544:	fb06 1303 	mla	r3, r6, r3, r1
 8017548:	b29b      	uxth	r3, r3
 801754a:	1c5e      	adds	r6, r3, #1
 801754c:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8017550:	121b      	asrs	r3, r3, #8
 8017552:	70ab      	strb	r3, [r5, #2]
 8017554:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017556:	3503      	adds	r5, #3
 8017558:	449a      	add	sl, r3
 801755a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801755c:	4498      	add	r8, r3
 801755e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017560:	3b01      	subs	r3, #1
 8017562:	930d      	str	r3, [sp, #52]	; 0x34
 8017564:	e750      	b.n	8017408 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017566:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017568:	449a      	add	sl, r3
 801756a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801756c:	4498      	add	r8, r3
 801756e:	9b07      	ldr	r3, [sp, #28]
 8017570:	3b01      	subs	r3, #1
 8017572:	9307      	str	r3, [sp, #28]
 8017574:	9b08      	ldr	r3, [sp, #32]
 8017576:	3303      	adds	r3, #3
 8017578:	9308      	str	r3, [sp, #32]
 801757a:	e726      	b.n	80173ca <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801757c:	d026      	beq.n	80175cc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801757e:	9b07      	ldr	r3, [sp, #28]
 8017580:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017582:	3b01      	subs	r3, #1
 8017584:	fb00 a003 	mla	r0, r0, r3, sl
 8017588:	1400      	asrs	r0, r0, #16
 801758a:	f53f af3a 	bmi.w	8017402 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801758e:	3901      	subs	r1, #1
 8017590:	4288      	cmp	r0, r1
 8017592:	f6bf af36 	bge.w	8017402 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017596:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017598:	fb01 8303 	mla	r3, r1, r3, r8
 801759c:	141b      	asrs	r3, r3, #16
 801759e:	f53f af30 	bmi.w	8017402 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80175a2:	3a01      	subs	r2, #1
 80175a4:	4293      	cmp	r3, r2
 80175a6:	f6bf af2c 	bge.w	8017402 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80175aa:	9b08      	ldr	r3, [sp, #32]
 80175ac:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80175b0:	1cdd      	adds	r5, r3, #3
 80175b2:	f8bd e030 	ldrh.w	lr, [sp, #48]	; 0x30
 80175b6:	f1bc 0f00 	cmp.w	ip, #0
 80175ba:	dc5f      	bgt.n	801767c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30a>
 80175bc:	9b07      	ldr	r3, [sp, #28]
 80175be:	9a08      	ldr	r2, [sp, #32]
 80175c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80175c4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80175c8:	441a      	add	r2, r3
 80175ca:	9208      	str	r2, [sp, #32]
 80175cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80175ce:	2b00      	cmp	r3, #0
 80175d0:	f340 80e9 	ble.w	80177a6 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 80175d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80175d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80175de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80175e2:	eef0 6a62 	vmov.f32	s13, s5
 80175e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80175ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80175ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80175f2:	ee16 aa90 	vmov	sl, s13
 80175f6:	eef0 6a43 	vmov.f32	s13, s6
 80175fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80175fe:	ee16 8a90 	vmov	r8, s13
 8017602:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017606:	ee61 7a27 	vmul.f32	s15, s2, s15
 801760a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801760e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017612:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017616:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801761a:	ee12 2a90 	vmov	r2, s5
 801761e:	eef0 2a47 	vmov.f32	s5, s14
 8017622:	fb92 f3f3 	sdiv	r3, r2, r3
 8017626:	ee13 2a10 	vmov	r2, s6
 801762a:	932b      	str	r3, [sp, #172]	; 0xac
 801762c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801762e:	eeb0 3a67 	vmov.f32	s6, s15
 8017632:	fb92 f3f3 	sdiv	r3, r2, r3
 8017636:	932c      	str	r3, [sp, #176]	; 0xb0
 8017638:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801763a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801763c:	3b01      	subs	r3, #1
 801763e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017640:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017642:	bf08      	it	eq
 8017644:	4613      	moveq	r3, r2
 8017646:	9307      	str	r3, [sp, #28]
 8017648:	e6b1      	b.n	80173ae <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801764a:	1c47      	adds	r7, r0, #1
 801764c:	d482      	bmi.n	8017554 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801764e:	42bb      	cmp	r3, r7
 8017650:	db80      	blt.n	8017554 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8017652:	1c67      	adds	r7, r4, #1
 8017654:	f53f af7e 	bmi.w	8017554 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8017658:	42be      	cmp	r6, r7
 801765a:	f6ff af7b 	blt.w	8017554 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801765e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017660:	b236      	sxth	r6, r6
 8017662:	9001      	str	r0, [sp, #4]
 8017664:	b21b      	sxth	r3, r3
 8017666:	9600      	str	r6, [sp, #0]
 8017668:	981d      	ldr	r0, [sp, #116]	; 0x74
 801766a:	e9cd 1704 	strd	r1, r7, [sp, #16]
 801766e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8017672:	4629      	mov	r1, r5
 8017674:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017676:	f7ff fd82 	bl	801717e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>
 801767a:	e76b      	b.n	8017554 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801767c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801767e:	ea4f 402a 	mov.w	r0, sl, asr #16
 8017682:	f3c8 3203 	ubfx	r2, r8, #12, #4
 8017686:	f3ca 3303 	ubfx	r3, sl, #12, #4
 801768a:	f9b1 7008 	ldrsh.w	r7, [r1, #8]
 801768e:	ea4f 4128 	mov.w	r1, r8, asr #16
 8017692:	fb07 0101 	mla	r1, r7, r1, r0
 8017696:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017698:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801769c:	1844      	adds	r4, r0, r1
 801769e:	5c40      	ldrb	r0, [r0, r1]
 80176a0:	78a6      	ldrb	r6, [r4, #2]
 80176a2:	7861      	ldrb	r1, [r4, #1]
 80176a4:	960f      	str	r6, [sp, #60]	; 0x3c
 80176a6:	78e6      	ldrb	r6, [r4, #3]
 80176a8:	910d      	str	r1, [sp, #52]	; 0x34
 80176aa:	9610      	str	r6, [sp, #64]	; 0x40
 80176ac:	f894 9004 	ldrb.w	r9, [r4, #4]
 80176b0:	f894 b005 	ldrb.w	fp, [r4, #5]
 80176b4:	b192      	cbz	r2, 80176dc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36a>
 80176b6:	f06f 0604 	mvn.w	r6, #4
 80176ba:	2103      	movs	r1, #3
 80176bc:	3405      	adds	r4, #5
 80176be:	fb17 6701 	smlabb	r7, r7, r1, r6
 80176c2:	19e6      	adds	r6, r4, r7
 80176c4:	5de4      	ldrb	r4, [r4, r7]
 80176c6:	9417      	str	r4, [sp, #92]	; 0x5c
 80176c8:	7874      	ldrb	r4, [r6, #1]
 80176ca:	9419      	str	r4, [sp, #100]	; 0x64
 80176cc:	78b4      	ldrb	r4, [r6, #2]
 80176ce:	941b      	str	r4, [sp, #108]	; 0x6c
 80176d0:	78f4      	ldrb	r4, [r6, #3]
 80176d2:	9418      	str	r4, [sp, #96]	; 0x60
 80176d4:	7934      	ldrb	r4, [r6, #4]
 80176d6:	941a      	str	r4, [sp, #104]	; 0x68
 80176d8:	7974      	ldrb	r4, [r6, #5]
 80176da:	941c      	str	r4, [sp, #112]	; 0x70
 80176dc:	b29b      	uxth	r3, r3
 80176de:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80176e0:	b292      	uxth	r2, r2
 80176e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80176e4:	3503      	adds	r5, #3
 80176e6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80176ea:	fb03 f402 	mul.w	r4, r3, r2
 80176ee:	011b      	lsls	r3, r3, #4
 80176f0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 80176f4:	f5c3 7680 	rsb	r6, r3, #256	; 0x100
 80176f8:	1b1b      	subs	r3, r3, r4
 80176fa:	b292      	uxth	r2, r2
 80176fc:	b29b      	uxth	r3, r3
 80176fe:	1ab6      	subs	r6, r6, r2
 8017700:	435f      	muls	r7, r3
 8017702:	b2b6      	uxth	r6, r6
 8017704:	fb03 f909 	mul.w	r9, r3, r9
 8017708:	fb03 fb0b 	mul.w	fp, r3, fp
 801770c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801770e:	fb06 7000 	mla	r0, r6, r0, r7
 8017712:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8017714:	fb06 bb03 	mla	fp, r6, r3, fp
 8017718:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801771a:	fb02 0007 	mla	r0, r2, r7, r0
 801771e:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8017720:	fb02 bb03 	mla	fp, r2, r3, fp
 8017724:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017726:	fb04 0007 	mla	r0, r4, r7, r0
 801772a:	f815 7c06 	ldrb.w	r7, [r5, #-6]
 801772e:	fb17 f701 	smulbb	r7, r7, r1
 8017732:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017736:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017738:	fb00 700e 	mla	r0, r0, lr, r7
 801773c:	fb06 9101 	mla	r1, r6, r1, r9
 8017740:	b280      	uxth	r0, r0
 8017742:	1c47      	adds	r7, r0, #1
 8017744:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017748:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801774a:	1200      	asrs	r0, r0, #8
 801774c:	f805 0c06 	strb.w	r0, [r5, #-6]
 8017750:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017752:	fb02 1100 	mla	r1, r2, r0, r1
 8017756:	981a      	ldr	r0, [sp, #104]	; 0x68
 8017758:	fb04 1100 	mla	r1, r4, r0, r1
 801775c:	f815 0c05 	ldrb.w	r0, [r5, #-5]
 8017760:	fb04 b403 	mla	r4, r4, r3, fp
 8017764:	f815 3c04 	ldrb.w	r3, [r5, #-4]
 8017768:	fb10 f007 	smulbb	r0, r0, r7
 801776c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017770:	fb13 f307 	smulbb	r3, r3, r7
 8017774:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8017778:	fb01 010e 	mla	r1, r1, lr, r0
 801777c:	fb04 340e 	mla	r4, r4, lr, r3
 8017780:	b289      	uxth	r1, r1
 8017782:	b2a4      	uxth	r4, r4
 8017784:	1c48      	adds	r0, r1, #1
 8017786:	1c63      	adds	r3, r4, #1
 8017788:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801778c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017790:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017792:	1209      	asrs	r1, r1, #8
 8017794:	1224      	asrs	r4, r4, #8
 8017796:	449a      	add	sl, r3
 8017798:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801779a:	f805 1c05 	strb.w	r1, [r5, #-5]
 801779e:	f805 4c04 	strb.w	r4, [r5, #-4]
 80177a2:	4498      	add	r8, r3
 80177a4:	e707      	b.n	80175b6 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80177a6:	b01f      	add	sp, #124	; 0x7c
 80177a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080177ac <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>:
 80177ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177b0:	b087      	sub	sp, #28
 80177b2:	780d      	ldrb	r5, [r1, #0]
 80177b4:	784c      	ldrb	r4, [r1, #1]
 80177b6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80177ba:	f9bd 7040 	ldrsh.w	r7, [sp, #64]	; 0x40
 80177be:	9004      	str	r0, [sp, #16]
 80177c0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80177c4:	e9dd b611 	ldrd	fp, r6, [sp, #68]	; 0x44
 80177c8:	9005      	str	r0, [sp, #20]
 80177ca:	fb06 bc03 	mla	ip, r6, r3, fp
 80177ce:	2e00      	cmp	r6, #0
 80177d0:	7888      	ldrb	r0, [r1, #2]
 80177d2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80177d6:	eb02 090c 	add.w	r9, r2, ip
 80177da:	f2c0 8084 	blt.w	80178e6 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x13a>
 80177de:	42b7      	cmp	r7, r6
 80177e0:	f340 8081 	ble.w	80178e6 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x13a>
 80177e4:	f1bb 0f00 	cmp.w	fp, #0
 80177e8:	db79      	blt.n	80178de <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x132>
 80177ea:	455b      	cmp	r3, fp
 80177ec:	dd77      	ble.n	80178de <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x132>
 80177ee:	f812 200c 	ldrb.w	r2, [r2, ip]
 80177f2:	9201      	str	r2, [sp, #4]
 80177f4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80177f8:	9202      	str	r2, [sp, #8]
 80177fa:	f899 2002 	ldrb.w	r2, [r9, #2]
 80177fe:	9203      	str	r2, [sp, #12]
 8017800:	f11b 0201 	adds.w	r2, fp, #1
 8017804:	d476      	bmi.n	80178f4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 8017806:	4293      	cmp	r3, r2
 8017808:	dd74      	ble.n	80178f4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 801780a:	9a04      	ldr	r2, [sp, #16]
 801780c:	2a00      	cmp	r2, #0
 801780e:	d071      	beq.n	80178f4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x148>
 8017810:	f899 8003 	ldrb.w	r8, [r9, #3]
 8017814:	f899 c004 	ldrb.w	ip, [r9, #4]
 8017818:	f899 a005 	ldrb.w	sl, [r9, #5]
 801781c:	3601      	adds	r6, #1
 801781e:	d471      	bmi.n	8017904 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 8017820:	42b7      	cmp	r7, r6
 8017822:	dd6f      	ble.n	8017904 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 8017824:	9a05      	ldr	r2, [sp, #20]
 8017826:	2a00      	cmp	r2, #0
 8017828:	d06c      	beq.n	8017904 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x158>
 801782a:	f1bb 0f00 	cmp.w	fp, #0
 801782e:	db65      	blt.n	80178fc <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x150>
 8017830:	455b      	cmp	r3, fp
 8017832:	dd63      	ble.n	80178fc <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x150>
 8017834:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8017838:	f819 e002 	ldrb.w	lr, [r9, r2]
 801783c:	2203      	movs	r2, #3
 801783e:	fb03 9602 	mla	r6, r3, r2, r9
 8017842:	7877      	ldrb	r7, [r6, #1]
 8017844:	78b6      	ldrb	r6, [r6, #2]
 8017846:	f11b 0b01 	adds.w	fp, fp, #1
 801784a:	d40c      	bmi.n	8017866 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 801784c:	455b      	cmp	r3, fp
 801784e:	dd0a      	ble.n	8017866 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 8017850:	9a04      	ldr	r2, [sp, #16]
 8017852:	b142      	cbz	r2, 8017866 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>
 8017854:	2203      	movs	r2, #3
 8017856:	fb13 2002 	smlabb	r0, r3, r2, r2
 801785a:	f819 5000 	ldrb.w	r5, [r9, r0]
 801785e:	fb03 9002 	mla	r0, r3, r2, r9
 8017862:	7904      	ldrb	r4, [r0, #4]
 8017864:	7940      	ldrb	r0, [r0, #5]
 8017866:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801786a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801786e:	fb03 fb02 	mul.w	fp, r3, r2
 8017872:	011b      	lsls	r3, r3, #4
 8017874:	ebcb 1202 	rsb	r2, fp, r2, lsl #4
 8017878:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 801787c:	eba3 030b 	sub.w	r3, r3, fp
 8017880:	b292      	uxth	r2, r2
 8017882:	b29b      	uxth	r3, r3
 8017884:	eba9 0902 	sub.w	r9, r9, r2
 8017888:	9304      	str	r3, [sp, #16]
 801788a:	fa1f f989 	uxth.w	r9, r9
 801788e:	fb03 f808 	mul.w	r8, r3, r8
 8017892:	9b01      	ldr	r3, [sp, #4]
 8017894:	fb09 8803 	mla	r8, r9, r3, r8
 8017898:	9b04      	ldr	r3, [sp, #16]
 801789a:	fb03 fc0c 	mul.w	ip, r3, ip
 801789e:	9b02      	ldr	r3, [sp, #8]
 80178a0:	fb02 880e 	mla	r8, r2, lr, r8
 80178a4:	fb09 cc03 	mla	ip, r9, r3, ip
 80178a8:	9b04      	ldr	r3, [sp, #16]
 80178aa:	fb0b 8805 	mla	r8, fp, r5, r8
 80178ae:	fb02 c707 	mla	r7, r2, r7, ip
 80178b2:	fb03 f30a 	mul.w	r3, r3, sl
 80178b6:	ea4f 2828 	mov.w	r8, r8, asr #8
 80178ba:	fb0b 7404 	mla	r4, fp, r4, r7
 80178be:	f881 8000 	strb.w	r8, [r1]
 80178c2:	1224      	asrs	r4, r4, #8
 80178c4:	704c      	strb	r4, [r1, #1]
 80178c6:	9c03      	ldr	r4, [sp, #12]
 80178c8:	fb09 3904 	mla	r9, r9, r4, r3
 80178cc:	fb02 9206 	mla	r2, r2, r6, r9
 80178d0:	fb0b 2000 	mla	r0, fp, r0, r2
 80178d4:	1200      	asrs	r0, r0, #8
 80178d6:	7088      	strb	r0, [r1, #2]
 80178d8:	b007      	add	sp, #28
 80178da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178de:	e9cd 4002 	strd	r4, r0, [sp, #8]
 80178e2:	9501      	str	r5, [sp, #4]
 80178e4:	e78c      	b.n	8017800 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x54>
 80178e6:	4682      	mov	sl, r0
 80178e8:	46a4      	mov	ip, r4
 80178ea:	46a8      	mov	r8, r5
 80178ec:	9501      	str	r5, [sp, #4]
 80178ee:	e9cd 4002 	strd	r4, r0, [sp, #8]
 80178f2:	e793      	b.n	801781c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x70>
 80178f4:	4682      	mov	sl, r0
 80178f6:	46a4      	mov	ip, r4
 80178f8:	46a8      	mov	r8, r5
 80178fa:	e78f      	b.n	801781c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x70>
 80178fc:	4606      	mov	r6, r0
 80178fe:	4627      	mov	r7, r4
 8017900:	46ae      	mov	lr, r5
 8017902:	e7a0      	b.n	8017846 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x9a>
 8017904:	4606      	mov	r6, r0
 8017906:	4627      	mov	r7, r4
 8017908:	46ae      	mov	lr, r5
 801790a:	e7ac      	b.n	8017866 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xba>

0801790c <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801790c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017910:	b09b      	sub	sp, #108	; 0x6c
 8017912:	920b      	str	r2, [sp, #44]	; 0x2c
 8017914:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017916:	9019      	str	r0, [sp, #100]	; 0x64
 8017918:	9109      	str	r1, [sp, #36]	; 0x24
 801791a:	6850      	ldr	r0, [r2, #4]
 801791c:	9306      	str	r3, [sp, #24]
 801791e:	6812      	ldr	r2, [r2, #0]
 8017920:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017924:	e9dd b425 	ldrd	fp, r4, [sp, #148]	; 0x94
 8017928:	fb00 1303 	mla	r3, r0, r3, r1
 801792c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017930:	18d3      	adds	r3, r2, r3
 8017932:	9307      	str	r3, [sp, #28]
 8017934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017936:	681b      	ldr	r3, [r3, #0]
 8017938:	9308      	str	r3, [sp, #32]
 801793a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801793c:	2b00      	cmp	r3, #0
 801793e:	dc03      	bgt.n	8017948 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017940:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017942:	2b00      	cmp	r3, #0
 8017944:	f340 81ab 	ble.w	8017c9e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017948:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801794a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801794e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017952:	1e48      	subs	r0, r1, #1
 8017954:	1e55      	subs	r5, r2, #1
 8017956:	9b06      	ldr	r3, [sp, #24]
 8017958:	2b00      	cmp	r3, #0
 801795a:	f340 80b1 	ble.w	8017ac0 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801795e:	ea5f 462b 	movs.w	r6, fp, asr #16
 8017962:	ea4f 4324 	mov.w	r3, r4, asr #16
 8017966:	d406      	bmi.n	8017976 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8017968:	4286      	cmp	r6, r0
 801796a:	da04      	bge.n	8017976 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801796c:	2b00      	cmp	r3, #0
 801796e:	db02      	blt.n	8017976 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8017970:	42ab      	cmp	r3, r5
 8017972:	f2c0 80a6 	blt.w	8017ac2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8017976:	3601      	adds	r6, #1
 8017978:	f100 8097 	bmi.w	8017aaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801797c:	42b1      	cmp	r1, r6
 801797e:	f2c0 8094 	blt.w	8017aaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8017982:	3301      	adds	r3, #1
 8017984:	f100 8091 	bmi.w	8017aaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8017988:	429a      	cmp	r2, r3
 801798a:	f2c0 808e 	blt.w	8017aaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801798e:	9b06      	ldr	r3, [sp, #24]
 8017990:	9e07      	ldr	r6, [sp, #28]
 8017992:	930a      	str	r3, [sp, #40]	; 0x28
 8017994:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017996:	2b00      	cmp	r3, #0
 8017998:	f340 80b0 	ble.w	8017afc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801799c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801799e:	1425      	asrs	r5, r4, #16
 80179a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80179a2:	f3cb 3203 	ubfx	r2, fp, #12, #4
 80179a6:	68c7      	ldr	r7, [r0, #12]
 80179a8:	ea5f 402b 	movs.w	r0, fp, asr #16
 80179ac:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80179b0:	689b      	ldr	r3, [r3, #8]
 80179b2:	f100 80ea 	bmi.w	8017b8a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80179b6:	f103 3cff 	add.w	ip, r3, #4294967295
 80179ba:	4560      	cmp	r0, ip
 80179bc:	f280 80e5 	bge.w	8017b8a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80179c0:	2d00      	cmp	r5, #0
 80179c2:	f2c0 80e2 	blt.w	8017b8a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80179c6:	f107 3cff 	add.w	ip, r7, #4294967295
 80179ca:	4565      	cmp	r5, ip
 80179cc:	f280 80dd 	bge.w	8017b8a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80179d0:	b21b      	sxth	r3, r3
 80179d2:	fb05 0003 	mla	r0, r5, r3, r0
 80179d6:	9d08      	ldr	r5, [sp, #32]
 80179d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80179dc:	182f      	adds	r7, r5, r0
 80179de:	5c2d      	ldrb	r5, [r5, r0]
 80179e0:	7878      	ldrb	r0, [r7, #1]
 80179e2:	f897 e002 	ldrb.w	lr, [r7, #2]
 80179e6:	900c      	str	r0, [sp, #48]	; 0x30
 80179e8:	f897 9003 	ldrb.w	r9, [r7, #3]
 80179ec:	f897 8004 	ldrb.w	r8, [r7, #4]
 80179f0:	f897 a005 	ldrb.w	sl, [r7, #5]
 80179f4:	b1c9      	cbz	r1, 8017a2a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80179f6:	f04f 0c03 	mov.w	ip, #3
 80179fa:	f06f 0004 	mvn.w	r0, #4
 80179fe:	3705      	adds	r7, #5
 8017a00:	fb13 030c 	smlabb	r3, r3, ip, r0
 8017a04:	eb07 0c03 	add.w	ip, r7, r3
 8017a08:	5cfb      	ldrb	r3, [r7, r3]
 8017a0a:	930d      	str	r3, [sp, #52]	; 0x34
 8017a0c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017a10:	930f      	str	r3, [sp, #60]	; 0x3c
 8017a12:	f89c 3002 	ldrb.w	r3, [ip, #2]
 8017a16:	9311      	str	r3, [sp, #68]	; 0x44
 8017a18:	f89c 3003 	ldrb.w	r3, [ip, #3]
 8017a1c:	930e      	str	r3, [sp, #56]	; 0x38
 8017a1e:	f89c 3004 	ldrb.w	r3, [ip, #4]
 8017a22:	9310      	str	r3, [sp, #64]	; 0x40
 8017a24:	f89c 3005 	ldrb.w	r3, [ip, #5]
 8017a28:	9312      	str	r3, [sp, #72]	; 0x48
 8017a2a:	b292      	uxth	r2, r2
 8017a2c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017a2e:	b289      	uxth	r1, r1
 8017a30:	fb02 f301 	mul.w	r3, r2, r1
 8017a34:	0112      	lsls	r2, r2, #4
 8017a36:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8017a3a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8017a3e:	1ad2      	subs	r2, r2, r3
 8017a40:	b289      	uxth	r1, r1
 8017a42:	b292      	uxth	r2, r2
 8017a44:	1a7f      	subs	r7, r7, r1
 8017a46:	fb02 f909 	mul.w	r9, r2, r9
 8017a4a:	b2bf      	uxth	r7, r7
 8017a4c:	fb02 f808 	mul.w	r8, r2, r8
 8017a50:	fb02 fa0a 	mul.w	sl, r2, sl
 8017a54:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017a56:	fb07 9905 	mla	r9, r7, r5, r9
 8017a5a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017a5c:	fb07 8800 	mla	r8, r7, r0, r8
 8017a60:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017a62:	fb07 aa0e 	mla	sl, r7, lr, sl
 8017a66:	fb01 9905 	mla	r9, r1, r5, r9
 8017a6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017a6c:	fb01 8800 	mla	r8, r1, r0, r8
 8017a70:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017a72:	fb01 a102 	mla	r1, r1, r2, sl
 8017a76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017a78:	fb03 9905 	mla	r9, r3, r5, r9
 8017a7c:	fb03 8800 	mla	r8, r3, r0, r8
 8017a80:	fb03 1302 	mla	r3, r3, r2, r1
 8017a84:	ea4f 2929 	mov.w	r9, r9, asr #8
 8017a88:	ea4f 2828 	mov.w	r8, r8, asr #8
 8017a8c:	121b      	asrs	r3, r3, #8
 8017a8e:	f886 9000 	strb.w	r9, [r6]
 8017a92:	f886 8001 	strb.w	r8, [r6, #1]
 8017a96:	70b3      	strb	r3, [r6, #2]
 8017a98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017a9a:	3603      	adds	r6, #3
 8017a9c:	449b      	add	fp, r3
 8017a9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017aa0:	441c      	add	r4, r3
 8017aa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017aa4:	3b01      	subs	r3, #1
 8017aa6:	930a      	str	r3, [sp, #40]	; 0x28
 8017aa8:	e774      	b.n	8017994 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017aaa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017aac:	449b      	add	fp, r3
 8017aae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017ab0:	441c      	add	r4, r3
 8017ab2:	9b06      	ldr	r3, [sp, #24]
 8017ab4:	3b01      	subs	r3, #1
 8017ab6:	9306      	str	r3, [sp, #24]
 8017ab8:	9b07      	ldr	r3, [sp, #28]
 8017aba:	3303      	adds	r3, #3
 8017abc:	9307      	str	r3, [sp, #28]
 8017abe:	e74a      	b.n	8017956 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017ac0:	d024      	beq.n	8017b0c <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8017ac2:	9b06      	ldr	r3, [sp, #24]
 8017ac4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8017ac6:	3b01      	subs	r3, #1
 8017ac8:	fb00 b003 	mla	r0, r0, r3, fp
 8017acc:	1400      	asrs	r0, r0, #16
 8017ace:	f53f af5e 	bmi.w	801798e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017ad2:	3901      	subs	r1, #1
 8017ad4:	4288      	cmp	r0, r1
 8017ad6:	f6bf af5a 	bge.w	801798e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017ada:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017adc:	fb01 4303 	mla	r3, r1, r3, r4
 8017ae0:	141b      	asrs	r3, r3, #16
 8017ae2:	f53f af54 	bmi.w	801798e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017ae6:	3a01      	subs	r2, #1
 8017ae8:	4293      	cmp	r3, r2
 8017aea:	f6bf af50 	bge.w	801798e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017aee:	9b07      	ldr	r3, [sp, #28]
 8017af0:	f8dd e018 	ldr.w	lr, [sp, #24]
 8017af4:	1cde      	adds	r6, r3, #3
 8017af6:	f1be 0f00 	cmp.w	lr, #0
 8017afa:	dc5f      	bgt.n	8017bbc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8017afc:	9b06      	ldr	r3, [sp, #24]
 8017afe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017b02:	9b07      	ldr	r3, [sp, #28]
 8017b04:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017b08:	4423      	add	r3, r4
 8017b0a:	9307      	str	r3, [sp, #28]
 8017b0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b0e:	2b00      	cmp	r3, #0
 8017b10:	f340 80c5 	ble.w	8017c9e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017b14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017b18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017b1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017b1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017b22:	eef0 6a62 	vmov.f32	s13, s5
 8017b26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017b2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017b2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b32:	ee16 ba90 	vmov	fp, s13
 8017b36:	eef0 6a43 	vmov.f32	s13, s6
 8017b3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b3e:	ee16 4a90 	vmov	r4, s13
 8017b42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017b46:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017b4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017b4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017b52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017b56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017b5a:	ee12 2a90 	vmov	r2, s5
 8017b5e:	eef0 2a47 	vmov.f32	s5, s14
 8017b62:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b66:	ee13 2a10 	vmov	r2, s6
 8017b6a:	9327      	str	r3, [sp, #156]	; 0x9c
 8017b6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017b6e:	eeb0 3a67 	vmov.f32	s6, s15
 8017b72:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b76:	9328      	str	r3, [sp, #160]	; 0xa0
 8017b78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017b7c:	3b01      	subs	r3, #1
 8017b7e:	9309      	str	r3, [sp, #36]	; 0x24
 8017b80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017b82:	bf08      	it	eq
 8017b84:	4613      	moveq	r3, r2
 8017b86:	9306      	str	r3, [sp, #24]
 8017b88:	e6d7      	b.n	801793a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017b8a:	f110 0c01 	adds.w	ip, r0, #1
 8017b8e:	d483      	bmi.n	8017a98 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8017b90:	4563      	cmp	r3, ip
 8017b92:	db81      	blt.n	8017a98 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8017b94:	f115 0c01 	adds.w	ip, r5, #1
 8017b98:	f53f af7e 	bmi.w	8017a98 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8017b9c:	4567      	cmp	r7, ip
 8017b9e:	f6ff af7b 	blt.w	8017a98 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8017ba2:	b23f      	sxth	r7, r7
 8017ba4:	b21b      	sxth	r3, r3
 8017ba6:	9700      	str	r7, [sp, #0]
 8017ba8:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8017bac:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8017bb0:	9a08      	ldr	r2, [sp, #32]
 8017bb2:	4631      	mov	r1, r6
 8017bb4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017bb6:	f7ff fdf9 	bl	80177ac <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>
 8017bba:	e76d      	b.n	8017a98 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8017bbc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017bbe:	ea4f 402b 	mov.w	r0, fp, asr #16
 8017bc2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017bc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017bca:	f9b1 c008 	ldrsh.w	ip, [r1, #8]
 8017bce:	1421      	asrs	r1, r4, #16
 8017bd0:	930a      	str	r3, [sp, #40]	; 0x28
 8017bd2:	fb0c 0101 	mla	r1, ip, r1, r0
 8017bd6:	9808      	ldr	r0, [sp, #32]
 8017bd8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017bdc:	1845      	adds	r5, r0, r1
 8017bde:	5c40      	ldrb	r0, [r0, r1]
 8017be0:	796f      	ldrb	r7, [r5, #5]
 8017be2:	7869      	ldrb	r1, [r5, #1]
 8017be4:	f895 8002 	ldrb.w	r8, [r5, #2]
 8017be8:	f895 a003 	ldrb.w	sl, [r5, #3]
 8017bec:	f895 9004 	ldrb.w	r9, [r5, #4]
 8017bf0:	970c      	str	r7, [sp, #48]	; 0x30
 8017bf2:	b1a2      	cbz	r2, 8017c1e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 8017bf4:	2703      	movs	r7, #3
 8017bf6:	f06f 0304 	mvn.w	r3, #4
 8017bfa:	3505      	adds	r5, #5
 8017bfc:	fb1c 3c07 	smlabb	ip, ip, r7, r3
 8017c00:	eb05 070c 	add.w	r7, r5, ip
 8017c04:	f815 500c 	ldrb.w	r5, [r5, ip]
 8017c08:	9513      	str	r5, [sp, #76]	; 0x4c
 8017c0a:	787d      	ldrb	r5, [r7, #1]
 8017c0c:	9515      	str	r5, [sp, #84]	; 0x54
 8017c0e:	78bd      	ldrb	r5, [r7, #2]
 8017c10:	9517      	str	r5, [sp, #92]	; 0x5c
 8017c12:	78fd      	ldrb	r5, [r7, #3]
 8017c14:	9514      	str	r5, [sp, #80]	; 0x50
 8017c16:	793d      	ldrb	r5, [r7, #4]
 8017c18:	9516      	str	r5, [sp, #88]	; 0x58
 8017c1a:	797d      	ldrb	r5, [r7, #5]
 8017c1c:	9518      	str	r5, [sp, #96]	; 0x60
 8017c1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017c22:	b292      	uxth	r2, r2
 8017c24:	3603      	adds	r6, #3
 8017c26:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017c2a:	fb03 f502 	mul.w	r5, r3, r2
 8017c2e:	011b      	lsls	r3, r3, #4
 8017c30:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8017c34:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 8017c38:	1b5b      	subs	r3, r3, r5
 8017c3a:	b292      	uxth	r2, r2
 8017c3c:	b29b      	uxth	r3, r3
 8017c3e:	1abf      	subs	r7, r7, r2
 8017c40:	fb03 f909 	mul.w	r9, r3, r9
 8017c44:	b2bf      	uxth	r7, r7
 8017c46:	fb03 fa0a 	mul.w	sl, r3, sl
 8017c4a:	fb07 9901 	mla	r9, r7, r1, r9
 8017c4e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8017c50:	fb07 aa00 	mla	sl, r7, r0, sl
 8017c54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017c56:	fb02 9901 	mla	r9, r2, r1, r9
 8017c5a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017c5c:	fb02 aa00 	mla	sl, r2, r0, sl
 8017c60:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017c62:	fb05 9901 	mla	r9, r5, r1, r9
 8017c66:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017c68:	fb05 aa00 	mla	sl, r5, r0, sl
 8017c6c:	434b      	muls	r3, r1
 8017c6e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017c70:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8017c74:	fb07 3308 	mla	r3, r7, r8, r3
 8017c78:	ea4f 2929 	mov.w	r9, r9, asr #8
 8017c7c:	f806 ac06 	strb.w	sl, [r6, #-6]
 8017c80:	fb02 3201 	mla	r2, r2, r1, r3
 8017c84:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017c86:	f806 9c05 	strb.w	r9, [r6, #-5]
 8017c8a:	fb05 2503 	mla	r5, r5, r3, r2
 8017c8e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017c90:	122d      	asrs	r5, r5, #8
 8017c92:	449b      	add	fp, r3
 8017c94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c96:	f806 5c04 	strb.w	r5, [r6, #-4]
 8017c9a:	441c      	add	r4, r3
 8017c9c:	e72b      	b.n	8017af6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017c9e:	b01b      	add	sp, #108	; 0x6c
 8017ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017ca4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>:
 8017ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ca8:	b087      	sub	sp, #28
 8017caa:	e9dd 7511 	ldrd	r7, r5, [sp, #68]	; 0x44
 8017cae:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 8017cb2:	fb05 7003 	mla	r0, r5, r3, r7
 8017cb6:	2d00      	cmp	r5, #0
 8017cb8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8017cbc:	f89d e050 	ldrb.w	lr, [sp, #80]	; 0x50
 8017cc0:	eb02 0c80 	add.w	ip, r2, r0, lsl #2
 8017cc4:	f2c0 811f 	blt.w	8017f06 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x262>
 8017cc8:	45a8      	cmp	r8, r5
 8017cca:	f340 811c 	ble.w	8017f06 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x262>
 8017cce:	2f00      	cmp	r7, #0
 8017cd0:	f2c0 8117 	blt.w	8017f02 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x25e>
 8017cd4:	42bb      	cmp	r3, r7
 8017cd6:	f340 8114 	ble.w	8017f02 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x25e>
 8017cda:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 8017cde:	1c7a      	adds	r2, r7, #1
 8017ce0:	f100 8114 	bmi.w	8017f0c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x268>
 8017ce4:	4293      	cmp	r3, r2
 8017ce6:	f340 8111 	ble.w	8017f0c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x268>
 8017cea:	2c00      	cmp	r4, #0
 8017cec:	f000 8110 	beq.w	8017f10 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x26c>
 8017cf0:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8017cf4:	3501      	adds	r5, #1
 8017cf6:	f100 810f 	bmi.w	8017f18 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x274>
 8017cfa:	45a8      	cmp	r8, r5
 8017cfc:	f340 810c 	ble.w	8017f18 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x274>
 8017d00:	f1be 0f00 	cmp.w	lr, #0
 8017d04:	f000 810b 	beq.w	8017f1e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x27a>
 8017d08:	2f00      	cmp	r7, #0
 8017d0a:	f2c0 8103 	blt.w	8017f14 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x270>
 8017d0e:	42bb      	cmp	r3, r7
 8017d10:	f340 8100 	ble.w	8017f14 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x270>
 8017d14:	f85c 5023 	ldr.w	r5, [ip, r3, lsl #2]
 8017d18:	3701      	adds	r7, #1
 8017d1a:	f100 8103 	bmi.w	8017f24 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x280>
 8017d1e:	42bb      	cmp	r3, r7
 8017d20:	f340 8100 	ble.w	8017f24 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x280>
 8017d24:	2c00      	cmp	r4, #0
 8017d26:	f000 80ff 	beq.w	8017f28 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x284>
 8017d2a:	3301      	adds	r3, #1
 8017d2c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8017d30:	fa1f fc84 	uxth.w	ip, r4
 8017d34:	fa1f fe8e 	uxth.w	lr, lr
 8017d38:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017d3c:	fb0c f90e 	mul.w	r9, ip, lr
 8017d40:	0e13      	lsrs	r3, r2, #24
 8017d42:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8017d46:	ebc9 1e0e 	rsb	lr, r9, lr, lsl #4
 8017d4a:	9302      	str	r3, [sp, #8]
 8017d4c:	ebac 0709 	sub.w	r7, ip, r9
 8017d50:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8017d54:	fa1f f48e 	uxth.w	r4, lr
 8017d58:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8017d5c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017d60:	ea4f 6b10 	mov.w	fp, r0, lsr #24
 8017d64:	fb0a fe0e 	mul.w	lr, sl, lr
 8017d68:	1b1b      	subs	r3, r3, r4
 8017d6a:	fb0a f606 	mul.w	r6, sl, r6
 8017d6e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8017d72:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8017d76:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017d7a:	b29b      	uxth	r3, r3
 8017d7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017d80:	b2bf      	uxth	r7, r7
 8017d82:	9301      	str	r3, [sp, #4]
 8017d84:	44e6      	add	lr, ip
 8017d86:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8017d8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017d8e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017d92:	f00e 13ff 	and.w	r3, lr, #16711935	; 0xff00ff
 8017d96:	9303      	str	r3, [sp, #12]
 8017d98:	0a33      	lsrs	r3, r6, #8
 8017d9a:	f000 16ff 	and.w	r6, r0, #16711935	; 0xff00ff
 8017d9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017da2:	9304      	str	r3, [sp, #16]
 8017da4:	fb0b f606 	mul.w	r6, fp, r6
 8017da8:	fb0b f000 	mul.w	r0, fp, r0
 8017dac:	ea4f 2e16 	mov.w	lr, r6, lsr #8
 8017db0:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017db4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017db8:	44b6      	add	lr, r6
 8017dba:	f500 7680 	add.w	r6, r0, #256	; 0x100
 8017dbe:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8017dc2:	f005 16ff 	and.w	r6, r5, #16711935	; 0xff00ff
 8017dc6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017dca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017dce:	fb08 f606 	mul.w	r6, r8, r6
 8017dd2:	0a03      	lsrs	r3, r0, #8
 8017dd4:	fb08 f505 	mul.w	r5, r8, r5
 8017dd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ddc:	0a30      	lsrs	r0, r6, #8
 8017dde:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017de2:	9305      	str	r3, [sp, #20]
 8017de4:	0e13      	lsrs	r3, r2, #24
 8017de6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017dea:	fb0e fe07 	mul.w	lr, lr, r7
 8017dee:	4430      	add	r0, r6
 8017df0:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8017df4:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8017df8:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8017dfc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017e00:	0a00      	lsrs	r0, r0, #8
 8017e02:	435e      	muls	r6, r3
 8017e04:	0a2d      	lsrs	r5, r5, #8
 8017e06:	435a      	muls	r2, r3
 8017e08:	9b03      	ldr	r3, [sp, #12]
 8017e0a:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8017e0e:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017e12:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017e16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017e1a:	44b4      	add	ip, r6
 8017e1c:	f502 7680 	add.w	r6, r2, #256	; 0x100
 8017e20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e24:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8017e28:	9e01      	ldr	r6, [sp, #4]
 8017e2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017e2e:	fb03 ee06 	mla	lr, r3, r6, lr
 8017e32:	9b04      	ldr	r3, [sp, #16]
 8017e34:	0a12      	lsrs	r2, r2, #8
 8017e36:	fb0c ee09 	mla	lr, ip, r9, lr
 8017e3a:	f403 467f 	and.w	r6, r3, #65280	; 0xff00
 8017e3e:	9b05      	ldr	r3, [sp, #20]
 8017e40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017e44:	fb00 ee04 	mla	lr, r0, r4, lr
 8017e48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e4c:	f00e 10ff 	and.w	r0, lr, #16711935	; 0xff00ff
 8017e50:	f403 4e7f 	and.w	lr, r3, #65280	; 0xff00
 8017e54:	9b01      	ldr	r3, [sp, #4]
 8017e56:	fb07 fe0e 	mul.w	lr, r7, lr
 8017e5a:	fb07 f70b 	mul.w	r7, r7, fp
 8017e5e:	fb03 ee06 	mla	lr, r3, r6, lr
 8017e62:	fb03 730a 	mla	r3, r3, sl, r7
 8017e66:	fb09 e202 	mla	r2, r9, r2, lr
 8017e6a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8017e6e:	fb04 2e0e 	mla	lr, r4, lr, r2
 8017e72:	f89d 2054 	ldrb.w	r2, [sp, #84]	; 0x54
 8017e76:	fb04 3408 	mla	r4, r4, r8, r3
 8017e7a:	9b02      	ldr	r3, [sp, #8]
 8017e7c:	b292      	uxth	r2, r2
 8017e7e:	fb09 4903 	mla	r9, r9, r3, r4
 8017e82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e86:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8017e8a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017e8e:	fb09 f902 	mul.w	r9, r9, r2
 8017e92:	ea40 0e0e 	orr.w	lr, r0, lr
 8017e96:	f109 0301 	add.w	r3, r9, #1
 8017e9a:	fa5f f08e 	uxtb.w	r0, lr
 8017e9e:	fb10 f002 	smulbb	r0, r0, r2
 8017ea2:	eb03 2919 	add.w	r9, r3, r9, lsr #8
 8017ea6:	780b      	ldrb	r3, [r1, #0]
 8017ea8:	ea6f 2919 	mvn.w	r9, r9, lsr #8
 8017eac:	fa5f f989 	uxtb.w	r9, r9
 8017eb0:	fb03 0309 	mla	r3, r3, r9, r0
 8017eb4:	b29b      	uxth	r3, r3
 8017eb6:	1c58      	adds	r0, r3, #1
 8017eb8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017ebc:	7848      	ldrb	r0, [r1, #1]
 8017ebe:	fb10 f009 	smulbb	r0, r0, r9
 8017ec2:	121b      	asrs	r3, r3, #8
 8017ec4:	700b      	strb	r3, [r1, #0]
 8017ec6:	f3ce 2307 	ubfx	r3, lr, #8, #8
 8017eca:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 8017ece:	fb03 0302 	mla	r3, r3, r2, r0
 8017ed2:	b29b      	uxth	r3, r3
 8017ed4:	1c58      	adds	r0, r3, #1
 8017ed6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017eda:	121b      	asrs	r3, r3, #8
 8017edc:	704b      	strb	r3, [r1, #1]
 8017ede:	788b      	ldrb	r3, [r1, #2]
 8017ee0:	fb13 f909 	smulbb	r9, r3, r9
 8017ee4:	fb0e 9e02 	mla	lr, lr, r2, r9
 8017ee8:	fa1f fe8e 	uxth.w	lr, lr
 8017eec:	f10e 0301 	add.w	r3, lr, #1
 8017ef0:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8017ef4:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8017ef8:	f881 e002 	strb.w	lr, [r1, #2]
 8017efc:	b007      	add	sp, #28
 8017efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f02:	2600      	movs	r6, #0
 8017f04:	e6eb      	b.n	8017cde <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3a>
 8017f06:	2000      	movs	r0, #0
 8017f08:	4606      	mov	r6, r0
 8017f0a:	e6f3      	b.n	8017cf4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 8017f0c:	2000      	movs	r0, #0
 8017f0e:	e6f1      	b.n	8017cf4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 8017f10:	4620      	mov	r0, r4
 8017f12:	e6ef      	b.n	8017cf4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x50>
 8017f14:	2500      	movs	r5, #0
 8017f16:	e6ff      	b.n	8017d18 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x74>
 8017f18:	2200      	movs	r2, #0
 8017f1a:	4615      	mov	r5, r2
 8017f1c:	e708      	b.n	8017d30 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 8017f1e:	4672      	mov	r2, lr
 8017f20:	4675      	mov	r5, lr
 8017f22:	e705      	b.n	8017d30 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 8017f24:	2200      	movs	r2, #0
 8017f26:	e703      	b.n	8017d30 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>
 8017f28:	4622      	mov	r2, r4
 8017f2a:	e701      	b.n	8017d30 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8c>

08017f2c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f30:	b09d      	sub	sp, #116	; 0x74
 8017f32:	9219      	str	r2, [sp, #100]	; 0x64
 8017f34:	9307      	str	r3, [sp, #28]
 8017f36:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017f38:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8017f3c:	901b      	str	r0, [sp, #108]	; 0x6c
 8017f3e:	931a      	str	r3, [sp, #104]	; 0x68
 8017f40:	6850      	ldr	r0, [r2, #4]
 8017f42:	9117      	str	r1, [sp, #92]	; 0x5c
 8017f44:	6812      	ldr	r2, [r2, #0]
 8017f46:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017f4a:	e9dd 5627 	ldrd	r5, r6, [sp, #156]	; 0x9c
 8017f4e:	fb00 1303 	mla	r3, r0, r3, r1
 8017f52:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017f56:	18d3      	adds	r3, r2, r3
 8017f58:	930a      	str	r3, [sp, #40]	; 0x28
 8017f5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017f5c:	681b      	ldr	r3, [r3, #0]
 8017f5e:	9310      	str	r3, [sp, #64]	; 0x40
 8017f60:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8017f64:	930b      	str	r3, [sp, #44]	; 0x2c
 8017f66:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017f68:	2b00      	cmp	r3, #0
 8017f6a:	dc03      	bgt.n	8017f74 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017f6c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017f6e:	2b00      	cmp	r3, #0
 8017f70:	f340 8368 	ble.w	8018644 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 8017f74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017f76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017f7e:	1e48      	subs	r0, r1, #1
 8017f80:	1e57      	subs	r7, r2, #1
 8017f82:	9b07      	ldr	r3, [sp, #28]
 8017f84:	2b00      	cmp	r3, #0
 8017f86:	f340 8187 	ble.w	8018298 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017f8a:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8017f8e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017f92:	d406      	bmi.n	8017fa2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017f94:	4584      	cmp	ip, r0
 8017f96:	da04      	bge.n	8017fa2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017f98:	2b00      	cmp	r3, #0
 8017f9a:	db02      	blt.n	8017fa2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017f9c:	42bb      	cmp	r3, r7
 8017f9e:	f2c0 817c 	blt.w	801829a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8017fa2:	f11c 0c01 	adds.w	ip, ip, #1
 8017fa6:	f100 816c 	bmi.w	8018282 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8017faa:	4561      	cmp	r1, ip
 8017fac:	f2c0 8169 	blt.w	8018282 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8017fb0:	3301      	adds	r3, #1
 8017fb2:	f100 8166 	bmi.w	8018282 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8017fb6:	429a      	cmp	r2, r3
 8017fb8:	f2c0 8163 	blt.w	8018282 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8017fbc:	9b07      	ldr	r3, [sp, #28]
 8017fbe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017fc0:	9318      	str	r3, [sp, #96]	; 0x60
 8017fc2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017fc4:	2b00      	cmp	r3, #0
 8017fc6:	f340 8186 	ble.w	80182d6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017fca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017fcc:	142a      	asrs	r2, r5, #16
 8017fce:	ea4f 4026 	mov.w	r0, r6, asr #16
 8017fd2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017fd6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8017fda:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8017fde:	f100 81cb 	bmi.w	8018378 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8017fe2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017fe6:	4542      	cmp	r2, r8
 8017fe8:	f280 81c6 	bge.w	8018378 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8017fec:	2800      	cmp	r0, #0
 8017fee:	f2c0 81c3 	blt.w	8018378 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8017ff2:	f103 38ff 	add.w	r8, r3, #4294967295
 8017ff6:	4540      	cmp	r0, r8
 8017ff8:	f280 81be 	bge.w	8018378 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8017ffc:	fa0f f38e 	sxth.w	r3, lr
 8018000:	fb00 2203 	mla	r2, r0, r3, r2
 8018004:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018006:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 801800a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 801800e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018012:	2900      	cmp	r1, #0
 8018014:	f000 81a6 	beq.w	8018364 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8018018:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801801c:	900c      	str	r0, [sp, #48]	; 0x30
 801801e:	0e00      	lsrs	r0, r0, #24
 8018020:	9013      	str	r0, [sp, #76]	; 0x4c
 8018022:	f1bc 0f00 	cmp.w	ip, #0
 8018026:	d00f      	beq.n	8018048 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018028:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801802c:	3b01      	subs	r3, #1
 801802e:	009b      	lsls	r3, r3, #2
 8018030:	3304      	adds	r3, #4
 8018032:	eb08 0003 	add.w	r0, r8, r3
 8018036:	f858 3003 	ldr.w	r3, [r8, r3]
 801803a:	9308      	str	r3, [sp, #32]
 801803c:	0e1b      	lsrs	r3, r3, #24
 801803e:	9311      	str	r3, [sp, #68]	; 0x44
 8018040:	6843      	ldr	r3, [r0, #4]
 8018042:	930d      	str	r3, [sp, #52]	; 0x34
 8018044:	0e1b      	lsrs	r3, r3, #24
 8018046:	9314      	str	r3, [sp, #80]	; 0x50
 8018048:	b289      	uxth	r1, r1
 801804a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801804c:	fa1f fc8c 	uxth.w	ip, ip
 8018050:	0108      	lsls	r0, r1, #4
 8018052:	fb01 f90c 	mul.w	r9, r1, ip
 8018056:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801805a:	ebc9 1c0c 	rsb	ip, r9, ip, lsl #4
 801805e:	eba0 0809 	sub.w	r8, r0, r9
 8018062:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018064:	fa1f f18c 	uxth.w	r1, ip
 8018068:	fa1f f888 	uxth.w	r8, r8
 801806c:	1a5b      	subs	r3, r3, r1
 801806e:	fb08 f000 	mul.w	r0, r8, r0
 8018072:	b29b      	uxth	r3, r3
 8018074:	fb03 000e 	mla	r0, r3, lr, r0
 8018078:	fb01 0004 	mla	r0, r1, r4, r0
 801807c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801807e:	fb09 0004 	mla	r0, r9, r4, r0
 8018082:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018086:	2800      	cmp	r0, #0
 8018088:	f000 80f2 	beq.w	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801808c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018090:	d01b      	beq.n	80180ca <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8018092:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8018096:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801809a:	fb0e fa0a 	mul.w	sl, lr, sl
 801809e:	fb0e fe02 	mul.w	lr, lr, r2
 80180a2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80180a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80180aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80180ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80180b2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80180b6:	4452      	add	r2, sl
 80180b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180bc:	0a12      	lsrs	r2, r2, #8
 80180be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80180c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80180c6:	ea42 020c 	orr.w	r2, r2, ip
 80180ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80180cc:	2cff      	cmp	r4, #255	; 0xff
 80180ce:	d021      	beq.n	8018114 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80180d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80180d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80180d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80180dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80180de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80180e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80180e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80180e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80180ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80180f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80180f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80180f8:	44de      	add	lr, fp
 80180fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80180fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018102:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018106:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801810a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801810e:	ea4e 040a 	orr.w	r4, lr, sl
 8018112:	940c      	str	r4, [sp, #48]	; 0x30
 8018114:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018116:	2cff      	cmp	r4, #255	; 0xff
 8018118:	d021      	beq.n	801815e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801811a:	9c08      	ldr	r4, [sp, #32]
 801811c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018120:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018122:	fb04 fb0b 	mul.w	fp, r4, fp
 8018126:	9c08      	ldr	r4, [sp, #32]
 8018128:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801812c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801812e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018132:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018136:	fb04 fa0a 	mul.w	sl, r4, sl
 801813a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801813e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018142:	44de      	add	lr, fp
 8018144:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018148:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801814c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018150:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018154:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018158:	ea4e 040a 	orr.w	r4, lr, sl
 801815c:	9408      	str	r4, [sp, #32]
 801815e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018160:	2cff      	cmp	r4, #255	; 0xff
 8018162:	d021      	beq.n	80181a8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018164:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018166:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801816a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801816c:	fb04 fb0b 	mul.w	fp, r4, fp
 8018170:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018172:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018176:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018178:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801817c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018180:	fb04 fa0a 	mul.w	sl, r4, sl
 8018184:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018188:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801818c:	44de      	add	lr, fp
 801818e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018192:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018196:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801819a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801819e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80181a2:	ea4e 040a 	orr.w	r4, lr, sl
 80181a6:	940d      	str	r4, [sp, #52]	; 0x34
 80181a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80181aa:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80181ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80181b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80181b6:	9c08      	ldr	r4, [sp, #32]
 80181b8:	fb08 fc0c 	mul.w	ip, r8, ip
 80181bc:	fb03 cc0e 	mla	ip, r3, lr, ip
 80181c0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181c4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80181c6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80181ca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80181d0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80181d4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80181d8:	fb08 f80e 	mul.w	r8, r8, lr
 80181dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181e0:	fb03 8202 	mla	r2, r3, r2, r8
 80181e4:	9b08      	ldr	r3, [sp, #32]
 80181e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ea:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80181ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181f0:	fb01 220a 	mla	r2, r1, sl, r2
 80181f4:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80181f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181fa:	fb09 2901 	mla	r9, r9, r1, r2
 80181fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8018200:	4343      	muls	r3, r0
 8018202:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018206:	1c58      	adds	r0, r3, #1
 8018208:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801820c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018210:	783b      	ldrb	r3, [r7, #0]
 8018212:	ea4c 0c09 	orr.w	ip, ip, r9
 8018216:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801821a:	fa5f f28c 	uxtb.w	r2, ip
 801821e:	b2c0      	uxtb	r0, r0
 8018220:	fb12 f201 	smulbb	r2, r2, r1
 8018224:	fb03 2300 	mla	r3, r3, r0, r2
 8018228:	b29b      	uxth	r3, r3
 801822a:	1c5a      	adds	r2, r3, #1
 801822c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018230:	787a      	ldrb	r2, [r7, #1]
 8018232:	fb12 f200 	smulbb	r2, r2, r0
 8018236:	121b      	asrs	r3, r3, #8
 8018238:	703b      	strb	r3, [r7, #0]
 801823a:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801823e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8018242:	fb03 2301 	mla	r3, r3, r1, r2
 8018246:	b29b      	uxth	r3, r3
 8018248:	1c5a      	adds	r2, r3, #1
 801824a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801824e:	121b      	asrs	r3, r3, #8
 8018250:	707b      	strb	r3, [r7, #1]
 8018252:	78bb      	ldrb	r3, [r7, #2]
 8018254:	fb13 f000 	smulbb	r0, r3, r0
 8018258:	fb0c 0c01 	mla	ip, ip, r1, r0
 801825c:	fa1f fc8c 	uxth.w	ip, ip
 8018260:	f10c 0301 	add.w	r3, ip, #1
 8018264:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018268:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801826c:	f887 c002 	strb.w	ip, [r7, #2]
 8018270:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018272:	3703      	adds	r7, #3
 8018274:	441d      	add	r5, r3
 8018276:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018278:	441e      	add	r6, r3
 801827a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801827c:	3b01      	subs	r3, #1
 801827e:	9318      	str	r3, [sp, #96]	; 0x60
 8018280:	e69f      	b.n	8017fc2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018282:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018284:	441d      	add	r5, r3
 8018286:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018288:	441e      	add	r6, r3
 801828a:	9b07      	ldr	r3, [sp, #28]
 801828c:	3b01      	subs	r3, #1
 801828e:	9307      	str	r3, [sp, #28]
 8018290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018292:	3303      	adds	r3, #3
 8018294:	930a      	str	r3, [sp, #40]	; 0x28
 8018296:	e674      	b.n	8017f82 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8018298:	d025      	beq.n	80182e6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 801829a:	9b07      	ldr	r3, [sp, #28]
 801829c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801829e:	3b01      	subs	r3, #1
 80182a0:	fb00 5003 	mla	r0, r0, r3, r5
 80182a4:	1400      	asrs	r0, r0, #16
 80182a6:	f53f ae89 	bmi.w	8017fbc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182aa:	3901      	subs	r1, #1
 80182ac:	4288      	cmp	r0, r1
 80182ae:	f6bf ae85 	bge.w	8017fbc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182b2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80182b4:	fb01 6303 	mla	r3, r1, r3, r6
 80182b8:	141b      	asrs	r3, r3, #16
 80182ba:	f53f ae7f 	bmi.w	8017fbc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182be:	3a01      	subs	r2, #1
 80182c0:	4293      	cmp	r3, r2
 80182c2:	f6bf ae7b 	bge.w	8017fbc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80182c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80182cc:	f103 0e03 	add.w	lr, r3, #3
 80182d0:	f1bb 0f00 	cmp.w	fp, #0
 80182d4:	dc6e      	bgt.n	80183b4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80182d6:	9b07      	ldr	r3, [sp, #28]
 80182d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80182dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80182de:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80182e2:	4423      	add	r3, r4
 80182e4:	930a      	str	r3, [sp, #40]	; 0x28
 80182e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80182e8:	2b00      	cmp	r3, #0
 80182ea:	f340 81ab 	ble.w	8018644 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 80182ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80182f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80182f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80182f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80182fc:	eef0 6a62 	vmov.f32	s13, s5
 8018300:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018304:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018308:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801830c:	ee16 5a90 	vmov	r5, s13
 8018310:	eef0 6a43 	vmov.f32	s13, s6
 8018314:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018318:	ee16 6a90 	vmov	r6, s13
 801831c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018320:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018324:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018328:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801832c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018330:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018334:	ee12 2a90 	vmov	r2, s5
 8018338:	eef0 2a47 	vmov.f32	s5, s14
 801833c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018340:	ee13 2a10 	vmov	r2, s6
 8018344:	9329      	str	r3, [sp, #164]	; 0xa4
 8018346:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018348:	eeb0 3a67 	vmov.f32	s6, s15
 801834c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018350:	932a      	str	r3, [sp, #168]	; 0xa8
 8018352:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018354:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8018356:	3b01      	subs	r3, #1
 8018358:	9317      	str	r3, [sp, #92]	; 0x5c
 801835a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801835c:	bf08      	it	eq
 801835e:	4613      	moveq	r3, r2
 8018360:	9307      	str	r3, [sp, #28]
 8018362:	e600      	b.n	8017f66 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018364:	f1bc 0f00 	cmp.w	ip, #0
 8018368:	f43f ae6e 	beq.w	8018048 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801836c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8018370:	9308      	str	r3, [sp, #32]
 8018372:	0e1b      	lsrs	r3, r3, #24
 8018374:	9311      	str	r3, [sp, #68]	; 0x44
 8018376:	e667      	b.n	8018048 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018378:	f112 0801 	adds.w	r8, r2, #1
 801837c:	f53f af78 	bmi.w	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018380:	45c6      	cmp	lr, r8
 8018382:	f6ff af75 	blt.w	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018386:	f110 0801 	adds.w	r8, r0, #1
 801838a:	f53f af71 	bmi.w	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801838e:	4543      	cmp	r3, r8
 8018390:	f6ff af6e 	blt.w	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018394:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8018396:	b21b      	sxth	r3, r3
 8018398:	9201      	str	r2, [sp, #4]
 801839a:	9300      	str	r3, [sp, #0]
 801839c:	fa0f f38e 	sxth.w	r3, lr
 80183a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80183a2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80183a6:	e9cd c404 	strd	ip, r4, [sp, #16]
 80183aa:	4639      	mov	r1, r7
 80183ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80183ae:	f7ff fc79 	bl	8017ca4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>
 80183b2:	e75d      	b.n	8018270 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80183b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80183b6:	142f      	asrs	r7, r5, #16
 80183b8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80183ba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80183be:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80183c2:	1433      	asrs	r3, r6, #16
 80183c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80183c8:	fb02 7303 	mla	r3, r2, r3, r7
 80183cc:	eb04 0783 	add.w	r7, r4, r3, lsl #2
 80183d0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80183d4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80183d8:	2900      	cmp	r1, #0
 80183da:	f000 812a 	beq.w	8018632 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80183de:	687c      	ldr	r4, [r7, #4]
 80183e0:	940e      	str	r4, [sp, #56]	; 0x38
 80183e2:	0e24      	lsrs	r4, r4, #24
 80183e4:	9415      	str	r4, [sp, #84]	; 0x54
 80183e6:	b178      	cbz	r0, 8018408 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 80183e8:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80183ec:	3a01      	subs	r2, #1
 80183ee:	0092      	lsls	r2, r2, #2
 80183f0:	3204      	adds	r2, #4
 80183f2:	eb07 0802 	add.w	r8, r7, r2
 80183f6:	58ba      	ldr	r2, [r7, r2]
 80183f8:	9209      	str	r2, [sp, #36]	; 0x24
 80183fa:	0e12      	lsrs	r2, r2, #24
 80183fc:	9212      	str	r2, [sp, #72]	; 0x48
 80183fe:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018402:	920f      	str	r2, [sp, #60]	; 0x3c
 8018404:	0e12      	lsrs	r2, r2, #24
 8018406:	9216      	str	r2, [sp, #88]	; 0x58
 8018408:	b289      	uxth	r1, r1
 801840a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801840c:	b280      	uxth	r0, r0
 801840e:	fb01 f900 	mul.w	r9, r1, r0
 8018412:	0109      	lsls	r1, r1, #4
 8018414:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018418:	eba1 0809 	sub.w	r8, r1, r9
 801841c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018420:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018422:	b280      	uxth	r0, r0
 8018424:	fa1f f888 	uxth.w	r8, r8
 8018428:	1a12      	subs	r2, r2, r0
 801842a:	fb08 f101 	mul.w	r1, r8, r1
 801842e:	b292      	uxth	r2, r2
 8018430:	fb02 110c 	mla	r1, r2, ip, r1
 8018434:	fb00 1104 	mla	r1, r0, r4, r1
 8018438:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801843a:	fb09 1104 	mla	r1, r9, r4, r1
 801843e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018442:	2900      	cmp	r1, #0
 8018444:	f000 80ec 	beq.w	8018620 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f4>
 8018448:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801844c:	d019      	beq.n	8018482 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801844e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018452:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018456:	fb0c fa0a 	mul.w	sl, ip, sl
 801845a:	fb0c fc03 	mul.w	ip, ip, r3
 801845e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018462:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018466:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801846a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801846e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018472:	4453      	add	r3, sl
 8018474:	0a3f      	lsrs	r7, r7, #8
 8018476:	0a1b      	lsrs	r3, r3, #8
 8018478:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801847c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018480:	433b      	orrs	r3, r7
 8018482:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018484:	2cff      	cmp	r4, #255	; 0xff
 8018486:	d020      	beq.n	80184ca <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59e>
 8018488:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801848a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801848e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018490:	4367      	muls	r7, r4
 8018492:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018494:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018498:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801849c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801849e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80184aa:	44bc      	add	ip, r7
 80184ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80184b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80184b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80184c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80184c4:	ea4c 040a 	orr.w	r4, ip, sl
 80184c8:	940e      	str	r4, [sp, #56]	; 0x38
 80184ca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80184cc:	2cff      	cmp	r4, #255	; 0xff
 80184ce:	d020      	beq.n	8018512 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e6>
 80184d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80184d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80184d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80184d8:	4367      	muls	r7, r4
 80184da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80184dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80184e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80184e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80184f2:	44bc      	add	ip, r7
 80184f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80184f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018504:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801850c:	ea4c 040a 	orr.w	r4, ip, sl
 8018510:	9409      	str	r4, [sp, #36]	; 0x24
 8018512:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018514:	2cff      	cmp	r4, #255	; 0xff
 8018516:	d020      	beq.n	801855a <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62e>
 8018518:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801851a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801851e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018520:	4367      	muls	r7, r4
 8018522:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018524:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018528:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801852c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801852e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018532:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018536:	fb04 fa0a 	mul.w	sl, r4, sl
 801853a:	44bc      	add	ip, r7
 801853c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018544:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801854c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018550:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018554:	ea4c 040a 	orr.w	r4, ip, sl
 8018558:	940f      	str	r4, [sp, #60]	; 0x3c
 801855a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801855c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018560:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018564:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018568:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801856a:	fb08 f707 	mul.w	r7, r8, r7
 801856e:	fb02 770c 	mla	r7, r2, ip, r7
 8018572:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018576:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018578:	fb00 770c 	mla	r7, r0, ip, r7
 801857c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018580:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018582:	fb09 770c 	mla	r7, r9, ip, r7
 8018586:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801858a:	fb08 f80c 	mul.w	r8, r8, ip
 801858e:	0a3f      	lsrs	r7, r7, #8
 8018590:	fb02 8303 	mla	r3, r2, r3, r8
 8018594:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018596:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801859a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801859e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80185a0:	fb00 330a 	mla	r3, r0, sl, r3
 80185a4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80185a8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80185aa:	fb09 3c0c 	mla	ip, r9, ip, r3
 80185ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80185b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80185b4:	434b      	muls	r3, r1
 80185b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80185ba:	1c59      	adds	r1, r3, #1
 80185bc:	ea47 070c 	orr.w	r7, r7, ip
 80185c0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80185c4:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 80185c8:	b2fa      	uxtb	r2, r7
 80185ca:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80185ce:	fb12 f200 	smulbb	r2, r2, r0
 80185d2:	b2c9      	uxtb	r1, r1
 80185d4:	fb03 2301 	mla	r3, r3, r1, r2
 80185d8:	b29b      	uxth	r3, r3
 80185da:	1c5a      	adds	r2, r3, #1
 80185dc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80185e0:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 80185e4:	fb12 f201 	smulbb	r2, r2, r1
 80185e8:	121b      	asrs	r3, r3, #8
 80185ea:	f80e 3c03 	strb.w	r3, [lr, #-3]
 80185ee:	f3c7 2307 	ubfx	r3, r7, #8, #8
 80185f2:	0c3f      	lsrs	r7, r7, #16
 80185f4:	fb03 2300 	mla	r3, r3, r0, r2
 80185f8:	b29b      	uxth	r3, r3
 80185fa:	1c5a      	adds	r2, r3, #1
 80185fc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018600:	121b      	asrs	r3, r3, #8
 8018602:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8018606:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801860a:	fb13 f101 	smulbb	r1, r3, r1
 801860e:	fb07 1700 	mla	r7, r7, r0, r1
 8018612:	b2bf      	uxth	r7, r7
 8018614:	1c79      	adds	r1, r7, #1
 8018616:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801861a:	123f      	asrs	r7, r7, #8
 801861c:	f80e 7c01 	strb.w	r7, [lr, #-1]
 8018620:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018622:	f10e 0e03 	add.w	lr, lr, #3
 8018626:	f10b 3bff 	add.w	fp, fp, #4294967295
 801862a:	441d      	add	r5, r3
 801862c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801862e:	441e      	add	r6, r3
 8018630:	e64e      	b.n	80182d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8018632:	2800      	cmp	r0, #0
 8018634:	f43f aee8 	beq.w	8018408 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8018638:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801863c:	9209      	str	r2, [sp, #36]	; 0x24
 801863e:	0e12      	lsrs	r2, r2, #24
 8018640:	9212      	str	r2, [sp, #72]	; 0x48
 8018642:	e6e1      	b.n	8018408 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8018644:	b01d      	add	sp, #116	; 0x74
 8018646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801864a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>:
 801864a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801864e:	b087      	sub	sp, #28
 8018650:	e9dd 7511 	ldrd	r7, r5, [sp, #68]	; 0x44
 8018654:	f9bd 8040 	ldrsh.w	r8, [sp, #64]	; 0x40
 8018658:	fb05 7003 	mla	r0, r5, r3, r7
 801865c:	2d00      	cmp	r5, #0
 801865e:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8018662:	f89d e050 	ldrb.w	lr, [sp, #80]	; 0x50
 8018666:	eb02 0c80 	add.w	ip, r2, r0, lsl #2
 801866a:	f2c0 810a 	blt.w	8018882 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x238>
 801866e:	45a8      	cmp	r8, r5
 8018670:	f340 8107 	ble.w	8018882 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x238>
 8018674:	2f00      	cmp	r7, #0
 8018676:	f2c0 8102 	blt.w	801887e <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x234>
 801867a:	42bb      	cmp	r3, r7
 801867c:	f340 80ff 	ble.w	801887e <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x234>
 8018680:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 8018684:	1c7a      	adds	r2, r7, #1
 8018686:	f100 80ff 	bmi.w	8018888 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x23e>
 801868a:	4293      	cmp	r3, r2
 801868c:	f340 80fc 	ble.w	8018888 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x23e>
 8018690:	2c00      	cmp	r4, #0
 8018692:	f000 80fb 	beq.w	801888c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x242>
 8018696:	f8dc 0004 	ldr.w	r0, [ip, #4]
 801869a:	3501      	adds	r5, #1
 801869c:	f100 80fa 	bmi.w	8018894 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x24a>
 80186a0:	45a8      	cmp	r8, r5
 80186a2:	f340 80f7 	ble.w	8018894 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x24a>
 80186a6:	f1be 0f00 	cmp.w	lr, #0
 80186aa:	f000 80f6 	beq.w	801889a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x250>
 80186ae:	2f00      	cmp	r7, #0
 80186b0:	f2c0 80ee 	blt.w	8018890 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x246>
 80186b4:	42bb      	cmp	r3, r7
 80186b6:	f340 80eb 	ble.w	8018890 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x246>
 80186ba:	f85c 5023 	ldr.w	r5, [ip, r3, lsl #2]
 80186be:	3701      	adds	r7, #1
 80186c0:	f100 80ee 	bmi.w	80188a0 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x256>
 80186c4:	42bb      	cmp	r3, r7
 80186c6:	f340 80eb 	ble.w	80188a0 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x256>
 80186ca:	2c00      	cmp	r4, #0
 80186cc:	f000 80ea 	beq.w	80188a4 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x25a>
 80186d0:	3301      	adds	r3, #1
 80186d2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80186d6:	fa1f fc84 	uxth.w	ip, r4
 80186da:	fa1f fe8e 	uxth.w	lr, lr
 80186de:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80186e2:	fb0c f90e 	mul.w	r9, ip, lr
 80186e6:	0e13      	lsrs	r3, r2, #24
 80186e8:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80186ec:	ebc9 1e0e 	rsb	lr, r9, lr, lsl #4
 80186f0:	9302      	str	r3, [sp, #8]
 80186f2:	ebac 0709 	sub.w	r7, ip, r9
 80186f6:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 80186fa:	fa1f f48e 	uxth.w	r4, lr
 80186fe:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8018702:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018706:	ea4f 6b10 	mov.w	fp, r0, lsr #24
 801870a:	fb0a fe0e 	mul.w	lr, sl, lr
 801870e:	1b1b      	subs	r3, r3, r4
 8018710:	fb0a f606 	mul.w	r6, sl, r6
 8018714:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018718:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801871c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018720:	b29b      	uxth	r3, r3
 8018722:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018726:	b2bf      	uxth	r7, r7
 8018728:	9301      	str	r3, [sp, #4]
 801872a:	44e6      	add	lr, ip
 801872c:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8018730:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018734:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8018738:	f00e 13ff 	and.w	r3, lr, #16711935	; 0xff00ff
 801873c:	9303      	str	r3, [sp, #12]
 801873e:	0a33      	lsrs	r3, r6, #8
 8018740:	f000 16ff 	and.w	r6, r0, #16711935	; 0xff00ff
 8018744:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018748:	9304      	str	r3, [sp, #16]
 801874a:	fb0b f606 	mul.w	r6, fp, r6
 801874e:	fb0b f000 	mul.w	r0, fp, r0
 8018752:	ea4f 2e16 	mov.w	lr, r6, lsr #8
 8018756:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 801875a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801875e:	44b6      	add	lr, r6
 8018760:	f500 7680 	add.w	r6, r0, #256	; 0x100
 8018764:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8018768:	f005 16ff 	and.w	r6, r5, #16711935	; 0xff00ff
 801876c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018770:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018774:	fb08 f606 	mul.w	r6, r8, r6
 8018778:	0a03      	lsrs	r3, r0, #8
 801877a:	fb08 f505 	mul.w	r5, r8, r5
 801877e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018782:	0a30      	lsrs	r0, r6, #8
 8018784:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018788:	9305      	str	r3, [sp, #20]
 801878a:	0e13      	lsrs	r3, r2, #24
 801878c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018790:	fb0e fe07 	mul.w	lr, lr, r7
 8018794:	4430      	add	r0, r6
 8018796:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801879a:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801879e:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80187a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80187a6:	0a00      	lsrs	r0, r0, #8
 80187a8:	435e      	muls	r6, r3
 80187aa:	0a2d      	lsrs	r5, r5, #8
 80187ac:	435a      	muls	r2, r3
 80187ae:	9b03      	ldr	r3, [sp, #12]
 80187b0:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 80187b4:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80187b8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80187bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187c0:	44b4      	add	ip, r6
 80187c2:	f502 7680 	add.w	r6, r2, #256	; 0x100
 80187c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187ca:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 80187ce:	9e01      	ldr	r6, [sp, #4]
 80187d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187d4:	fb03 ee06 	mla	lr, r3, r6, lr
 80187d8:	9b04      	ldr	r3, [sp, #16]
 80187da:	0a12      	lsrs	r2, r2, #8
 80187dc:	fb0c ee09 	mla	lr, ip, r9, lr
 80187e0:	f403 467f 	and.w	r6, r3, #65280	; 0xff00
 80187e4:	9b05      	ldr	r3, [sp, #20]
 80187e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80187ea:	fb00 ee04 	mla	lr, r0, r4, lr
 80187ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187f2:	f00e 10ff 	and.w	r0, lr, #16711935	; 0xff00ff
 80187f6:	f403 4e7f 	and.w	lr, r3, #65280	; 0xff00
 80187fa:	9b01      	ldr	r3, [sp, #4]
 80187fc:	fb07 fe0e 	mul.w	lr, r7, lr
 8018800:	fb07 f70b 	mul.w	r7, r7, fp
 8018804:	fb03 ee06 	mla	lr, r3, r6, lr
 8018808:	fb03 730a 	mla	r3, r3, sl, r7
 801880c:	fb09 e202 	mla	r2, r9, r2, lr
 8018810:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018814:	fb04 2e0e 	mla	lr, r4, lr, r2
 8018818:	fb04 3408 	mla	r4, r4, r8, r3
 801881c:	9b02      	ldr	r3, [sp, #8]
 801881e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018822:	fb09 4903 	mla	r9, r9, r3, r4
 8018826:	780b      	ldrb	r3, [r1, #0]
 8018828:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801882c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8018830:	ea40 0e0e 	orr.w	lr, r0, lr
 8018834:	fa5f f989 	uxtb.w	r9, r9
 8018838:	fb03 f209 	mul.w	r2, r3, r9
 801883c:	1c53      	adds	r3, r2, #1
 801883e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018842:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 8018846:	700b      	strb	r3, [r1, #0]
 8018848:	784b      	ldrb	r3, [r1, #1]
 801884a:	fb03 f309 	mul.w	r3, r3, r9
 801884e:	1c5a      	adds	r2, r3, #1
 8018850:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018854:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8018858:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 801885c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018860:	704b      	strb	r3, [r1, #1]
 8018862:	788b      	ldrb	r3, [r1, #2]
 8018864:	fb03 f909 	mul.w	r9, r3, r9
 8018868:	f109 0301 	add.w	r3, r9, #1
 801886c:	eb03 2919 	add.w	r9, r3, r9, lsr #8
 8018870:	eb0e 2e19 	add.w	lr, lr, r9, lsr #8
 8018874:	f881 e002 	strb.w	lr, [r1, #2]
 8018878:	b007      	add	sp, #28
 801887a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801887e:	2600      	movs	r6, #0
 8018880:	e700      	b.n	8018684 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3a>
 8018882:	2000      	movs	r0, #0
 8018884:	4606      	mov	r6, r0
 8018886:	e708      	b.n	801869a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 8018888:	2000      	movs	r0, #0
 801888a:	e706      	b.n	801869a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 801888c:	4620      	mov	r0, r4
 801888e:	e704      	b.n	801869a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x50>
 8018890:	2500      	movs	r5, #0
 8018892:	e714      	b.n	80186be <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x74>
 8018894:	2200      	movs	r2, #0
 8018896:	4615      	mov	r5, r2
 8018898:	e71d      	b.n	80186d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 801889a:	4672      	mov	r2, lr
 801889c:	4675      	mov	r5, lr
 801889e:	e71a      	b.n	80186d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 80188a0:	2200      	movs	r2, #0
 80188a2:	e718      	b.n	80186d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>
 80188a4:	4622      	mov	r2, r4
 80188a6:	e716      	b.n	80186d6 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8c>

080188a8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80188a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188ac:	b099      	sub	sp, #100	; 0x64
 80188ae:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
 80188b2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80188b4:	9017      	str	r0, [sp, #92]	; 0x5c
 80188b6:	9306      	str	r3, [sp, #24]
 80188b8:	6850      	ldr	r0, [r2, #4]
 80188ba:	6812      	ldr	r2, [r2, #0]
 80188bc:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80188c0:	e9dd 5623 	ldrd	r5, r6, [sp, #140]	; 0x8c
 80188c4:	fb00 1303 	mla	r3, r0, r3, r1
 80188c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80188cc:	18d3      	adds	r3, r2, r3
 80188ce:	9309      	str	r3, [sp, #36]	; 0x24
 80188d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80188d2:	681b      	ldr	r3, [r3, #0]
 80188d4:	930e      	str	r3, [sp, #56]	; 0x38
 80188d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80188d8:	2b00      	cmp	r3, #0
 80188da:	dc03      	bgt.n	80188e4 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80188dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80188de:	2b00      	cmp	r3, #0
 80188e0:	f340 8360 	ble.w	8018fa4 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fc>
 80188e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80188e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80188ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80188ee:	1e48      	subs	r0, r1, #1
 80188f0:	1e57      	subs	r7, r2, #1
 80188f2:	9b06      	ldr	r3, [sp, #24]
 80188f4:	2b00      	cmp	r3, #0
 80188f6:	f340 817b 	ble.w	8018bf0 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x348>
 80188fa:	ea5f 4c25 	movs.w	ip, r5, asr #16
 80188fe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018902:	d406      	bmi.n	8018912 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018904:	4584      	cmp	ip, r0
 8018906:	da04      	bge.n	8018912 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018908:	2b00      	cmp	r3, #0
 801890a:	db02      	blt.n	8018912 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801890c:	42bb      	cmp	r3, r7
 801890e:	f2c0 8170 	blt.w	8018bf2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8018912:	f11c 0c01 	adds.w	ip, ip, #1
 8018916:	f100 8160 	bmi.w	8018bda <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801891a:	4561      	cmp	r1, ip
 801891c:	f2c0 815d 	blt.w	8018bda <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8018920:	3301      	adds	r3, #1
 8018922:	f100 815a 	bmi.w	8018bda <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8018926:	429a      	cmp	r2, r3
 8018928:	f2c0 8157 	blt.w	8018bda <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801892c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018930:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018932:	f1b8 0f00 	cmp.w	r8, #0
 8018936:	f340 8179 	ble.w	8018c2c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 801893a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801893c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018940:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018942:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018946:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801894a:	142a      	asrs	r2, r5, #16
 801894c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018950:	689b      	ldr	r3, [r3, #8]
 8018952:	f100 81be 	bmi.w	8018cd2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8018956:	f103 39ff 	add.w	r9, r3, #4294967295
 801895a:	454a      	cmp	r2, r9
 801895c:	f280 81b9 	bge.w	8018cd2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8018960:	f1bc 0f00 	cmp.w	ip, #0
 8018964:	f2c0 81b5 	blt.w	8018cd2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8018968:	f10e 39ff 	add.w	r9, lr, #4294967295
 801896c:	45cc      	cmp	ip, r9
 801896e:	f280 81b0 	bge.w	8018cd2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8018972:	b21b      	sxth	r3, r3
 8018974:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018976:	fb0c 2203 	mla	r2, ip, r3, r2
 801897a:	eb04 0982 	add.w	r9, r4, r2, lsl #2
 801897e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8018982:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018986:	2900      	cmp	r1, #0
 8018988:	f000 8197 	beq.w	8018cba <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801898c:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8018990:	940a      	str	r4, [sp, #40]	; 0x28
 8018992:	0e24      	lsrs	r4, r4, #24
 8018994:	9411      	str	r4, [sp, #68]	; 0x44
 8018996:	b180      	cbz	r0, 80189ba <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8018998:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801899c:	3b01      	subs	r3, #1
 801899e:	009b      	lsls	r3, r3, #2
 80189a0:	3304      	adds	r3, #4
 80189a2:	eb09 0c03 	add.w	ip, r9, r3
 80189a6:	f859 3003 	ldr.w	r3, [r9, r3]
 80189aa:	9307      	str	r3, [sp, #28]
 80189ac:	0e1b      	lsrs	r3, r3, #24
 80189ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80189b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80189b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80189b6:	0e1b      	lsrs	r3, r3, #24
 80189b8:	9312      	str	r3, [sp, #72]	; 0x48
 80189ba:	b289      	uxth	r1, r1
 80189bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80189be:	b280      	uxth	r0, r0
 80189c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80189c2:	fb01 fa00 	mul.w	sl, r1, r0
 80189c6:	0109      	lsls	r1, r1, #4
 80189c8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80189cc:	eba1 090a 	sub.w	r9, r1, sl
 80189d0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80189d4:	b280      	uxth	r0, r0
 80189d6:	fa1f f989 	uxth.w	r9, r9
 80189da:	1a09      	subs	r1, r1, r0
 80189dc:	fb09 f303 	mul.w	r3, r9, r3
 80189e0:	b289      	uxth	r1, r1
 80189e2:	fb01 330e 	mla	r3, r1, lr, r3
 80189e6:	fb00 3304 	mla	r3, r0, r4, r3
 80189ea:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80189ec:	fb0a 3304 	mla	r3, sl, r4, r3
 80189f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80189f4:	2b00      	cmp	r3, #0
 80189f6:	f000 80e8 	beq.w	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80189fa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80189fe:	d01b      	beq.n	8018a38 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x190>
 8018a00:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
 8018a04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018a08:	fb0e fb0b 	mul.w	fp, lr, fp
 8018a0c:	fb0e fe02 	mul.w	lr, lr, r2
 8018a10:	ea4f 221b 	mov.w	r2, fp, lsr #8
 8018a14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018a18:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018a1c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018a20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018a24:	445a      	add	r2, fp
 8018a26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a2a:	0a12      	lsrs	r2, r2, #8
 8018a2c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018a30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018a34:	ea42 020c 	orr.w	r2, r2, ip
 8018a38:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a3a:	2cff      	cmp	r4, #255	; 0xff
 8018a3c:	d021      	beq.n	8018a82 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8018a3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018a40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018a44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a46:	fb04 fc0c 	mul.w	ip, r4, ip
 8018a4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018a4c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018a50:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8018a54:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a56:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018a5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018a62:	44e6      	add	lr, ip
 8018a64:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8018a68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018a6c:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8018a70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a74:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018a78:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018a7c:	ea4e 040b 	orr.w	r4, lr, fp
 8018a80:	940a      	str	r4, [sp, #40]	; 0x28
 8018a82:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018a84:	2cff      	cmp	r4, #255	; 0xff
 8018a86:	d021      	beq.n	8018acc <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018a88:	9c07      	ldr	r4, [sp, #28]
 8018a8a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018a8e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018a90:	fb04 fc0c 	mul.w	ip, r4, ip
 8018a94:	9c07      	ldr	r4, [sp, #28]
 8018a96:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018a9a:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8018a9e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018aa0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018aa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018aa8:	fb04 fb0b 	mul.w	fp, r4, fp
 8018aac:	44e6      	add	lr, ip
 8018aae:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8018ab2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018ab6:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8018aba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018abe:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018ac2:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018ac6:	ea4e 040b 	orr.w	r4, lr, fp
 8018aca:	9407      	str	r4, [sp, #28]
 8018acc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018ace:	2cff      	cmp	r4, #255	; 0xff
 8018ad0:	d021      	beq.n	8018b16 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 8018ad2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018ad4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018ad8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018ada:	fb04 fc0c 	mul.w	ip, r4, ip
 8018ade:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018ae0:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018ae4:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 8018ae8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018aea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018aee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018af2:	fb04 fb0b 	mul.w	fp, r4, fp
 8018af6:	44e6      	add	lr, ip
 8018af8:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 8018afc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018b00:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 8018b04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018b08:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018b0c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018b10:	ea4e 040b 	orr.w	r4, lr, fp
 8018b14:	940b      	str	r4, [sp, #44]	; 0x2c
 8018b16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018b18:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8018b1c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018b20:	2bff      	cmp	r3, #255	; 0xff
 8018b22:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018b26:	9c07      	ldr	r4, [sp, #28]
 8018b28:	fb09 fc0c 	mul.w	ip, r9, ip
 8018b2c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018b30:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018b34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018b36:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018b3a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018b3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018b40:	fb0a cc0e 	mla	ip, sl, lr, ip
 8018b44:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018b48:	fb09 f90e 	mul.w	r9, r9, lr
 8018b4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b50:	fb01 9202 	mla	r2, r1, r2, r9
 8018b54:	9907      	ldr	r1, [sp, #28]
 8018b56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018b5a:	f401 4b7f 	and.w	fp, r1, #65280	; 0xff00
 8018b5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8018b60:	fb00 220b 	mla	r2, r0, fp, r2
 8018b64:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8018b68:	fb0a 2a00 	mla	sl, sl, r0, r2
 8018b6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018b70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018b74:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018b78:	fa5f f08c 	uxtb.w	r0, ip
 8018b7c:	f3cc 2107 	ubfx	r1, ip, #8, #8
 8018b80:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8018b84:	f000 80a2 	beq.w	8018ccc <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8018b88:	43db      	mvns	r3, r3
 8018b8a:	783a      	ldrb	r2, [r7, #0]
 8018b8c:	f897 a002 	ldrb.w	sl, [r7, #2]
 8018b90:	b2db      	uxtb	r3, r3
 8018b92:	fb02 fe03 	mul.w	lr, r2, r3
 8018b96:	fb0a fa03 	mul.w	sl, sl, r3
 8018b9a:	f10e 0201 	add.w	r2, lr, #1
 8018b9e:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 8018ba2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018ba6:	703a      	strb	r2, [r7, #0]
 8018ba8:	787a      	ldrb	r2, [r7, #1]
 8018baa:	fb02 f003 	mul.w	r0, r2, r3
 8018bae:	f10a 0301 	add.w	r3, sl, #1
 8018bb2:	1c42      	adds	r2, r0, #1
 8018bb4:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018bb8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018bbc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018bc0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018bc4:	707a      	strb	r2, [r7, #1]
 8018bc6:	f887 c002 	strb.w	ip, [r7, #2]
 8018bca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018bcc:	3703      	adds	r7, #3
 8018bce:	f108 38ff 	add.w	r8, r8, #4294967295
 8018bd2:	441d      	add	r5, r3
 8018bd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018bd6:	441e      	add	r6, r3
 8018bd8:	e6ab      	b.n	8018932 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018bda:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018bdc:	441d      	add	r5, r3
 8018bde:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018be0:	441e      	add	r6, r3
 8018be2:	9b06      	ldr	r3, [sp, #24]
 8018be4:	3b01      	subs	r3, #1
 8018be6:	9306      	str	r3, [sp, #24]
 8018be8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018bea:	3303      	adds	r3, #3
 8018bec:	9309      	str	r3, [sp, #36]	; 0x24
 8018bee:	e680      	b.n	80188f2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018bf0:	d024      	beq.n	8018c3c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8018bf2:	9b06      	ldr	r3, [sp, #24]
 8018bf4:	9825      	ldr	r0, [sp, #148]	; 0x94
 8018bf6:	3b01      	subs	r3, #1
 8018bf8:	fb00 5003 	mla	r0, r0, r3, r5
 8018bfc:	1400      	asrs	r0, r0, #16
 8018bfe:	f53f ae95 	bmi.w	801892c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c02:	3901      	subs	r1, #1
 8018c04:	4288      	cmp	r0, r1
 8018c06:	f6bf ae91 	bge.w	801892c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c0a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8018c0c:	fb01 6303 	mla	r3, r1, r3, r6
 8018c10:	141b      	asrs	r3, r3, #16
 8018c12:	f53f ae8b 	bmi.w	801892c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c16:	3a01      	subs	r2, #1
 8018c18:	4293      	cmp	r3, r2
 8018c1a:	f6bf ae87 	bge.w	801892c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c20:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018c24:	1cdf      	adds	r7, r3, #3
 8018c26:	f1bb 0f00 	cmp.w	fp, #0
 8018c2a:	dc6e      	bgt.n	8018d0a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8018c2c:	9b06      	ldr	r3, [sp, #24]
 8018c2e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c34:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018c38:	4423      	add	r3, r4
 8018c3a:	9309      	str	r3, [sp, #36]	; 0x24
 8018c3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018c3e:	2b00      	cmp	r3, #0
 8018c40:	f340 81b0 	ble.w	8018fa4 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fc>
 8018c44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018c48:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018c4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c52:	eef0 6a62 	vmov.f32	s13, s5
 8018c56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c62:	ee16 5a90 	vmov	r5, s13
 8018c66:	eef0 6a43 	vmov.f32	s13, s6
 8018c6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c6e:	ee16 6a90 	vmov	r6, s13
 8018c72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c8a:	ee12 2a90 	vmov	r2, s5
 8018c8e:	eef0 2a47 	vmov.f32	s5, s14
 8018c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c96:	ee13 2a10 	vmov	r2, s6
 8018c9a:	9325      	str	r3, [sp, #148]	; 0x94
 8018c9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018c9e:	eeb0 3a67 	vmov.f32	s6, s15
 8018ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ca6:	9326      	str	r3, [sp, #152]	; 0x98
 8018ca8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018caa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018cac:	3b01      	subs	r3, #1
 8018cae:	9315      	str	r3, [sp, #84]	; 0x54
 8018cb0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018cb2:	bf08      	it	eq
 8018cb4:	4613      	moveq	r3, r2
 8018cb6:	9306      	str	r3, [sp, #24]
 8018cb8:	e60d      	b.n	80188d6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018cba:	2800      	cmp	r0, #0
 8018cbc:	f43f ae7d 	beq.w	80189ba <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8018cc0:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8018cc4:	9307      	str	r3, [sp, #28]
 8018cc6:	0e1b      	lsrs	r3, r3, #24
 8018cc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8018cca:	e676      	b.n	80189ba <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8018ccc:	7038      	strb	r0, [r7, #0]
 8018cce:	7079      	strb	r1, [r7, #1]
 8018cd0:	e779      	b.n	8018bc6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018cd2:	f112 0901 	adds.w	r9, r2, #1
 8018cd6:	f53f af78 	bmi.w	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018cda:	454b      	cmp	r3, r9
 8018cdc:	f6ff af75 	blt.w	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018ce0:	f11c 0901 	adds.w	r9, ip, #1
 8018ce4:	f53f af71 	bmi.w	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018ce8:	45ce      	cmp	lr, r9
 8018cea:	f6ff af6e 	blt.w	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018cee:	b21b      	sxth	r3, r3
 8018cf0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8018cf4:	fa0f f28e 	sxth.w	r2, lr
 8018cf8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8018cfc:	9200      	str	r2, [sp, #0]
 8018cfe:	4639      	mov	r1, r7
 8018d00:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018d02:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018d04:	f7ff fca1 	bl	801864a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>
 8018d08:	e75f      	b.n	8018bca <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018d0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d0c:	1429      	asrs	r1, r5, #16
 8018d0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018d10:	f3c5 3203 	ubfx	r2, r5, #12, #4
 8018d14:	f9b3 c008 	ldrsh.w	ip, [r3, #8]
 8018d18:	1433      	asrs	r3, r6, #16
 8018d1a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018d1e:	fb0c 1303 	mla	r3, ip, r3, r1
 8018d22:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018d24:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8018d28:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8018d2c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018d30:	2a00      	cmp	r2, #0
 8018d32:	f000 8129 	beq.w	8018f88 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8018d36:	684c      	ldr	r4, [r1, #4]
 8018d38:	940c      	str	r4, [sp, #48]	; 0x30
 8018d3a:	0e24      	lsrs	r4, r4, #24
 8018d3c:	9413      	str	r4, [sp, #76]	; 0x4c
 8018d3e:	b198      	cbz	r0, 8018d68 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 8018d40:	f10c 4c80 	add.w	ip, ip, #1073741824	; 0x40000000
 8018d44:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018d48:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8018d4c:	f10c 0c04 	add.w	ip, ip, #4
 8018d50:	eb01 080c 	add.w	r8, r1, ip
 8018d54:	f851 100c 	ldr.w	r1, [r1, ip]
 8018d58:	9108      	str	r1, [sp, #32]
 8018d5a:	0e09      	lsrs	r1, r1, #24
 8018d5c:	9110      	str	r1, [sp, #64]	; 0x40
 8018d5e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8018d62:	910d      	str	r1, [sp, #52]	; 0x34
 8018d64:	0e09      	lsrs	r1, r1, #24
 8018d66:	9114      	str	r1, [sp, #80]	; 0x50
 8018d68:	b292      	uxth	r2, r2
 8018d6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018d6c:	b280      	uxth	r0, r0
 8018d6e:	fb02 f900 	mul.w	r9, r2, r0
 8018d72:	0112      	lsls	r2, r2, #4
 8018d74:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018d78:	eba2 0809 	sub.w	r8, r2, r9
 8018d7c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018d80:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018d82:	b280      	uxth	r0, r0
 8018d84:	fa1f f888 	uxth.w	r8, r8
 8018d88:	1a09      	subs	r1, r1, r0
 8018d8a:	fb08 f202 	mul.w	r2, r8, r2
 8018d8e:	b289      	uxth	r1, r1
 8018d90:	fb01 220e 	mla	r2, r1, lr, r2
 8018d94:	fb00 2204 	mla	r2, r0, r4, r2
 8018d98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018d9a:	fb09 2204 	mla	r2, r9, r4, r2
 8018d9e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018da2:	2a00      	cmp	r2, #0
 8018da4:	f000 80e8 	beq.w	8018f78 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8018da8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018dac:	d01b      	beq.n	8018de6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53e>
 8018dae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018db2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018db6:	fb0e fa0a 	mul.w	sl, lr, sl
 8018dba:	fb0e fe03 	mul.w	lr, lr, r3
 8018dbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018dc2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018dc6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018dca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018dce:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018dd2:	4453      	add	r3, sl
 8018dd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018dd8:	0a1b      	lsrs	r3, r3, #8
 8018dda:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018dde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018de2:	ea43 030c 	orr.w	r3, r3, ip
 8018de6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018de8:	2cff      	cmp	r4, #255	; 0xff
 8018dea:	d021      	beq.n	8018e30 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 8018dec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018dee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018df2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018df4:	fb04 fc0c 	mul.w	ip, r4, ip
 8018df8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018dfa:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018dfe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018e02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018e04:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018e08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e0c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018e10:	44e6      	add	lr, ip
 8018e12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018e16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018e1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018e1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018e26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018e2a:	ea4e 040a 	orr.w	r4, lr, sl
 8018e2e:	940c      	str	r4, [sp, #48]	; 0x30
 8018e30:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018e32:	2cff      	cmp	r4, #255	; 0xff
 8018e34:	d021      	beq.n	8018e7a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d2>
 8018e36:	9c08      	ldr	r4, [sp, #32]
 8018e38:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018e3c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018e3e:	fb04 fc0c 	mul.w	ip, r4, ip
 8018e42:	9c08      	ldr	r4, [sp, #32]
 8018e44:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018e48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018e4a:	fb04 fa0e 	mul.w	sl, r4, lr
 8018e4e:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018e52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018e56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e5a:	44e6      	add	lr, ip
 8018e5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018e60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018e64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018e68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018e6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018e74:	ea4e 040a 	orr.w	r4, lr, sl
 8018e78:	9408      	str	r4, [sp, #32]
 8018e7a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e7c:	2cff      	cmp	r4, #255	; 0xff
 8018e7e:	d021      	beq.n	8018ec4 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 8018e80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018e82:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018e86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e88:	fb04 fc0c 	mul.w	ip, r4, ip
 8018e8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018e8e:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018e92:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018e96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e98:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018e9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ea0:	fb04 fa0a 	mul.w	sl, r4, sl
 8018ea4:	44e6      	add	lr, ip
 8018ea6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018eaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018eae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018eb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018eb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018eba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018ebe:	ea4e 040a 	orr.w	r4, lr, sl
 8018ec2:	940d      	str	r4, [sp, #52]	; 0x34
 8018ec4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018ec6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018eca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ece:	2aff      	cmp	r2, #255	; 0xff
 8018ed0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018ed4:	9c08      	ldr	r4, [sp, #32]
 8018ed6:	fb08 fc0c 	mul.w	ip, r8, ip
 8018eda:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018ede:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018ee2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018ee4:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018ee8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018eec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018eee:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018ef2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018ef6:	fb08 f80e 	mul.w	r8, r8, lr
 8018efa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018efe:	fb01 8303 	mla	r3, r1, r3, r8
 8018f02:	9908      	ldr	r1, [sp, #32]
 8018f04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f08:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018f0c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018f0e:	fb00 330a 	mla	r3, r0, sl, r3
 8018f12:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8018f16:	fb09 3e0e 	mla	lr, r9, lr, r3
 8018f1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f1e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018f22:	ea4c 0c0e 	orr.w	ip, ip, lr
 8018f26:	fa5f f08c 	uxtb.w	r0, ip
 8018f2a:	f3cc 2107 	ubfx	r1, ip, #8, #8
 8018f2e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8018f32:	d032      	beq.n	8018f9a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 8018f34:	43d2      	mvns	r2, r2
 8018f36:	f817 ec03 	ldrb.w	lr, [r7, #-3]
 8018f3a:	b2d2      	uxtb	r2, r2
 8018f3c:	fb0e fe02 	mul.w	lr, lr, r2
 8018f40:	f10e 0301 	add.w	r3, lr, #1
 8018f44:	eb03 231e 	add.w	r3, r3, lr, lsr #8
 8018f48:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018f4c:	f817 0c02 	ldrb.w	r0, [r7, #-2]
 8018f50:	4350      	muls	r0, r2
 8018f52:	f807 3c03 	strb.w	r3, [r7, #-3]
 8018f56:	1c43      	adds	r3, r0, #1
 8018f58:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018f5c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8018f60:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8018f64:	4353      	muls	r3, r2
 8018f66:	f807 1c02 	strb.w	r1, [r7, #-2]
 8018f6a:	1c5a      	adds	r2, r3, #1
 8018f6c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018f70:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8018f74:	f807 cc01 	strb.w	ip, [r7, #-1]
 8018f78:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018f7a:	3703      	adds	r7, #3
 8018f7c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018f80:	441d      	add	r5, r3
 8018f82:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018f84:	441e      	add	r6, r3
 8018f86:	e64e      	b.n	8018c26 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018f88:	2800      	cmp	r0, #0
 8018f8a:	f43f aeed 	beq.w	8018d68 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 8018f8e:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8018f92:	9108      	str	r1, [sp, #32]
 8018f94:	0e09      	lsrs	r1, r1, #24
 8018f96:	9110      	str	r1, [sp, #64]	; 0x40
 8018f98:	e6e6      	b.n	8018d68 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c0>
 8018f9a:	f807 0c03 	strb.w	r0, [r7, #-3]
 8018f9e:	f807 1c02 	strb.w	r1, [r7, #-2]
 8018fa2:	e7e7      	b.n	8018f74 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6cc>
 8018fa4:	b019      	add	sp, #100	; 0x64
 8018fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018fac <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>:
 8018fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fb0:	e9dd 400b 	ldrd	r4, r0, [sp, #44]	; 0x2c
 8018fb4:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018fb8:	2c00      	cmp	r4, #0
 8018fba:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8018fbe:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018fc2:	fb00 4e03 	mla	lr, r0, r3, r4
 8018fc6:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
 8018fca:	f2c0 80b8 	blt.w	801913e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 8018fce:	45a1      	cmp	r9, r4
 8018fd0:	f340 80b5 	ble.w	801913e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 8018fd4:	2800      	cmp	r0, #0
 8018fd6:	f2c0 80b2 	blt.w	801913e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 8018fda:	4580      	cmp	r8, r0
 8018fdc:	f340 80af 	ble.w	801913e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x192>
 8018fe0:	ea4f 055e 	mov.w	r5, lr, lsr #1
 8018fe4:	f01e 0f01 	tst.w	lr, #1
 8018fe8:	5d56      	ldrb	r6, [r2, r5]
 8018fea:	bf0c      	ite	eq
 8018fec:	f006 060f 	andeq.w	r6, r6, #15
 8018ff0:	1136      	asrne	r6, r6, #4
 8018ff2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018ff6:	b2f6      	uxtb	r6, r6
 8018ff8:	f114 0a01 	adds.w	sl, r4, #1
 8018ffc:	f100 80a1 	bmi.w	8019142 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 8019000:	45d1      	cmp	r9, sl
 8019002:	f340 809e 	ble.w	8019142 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 8019006:	2800      	cmp	r0, #0
 8019008:	f2c0 809b 	blt.w	8019142 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 801900c:	4580      	cmp	r8, r0
 801900e:	f340 8098 	ble.w	8019142 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x196>
 8019012:	2f00      	cmp	r7, #0
 8019014:	f000 8097 	beq.w	8019146 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19a>
 8019018:	f10e 0b01 	add.w	fp, lr, #1
 801901c:	ea4f 055b 	mov.w	r5, fp, lsr #1
 8019020:	f01b 0f01 	tst.w	fp, #1
 8019024:	5d55      	ldrb	r5, [r2, r5]
 8019026:	bf0c      	ite	eq
 8019028:	f005 050f 	andeq.w	r5, r5, #15
 801902c:	112d      	asrne	r5, r5, #4
 801902e:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8019032:	b2ed      	uxtb	r5, r5
 8019034:	f1bc 0f00 	cmp.w	ip, #0
 8019038:	f000 8089 	beq.w	801914e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a2>
 801903c:	2c00      	cmp	r4, #0
 801903e:	f100 0001 	add.w	r0, r0, #1
 8019042:	f2c0 8082 	blt.w	801914a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 8019046:	45a1      	cmp	r9, r4
 8019048:	dd7f      	ble.n	801914a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801904a:	2800      	cmp	r0, #0
 801904c:	db7d      	blt.n	801914a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 801904e:	4580      	cmp	r8, r0
 8019050:	dd7b      	ble.n	801914a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x19e>
 8019052:	eb03 0b0e 	add.w	fp, r3, lr
 8019056:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801905a:	f01b 0f01 	tst.w	fp, #1
 801905e:	5d14      	ldrb	r4, [r2, r4]
 8019060:	bf0c      	ite	eq
 8019062:	f004 040f 	andeq.w	r4, r4, #15
 8019066:	1124      	asrne	r4, r4, #4
 8019068:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801906c:	b2e4      	uxtb	r4, r4
 801906e:	f1ba 0f00 	cmp.w	sl, #0
 8019072:	db6f      	blt.n	8019154 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 8019074:	45d1      	cmp	r9, sl
 8019076:	dd6d      	ble.n	8019154 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 8019078:	2800      	cmp	r0, #0
 801907a:	db6b      	blt.n	8019154 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 801907c:	4580      	cmp	r8, r0
 801907e:	dd69      	ble.n	8019154 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1a8>
 8019080:	2f00      	cmp	r7, #0
 8019082:	d069      	beq.n	8019158 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1ac>
 8019084:	3301      	adds	r3, #1
 8019086:	449e      	add	lr, r3
 8019088:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801908c:	f01e 0f01 	tst.w	lr, #1
 8019090:	5cd0      	ldrb	r0, [r2, r3]
 8019092:	bf0c      	ite	eq
 8019094:	f000 000f 	andeq.w	r0, r0, #15
 8019098:	1100      	asrne	r0, r0, #4
 801909a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801909e:	b2c3      	uxtb	r3, r0
 80190a0:	b2ba      	uxth	r2, r7
 80190a2:	fa1f fc8c 	uxth.w	ip, ip
 80190a6:	fb02 f00c 	mul.w	r0, r2, ip
 80190aa:	0112      	lsls	r2, r2, #4
 80190ac:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80190b0:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80190b4:	1a12      	subs	r2, r2, r0
 80190b6:	fa1f fc8c 	uxth.w	ip, ip
 80190ba:	b292      	uxth	r2, r2
 80190bc:	eba7 070c 	sub.w	r7, r7, ip
 80190c0:	436a      	muls	r2, r5
 80190c2:	b2bf      	uxth	r7, r7
 80190c4:	fb06 2207 	mla	r2, r6, r7, r2
 80190c8:	fb0c 2404 	mla	r4, ip, r4, r2
 80190cc:	fb00 4303 	mla	r3, r0, r3, r4
 80190d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80190d4:	b38b      	cbz	r3, 801913a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x18e>
 80190d6:	4a21      	ldr	r2, [pc, #132]	; (801915c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b0>)
 80190d8:	6814      	ldr	r4, [r2, #0]
 80190da:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 80190de:	b2e5      	uxtb	r5, r4
 80190e0:	4353      	muls	r3, r2
 80190e2:	1c5a      	adds	r2, r3, #1
 80190e4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80190e8:	1212      	asrs	r2, r2, #8
 80190ea:	b290      	uxth	r0, r2
 80190ec:	43d2      	mvns	r2, r2
 80190ee:	fb15 f500 	smulbb	r5, r5, r0
 80190f2:	b2d3      	uxtb	r3, r2
 80190f4:	780a      	ldrb	r2, [r1, #0]
 80190f6:	fb02 5203 	mla	r2, r2, r3, r5
 80190fa:	b292      	uxth	r2, r2
 80190fc:	1c55      	adds	r5, r2, #1
 80190fe:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8019102:	784d      	ldrb	r5, [r1, #1]
 8019104:	fb15 f503 	smulbb	r5, r5, r3
 8019108:	1212      	asrs	r2, r2, #8
 801910a:	700a      	strb	r2, [r1, #0]
 801910c:	f3c4 2207 	ubfx	r2, r4, #8, #8
 8019110:	f3c4 4407 	ubfx	r4, r4, #16, #8
 8019114:	fb02 5200 	mla	r2, r2, r0, r5
 8019118:	b292      	uxth	r2, r2
 801911a:	1c55      	adds	r5, r2, #1
 801911c:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8019120:	1212      	asrs	r2, r2, #8
 8019122:	704a      	strb	r2, [r1, #1]
 8019124:	788a      	ldrb	r2, [r1, #2]
 8019126:	fb12 f303 	smulbb	r3, r2, r3
 801912a:	fb04 3300 	mla	r3, r4, r0, r3
 801912e:	b29b      	uxth	r3, r3
 8019130:	1c5a      	adds	r2, r3, #1
 8019132:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019136:	121b      	asrs	r3, r3, #8
 8019138:	708b      	strb	r3, [r1, #2]
 801913a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801913e:	2600      	movs	r6, #0
 8019140:	e75a      	b.n	8018ff8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x4c>
 8019142:	2500      	movs	r5, #0
 8019144:	e776      	b.n	8019034 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x88>
 8019146:	463d      	mov	r5, r7
 8019148:	e774      	b.n	8019034 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x88>
 801914a:	2400      	movs	r4, #0
 801914c:	e78f      	b.n	801906e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xc2>
 801914e:	4663      	mov	r3, ip
 8019150:	4664      	mov	r4, ip
 8019152:	e7a5      	b.n	80190a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 8019154:	2300      	movs	r3, #0
 8019156:	e7a3      	b.n	80190a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 8019158:	463b      	mov	r3, r7
 801915a:	e7a1      	b.n	80190a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf4>
 801915c:	24006be0 	.word	0x24006be0

08019160 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019164:	b097      	sub	sp, #92	; 0x5c
 8019166:	9214      	str	r2, [sp, #80]	; 0x50
 8019168:	9309      	str	r3, [sp, #36]	; 0x24
 801916a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801916c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8019170:	9015      	str	r0, [sp, #84]	; 0x54
 8019172:	910c      	str	r1, [sp, #48]	; 0x30
 8019174:	6850      	ldr	r0, [r2, #4]
 8019176:	930e      	str	r3, [sp, #56]	; 0x38
 8019178:	6812      	ldr	r2, [r2, #0]
 801917a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801917e:	e9dd 5621 	ldrd	r5, r6, [sp, #132]	; 0x84
 8019182:	fb00 1303 	mla	r3, r0, r3, r1
 8019186:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801918a:	eb02 0a03 	add.w	sl, r2, r3
 801918e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019190:	689b      	ldr	r3, [r3, #8]
 8019192:	3301      	adds	r3, #1
 8019194:	f023 0301 	bic.w	r3, r3, #1
 8019198:	930f      	str	r3, [sp, #60]	; 0x3c
 801919a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801919c:	681f      	ldr	r7, [r3, #0]
 801919e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80191a0:	2b00      	cmp	r3, #0
 80191a2:	dc03      	bgt.n	80191ac <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80191a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80191a6:	2b00      	cmp	r3, #0
 80191a8:	f340 8247 	ble.w	801963a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 80191ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80191b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80191b6:	1e48      	subs	r0, r1, #1
 80191b8:	f102 3cff 	add.w	ip, r2, #4294967295
 80191bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191be:	2b00      	cmp	r3, #0
 80191c0:	f340 80e5 	ble.w	801938e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80191c4:	ea5f 4e25 	movs.w	lr, r5, asr #16
 80191c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80191cc:	d406      	bmi.n	80191dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191ce:	4586      	cmp	lr, r0
 80191d0:	da04      	bge.n	80191dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191d2:	2b00      	cmp	r3, #0
 80191d4:	db02      	blt.n	80191dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191d6:	4563      	cmp	r3, ip
 80191d8:	f2c0 80da 	blt.w	8019390 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80191dc:	f11e 0e01 	adds.w	lr, lr, #1
 80191e0:	f100 80cb 	bmi.w	801937a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 80191e4:	4571      	cmp	r1, lr
 80191e6:	f2c0 80c8 	blt.w	801937a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 80191ea:	3301      	adds	r3, #1
 80191ec:	f100 80c5 	bmi.w	801937a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 80191f0:	429a      	cmp	r2, r3
 80191f2:	f2c0 80c2 	blt.w	801937a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21a>
 80191f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191f8:	46d0      	mov	r8, sl
 80191fa:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80191fe:	930d      	str	r3, [sp, #52]	; 0x34
 8019200:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019202:	2b00      	cmp	r3, #0
 8019204:	f340 80e3 	ble.w	80193ce <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 8019208:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801920a:	1430      	asrs	r0, r6, #16
 801920c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 8019210:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019214:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019218:	142b      	asrs	r3, r5, #16
 801921a:	f100 812e 	bmi.w	801947a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801921e:	f10c 3bff 	add.w	fp, ip, #4294967295
 8019222:	455b      	cmp	r3, fp
 8019224:	f280 8129 	bge.w	801947a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8019228:	2800      	cmp	r0, #0
 801922a:	f2c0 8126 	blt.w	801947a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801922e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019232:	4558      	cmp	r0, fp
 8019234:	f280 8121 	bge.w	801947a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8019238:	fb00 3309 	mla	r3, r0, r9, r3
 801923c:	0858      	lsrs	r0, r3, #1
 801923e:	07dc      	lsls	r4, r3, #31
 8019240:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019244:	bf54      	ite	pl
 8019246:	f00c 0c0f 	andpl.w	ip, ip, #15
 801924a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801924e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019252:	fa5f fc8c 	uxtb.w	ip, ip
 8019256:	2a00      	cmp	r2, #0
 8019258:	f000 80fe 	beq.w	8019458 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801925c:	1c58      	adds	r0, r3, #1
 801925e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019262:	07c0      	lsls	r0, r0, #31
 8019264:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019268:	bf54      	ite	pl
 801926a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801926e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8019272:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8019276:	fa5f f08e 	uxtb.w	r0, lr
 801927a:	9010      	str	r0, [sp, #64]	; 0x40
 801927c:	b1d9      	cbz	r1, 80192b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801927e:	444b      	add	r3, r9
 8019280:	0858      	lsrs	r0, r3, #1
 8019282:	07dc      	lsls	r4, r3, #31
 8019284:	f103 0301 	add.w	r3, r3, #1
 8019288:	5c38      	ldrb	r0, [r7, r0]
 801928a:	bf54      	ite	pl
 801928c:	f000 000f 	andpl.w	r0, r0, #15
 8019290:	1100      	asrmi	r0, r0, #4
 8019292:	07dc      	lsls	r4, r3, #31
 8019294:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019298:	b2c0      	uxtb	r0, r0
 801929a:	900a      	str	r0, [sp, #40]	; 0x28
 801929c:	ea4f 0053 	mov.w	r0, r3, lsr #1
 80192a0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80192a4:	bf54      	ite	pl
 80192a6:	f00e 030f 	andpl.w	r3, lr, #15
 80192aa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80192ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80192b2:	b2db      	uxtb	r3, r3
 80192b4:	9311      	str	r3, [sp, #68]	; 0x44
 80192b6:	b292      	uxth	r2, r2
 80192b8:	b289      	uxth	r1, r1
 80192ba:	0113      	lsls	r3, r2, #4
 80192bc:	fb02 f001 	mul.w	r0, r2, r1
 80192c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80192c2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80192c6:	ebc0 1101 	rsb	r1, r0, r1, lsl #4
 80192ca:	1a1b      	subs	r3, r3, r0
 80192cc:	b289      	uxth	r1, r1
 80192ce:	b29b      	uxth	r3, r3
 80192d0:	ebae 0e01 	sub.w	lr, lr, r1
 80192d4:	4353      	muls	r3, r2
 80192d6:	fa1f fe8e 	uxth.w	lr, lr
 80192da:	fb0c 320e 	mla	r2, ip, lr, r3
 80192de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80192e0:	fb01 2203 	mla	r2, r1, r3, r2
 80192e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80192e6:	fb00 2203 	mla	r2, r0, r3, r2
 80192ea:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80192ee:	2a00      	cmp	r2, #0
 80192f0:	d039      	beq.n	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80192f2:	4bc7      	ldr	r3, [pc, #796]	; (8019610 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80192f4:	6819      	ldr	r1, [r3, #0]
 80192f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192f8:	fa5f fc81 	uxtb.w	ip, r1
 80192fc:	435a      	muls	r2, r3
 80192fe:	1c53      	adds	r3, r2, #1
 8019300:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8019304:	1212      	asrs	r2, r2, #8
 8019306:	b290      	uxth	r0, r2
 8019308:	43d2      	mvns	r2, r2
 801930a:	fb1c fc00 	smulbb	ip, ip, r0
 801930e:	b2d3      	uxtb	r3, r2
 8019310:	f898 2000 	ldrb.w	r2, [r8]
 8019314:	fb02 c203 	mla	r2, r2, r3, ip
 8019318:	b292      	uxth	r2, r2
 801931a:	f102 0c01 	add.w	ip, r2, #1
 801931e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8019322:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019326:	fb1c fc03 	smulbb	ip, ip, r3
 801932a:	1212      	asrs	r2, r2, #8
 801932c:	f888 2000 	strb.w	r2, [r8]
 8019330:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8019334:	f3c1 4107 	ubfx	r1, r1, #16, #8
 8019338:	fb02 c200 	mla	r2, r2, r0, ip
 801933c:	b292      	uxth	r2, r2
 801933e:	f102 0c01 	add.w	ip, r2, #1
 8019342:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8019346:	1212      	asrs	r2, r2, #8
 8019348:	f888 2001 	strb.w	r2, [r8, #1]
 801934c:	f898 2002 	ldrb.w	r2, [r8, #2]
 8019350:	fb12 f303 	smulbb	r3, r2, r3
 8019354:	fb01 3300 	mla	r3, r1, r0, r3
 8019358:	b29b      	uxth	r3, r3
 801935a:	1c5a      	adds	r2, r3, #1
 801935c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019360:	121b      	asrs	r3, r3, #8
 8019362:	f888 3002 	strb.w	r3, [r8, #2]
 8019366:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019368:	f108 0803 	add.w	r8, r8, #3
 801936c:	441d      	add	r5, r3
 801936e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019370:	441e      	add	r6, r3
 8019372:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019374:	3b01      	subs	r3, #1
 8019376:	930d      	str	r3, [sp, #52]	; 0x34
 8019378:	e742      	b.n	8019200 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801937a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801937c:	f10a 0a03 	add.w	sl, sl, #3
 8019380:	441d      	add	r5, r3
 8019382:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019384:	441e      	add	r6, r3
 8019386:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019388:	3b01      	subs	r3, #1
 801938a:	9309      	str	r3, [sp, #36]	; 0x24
 801938c:	e716      	b.n	80191bc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801938e:	d024      	beq.n	80193da <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019392:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019394:	3b01      	subs	r3, #1
 8019396:	fb00 5003 	mla	r0, r0, r3, r5
 801939a:	1400      	asrs	r0, r0, #16
 801939c:	f53f af2b 	bmi.w	80191f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80193a0:	3901      	subs	r1, #1
 80193a2:	4288      	cmp	r0, r1
 80193a4:	f6bf af27 	bge.w	80191f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80193a8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80193aa:	fb01 6303 	mla	r3, r1, r3, r6
 80193ae:	141b      	asrs	r3, r3, #16
 80193b0:	f53f af21 	bmi.w	80191f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80193b4:	3a01      	subs	r2, #1
 80193b6:	4293      	cmp	r3, r2
 80193b8:	f6bf af1d 	bge.w	80191f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80193bc:	f10a 0e03 	add.w	lr, sl, #3
 80193c0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 80193c4:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80193c8:	f1b8 0f00 	cmp.w	r8, #0
 80193cc:	dc76      	bgt.n	80194bc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80193ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193d0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80193d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80193d8:	44a2      	add	sl, r4
 80193da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80193dc:	2b00      	cmp	r3, #0
 80193de:	f340 812c 	ble.w	801963a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 80193e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80193e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80193ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80193f0:	eef0 6a62 	vmov.f32	s13, s5
 80193f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80193f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019400:	ee16 5a90 	vmov	r5, s13
 8019404:	eef0 6a43 	vmov.f32	s13, s6
 8019408:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801940c:	ee16 6a90 	vmov	r6, s13
 8019410:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019414:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019418:	ee77 2a62 	vsub.f32	s5, s14, s5
 801941c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019420:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019424:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019428:	ee12 2a90 	vmov	r2, s5
 801942c:	eef0 2a47 	vmov.f32	s5, s14
 8019430:	fb92 f3f3 	sdiv	r3, r2, r3
 8019434:	ee13 2a10 	vmov	r2, s6
 8019438:	9323      	str	r3, [sp, #140]	; 0x8c
 801943a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801943c:	eeb0 3a67 	vmov.f32	s6, s15
 8019440:	fb92 f3f3 	sdiv	r3, r2, r3
 8019444:	9324      	str	r3, [sp, #144]	; 0x90
 8019446:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019448:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801944a:	3b01      	subs	r3, #1
 801944c:	930c      	str	r3, [sp, #48]	; 0x30
 801944e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019450:	bf08      	it	eq
 8019452:	4613      	moveq	r3, r2
 8019454:	9309      	str	r3, [sp, #36]	; 0x24
 8019456:	e6a2      	b.n	801919e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019458:	2900      	cmp	r1, #0
 801945a:	f43f af2c 	beq.w	80192b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801945e:	eb09 0003 	add.w	r0, r9, r3
 8019462:	0843      	lsrs	r3, r0, #1
 8019464:	07c0      	lsls	r0, r0, #31
 8019466:	5cfb      	ldrb	r3, [r7, r3]
 8019468:	bf54      	ite	pl
 801946a:	f003 030f 	andpl.w	r3, r3, #15
 801946e:	111b      	asrmi	r3, r3, #4
 8019470:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019474:	b2db      	uxtb	r3, r3
 8019476:	930a      	str	r3, [sp, #40]	; 0x28
 8019478:	e71d      	b.n	80192b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801947a:	f113 0b01 	adds.w	fp, r3, #1
 801947e:	f53f af72 	bmi.w	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8019482:	45dc      	cmp	ip, fp
 8019484:	f6ff af6f 	blt.w	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8019488:	f110 0b01 	adds.w	fp, r0, #1
 801948c:	f53f af6b 	bmi.w	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8019490:	45de      	cmp	lr, fp
 8019492:	f6ff af68 	blt.w	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8019496:	9302      	str	r3, [sp, #8]
 8019498:	fa0f f38e 	sxth.w	r3, lr
 801949c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801949e:	9301      	str	r3, [sp, #4]
 80194a0:	fa0f f38c 	sxth.w	r3, ip
 80194a4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80194a8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80194ac:	9300      	str	r3, [sp, #0]
 80194ae:	463a      	mov	r2, r7
 80194b0:	464b      	mov	r3, r9
 80194b2:	4641      	mov	r1, r8
 80194b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80194b6:	f7ff fd79 	bl	8018fac <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>
 80194ba:	e754      	b.n	8019366 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80194bc:	142a      	asrs	r2, r5, #16
 80194be:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80194c2:	1433      	asrs	r3, r6, #16
 80194c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80194c8:	fb09 2303 	mla	r3, r9, r3, r2
 80194cc:	085a      	lsrs	r2, r3, #1
 80194ce:	07dc      	lsls	r4, r3, #31
 80194d0:	5cba      	ldrb	r2, [r7, r2]
 80194d2:	bf54      	ite	pl
 80194d4:	f002 020f 	andpl.w	r2, r2, #15
 80194d8:	1112      	asrmi	r2, r2, #4
 80194da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80194de:	b2d2      	uxtb	r2, r2
 80194e0:	2900      	cmp	r1, #0
 80194e2:	f000 8097 	beq.w	8019614 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80194e6:	f103 0b01 	add.w	fp, r3, #1
 80194ea:	ea4f 0c5b 	mov.w	ip, fp, lsr #1
 80194ee:	f01b 0f01 	tst.w	fp, #1
 80194f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80194f6:	bf0c      	ite	eq
 80194f8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80194fc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019500:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019504:	fa5f f48c 	uxtb.w	r4, ip
 8019508:	9412      	str	r4, [sp, #72]	; 0x48
 801950a:	b300      	cbz	r0, 801954e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801950c:	444b      	add	r3, r9
 801950e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019512:	07dc      	lsls	r4, r3, #31
 8019514:	f103 0301 	add.w	r3, r3, #1
 8019518:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801951c:	bf54      	ite	pl
 801951e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019522:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019526:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801952a:	fa5f f48c 	uxtb.w	r4, ip
 801952e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019532:	940b      	str	r4, [sp, #44]	; 0x2c
 8019534:	07dc      	lsls	r4, r3, #31
 8019536:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801953a:	bf54      	ite	pl
 801953c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019540:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019544:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019548:	fa5f f38c 	uxtb.w	r3, ip
 801954c:	9313      	str	r3, [sp, #76]	; 0x4c
 801954e:	b289      	uxth	r1, r1
 8019550:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019552:	b280      	uxth	r0, r0
 8019554:	fb01 f300 	mul.w	r3, r1, r0
 8019558:	0109      	lsls	r1, r1, #4
 801955a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801955e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8019562:	1ac9      	subs	r1, r1, r3
 8019564:	b280      	uxth	r0, r0
 8019566:	b289      	uxth	r1, r1
 8019568:	ebac 0c00 	sub.w	ip, ip, r0
 801956c:	4361      	muls	r1, r4
 801956e:	fa1f fc8c 	uxth.w	ip, ip
 8019572:	fb02 120c 	mla	r2, r2, ip, r1
 8019576:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019578:	fb00 2001 	mla	r0, r0, r1, r2
 801957c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801957e:	fb03 0302 	mla	r3, r3, r2, r0
 8019582:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019586:	2b00      	cmp	r3, #0
 8019588:	d039      	beq.n	80195fe <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801958a:	4a21      	ldr	r2, [pc, #132]	; (8019610 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801958c:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 8019590:	6810      	ldr	r0, [r2, #0]
 8019592:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019594:	fa5f fc80 	uxtb.w	ip, r0
 8019598:	4353      	muls	r3, r2
 801959a:	1c5a      	adds	r2, r3, #1
 801959c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80195a0:	121b      	asrs	r3, r3, #8
 80195a2:	b29a      	uxth	r2, r3
 80195a4:	43db      	mvns	r3, r3
 80195a6:	fb1c fc02 	smulbb	ip, ip, r2
 80195aa:	b2db      	uxtb	r3, r3
 80195ac:	fb01 c103 	mla	r1, r1, r3, ip
 80195b0:	b289      	uxth	r1, r1
 80195b2:	f101 0c01 	add.w	ip, r1, #1
 80195b6:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80195ba:	f81e cc02 	ldrb.w	ip, [lr, #-2]
 80195be:	fb1c fc03 	smulbb	ip, ip, r3
 80195c2:	1209      	asrs	r1, r1, #8
 80195c4:	f80e 1c03 	strb.w	r1, [lr, #-3]
 80195c8:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80195cc:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80195d0:	fb01 c102 	mla	r1, r1, r2, ip
 80195d4:	b289      	uxth	r1, r1
 80195d6:	f101 0c01 	add.w	ip, r1, #1
 80195da:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80195de:	1209      	asrs	r1, r1, #8
 80195e0:	f80e 1c02 	strb.w	r1, [lr, #-2]
 80195e4:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 80195e8:	fb11 f303 	smulbb	r3, r1, r3
 80195ec:	fb00 3002 	mla	r0, r0, r2, r3
 80195f0:	b280      	uxth	r0, r0
 80195f2:	1c42      	adds	r2, r0, #1
 80195f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80195f8:	1200      	asrs	r0, r0, #8
 80195fa:	f80e 0c01 	strb.w	r0, [lr, #-1]
 80195fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019600:	f10e 0e03 	add.w	lr, lr, #3
 8019604:	f108 38ff 	add.w	r8, r8, #4294967295
 8019608:	441d      	add	r5, r3
 801960a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801960c:	441e      	add	r6, r3
 801960e:	e6db      	b.n	80193c8 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019610:	24006be0 	.word	0x24006be0
 8019614:	2800      	cmp	r0, #0
 8019616:	d09a      	beq.n	801954e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8019618:	444b      	add	r3, r9
 801961a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801961e:	07db      	lsls	r3, r3, #31
 8019620:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019624:	bf54      	ite	pl
 8019626:	f00c 0c0f 	andpl.w	ip, ip, #15
 801962a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801962e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019632:	fa5f f38c 	uxtb.w	r3, ip
 8019636:	930b      	str	r3, [sp, #44]	; 0x2c
 8019638:	e789      	b.n	801954e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801963a:	b017      	add	sp, #92	; 0x5c
 801963c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019640 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>:
 8019640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019644:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
 8019648:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801964c:	2d00      	cmp	r5, #0
 801964e:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8019652:	f89d 0034 	ldrb.w	r0, [sp, #52]	; 0x34
 8019656:	fb04 5e03 	mla	lr, r4, r3, r5
 801965a:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
 801965e:	f2c0 80b1 	blt.w	80197c4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 8019662:	45a9      	cmp	r9, r5
 8019664:	f340 80ae 	ble.w	80197c4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 8019668:	2c00      	cmp	r4, #0
 801966a:	f2c0 80ab 	blt.w	80197c4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 801966e:	45a0      	cmp	r8, r4
 8019670:	f340 80a8 	ble.w	80197c4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x184>
 8019674:	ea4f 065e 	mov.w	r6, lr, lsr #1
 8019678:	f01e 0f01 	tst.w	lr, #1
 801967c:	5d97      	ldrb	r7, [r2, r6]
 801967e:	bf0c      	ite	eq
 8019680:	f007 070f 	andeq.w	r7, r7, #15
 8019684:	113f      	asrne	r7, r7, #4
 8019686:	eb07 1707 	add.w	r7, r7, r7, lsl #4
 801968a:	b2ff      	uxtb	r7, r7
 801968c:	f115 0a01 	adds.w	sl, r5, #1
 8019690:	f100 809a 	bmi.w	80197c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 8019694:	45d1      	cmp	r9, sl
 8019696:	f340 8097 	ble.w	80197c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 801969a:	2c00      	cmp	r4, #0
 801969c:	f2c0 8094 	blt.w	80197c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 80196a0:	45a0      	cmp	r8, r4
 80196a2:	f340 8091 	ble.w	80197c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x188>
 80196a6:	2800      	cmp	r0, #0
 80196a8:	f000 8090 	beq.w	80197cc <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x18c>
 80196ac:	f10e 0b01 	add.w	fp, lr, #1
 80196b0:	ea4f 065b 	mov.w	r6, fp, lsr #1
 80196b4:	f01b 0f01 	tst.w	fp, #1
 80196b8:	5d96      	ldrb	r6, [r2, r6]
 80196ba:	bf0c      	ite	eq
 80196bc:	f006 060f 	andeq.w	r6, r6, #15
 80196c0:	1136      	asrne	r6, r6, #4
 80196c2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80196c6:	b2f6      	uxtb	r6, r6
 80196c8:	f1bc 0f00 	cmp.w	ip, #0
 80196cc:	f000 8082 	beq.w	80197d4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x194>
 80196d0:	2d00      	cmp	r5, #0
 80196d2:	f104 0401 	add.w	r4, r4, #1
 80196d6:	db7b      	blt.n	80197d0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 80196d8:	45a9      	cmp	r9, r5
 80196da:	dd79      	ble.n	80197d0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 80196dc:	2c00      	cmp	r4, #0
 80196de:	db77      	blt.n	80197d0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 80196e0:	45a0      	cmp	r8, r4
 80196e2:	dd75      	ble.n	80197d0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x190>
 80196e4:	eb03 0b0e 	add.w	fp, r3, lr
 80196e8:	ea4f 055b 	mov.w	r5, fp, lsr #1
 80196ec:	f01b 0f01 	tst.w	fp, #1
 80196f0:	5d55      	ldrb	r5, [r2, r5]
 80196f2:	bf0c      	ite	eq
 80196f4:	f005 050f 	andeq.w	r5, r5, #15
 80196f8:	112d      	asrne	r5, r5, #4
 80196fa:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80196fe:	b2ed      	uxtb	r5, r5
 8019700:	f1ba 0f00 	cmp.w	sl, #0
 8019704:	db69      	blt.n	80197da <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 8019706:	45d1      	cmp	r9, sl
 8019708:	dd67      	ble.n	80197da <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801970a:	2c00      	cmp	r4, #0
 801970c:	db65      	blt.n	80197da <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 801970e:	45a0      	cmp	r8, r4
 8019710:	dd63      	ble.n	80197da <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19a>
 8019712:	2800      	cmp	r0, #0
 8019714:	d063      	beq.n	80197de <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19e>
 8019716:	3301      	adds	r3, #1
 8019718:	449e      	add	lr, r3
 801971a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801971e:	f01e 0f01 	tst.w	lr, #1
 8019722:	5cd4      	ldrb	r4, [r2, r3]
 8019724:	bf0c      	ite	eq
 8019726:	f004 040f 	andeq.w	r4, r4, #15
 801972a:	1124      	asrne	r4, r4, #4
 801972c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019730:	b2e3      	uxtb	r3, r4
 8019732:	b282      	uxth	r2, r0
 8019734:	fa1f fc8c 	uxth.w	ip, ip
 8019738:	fb02 f40c 	mul.w	r4, r2, ip
 801973c:	0112      	lsls	r2, r2, #4
 801973e:	ebc4 1c0c 	rsb	ip, r4, ip, lsl #4
 8019742:	fa1f f08c 	uxth.w	r0, ip
 8019746:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801974a:	1b12      	subs	r2, r2, r4
 801974c:	ebac 0c00 	sub.w	ip, ip, r0
 8019750:	b292      	uxth	r2, r2
 8019752:	fa1f fc8c 	uxth.w	ip, ip
 8019756:	4372      	muls	r2, r6
 8019758:	fb07 220c 	mla	r2, r7, ip, r2
 801975c:	fb00 2005 	mla	r0, r0, r5, r2
 8019760:	fb04 0303 	mla	r3, r4, r3, r0
 8019764:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019768:	b353      	cbz	r3, 80197c0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x180>
 801976a:	4a1e      	ldr	r2, [pc, #120]	; (80197e4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a4>)
 801976c:	7808      	ldrb	r0, [r1, #0]
 801976e:	6814      	ldr	r4, [r2, #0]
 8019770:	b29a      	uxth	r2, r3
 8019772:	43db      	mvns	r3, r3
 8019774:	b2e5      	uxtb	r5, r4
 8019776:	b2db      	uxtb	r3, r3
 8019778:	fb15 f502 	smulbb	r5, r5, r2
 801977c:	fb00 5003 	mla	r0, r0, r3, r5
 8019780:	b280      	uxth	r0, r0
 8019782:	1c45      	adds	r5, r0, #1
 8019784:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019788:	784d      	ldrb	r5, [r1, #1]
 801978a:	fb15 f503 	smulbb	r5, r5, r3
 801978e:	1200      	asrs	r0, r0, #8
 8019790:	7008      	strb	r0, [r1, #0]
 8019792:	f3c4 2007 	ubfx	r0, r4, #8, #8
 8019796:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801979a:	fb00 5002 	mla	r0, r0, r2, r5
 801979e:	b280      	uxth	r0, r0
 80197a0:	1c45      	adds	r5, r0, #1
 80197a2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80197a6:	1200      	asrs	r0, r0, #8
 80197a8:	7048      	strb	r0, [r1, #1]
 80197aa:	7888      	ldrb	r0, [r1, #2]
 80197ac:	fb10 f303 	smulbb	r3, r0, r3
 80197b0:	fb04 3202 	mla	r2, r4, r2, r3
 80197b4:	b292      	uxth	r2, r2
 80197b6:	1c53      	adds	r3, r2, #1
 80197b8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80197bc:	1212      	asrs	r2, r2, #8
 80197be:	708a      	strb	r2, [r1, #2]
 80197c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197c4:	2700      	movs	r7, #0
 80197c6:	e761      	b.n	801968c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x4c>
 80197c8:	2600      	movs	r6, #0
 80197ca:	e77d      	b.n	80196c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x88>
 80197cc:	4606      	mov	r6, r0
 80197ce:	e77b      	b.n	80196c8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x88>
 80197d0:	2500      	movs	r5, #0
 80197d2:	e795      	b.n	8019700 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xc0>
 80197d4:	4663      	mov	r3, ip
 80197d6:	4665      	mov	r5, ip
 80197d8:	e7ab      	b.n	8019732 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 80197da:	2300      	movs	r3, #0
 80197dc:	e7a9      	b.n	8019732 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 80197de:	4603      	mov	r3, r0
 80197e0:	e7a7      	b.n	8019732 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf2>
 80197e2:	bf00      	nop
 80197e4:	24006be0 	.word	0x24006be0

080197e8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197ec:	b093      	sub	sp, #76	; 0x4c
 80197ee:	461c      	mov	r4, r3
 80197f0:	920c      	str	r2, [sp, #48]	; 0x30
 80197f2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80197f4:	9011      	str	r0, [sp, #68]	; 0x44
 80197f6:	9107      	str	r1, [sp, #28]
 80197f8:	6850      	ldr	r0, [r2, #4]
 80197fa:	6812      	ldr	r2, [r2, #0]
 80197fc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019800:	e9dd 561d 	ldrd	r5, r6, [sp, #116]	; 0x74
 8019804:	fb00 1303 	mla	r3, r0, r3, r1
 8019808:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801980c:	eb02 0b03 	add.w	fp, r2, r3
 8019810:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019812:	689b      	ldr	r3, [r3, #8]
 8019814:	3301      	adds	r3, #1
 8019816:	f023 0301 	bic.w	r3, r3, #1
 801981a:	9309      	str	r3, [sp, #36]	; 0x24
 801981c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801981e:	f8d3 8000 	ldr.w	r8, [r3]
 8019822:	9b07      	ldr	r3, [sp, #28]
 8019824:	2b00      	cmp	r3, #0
 8019826:	dc03      	bgt.n	8019830 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019828:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801982a:	2b00      	cmp	r3, #0
 801982c:	f340 822b 	ble.w	8019c86 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8019830:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019832:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019836:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801983a:	1e48      	subs	r0, r1, #1
 801983c:	1e57      	subs	r7, r2, #1
 801983e:	2c00      	cmp	r4, #0
 8019840:	f340 80d7 	ble.w	80199f2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8019844:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8019848:	ea4f 4326 	mov.w	r3, r6, asr #16
 801984c:	d406      	bmi.n	801985c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801984e:	4584      	cmp	ip, r0
 8019850:	da04      	bge.n	801985c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019852:	2b00      	cmp	r3, #0
 8019854:	db02      	blt.n	801985c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019856:	42bb      	cmp	r3, r7
 8019858:	f2c0 80cc 	blt.w	80199f4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801985c:	f11c 0c01 	adds.w	ip, ip, #1
 8019860:	f100 80bf 	bmi.w	80199e2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019864:	4561      	cmp	r1, ip
 8019866:	f2c0 80bc 	blt.w	80199e2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801986a:	3301      	adds	r3, #1
 801986c:	f100 80b9 	bmi.w	80199e2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019870:	429a      	cmp	r2, r3
 8019872:	f2c0 80b6 	blt.w	80199e2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019876:	46a2      	mov	sl, r4
 8019878:	465f      	mov	r7, fp
 801987a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801987e:	f1ba 0f00 	cmp.w	sl, #0
 8019882:	f340 80d4 	ble.w	8019a2e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8019886:	f3c5 3303 	ubfx	r3, r5, #12, #4
 801988a:	1430      	asrs	r0, r6, #16
 801988c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019890:	9308      	str	r3, [sp, #32]
 8019892:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019894:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019898:	142b      	asrs	r3, r5, #16
 801989a:	f100 8124 	bmi.w	8019ae6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801989e:	f10c 32ff 	add.w	r2, ip, #4294967295
 80198a2:	4293      	cmp	r3, r2
 80198a4:	f280 811f 	bge.w	8019ae6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80198a8:	2800      	cmp	r0, #0
 80198aa:	f2c0 811c 	blt.w	8019ae6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80198ae:	f10e 32ff 	add.w	r2, lr, #4294967295
 80198b2:	4290      	cmp	r0, r2
 80198b4:	f280 8117 	bge.w	8019ae6 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80198b8:	fb00 3309 	mla	r3, r0, r9, r3
 80198bc:	0858      	lsrs	r0, r3, #1
 80198be:	07da      	lsls	r2, r3, #31
 80198c0:	9a08      	ldr	r2, [sp, #32]
 80198c2:	f818 c000 	ldrb.w	ip, [r8, r0]
 80198c6:	bf54      	ite	pl
 80198c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80198cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80198d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80198d4:	fa5f fc8c 	uxtb.w	ip, ip
 80198d8:	2a00      	cmp	r2, #0
 80198da:	f000 80ed 	beq.w	8019ab8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 80198de:	1c58      	adds	r0, r3, #1
 80198e0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80198e4:	07c0      	lsls	r0, r0, #31
 80198e6:	f818 e00e 	ldrb.w	lr, [r8, lr]
 80198ea:	bf54      	ite	pl
 80198ec:	f00e 0e0f 	andpl.w	lr, lr, #15
 80198f0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80198f4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80198f8:	fa5f fe8e 	uxtb.w	lr, lr
 80198fc:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8019900:	b1c9      	cbz	r1, 8019936 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019902:	444b      	add	r3, r9
 8019904:	0858      	lsrs	r0, r3, #1
 8019906:	07da      	lsls	r2, r3, #31
 8019908:	f818 0000 	ldrb.w	r0, [r8, r0]
 801990c:	bf54      	ite	pl
 801990e:	f000 000f 	andpl.w	r0, r0, #15
 8019912:	1100      	asrmi	r0, r0, #4
 8019914:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019918:	b2c0      	uxtb	r0, r0
 801991a:	900a      	str	r0, [sp, #40]	; 0x28
 801991c:	1c58      	adds	r0, r3, #1
 801991e:	0843      	lsrs	r3, r0, #1
 8019920:	07c2      	lsls	r2, r0, #31
 8019922:	f818 3003 	ldrb.w	r3, [r8, r3]
 8019926:	bf54      	ite	pl
 8019928:	f003 030f 	andpl.w	r3, r3, #15
 801992c:	111b      	asrmi	r3, r3, #4
 801992e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019932:	b2db      	uxtb	r3, r3
 8019934:	930e      	str	r3, [sp, #56]	; 0x38
 8019936:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801993a:	b289      	uxth	r1, r1
 801993c:	fb02 f301 	mul.w	r3, r2, r1
 8019940:	0112      	lsls	r2, r2, #4
 8019942:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019946:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801994a:	1ad2      	subs	r2, r2, r3
 801994c:	b289      	uxth	r1, r1
 801994e:	b292      	uxth	r2, r2
 8019950:	1a40      	subs	r0, r0, r1
 8019952:	fa1f fe80 	uxth.w	lr, r0
 8019956:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019958:	4342      	muls	r2, r0
 801995a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801995e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019960:	fb01 c102 	mla	r1, r1, r2, ip
 8019964:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019966:	fb03 1302 	mla	r3, r3, r2, r1
 801996a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801996e:	b383      	cbz	r3, 80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019970:	4ac6      	ldr	r2, [pc, #792]	; (8019c8c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 8019972:	2bff      	cmp	r3, #255	; 0xff
 8019974:	6812      	ldr	r2, [r2, #0]
 8019976:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 801997a:	f3c2 2007 	ubfx	r0, r2, #8, #8
 801997e:	b2d2      	uxtb	r2, r2
 8019980:	f000 80ac 	beq.w	8019adc <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8019984:	b299      	uxth	r1, r3
 8019986:	43db      	mvns	r3, r3
 8019988:	f897 c000 	ldrb.w	ip, [r7]
 801998c:	fb12 f201 	smulbb	r2, r2, r1
 8019990:	b2db      	uxtb	r3, r3
 8019992:	fb10 f001 	smulbb	r0, r0, r1
 8019996:	fb0c 2203 	mla	r2, ip, r3, r2
 801999a:	fb1e f101 	smulbb	r1, lr, r1
 801999e:	b292      	uxth	r2, r2
 80199a0:	f102 0c01 	add.w	ip, r2, #1
 80199a4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80199a8:	1212      	asrs	r2, r2, #8
 80199aa:	703a      	strb	r2, [r7, #0]
 80199ac:	787a      	ldrb	r2, [r7, #1]
 80199ae:	fb02 0003 	mla	r0, r2, r3, r0
 80199b2:	b280      	uxth	r0, r0
 80199b4:	1c42      	adds	r2, r0, #1
 80199b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80199ba:	78ba      	ldrb	r2, [r7, #2]
 80199bc:	fb02 1303 	mla	r3, r2, r3, r1
 80199c0:	1200      	asrs	r0, r0, #8
 80199c2:	b29b      	uxth	r3, r3
 80199c4:	7078      	strb	r0, [r7, #1]
 80199c6:	f103 0e01 	add.w	lr, r3, #1
 80199ca:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 80199ce:	121b      	asrs	r3, r3, #8
 80199d0:	70bb      	strb	r3, [r7, #2]
 80199d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80199d4:	3703      	adds	r7, #3
 80199d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80199da:	441d      	add	r5, r3
 80199dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80199de:	441e      	add	r6, r3
 80199e0:	e74d      	b.n	801987e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80199e4:	3c01      	subs	r4, #1
 80199e6:	f10b 0b03 	add.w	fp, fp, #3
 80199ea:	441d      	add	r5, r3
 80199ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80199ee:	441e      	add	r6, r3
 80199f0:	e725      	b.n	801983e <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80199f2:	d021      	beq.n	8019a38 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80199f4:	1e63      	subs	r3, r4, #1
 80199f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80199f8:	fb00 5003 	mla	r0, r0, r3, r5
 80199fc:	1400      	asrs	r0, r0, #16
 80199fe:	f53f af3a 	bmi.w	8019876 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019a02:	3901      	subs	r1, #1
 8019a04:	4288      	cmp	r0, r1
 8019a06:	f6bf af36 	bge.w	8019876 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019a0a:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019a0c:	fb01 6303 	mla	r3, r1, r3, r6
 8019a10:	141b      	asrs	r3, r3, #16
 8019a12:	f53f af30 	bmi.w	8019876 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019a16:	3a01      	subs	r2, #1
 8019a18:	4293      	cmp	r3, r2
 8019a1a:	f6bf af2c 	bge.w	8019876 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019a1e:	f10b 0c03 	add.w	ip, fp, #3
 8019a22:	46a6      	mov	lr, r4
 8019a24:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019a28:	f1be 0f00 	cmp.w	lr, #0
 8019a2c:	dc79      	bgt.n	8019b22 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8019a2e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8019a32:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019a36:	44a3      	add	fp, r4
 8019a38:	9b07      	ldr	r3, [sp, #28]
 8019a3a:	2b00      	cmp	r3, #0
 8019a3c:	f340 8123 	ble.w	8019c86 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8019a40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019a44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a46:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a4e:	eef0 6a62 	vmov.f32	s13, s5
 8019a52:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019a56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a5e:	ee16 5a90 	vmov	r5, s13
 8019a62:	eef0 6a43 	vmov.f32	s13, s6
 8019a66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a6a:	ee16 6a90 	vmov	r6, s13
 8019a6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a86:	ee12 2a90 	vmov	r2, s5
 8019a8a:	eef0 2a47 	vmov.f32	s5, s14
 8019a8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a92:	ee13 2a10 	vmov	r2, s6
 8019a96:	931f      	str	r3, [sp, #124]	; 0x7c
 8019a98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a9a:	eeb0 3a67 	vmov.f32	s6, s15
 8019a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019aa2:	9320      	str	r3, [sp, #128]	; 0x80
 8019aa4:	9b07      	ldr	r3, [sp, #28]
 8019aa6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019aa8:	3b01      	subs	r3, #1
 8019aaa:	9307      	str	r3, [sp, #28]
 8019aac:	bf08      	it	eq
 8019aae:	4614      	moveq	r4, r2
 8019ab0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019ab2:	bf18      	it	ne
 8019ab4:	461c      	movne	r4, r3
 8019ab6:	e6b4      	b.n	8019822 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019ab8:	2900      	cmp	r1, #0
 8019aba:	f43f af3c 	beq.w	8019936 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019abe:	eb09 0003 	add.w	r0, r9, r3
 8019ac2:	0843      	lsrs	r3, r0, #1
 8019ac4:	07c0      	lsls	r0, r0, #31
 8019ac6:	f818 3003 	ldrb.w	r3, [r8, r3]
 8019aca:	bf54      	ite	pl
 8019acc:	f003 030f 	andpl.w	r3, r3, #15
 8019ad0:	111b      	asrmi	r3, r3, #4
 8019ad2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019ad6:	b2db      	uxtb	r3, r3
 8019ad8:	930a      	str	r3, [sp, #40]	; 0x28
 8019ada:	e72c      	b.n	8019936 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019adc:	703a      	strb	r2, [r7, #0]
 8019ade:	7078      	strb	r0, [r7, #1]
 8019ae0:	f887 e002 	strb.w	lr, [r7, #2]
 8019ae4:	e775      	b.n	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019ae6:	1c5a      	adds	r2, r3, #1
 8019ae8:	f53f af73 	bmi.w	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019aec:	4594      	cmp	ip, r2
 8019aee:	f6ff af70 	blt.w	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019af2:	1c42      	adds	r2, r0, #1
 8019af4:	f53f af6d 	bmi.w	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019af8:	4596      	cmp	lr, r2
 8019afa:	f6ff af6a 	blt.w	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019afe:	9302      	str	r3, [sp, #8]
 8019b00:	fa0f f38e 	sxth.w	r3, lr
 8019b04:	9a08      	ldr	r2, [sp, #32]
 8019b06:	9301      	str	r3, [sp, #4]
 8019b08:	fa0f f38c 	sxth.w	r3, ip
 8019b0c:	9105      	str	r1, [sp, #20]
 8019b0e:	4639      	mov	r1, r7
 8019b10:	9300      	str	r3, [sp, #0]
 8019b12:	464b      	mov	r3, r9
 8019b14:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019b18:	4642      	mov	r2, r8
 8019b1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b1c:	f7ff fd90 	bl	8019640 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>
 8019b20:	e757      	b.n	80199d2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019b22:	142a      	asrs	r2, r5, #16
 8019b24:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019b28:	1433      	asrs	r3, r6, #16
 8019b2a:	f3c6 3703 	ubfx	r7, r6, #12, #4
 8019b2e:	fb09 2303 	mla	r3, r9, r3, r2
 8019b32:	085a      	lsrs	r2, r3, #1
 8019b34:	07d9      	lsls	r1, r3, #31
 8019b36:	f818 2002 	ldrb.w	r2, [r8, r2]
 8019b3a:	bf54      	ite	pl
 8019b3c:	f002 020f 	andpl.w	r2, r2, #15
 8019b40:	1112      	asrmi	r2, r2, #4
 8019b42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019b46:	b2d2      	uxtb	r2, r2
 8019b48:	2800      	cmp	r0, #0
 8019b4a:	f000 8085 	beq.w	8019c58 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 8019b4e:	f103 0a01 	add.w	sl, r3, #1
 8019b52:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8019b56:	f01a 0f01 	tst.w	sl, #1
 8019b5a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019b5e:	bf0c      	ite	eq
 8019b60:	f001 010f 	andeq.w	r1, r1, #15
 8019b64:	1109      	asrne	r1, r1, #4
 8019b66:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019b6a:	b2c9      	uxtb	r1, r1
 8019b6c:	910f      	str	r1, [sp, #60]	; 0x3c
 8019b6e:	b1df      	cbz	r7, 8019ba8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8019b70:	444b      	add	r3, r9
 8019b72:	0859      	lsrs	r1, r3, #1
 8019b74:	f013 0f01 	tst.w	r3, #1
 8019b78:	f103 0301 	add.w	r3, r3, #1
 8019b7c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019b80:	bf0c      	ite	eq
 8019b82:	f001 010f 	andeq.w	r1, r1, #15
 8019b86:	1109      	asrne	r1, r1, #4
 8019b88:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019b8c:	b2c9      	uxtb	r1, r1
 8019b8e:	910b      	str	r1, [sp, #44]	; 0x2c
 8019b90:	0859      	lsrs	r1, r3, #1
 8019b92:	07db      	lsls	r3, r3, #31
 8019b94:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019b98:	bf54      	ite	pl
 8019b9a:	f001 010f 	andpl.w	r1, r1, #15
 8019b9e:	1109      	asrmi	r1, r1, #4
 8019ba0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019ba4:	b2c9      	uxtb	r1, r1
 8019ba6:	9110      	str	r1, [sp, #64]	; 0x40
 8019ba8:	b280      	uxth	r0, r0
 8019baa:	b2bf      	uxth	r7, r7
 8019bac:	fb00 f307 	mul.w	r3, r0, r7
 8019bb0:	0100      	lsls	r0, r0, #4
 8019bb2:	ebc3 1707 	rsb	r7, r3, r7, lsl #4
 8019bb6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8019bba:	1ac0      	subs	r0, r0, r3
 8019bbc:	b2bf      	uxth	r7, r7
 8019bbe:	b280      	uxth	r0, r0
 8019bc0:	1bc9      	subs	r1, r1, r7
 8019bc2:	fa1f fa81 	uxth.w	sl, r1
 8019bc6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019bc8:	4348      	muls	r0, r1
 8019bca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019bcc:	fb02 020a 	mla	r2, r2, sl, r0
 8019bd0:	fb07 2701 	mla	r7, r7, r1, r2
 8019bd4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bd6:	fb03 7302 	mla	r3, r3, r2, r7
 8019bda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019bde:	b393      	cbz	r3, 8019c46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 8019be0:	4a2a      	ldr	r2, [pc, #168]	; (8019c8c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 8019be2:	2bff      	cmp	r3, #255	; 0xff
 8019be4:	6811      	ldr	r1, [r2, #0]
 8019be6:	f3c1 4a07 	ubfx	sl, r1, #16, #8
 8019bea:	f3c1 2707 	ubfx	r7, r1, #8, #8
 8019bee:	b2c9      	uxtb	r1, r1
 8019bf0:	d042      	beq.n	8019c78 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019bf2:	b298      	uxth	r0, r3
 8019bf4:	43db      	mvns	r3, r3
 8019bf6:	f81c 2c03 	ldrb.w	r2, [ip, #-3]
 8019bfa:	fb11 f100 	smulbb	r1, r1, r0
 8019bfe:	b2db      	uxtb	r3, r3
 8019c00:	fb17 f700 	smulbb	r7, r7, r0
 8019c04:	fb02 1103 	mla	r1, r2, r3, r1
 8019c08:	fb1a f000 	smulbb	r0, sl, r0
 8019c0c:	b289      	uxth	r1, r1
 8019c0e:	1c4a      	adds	r2, r1, #1
 8019c10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019c14:	f81c 2c02 	ldrb.w	r2, [ip, #-2]
 8019c18:	fb02 7703 	mla	r7, r2, r3, r7
 8019c1c:	1209      	asrs	r1, r1, #8
 8019c1e:	b2bf      	uxth	r7, r7
 8019c20:	f80c 1c03 	strb.w	r1, [ip, #-3]
 8019c24:	1c7a      	adds	r2, r7, #1
 8019c26:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019c2a:	f81c 2c01 	ldrb.w	r2, [ip, #-1]
 8019c2e:	fb02 0303 	mla	r3, r2, r3, r0
 8019c32:	123f      	asrs	r7, r7, #8
 8019c34:	b29b      	uxth	r3, r3
 8019c36:	f80c 7c02 	strb.w	r7, [ip, #-2]
 8019c3a:	1c5a      	adds	r2, r3, #1
 8019c3c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019c40:	121b      	asrs	r3, r3, #8
 8019c42:	f80c 3c01 	strb.w	r3, [ip, #-1]
 8019c46:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019c48:	f10c 0c03 	add.w	ip, ip, #3
 8019c4c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019c50:	441d      	add	r5, r3
 8019c52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c54:	441e      	add	r6, r3
 8019c56:	e6e7      	b.n	8019a28 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019c58:	2f00      	cmp	r7, #0
 8019c5a:	d0a5      	beq.n	8019ba8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8019c5c:	444b      	add	r3, r9
 8019c5e:	0859      	lsrs	r1, r3, #1
 8019c60:	07db      	lsls	r3, r3, #31
 8019c62:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019c66:	bf54      	ite	pl
 8019c68:	f001 010f 	andpl.w	r1, r1, #15
 8019c6c:	1109      	asrmi	r1, r1, #4
 8019c6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019c72:	b2c9      	uxtb	r1, r1
 8019c74:	910b      	str	r1, [sp, #44]	; 0x2c
 8019c76:	e797      	b.n	8019ba8 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8019c78:	f80c 1c03 	strb.w	r1, [ip, #-3]
 8019c7c:	f80c 7c02 	strb.w	r7, [ip, #-2]
 8019c80:	f80c ac01 	strb.w	sl, [ip, #-1]
 8019c84:	e7df      	b.n	8019c46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 8019c86:	b013      	add	sp, #76	; 0x4c
 8019c88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c8c:	24006be0 	.word	0x24006be0

08019c90 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L416blendPixelRGB888EPKhPhi>:
 8019c90:	b530      	push	{r4, r5, lr}
 8019c92:	b29d      	uxth	r5, r3
 8019c94:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8019c98:	780c      	ldrb	r4, [r1, #0]
 8019c9a:	b298      	uxth	r0, r3
 8019c9c:	7813      	ldrb	r3, [r2, #0]
 8019c9e:	fb14 f405 	smulbb	r4, r4, r5
 8019ca2:	fb13 f300 	smulbb	r3, r3, r0
 8019ca6:	441c      	add	r4, r3
 8019ca8:	b2a4      	uxth	r4, r4
 8019caa:	1c63      	adds	r3, r4, #1
 8019cac:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019cb0:	7853      	ldrb	r3, [r2, #1]
 8019cb2:	fb13 f300 	smulbb	r3, r3, r0
 8019cb6:	1224      	asrs	r4, r4, #8
 8019cb8:	7014      	strb	r4, [r2, #0]
 8019cba:	784c      	ldrb	r4, [r1, #1]
 8019cbc:	fb14 f405 	smulbb	r4, r4, r5
 8019cc0:	441c      	add	r4, r3
 8019cc2:	b2a4      	uxth	r4, r4
 8019cc4:	1c63      	adds	r3, r4, #1
 8019cc6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019cca:	1224      	asrs	r4, r4, #8
 8019ccc:	7054      	strb	r4, [r2, #1]
 8019cce:	788b      	ldrb	r3, [r1, #2]
 8019cd0:	7891      	ldrb	r1, [r2, #2]
 8019cd2:	fb13 f305 	smulbb	r3, r3, r5
 8019cd6:	fb11 f000 	smulbb	r0, r1, r0
 8019cda:	4403      	add	r3, r0
 8019cdc:	b29b      	uxth	r3, r3
 8019cde:	1c59      	adds	r1, r3, #1
 8019ce0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019ce4:	121b      	asrs	r3, r3, #8
 8019ce6:	7093      	strb	r3, [r2, #2]
 8019ce8:	bd30      	pop	{r4, r5, pc}
	...

08019cec <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cf0:	461c      	mov	r4, r3
 8019cf2:	b08b      	sub	sp, #44	; 0x2c
 8019cf4:	460e      	mov	r6, r1
 8019cf6:	4615      	mov	r5, r2
 8019cf8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019cfa:	4682      	mov	sl, r0
 8019cfc:	6861      	ldr	r1, [r4, #4]
 8019cfe:	aa06      	add	r2, sp, #24
 8019d00:	6820      	ldr	r0, [r4, #0]
 8019d02:	2702      	movs	r7, #2
 8019d04:	f89d 9054 	ldrb.w	r9, [sp, #84]	; 0x54
 8019d08:	3504      	adds	r5, #4
 8019d0a:	c203      	stmia	r2!, {r0, r1}
 8019d0c:	6818      	ldr	r0, [r3, #0]
 8019d0e:	aa08      	add	r2, sp, #32
 8019d10:	6859      	ldr	r1, [r3, #4]
 8019d12:	c203      	stmia	r2!, {r0, r1}
 8019d14:	a806      	add	r0, sp, #24
 8019d16:	f7f4 f95f 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019d1a:	4621      	mov	r1, r4
 8019d1c:	a808      	add	r0, sp, #32
 8019d1e:	f7f4 f983 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019d22:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019d26:	f9bd b026 	ldrsh.w	fp, [sp, #38]	; 0x26
 8019d2a:	f002 0301 	and.w	r3, r2, #1
 8019d2e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8019d32:	9302      	str	r3, [sp, #8]
 8019d34:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019d38:	f003 0101 	and.w	r1, r3, #1
 8019d3c:	9101      	str	r1, [sp, #4]
 8019d3e:	9801      	ldr	r0, [sp, #4]
 8019d40:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8019d44:	4403      	add	r3, r0
 8019d46:	fb01 2303 	mla	r3, r1, r3, r2
 8019d4a:	fb93 f3f7 	sdiv	r3, r3, r7
 8019d4e:	441e      	add	r6, r3
 8019d50:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8019d54:	441a      	add	r2, r3
 8019d56:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8019d5a:	4419      	add	r1, r3
 8019d5c:	4b70      	ldr	r3, [pc, #448]	; (8019f20 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x234>)
 8019d5e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019d62:	6818      	ldr	r0, [r3, #0]
 8019d64:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8019d68:	6803      	ldr	r3, [r0, #0]
 8019d6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019d6c:	4798      	blx	r3
 8019d6e:	4a6d      	ldr	r2, [pc, #436]	; (8019f24 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>)
 8019d70:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8019d74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019d78:	8813      	ldrh	r3, [r2, #0]
 8019d7a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8019d7e:	fb03 1404 	mla	r4, r3, r4, r1
 8019d82:	4611      	mov	r1, r2
 8019d84:	fb0b f303 	mul.w	r3, fp, r3
 8019d88:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019d8c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019d90:	4404      	add	r4, r0
 8019d92:	4423      	add	r3, r4
 8019d94:	d073      	beq.n	8019e7e <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x192>
 8019d96:	9705      	str	r7, [sp, #20]
 8019d98:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8019d9c:	9b03      	ldr	r3, [sp, #12]
 8019d9e:	429c      	cmp	r4, r3
 8019da0:	f080 80b5 	bcs.w	8019f0e <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x222>
 8019da4:	9b02      	ldr	r3, [sp, #8]
 8019da6:	b35b      	cbz	r3, 8019e00 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x114>
 8019da8:	7831      	ldrb	r1, [r6, #0]
 8019daa:	4622      	mov	r2, r4
 8019dac:	1c77      	adds	r7, r6, #1
 8019dae:	3403      	adds	r4, #3
 8019db0:	f001 010f 	and.w	r1, r1, #15
 8019db4:	f108 3bff 	add.w	fp, r8, #4294967295
 8019db8:	464b      	mov	r3, r9
 8019dba:	4650      	mov	r0, sl
 8019dbc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019dc0:	4429      	add	r1, r5
 8019dc2:	f7ff ff65 	bl	8019c90 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L416blendPixelRGB888EPKhPhi>
 8019dc6:	f1bb 0f01 	cmp.w	fp, #1
 8019dca:	dd1c      	ble.n	8019e06 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019dcc:	7839      	ldrb	r1, [r7, #0]
 8019dce:	4622      	mov	r2, r4
 8019dd0:	464b      	mov	r3, r9
 8019dd2:	4650      	mov	r0, sl
 8019dd4:	0909      	lsrs	r1, r1, #4
 8019dd6:	f1ab 0b02 	sub.w	fp, fp, #2
 8019dda:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019dde:	4429      	add	r1, r5
 8019de0:	f7ff ff56 	bl	8019c90 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L416blendPixelRGB888EPKhPhi>
 8019de4:	f817 1b01 	ldrb.w	r1, [r7], #1
 8019de8:	1ce2      	adds	r2, r4, #3
 8019dea:	464b      	mov	r3, r9
 8019dec:	f001 010f 	and.w	r1, r1, #15
 8019df0:	4650      	mov	r0, sl
 8019df2:	3406      	adds	r4, #6
 8019df4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019df8:	4429      	add	r1, r5
 8019dfa:	f7ff ff49 	bl	8019c90 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L416blendPixelRGB888EPKhPhi>
 8019dfe:	e7e2      	b.n	8019dc6 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xda>
 8019e00:	4637      	mov	r7, r6
 8019e02:	46c3      	mov	fp, r8
 8019e04:	e7df      	b.n	8019dc6 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xda>
 8019e06:	d10a      	bne.n	8019e1e <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x132>
 8019e08:	7839      	ldrb	r1, [r7, #0]
 8019e0a:	4622      	mov	r2, r4
 8019e0c:	3403      	adds	r4, #3
 8019e0e:	464b      	mov	r3, r9
 8019e10:	0909      	lsrs	r1, r1, #4
 8019e12:	4650      	mov	r0, sl
 8019e14:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019e18:	4429      	add	r1, r5
 8019e1a:	f7ff ff39 	bl	8019c90 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L416blendPixelRGB888EPKhPhi>
 8019e1e:	9b04      	ldr	r3, [sp, #16]
 8019e20:	9a01      	ldr	r2, [sp, #4]
 8019e22:	881b      	ldrh	r3, [r3, #0]
 8019e24:	eba3 0308 	sub.w	r3, r3, r8
 8019e28:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019e2c:	441c      	add	r4, r3
 8019e2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019e32:	4413      	add	r3, r2
 8019e34:	9a05      	ldr	r2, [sp, #20]
 8019e36:	fb93 f3f2 	sdiv	r3, r3, r2
 8019e3a:	441e      	add	r6, r3
 8019e3c:	e7ae      	b.n	8019d9c <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xb0>
 8019e3e:	4632      	mov	r2, r6
 8019e40:	46c4      	mov	ip, r8
 8019e42:	e037      	b.n	8019eb4 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1c8>
 8019e44:	d10e      	bne.n	8019e64 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x178>
 8019e46:	7812      	ldrb	r2, [r2, #0]
 8019e48:	3003      	adds	r0, #3
 8019e4a:	0912      	lsrs	r2, r2, #4
 8019e4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e50:	18ac      	adds	r4, r5, r2
 8019e52:	5caa      	ldrb	r2, [r5, r2]
 8019e54:	f800 2c03 	strb.w	r2, [r0, #-3]
 8019e58:	7862      	ldrb	r2, [r4, #1]
 8019e5a:	f800 2c02 	strb.w	r2, [r0, #-2]
 8019e5e:	78a2      	ldrb	r2, [r4, #2]
 8019e60:	f800 2c01 	strb.w	r2, [r0, #-1]
 8019e64:	880c      	ldrh	r4, [r1, #0]
 8019e66:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8019e6a:	eba4 0408 	sub.w	r4, r4, r8
 8019e6e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019e72:	4404      	add	r4, r0
 8019e74:	9801      	ldr	r0, [sp, #4]
 8019e76:	4402      	add	r2, r0
 8019e78:	fb92 f2f7 	sdiv	r2, r2, r7
 8019e7c:	4416      	add	r6, r2
 8019e7e:	429c      	cmp	r4, r3
 8019e80:	d245      	bcs.n	8019f0e <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x222>
 8019e82:	9a02      	ldr	r2, [sp, #8]
 8019e84:	2a00      	cmp	r2, #0
 8019e86:	d0da      	beq.n	8019e3e <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x152>
 8019e88:	7830      	ldrb	r0, [r6, #0]
 8019e8a:	1c72      	adds	r2, r6, #1
 8019e8c:	3403      	adds	r4, #3
 8019e8e:	f000 000f 	and.w	r0, r0, #15
 8019e92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019e96:	eb05 0c00 	add.w	ip, r5, r0
 8019e9a:	5c28      	ldrb	r0, [r5, r0]
 8019e9c:	f804 0c03 	strb.w	r0, [r4, #-3]
 8019ea0:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019ea4:	f804 0c02 	strb.w	r0, [r4, #-2]
 8019ea8:	f89c 0002 	ldrb.w	r0, [ip, #2]
 8019eac:	f108 3cff 	add.w	ip, r8, #4294967295
 8019eb0:	f804 0c01 	strb.w	r0, [r4, #-1]
 8019eb4:	f1bc 0f01 	cmp.w	ip, #1
 8019eb8:	4620      	mov	r0, r4
 8019eba:	f104 0406 	add.w	r4, r4, #6
 8019ebe:	ddc1      	ble.n	8019e44 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x158>
 8019ec0:	7810      	ldrb	r0, [r2, #0]
 8019ec2:	f1ac 0c02 	sub.w	ip, ip, #2
 8019ec6:	0900      	lsrs	r0, r0, #4
 8019ec8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019ecc:	eb05 0e00 	add.w	lr, r5, r0
 8019ed0:	5c28      	ldrb	r0, [r5, r0]
 8019ed2:	f804 0c06 	strb.w	r0, [r4, #-6]
 8019ed6:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019eda:	f804 0c05 	strb.w	r0, [r4, #-5]
 8019ede:	f89e 0002 	ldrb.w	r0, [lr, #2]
 8019ee2:	f804 0c04 	strb.w	r0, [r4, #-4]
 8019ee6:	f812 0b01 	ldrb.w	r0, [r2], #1
 8019eea:	f000 000f 	and.w	r0, r0, #15
 8019eee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019ef2:	eb05 0e00 	add.w	lr, r5, r0
 8019ef6:	5c28      	ldrb	r0, [r5, r0]
 8019ef8:	f804 0c03 	strb.w	r0, [r4, #-3]
 8019efc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019f00:	f804 0c02 	strb.w	r0, [r4, #-2]
 8019f04:	f89e 0002 	ldrb.w	r0, [lr, #2]
 8019f08:	f804 0c01 	strb.w	r0, [r4, #-1]
 8019f0c:	e7d2      	b.n	8019eb4 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1c8>
 8019f0e:	4b04      	ldr	r3, [pc, #16]	; (8019f20 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x234>)
 8019f10:	6818      	ldr	r0, [r3, #0]
 8019f12:	6803      	ldr	r3, [r0, #0]
 8019f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f16:	4798      	blx	r3
 8019f18:	b00b      	add	sp, #44	; 0x2c
 8019f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f1e:	bf00      	nop
 8019f20:	24006bd8 	.word	0x24006bd8
 8019f24:	24006bd2 	.word	0x24006bd2

08019f28 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih>:
 8019f28:	b530      	push	{r4, r5, lr}
 8019f2a:	f89d 000c 	ldrb.w	r0, [sp, #12]
 8019f2e:	780d      	ldrb	r5, [r1, #0]
 8019f30:	28ff      	cmp	r0, #255	; 0xff
 8019f32:	d107      	bne.n	8019f44 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih+0x1c>
 8019f34:	2bff      	cmp	r3, #255	; 0xff
 8019f36:	d105      	bne.n	8019f44 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih+0x1c>
 8019f38:	7015      	strb	r5, [r2, #0]
 8019f3a:	784b      	ldrb	r3, [r1, #1]
 8019f3c:	7053      	strb	r3, [r2, #1]
 8019f3e:	788b      	ldrb	r3, [r1, #2]
 8019f40:	7093      	strb	r3, [r2, #2]
 8019f42:	bd30      	pop	{r4, r5, pc}
 8019f44:	fb10 f003 	smulbb	r0, r0, r3
 8019f48:	b283      	uxth	r3, r0
 8019f4a:	1c58      	adds	r0, r3, #1
 8019f4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019f50:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019f54:	b284      	uxth	r4, r0
 8019f56:	43c0      	mvns	r0, r0
 8019f58:	fb15 f504 	smulbb	r5, r5, r4
 8019f5c:	b2c3      	uxtb	r3, r0
 8019f5e:	7810      	ldrb	r0, [r2, #0]
 8019f60:	fb00 5003 	mla	r0, r0, r3, r5
 8019f64:	b280      	uxth	r0, r0
 8019f66:	1c45      	adds	r5, r0, #1
 8019f68:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019f6c:	7855      	ldrb	r5, [r2, #1]
 8019f6e:	fb15 f503 	smulbb	r5, r5, r3
 8019f72:	1200      	asrs	r0, r0, #8
 8019f74:	7010      	strb	r0, [r2, #0]
 8019f76:	7848      	ldrb	r0, [r1, #1]
 8019f78:	fb00 5004 	mla	r0, r0, r4, r5
 8019f7c:	b280      	uxth	r0, r0
 8019f7e:	1c45      	adds	r5, r0, #1
 8019f80:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019f84:	1200      	asrs	r0, r0, #8
 8019f86:	7050      	strb	r0, [r2, #1]
 8019f88:	7888      	ldrb	r0, [r1, #2]
 8019f8a:	7891      	ldrb	r1, [r2, #2]
 8019f8c:	fb11 f303 	smulbb	r3, r1, r3
 8019f90:	fb00 3304 	mla	r3, r0, r4, r3
 8019f94:	b29b      	uxth	r3, r3
 8019f96:	1c59      	adds	r1, r3, #1
 8019f98:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019f9c:	121b      	asrs	r3, r3, #8
 8019f9e:	e7cf      	b.n	8019f40 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih+0x18>

08019fa0 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8019fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fa4:	461d      	mov	r5, r3
 8019fa6:	b08f      	sub	sp, #60	; 0x3c
 8019fa8:	460c      	mov	r4, r1
 8019faa:	4616      	mov	r6, r2
 8019fac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019fae:	4680      	mov	r8, r0
 8019fb0:	6869      	ldr	r1, [r5, #4]
 8019fb2:	aa0a      	add	r2, sp, #40	; 0x28
 8019fb4:	6828      	ldr	r0, [r5, #0]
 8019fb6:	3604      	adds	r6, #4
 8019fb8:	f89d 9064 	ldrb.w	r9, [sp, #100]	; 0x64
 8019fbc:	4f57      	ldr	r7, [pc, #348]	; (801a11c <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>)
 8019fbe:	c203      	stmia	r2!, {r0, r1}
 8019fc0:	6818      	ldr	r0, [r3, #0]
 8019fc2:	aa0c      	add	r2, sp, #48	; 0x30
 8019fc4:	6859      	ldr	r1, [r3, #4]
 8019fc6:	c203      	stmia	r2!, {r0, r1}
 8019fc8:	a80a      	add	r0, sp, #40	; 0x28
 8019fca:	f7f4 f805 	bl	800dfd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fce:	4629      	mov	r1, r5
 8019fd0:	a80c      	add	r0, sp, #48	; 0x30
 8019fd2:	2502      	movs	r5, #2
 8019fd4:	f7f4 f828 	bl	800e028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019fd8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8019fdc:	f9bd a036 	ldrsh.w	sl, [sp, #54]	; 0x36
 8019fe0:	f002 0301 	and.w	r3, r2, #1
 8019fe4:	f9bd b034 	ldrsh.w	fp, [sp, #52]	; 0x34
 8019fe8:	9304      	str	r3, [sp, #16]
 8019fea:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8019fee:	f003 0101 	and.w	r1, r3, #1
 8019ff2:	9103      	str	r1, [sp, #12]
 8019ff4:	9803      	ldr	r0, [sp, #12]
 8019ff6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8019ffa:	4403      	add	r3, r0
 8019ffc:	6838      	ldr	r0, [r7, #0]
 8019ffe:	fb01 2303 	mla	r3, r1, r3, r2
 801a002:	fb93 f3f5 	sdiv	r3, r3, r5
 801a006:	18e5      	adds	r5, r4, r3
 801a008:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a00c:	441a      	add	r2, r3
 801a00e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a012:	4419      	add	r1, r3
 801a014:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801a018:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801a01c:	6803      	ldr	r3, [r0, #0]
 801a01e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a020:	4798      	blx	r3
 801a022:	4a3f      	ldr	r2, [pc, #252]	; (801a120 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x180>)
 801a024:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801a028:	8813      	ldrh	r3, [r2, #0]
 801a02a:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801a02e:	9207      	str	r2, [sp, #28]
 801a030:	fb03 1404 	mla	r4, r3, r4, r1
 801a034:	fb0a f303 	mul.w	r3, sl, r3
 801a038:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a03c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a040:	4404      	add	r4, r0
 801a042:	18e3      	adds	r3, r4, r3
 801a044:	e9cd 3705 	strd	r3, r7, [sp, #20]
 801a048:	9b05      	ldr	r3, [sp, #20]
 801a04a:	429c      	cmp	r4, r3
 801a04c:	d25d      	bcs.n	801a10a <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x16a>
 801a04e:	9b04      	ldr	r3, [sp, #16]
 801a050:	2b00      	cmp	r3, #0
 801a052:	d037      	beq.n	801a0c4 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x124>
 801a054:	782b      	ldrb	r3, [r5, #0]
 801a056:	1c6f      	adds	r7, r5, #1
 801a058:	f003 030f 	and.w	r3, r3, #15
 801a05c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a060:	9309      	str	r3, [sp, #36]	; 0x24
 801a062:	0e1b      	lsrs	r3, r3, #24
 801a064:	d006      	beq.n	801a074 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd4>
 801a066:	9300      	str	r3, [sp, #0]
 801a068:	4622      	mov	r2, r4
 801a06a:	464b      	mov	r3, r9
 801a06c:	a909      	add	r1, sp, #36	; 0x24
 801a06e:	4640      	mov	r0, r8
 801a070:	f7ff ff5a 	bl	8019f28 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih>
 801a074:	3403      	adds	r4, #3
 801a076:	f10b 3aff 	add.w	sl, fp, #4294967295
 801a07a:	f1ba 0f01 	cmp.w	sl, #1
 801a07e:	dd24      	ble.n	801a0ca <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12a>
 801a080:	783b      	ldrb	r3, [r7, #0]
 801a082:	091b      	lsrs	r3, r3, #4
 801a084:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a088:	9308      	str	r3, [sp, #32]
 801a08a:	0e1b      	lsrs	r3, r3, #24
 801a08c:	d006      	beq.n	801a09c <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801a08e:	9300      	str	r3, [sp, #0]
 801a090:	4622      	mov	r2, r4
 801a092:	464b      	mov	r3, r9
 801a094:	a908      	add	r1, sp, #32
 801a096:	4640      	mov	r0, r8
 801a098:	f7ff ff46 	bl	8019f28 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih>
 801a09c:	f817 3b01 	ldrb.w	r3, [r7], #1
 801a0a0:	f003 030f 	and.w	r3, r3, #15
 801a0a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a0a8:	9309      	str	r3, [sp, #36]	; 0x24
 801a0aa:	0e1b      	lsrs	r3, r3, #24
 801a0ac:	d006      	beq.n	801a0bc <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801a0ae:	9300      	str	r3, [sp, #0]
 801a0b0:	1ce2      	adds	r2, r4, #3
 801a0b2:	464b      	mov	r3, r9
 801a0b4:	a909      	add	r1, sp, #36	; 0x24
 801a0b6:	4640      	mov	r0, r8
 801a0b8:	f7ff ff36 	bl	8019f28 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih>
 801a0bc:	3406      	adds	r4, #6
 801a0be:	f1aa 0a02 	sub.w	sl, sl, #2
 801a0c2:	e7da      	b.n	801a07a <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xda>
 801a0c4:	462f      	mov	r7, r5
 801a0c6:	46da      	mov	sl, fp
 801a0c8:	e7d7      	b.n	801a07a <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xda>
 801a0ca:	d10e      	bne.n	801a0ea <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x14a>
 801a0cc:	783b      	ldrb	r3, [r7, #0]
 801a0ce:	091b      	lsrs	r3, r3, #4
 801a0d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a0d4:	9309      	str	r3, [sp, #36]	; 0x24
 801a0d6:	0e1b      	lsrs	r3, r3, #24
 801a0d8:	d006      	beq.n	801a0e8 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x148>
 801a0da:	9300      	str	r3, [sp, #0]
 801a0dc:	4622      	mov	r2, r4
 801a0de:	464b      	mov	r3, r9
 801a0e0:	a909      	add	r1, sp, #36	; 0x24
 801a0e2:	4640      	mov	r0, r8
 801a0e4:	f7ff ff20 	bl	8019f28 <_ZNK8touchgfx8LCD24bpp17DecompressorL8_L418blendPixelARGB8888EPKhPhih>
 801a0e8:	3403      	adds	r4, #3
 801a0ea:	9b07      	ldr	r3, [sp, #28]
 801a0ec:	9a03      	ldr	r2, [sp, #12]
 801a0ee:	881b      	ldrh	r3, [r3, #0]
 801a0f0:	eba3 030b 	sub.w	r3, r3, fp
 801a0f4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a0f8:	441c      	add	r4, r3
 801a0fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801a0fe:	4413      	add	r3, r2
 801a100:	2202      	movs	r2, #2
 801a102:	fb93 f3f2 	sdiv	r3, r3, r2
 801a106:	441d      	add	r5, r3
 801a108:	e79e      	b.n	801a048 <_ZN8touchgfx8LCD24bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa8>
 801a10a:	9b06      	ldr	r3, [sp, #24]
 801a10c:	6818      	ldr	r0, [r3, #0]
 801a10e:	6803      	ldr	r3, [r0, #0]
 801a110:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a112:	4798      	blx	r3
 801a114:	b00f      	add	sp, #60	; 0x3c
 801a116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a11a:	bf00      	nop
 801a11c:	24006bd8 	.word	0x24006bd8
 801a120:	24006bd2 	.word	0x24006bd2

0801a124 <CRC_Lock>:
 801a124:	4a20      	ldr	r2, [pc, #128]	; (801a1a8 <CRC_Lock+0x84>)
 801a126:	b530      	push	{r4, r5, lr}
 801a128:	6813      	ldr	r3, [r2, #0]
 801a12a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a12e:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a132:	f023 0301 	bic.w	r3, r3, #1
 801a136:	6013      	str	r3, [r2, #0]
 801a138:	4b1c      	ldr	r3, [pc, #112]	; (801a1ac <CRC_Lock+0x88>)
 801a13a:	681a      	ldr	r2, [r3, #0]
 801a13c:	4022      	ands	r2, r4
 801a13e:	42aa      	cmp	r2, r5
 801a140:	d005      	beq.n	801a14e <CRC_Lock+0x2a>
 801a142:	681b      	ldr	r3, [r3, #0]
 801a144:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a148:	4023      	ands	r3, r4
 801a14a:	4293      	cmp	r3, r2
 801a14c:	d124      	bne.n	801a198 <CRC_Lock+0x74>
 801a14e:	4b18      	ldr	r3, [pc, #96]	; (801a1b0 <CRC_Lock+0x8c>)
 801a150:	681b      	ldr	r3, [r3, #0]
 801a152:	bb0b      	cbnz	r3, 801a198 <CRC_Lock+0x74>
 801a154:	4b17      	ldr	r3, [pc, #92]	; (801a1b4 <CRC_Lock+0x90>)
 801a156:	681a      	ldr	r2, [r3, #0]
 801a158:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801a15c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801a160:	d00d      	beq.n	801a17e <CRC_Lock+0x5a>
 801a162:	681a      	ldr	r2, [r3, #0]
 801a164:	f240 4483 	movw	r4, #1155	; 0x483
 801a168:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801a16c:	42a2      	cmp	r2, r4
 801a16e:	d006      	beq.n	801a17e <CRC_Lock+0x5a>
 801a170:	681b      	ldr	r3, [r3, #0]
 801a172:	f240 4285 	movw	r2, #1157	; 0x485
 801a176:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a17a:	4293      	cmp	r3, r2
 801a17c:	d10c      	bne.n	801a198 <CRC_Lock+0x74>
 801a17e:	4b0e      	ldr	r3, [pc, #56]	; (801a1b8 <CRC_Lock+0x94>)
 801a180:	2201      	movs	r2, #1
 801a182:	601a      	str	r2, [r3, #0]
 801a184:	681a      	ldr	r2, [r3, #0]
 801a186:	2a00      	cmp	r2, #0
 801a188:	d1fc      	bne.n	801a184 <CRC_Lock+0x60>
 801a18a:	4b0c      	ldr	r3, [pc, #48]	; (801a1bc <CRC_Lock+0x98>)
 801a18c:	6018      	str	r0, [r3, #0]
 801a18e:	6818      	ldr	r0, [r3, #0]
 801a190:	1a43      	subs	r3, r0, r1
 801a192:	4258      	negs	r0, r3
 801a194:	4158      	adcs	r0, r3
 801a196:	bd30      	pop	{r4, r5, pc}
 801a198:	4b09      	ldr	r3, [pc, #36]	; (801a1c0 <CRC_Lock+0x9c>)
 801a19a:	2201      	movs	r2, #1
 801a19c:	601a      	str	r2, [r3, #0]
 801a19e:	681a      	ldr	r2, [r3, #0]
 801a1a0:	2a00      	cmp	r2, #0
 801a1a2:	d1fc      	bne.n	801a19e <CRC_Lock+0x7a>
 801a1a4:	4b07      	ldr	r3, [pc, #28]	; (801a1c4 <CRC_Lock+0xa0>)
 801a1a6:	e7f1      	b.n	801a18c <CRC_Lock+0x68>
 801a1a8:	e0002000 	.word	0xe0002000
 801a1ac:	e000ed00 	.word	0xe000ed00
 801a1b0:	e0042000 	.word	0xe0042000
 801a1b4:	5c001000 	.word	0x5c001000
 801a1b8:	58024c08 	.word	0x58024c08
 801a1bc:	58024c00 	.word	0x58024c00
 801a1c0:	40023008 	.word	0x40023008
 801a1c4:	40023000 	.word	0x40023000

0801a1c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a1c8:	6101      	str	r1, [r0, #16]
 801a1ca:	4770      	bx	lr

0801a1cc <_ZN8touchgfx8Gestures4tickEv>:
 801a1cc:	7b83      	ldrb	r3, [r0, #14]
 801a1ce:	b14b      	cbz	r3, 801a1e4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a1d0:	8903      	ldrh	r3, [r0, #8]
 801a1d2:	3301      	adds	r3, #1
 801a1d4:	b29b      	uxth	r3, r3
 801a1d6:	2b07      	cmp	r3, #7
 801a1d8:	8103      	strh	r3, [r0, #8]
 801a1da:	bf81      	itttt	hi
 801a1dc:	2300      	movhi	r3, #0
 801a1de:	8143      	strhhi	r3, [r0, #10]
 801a1e0:	8183      	strhhi	r3, [r0, #12]
 801a1e2:	7383      	strbhi	r3, [r0, #14]
 801a1e4:	4770      	bx	lr
	...

0801a1e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a1e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a1ec:	4698      	mov	r8, r3
 801a1ee:	8883      	ldrh	r3, [r0, #4]
 801a1f0:	4604      	mov	r4, r0
 801a1f2:	4617      	mov	r7, r2
 801a1f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a1f8:	eba8 0303 	sub.w	r3, r8, r3
 801a1fc:	4a19      	ldr	r2, [pc, #100]	; (801a264 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801a1fe:	460e      	mov	r6, r1
 801a200:	b21b      	sxth	r3, r3
 801a202:	88c1      	ldrh	r1, [r0, #6]
 801a204:	9200      	str	r2, [sp, #0]
 801a206:	2000      	movs	r0, #0
 801a208:	2b00      	cmp	r3, #0
 801a20a:	8aa2      	ldrh	r2, [r4, #20]
 801a20c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a210:	bfb8      	it	lt
 801a212:	425b      	neglt	r3, r3
 801a214:	f88d 0004 	strb.w	r0, [sp, #4]
 801a218:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a21c:	b21b      	sxth	r3, r3
 801a21e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a222:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a226:	4293      	cmp	r3, r2
 801a228:	dc07      	bgt.n	801a23a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801a22a:	1a69      	subs	r1, r5, r1
 801a22c:	b209      	sxth	r1, r1
 801a22e:	2900      	cmp	r1, #0
 801a230:	bfb8      	it	lt
 801a232:	4249      	neglt	r1, r1
 801a234:	b209      	sxth	r1, r1
 801a236:	428a      	cmp	r2, r1
 801a238:	da10      	bge.n	801a25c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801a23a:	6920      	ldr	r0, [r4, #16]
 801a23c:	4669      	mov	r1, sp
 801a23e:	eba8 0606 	sub.w	r6, r8, r6
 801a242:	1bef      	subs	r7, r5, r7
 801a244:	6803      	ldr	r3, [r0, #0]
 801a246:	685b      	ldr	r3, [r3, #4]
 801a248:	4798      	blx	r3
 801a24a:	2300      	movs	r3, #0
 801a24c:	2001      	movs	r0, #1
 801a24e:	8166      	strh	r6, [r4, #10]
 801a250:	8123      	strh	r3, [r4, #8]
 801a252:	81a7      	strh	r7, [r4, #12]
 801a254:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a258:	80e5      	strh	r5, [r4, #6]
 801a25a:	73a0      	strb	r0, [r4, #14]
 801a25c:	b004      	add	sp, #16
 801a25e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a262:	bf00      	nop
 801a264:	0801c57c 	.word	0x0801c57c

0801a268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a268:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a26a:	461e      	mov	r6, r3
 801a26c:	1e4b      	subs	r3, r1, #1
 801a26e:	b085      	sub	sp, #20
 801a270:	4604      	mov	r4, r0
 801a272:	2b01      	cmp	r3, #1
 801a274:	460d      	mov	r5, r1
 801a276:	4617      	mov	r7, r2
 801a278:	d84b      	bhi.n	801a312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a27a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a27e:	1cd3      	adds	r3, r2, #3
 801a280:	b29b      	uxth	r3, r3
 801a282:	2b06      	cmp	r3, #6
 801a284:	d916      	bls.n	801a2b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a286:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801a328 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a28a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a28e:	f8cd c004 	str.w	ip, [sp, #4]
 801a292:	f04f 0c00 	mov.w	ip, #0
 801a296:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a29a:	6900      	ldr	r0, [r0, #16]
 801a29c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a2a0:	a901      	add	r1, sp, #4
 801a2a2:	f88d c008 	strb.w	ip, [sp, #8]
 801a2a6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a2aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a2ae:	6803      	ldr	r3, [r0, #0]
 801a2b0:	689b      	ldr	r3, [r3, #8]
 801a2b2:	4798      	blx	r3
 801a2b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a2b8:	1cd3      	adds	r3, r2, #3
 801a2ba:	b29b      	uxth	r3, r3
 801a2bc:	2b06      	cmp	r3, #6
 801a2be:	d916      	bls.n	801a2ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a2c0:	f8df c064 	ldr.w	ip, [pc, #100]	; 801a328 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a2c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a2c8:	f8cd c004 	str.w	ip, [sp, #4]
 801a2cc:	f04f 0c01 	mov.w	ip, #1
 801a2d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a2d4:	6920      	ldr	r0, [r4, #16]
 801a2d6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a2da:	a901      	add	r1, sp, #4
 801a2dc:	f88d c008 	strb.w	ip, [sp, #8]
 801a2e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a2e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a2e8:	6803      	ldr	r3, [r0, #0]
 801a2ea:	689b      	ldr	r3, [r3, #8]
 801a2ec:	4798      	blx	r3
 801a2ee:	4b0d      	ldr	r3, [pc, #52]	; (801a324 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801a2f0:	a901      	add	r1, sp, #4
 801a2f2:	6920      	ldr	r0, [r4, #16]
 801a2f4:	9301      	str	r3, [sp, #4]
 801a2f6:	2300      	movs	r3, #0
 801a2f8:	f88d 5008 	strb.w	r5, [sp, #8]
 801a2fc:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a300:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a304:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a308:	6803      	ldr	r3, [r0, #0]
 801a30a:	681b      	ldr	r3, [r3, #0]
 801a30c:	4798      	blx	r3
 801a30e:	b005      	add	sp, #20
 801a310:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a312:	2900      	cmp	r1, #0
 801a314:	d1eb      	bne.n	801a2ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a316:	80a2      	strh	r2, [r4, #4]
 801a318:	80c6      	strh	r6, [r0, #6]
 801a31a:	60a1      	str	r1, [r4, #8]
 801a31c:	81a1      	strh	r1, [r4, #12]
 801a31e:	73a1      	strb	r1, [r4, #14]
 801a320:	e7e5      	b.n	801a2ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a322:	bf00      	nop
 801a324:	0801c568 	.word	0x0801c568
 801a328:	0801c8ec 	.word	0x0801c8ec

0801a32c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801a32c:	790b      	ldrb	r3, [r1, #4]
 801a32e:	2b00      	cmp	r3, #0
 801a330:	bf0c      	ite	eq
 801a332:	2301      	moveq	r3, #1
 801a334:	2300      	movne	r3, #0
 801a336:	b570      	push	{r4, r5, r6, lr}
 801a338:	4604      	mov	r4, r0
 801a33a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801a33e:	460e      	mov	r6, r1
 801a340:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801a344:	d109      	bne.n	801a35a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801a346:	b14d      	cbz	r5, 801a35c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801a348:	7933      	ldrb	r3, [r6, #4]
 801a34a:	2b01      	cmp	r3, #1
 801a34c:	d10c      	bne.n	801a368 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801a34e:	6823      	ldr	r3, [r4, #0]
 801a350:	4620      	mov	r0, r4
 801a352:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801a354:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a358:	4718      	bx	r3
 801a35a:	b12d      	cbz	r5, 801a368 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801a35c:	6823      	ldr	r3, [r4, #0]
 801a35e:	4620      	mov	r0, r4
 801a360:	695b      	ldr	r3, [r3, #20]
 801a362:	4798      	blx	r3
 801a364:	2d00      	cmp	r5, #0
 801a366:	d1ef      	bne.n	801a348 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801a368:	bd70      	pop	{r4, r5, r6, pc}

0801a36a <__aeabi_atexit>:
 801a36a:	460b      	mov	r3, r1
 801a36c:	4601      	mov	r1, r0
 801a36e:	4618      	mov	r0, r3
 801a370:	f000 b90e 	b.w	801a590 <__cxa_atexit>

0801a374 <_ZdlPvj>:
 801a374:	f000 b812 	b.w	801a39c <_ZdlPv>

0801a378 <__cxa_guard_acquire>:
 801a378:	6803      	ldr	r3, [r0, #0]
 801a37a:	07db      	lsls	r3, r3, #31
 801a37c:	d406      	bmi.n	801a38c <__cxa_guard_acquire+0x14>
 801a37e:	7843      	ldrb	r3, [r0, #1]
 801a380:	b103      	cbz	r3, 801a384 <__cxa_guard_acquire+0xc>
 801a382:	deff      	udf	#255	; 0xff
 801a384:	2301      	movs	r3, #1
 801a386:	7043      	strb	r3, [r0, #1]
 801a388:	4618      	mov	r0, r3
 801a38a:	4770      	bx	lr
 801a38c:	2000      	movs	r0, #0
 801a38e:	4770      	bx	lr

0801a390 <__cxa_guard_release>:
 801a390:	2301      	movs	r3, #1
 801a392:	6003      	str	r3, [r0, #0]
 801a394:	4770      	bx	lr

0801a396 <__cxa_pure_virtual>:
 801a396:	b508      	push	{r3, lr}
 801a398:	f000 f80e 	bl	801a3b8 <_ZSt9terminatev>

0801a39c <_ZdlPv>:
 801a39c:	f000 b844 	b.w	801a428 <free>

0801a3a0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a3a0:	b508      	push	{r3, lr}
 801a3a2:	4780      	blx	r0
 801a3a4:	f000 f80d 	bl	801a3c2 <abort>

0801a3a8 <_ZSt13get_terminatev>:
 801a3a8:	4b02      	ldr	r3, [pc, #8]	; (801a3b4 <_ZSt13get_terminatev+0xc>)
 801a3aa:	6818      	ldr	r0, [r3, #0]
 801a3ac:	f3bf 8f5b 	dmb	ish
 801a3b0:	4770      	bx	lr
 801a3b2:	bf00      	nop
 801a3b4:	240000ac 	.word	0x240000ac

0801a3b8 <_ZSt9terminatev>:
 801a3b8:	b508      	push	{r3, lr}
 801a3ba:	f7ff fff5 	bl	801a3a8 <_ZSt13get_terminatev>
 801a3be:	f7ff ffef 	bl	801a3a0 <_ZN10__cxxabiv111__terminateEPFvvE>

0801a3c2 <abort>:
 801a3c2:	b508      	push	{r3, lr}
 801a3c4:	2006      	movs	r0, #6
 801a3c6:	f000 fa27 	bl	801a818 <raise>
 801a3ca:	2001      	movs	r0, #1
 801a3cc:	f7e6 fe5e 	bl	800108c <_exit>

0801a3d0 <__assert_func>:
 801a3d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a3d2:	4614      	mov	r4, r2
 801a3d4:	461a      	mov	r2, r3
 801a3d6:	4b09      	ldr	r3, [pc, #36]	; (801a3fc <__assert_func+0x2c>)
 801a3d8:	681b      	ldr	r3, [r3, #0]
 801a3da:	4605      	mov	r5, r0
 801a3dc:	68d8      	ldr	r0, [r3, #12]
 801a3de:	b14c      	cbz	r4, 801a3f4 <__assert_func+0x24>
 801a3e0:	4b07      	ldr	r3, [pc, #28]	; (801a400 <__assert_func+0x30>)
 801a3e2:	9100      	str	r1, [sp, #0]
 801a3e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801a3e8:	4906      	ldr	r1, [pc, #24]	; (801a404 <__assert_func+0x34>)
 801a3ea:	462b      	mov	r3, r5
 801a3ec:	f000 f970 	bl	801a6d0 <fiprintf>
 801a3f0:	f7ff ffe7 	bl	801a3c2 <abort>
 801a3f4:	4b04      	ldr	r3, [pc, #16]	; (801a408 <__assert_func+0x38>)
 801a3f6:	461c      	mov	r4, r3
 801a3f8:	e7f3      	b.n	801a3e2 <__assert_func+0x12>
 801a3fa:	bf00      	nop
 801a3fc:	24000108 	.word	0x24000108
 801a400:	0801cb5c 	.word	0x0801cb5c
 801a404:	0801cb69 	.word	0x0801cb69
 801a408:	0801cb97 	.word	0x0801cb97

0801a40c <atexit>:
 801a40c:	2300      	movs	r3, #0
 801a40e:	4601      	mov	r1, r0
 801a410:	461a      	mov	r2, r3
 801a412:	4618      	mov	r0, r3
 801a414:	f000 baac 	b.w	801a970 <__register_exitproc>

0801a418 <malloc>:
 801a418:	4b02      	ldr	r3, [pc, #8]	; (801a424 <malloc+0xc>)
 801a41a:	4601      	mov	r1, r0
 801a41c:	6818      	ldr	r0, [r3, #0]
 801a41e:	f000 b82b 	b.w	801a478 <_malloc_r>
 801a422:	bf00      	nop
 801a424:	24000108 	.word	0x24000108

0801a428 <free>:
 801a428:	4b02      	ldr	r3, [pc, #8]	; (801a434 <free+0xc>)
 801a42a:	4601      	mov	r1, r0
 801a42c:	6818      	ldr	r0, [r3, #0]
 801a42e:	f000 bafd 	b.w	801aa2c <_free_r>
 801a432:	bf00      	nop
 801a434:	24000108 	.word	0x24000108

0801a438 <sbrk_aligned>:
 801a438:	b570      	push	{r4, r5, r6, lr}
 801a43a:	4e0e      	ldr	r6, [pc, #56]	; (801a474 <sbrk_aligned+0x3c>)
 801a43c:	460c      	mov	r4, r1
 801a43e:	6831      	ldr	r1, [r6, #0]
 801a440:	4605      	mov	r5, r0
 801a442:	b911      	cbnz	r1, 801a44a <sbrk_aligned+0x12>
 801a444:	f000 fa38 	bl	801a8b8 <_sbrk_r>
 801a448:	6030      	str	r0, [r6, #0]
 801a44a:	4621      	mov	r1, r4
 801a44c:	4628      	mov	r0, r5
 801a44e:	f000 fa33 	bl	801a8b8 <_sbrk_r>
 801a452:	1c43      	adds	r3, r0, #1
 801a454:	d00a      	beq.n	801a46c <sbrk_aligned+0x34>
 801a456:	1cc4      	adds	r4, r0, #3
 801a458:	f024 0403 	bic.w	r4, r4, #3
 801a45c:	42a0      	cmp	r0, r4
 801a45e:	d007      	beq.n	801a470 <sbrk_aligned+0x38>
 801a460:	1a21      	subs	r1, r4, r0
 801a462:	4628      	mov	r0, r5
 801a464:	f000 fa28 	bl	801a8b8 <_sbrk_r>
 801a468:	3001      	adds	r0, #1
 801a46a:	d101      	bne.n	801a470 <sbrk_aligned+0x38>
 801a46c:	f04f 34ff 	mov.w	r4, #4294967295
 801a470:	4620      	mov	r0, r4
 801a472:	bd70      	pop	{r4, r5, r6, pc}
 801a474:	24007508 	.word	0x24007508

0801a478 <_malloc_r>:
 801a478:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a47c:	1ccd      	adds	r5, r1, #3
 801a47e:	f025 0503 	bic.w	r5, r5, #3
 801a482:	3508      	adds	r5, #8
 801a484:	2d0c      	cmp	r5, #12
 801a486:	bf38      	it	cc
 801a488:	250c      	movcc	r5, #12
 801a48a:	2d00      	cmp	r5, #0
 801a48c:	4607      	mov	r7, r0
 801a48e:	db01      	blt.n	801a494 <_malloc_r+0x1c>
 801a490:	42a9      	cmp	r1, r5
 801a492:	d905      	bls.n	801a4a0 <_malloc_r+0x28>
 801a494:	230c      	movs	r3, #12
 801a496:	603b      	str	r3, [r7, #0]
 801a498:	2600      	movs	r6, #0
 801a49a:	4630      	mov	r0, r6
 801a49c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a4a0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 801a574 <_malloc_r+0xfc>
 801a4a4:	f000 f868 	bl	801a578 <__malloc_lock>
 801a4a8:	f8d8 3000 	ldr.w	r3, [r8]
 801a4ac:	461c      	mov	r4, r3
 801a4ae:	bb5c      	cbnz	r4, 801a508 <_malloc_r+0x90>
 801a4b0:	4629      	mov	r1, r5
 801a4b2:	4638      	mov	r0, r7
 801a4b4:	f7ff ffc0 	bl	801a438 <sbrk_aligned>
 801a4b8:	1c43      	adds	r3, r0, #1
 801a4ba:	4604      	mov	r4, r0
 801a4bc:	d155      	bne.n	801a56a <_malloc_r+0xf2>
 801a4be:	f8d8 4000 	ldr.w	r4, [r8]
 801a4c2:	4626      	mov	r6, r4
 801a4c4:	2e00      	cmp	r6, #0
 801a4c6:	d145      	bne.n	801a554 <_malloc_r+0xdc>
 801a4c8:	2c00      	cmp	r4, #0
 801a4ca:	d048      	beq.n	801a55e <_malloc_r+0xe6>
 801a4cc:	6823      	ldr	r3, [r4, #0]
 801a4ce:	4631      	mov	r1, r6
 801a4d0:	4638      	mov	r0, r7
 801a4d2:	eb04 0903 	add.w	r9, r4, r3
 801a4d6:	f000 f9ef 	bl	801a8b8 <_sbrk_r>
 801a4da:	4581      	cmp	r9, r0
 801a4dc:	d13f      	bne.n	801a55e <_malloc_r+0xe6>
 801a4de:	6821      	ldr	r1, [r4, #0]
 801a4e0:	1a6d      	subs	r5, r5, r1
 801a4e2:	4629      	mov	r1, r5
 801a4e4:	4638      	mov	r0, r7
 801a4e6:	f7ff ffa7 	bl	801a438 <sbrk_aligned>
 801a4ea:	3001      	adds	r0, #1
 801a4ec:	d037      	beq.n	801a55e <_malloc_r+0xe6>
 801a4ee:	6823      	ldr	r3, [r4, #0]
 801a4f0:	442b      	add	r3, r5
 801a4f2:	6023      	str	r3, [r4, #0]
 801a4f4:	f8d8 3000 	ldr.w	r3, [r8]
 801a4f8:	2b00      	cmp	r3, #0
 801a4fa:	d038      	beq.n	801a56e <_malloc_r+0xf6>
 801a4fc:	685a      	ldr	r2, [r3, #4]
 801a4fe:	42a2      	cmp	r2, r4
 801a500:	d12b      	bne.n	801a55a <_malloc_r+0xe2>
 801a502:	2200      	movs	r2, #0
 801a504:	605a      	str	r2, [r3, #4]
 801a506:	e00f      	b.n	801a528 <_malloc_r+0xb0>
 801a508:	6822      	ldr	r2, [r4, #0]
 801a50a:	1b52      	subs	r2, r2, r5
 801a50c:	d41f      	bmi.n	801a54e <_malloc_r+0xd6>
 801a50e:	2a0b      	cmp	r2, #11
 801a510:	d917      	bls.n	801a542 <_malloc_r+0xca>
 801a512:	1961      	adds	r1, r4, r5
 801a514:	42a3      	cmp	r3, r4
 801a516:	6025      	str	r5, [r4, #0]
 801a518:	bf18      	it	ne
 801a51a:	6059      	strne	r1, [r3, #4]
 801a51c:	6863      	ldr	r3, [r4, #4]
 801a51e:	bf08      	it	eq
 801a520:	f8c8 1000 	streq.w	r1, [r8]
 801a524:	5162      	str	r2, [r4, r5]
 801a526:	604b      	str	r3, [r1, #4]
 801a528:	4638      	mov	r0, r7
 801a52a:	f104 060b 	add.w	r6, r4, #11
 801a52e:	f000 f829 	bl	801a584 <__malloc_unlock>
 801a532:	f026 0607 	bic.w	r6, r6, #7
 801a536:	1d23      	adds	r3, r4, #4
 801a538:	1af2      	subs	r2, r6, r3
 801a53a:	d0ae      	beq.n	801a49a <_malloc_r+0x22>
 801a53c:	1b9b      	subs	r3, r3, r6
 801a53e:	50a3      	str	r3, [r4, r2]
 801a540:	e7ab      	b.n	801a49a <_malloc_r+0x22>
 801a542:	42a3      	cmp	r3, r4
 801a544:	6862      	ldr	r2, [r4, #4]
 801a546:	d1dd      	bne.n	801a504 <_malloc_r+0x8c>
 801a548:	f8c8 2000 	str.w	r2, [r8]
 801a54c:	e7ec      	b.n	801a528 <_malloc_r+0xb0>
 801a54e:	4623      	mov	r3, r4
 801a550:	6864      	ldr	r4, [r4, #4]
 801a552:	e7ac      	b.n	801a4ae <_malloc_r+0x36>
 801a554:	4634      	mov	r4, r6
 801a556:	6876      	ldr	r6, [r6, #4]
 801a558:	e7b4      	b.n	801a4c4 <_malloc_r+0x4c>
 801a55a:	4613      	mov	r3, r2
 801a55c:	e7cc      	b.n	801a4f8 <_malloc_r+0x80>
 801a55e:	230c      	movs	r3, #12
 801a560:	603b      	str	r3, [r7, #0]
 801a562:	4638      	mov	r0, r7
 801a564:	f000 f80e 	bl	801a584 <__malloc_unlock>
 801a568:	e797      	b.n	801a49a <_malloc_r+0x22>
 801a56a:	6025      	str	r5, [r4, #0]
 801a56c:	e7dc      	b.n	801a528 <_malloc_r+0xb0>
 801a56e:	605b      	str	r3, [r3, #4]
 801a570:	deff      	udf	#255	; 0xff
 801a572:	bf00      	nop
 801a574:	24007504 	.word	0x24007504

0801a578 <__malloc_lock>:
 801a578:	4801      	ldr	r0, [pc, #4]	; (801a580 <__malloc_lock+0x8>)
 801a57a:	f000 b9e9 	b.w	801a950 <__retarget_lock_acquire_recursive>
 801a57e:	bf00      	nop
 801a580:	2400764d 	.word	0x2400764d

0801a584 <__malloc_unlock>:
 801a584:	4801      	ldr	r0, [pc, #4]	; (801a58c <__malloc_unlock+0x8>)
 801a586:	f000 b9e4 	b.w	801a952 <__retarget_lock_release_recursive>
 801a58a:	bf00      	nop
 801a58c:	2400764d 	.word	0x2400764d

0801a590 <__cxa_atexit>:
 801a590:	b510      	push	{r4, lr}
 801a592:	4c05      	ldr	r4, [pc, #20]	; (801a5a8 <__cxa_atexit+0x18>)
 801a594:	4613      	mov	r3, r2
 801a596:	b12c      	cbz	r4, 801a5a4 <__cxa_atexit+0x14>
 801a598:	460a      	mov	r2, r1
 801a59a:	4601      	mov	r1, r0
 801a59c:	2002      	movs	r0, #2
 801a59e:	f000 f9e7 	bl	801a970 <__register_exitproc>
 801a5a2:	bd10      	pop	{r4, pc}
 801a5a4:	4620      	mov	r0, r4
 801a5a6:	e7fc      	b.n	801a5a2 <__cxa_atexit+0x12>
 801a5a8:	0801a971 	.word	0x0801a971

0801a5ac <std>:
 801a5ac:	2300      	movs	r3, #0
 801a5ae:	b510      	push	{r4, lr}
 801a5b0:	4604      	mov	r4, r0
 801a5b2:	e9c0 3300 	strd	r3, r3, [r0]
 801a5b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801a5ba:	6083      	str	r3, [r0, #8]
 801a5bc:	8181      	strh	r1, [r0, #12]
 801a5be:	6643      	str	r3, [r0, #100]	; 0x64
 801a5c0:	81c2      	strh	r2, [r0, #14]
 801a5c2:	6183      	str	r3, [r0, #24]
 801a5c4:	4619      	mov	r1, r3
 801a5c6:	2208      	movs	r2, #8
 801a5c8:	305c      	adds	r0, #92	; 0x5c
 801a5ca:	f000 f8f4 	bl	801a7b6 <memset>
 801a5ce:	4b05      	ldr	r3, [pc, #20]	; (801a5e4 <std+0x38>)
 801a5d0:	6263      	str	r3, [r4, #36]	; 0x24
 801a5d2:	4b05      	ldr	r3, [pc, #20]	; (801a5e8 <std+0x3c>)
 801a5d4:	62a3      	str	r3, [r4, #40]	; 0x28
 801a5d6:	4b05      	ldr	r3, [pc, #20]	; (801a5ec <std+0x40>)
 801a5d8:	62e3      	str	r3, [r4, #44]	; 0x2c
 801a5da:	4b05      	ldr	r3, [pc, #20]	; (801a5f0 <std+0x44>)
 801a5dc:	6224      	str	r4, [r4, #32]
 801a5de:	6323      	str	r3, [r4, #48]	; 0x30
 801a5e0:	bd10      	pop	{r4, pc}
 801a5e2:	bf00      	nop
 801a5e4:	0801a731 	.word	0x0801a731
 801a5e8:	0801a753 	.word	0x0801a753
 801a5ec:	0801a78b 	.word	0x0801a78b
 801a5f0:	0801a7af 	.word	0x0801a7af

0801a5f4 <stdio_exit_handler>:
 801a5f4:	4a02      	ldr	r2, [pc, #8]	; (801a600 <stdio_exit_handler+0xc>)
 801a5f6:	4903      	ldr	r1, [pc, #12]	; (801a604 <stdio_exit_handler+0x10>)
 801a5f8:	4803      	ldr	r0, [pc, #12]	; (801a608 <stdio_exit_handler+0x14>)
 801a5fa:	f000 b87b 	b.w	801a6f4 <_fwalk_sglue>
 801a5fe:	bf00      	nop
 801a600:	240000b0 	.word	0x240000b0
 801a604:	0801b179 	.word	0x0801b179
 801a608:	240000bc 	.word	0x240000bc

0801a60c <cleanup_stdio>:
 801a60c:	6841      	ldr	r1, [r0, #4]
 801a60e:	4b0c      	ldr	r3, [pc, #48]	; (801a640 <cleanup_stdio+0x34>)
 801a610:	4299      	cmp	r1, r3
 801a612:	b510      	push	{r4, lr}
 801a614:	4604      	mov	r4, r0
 801a616:	d001      	beq.n	801a61c <cleanup_stdio+0x10>
 801a618:	f000 fdae 	bl	801b178 <_fflush_r>
 801a61c:	68a1      	ldr	r1, [r4, #8]
 801a61e:	4b09      	ldr	r3, [pc, #36]	; (801a644 <cleanup_stdio+0x38>)
 801a620:	4299      	cmp	r1, r3
 801a622:	d002      	beq.n	801a62a <cleanup_stdio+0x1e>
 801a624:	4620      	mov	r0, r4
 801a626:	f000 fda7 	bl	801b178 <_fflush_r>
 801a62a:	68e1      	ldr	r1, [r4, #12]
 801a62c:	4b06      	ldr	r3, [pc, #24]	; (801a648 <cleanup_stdio+0x3c>)
 801a62e:	4299      	cmp	r1, r3
 801a630:	d004      	beq.n	801a63c <cleanup_stdio+0x30>
 801a632:	4620      	mov	r0, r4
 801a634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a638:	f000 bd9e 	b.w	801b178 <_fflush_r>
 801a63c:	bd10      	pop	{r4, pc}
 801a63e:	bf00      	nop
 801a640:	2400750c 	.word	0x2400750c
 801a644:	24007574 	.word	0x24007574
 801a648:	240075dc 	.word	0x240075dc

0801a64c <global_stdio_init.part.0>:
 801a64c:	b510      	push	{r4, lr}
 801a64e:	4b0b      	ldr	r3, [pc, #44]	; (801a67c <global_stdio_init.part.0+0x30>)
 801a650:	4c0b      	ldr	r4, [pc, #44]	; (801a680 <global_stdio_init.part.0+0x34>)
 801a652:	4a0c      	ldr	r2, [pc, #48]	; (801a684 <global_stdio_init.part.0+0x38>)
 801a654:	601a      	str	r2, [r3, #0]
 801a656:	4620      	mov	r0, r4
 801a658:	2200      	movs	r2, #0
 801a65a:	2104      	movs	r1, #4
 801a65c:	f7ff ffa6 	bl	801a5ac <std>
 801a660:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801a664:	2201      	movs	r2, #1
 801a666:	2109      	movs	r1, #9
 801a668:	f7ff ffa0 	bl	801a5ac <std>
 801a66c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 801a670:	2202      	movs	r2, #2
 801a672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a676:	2112      	movs	r1, #18
 801a678:	f7ff bf98 	b.w	801a5ac <std>
 801a67c:	24007644 	.word	0x24007644
 801a680:	2400750c 	.word	0x2400750c
 801a684:	0801a5f5 	.word	0x0801a5f5

0801a688 <__sfp_lock_acquire>:
 801a688:	4801      	ldr	r0, [pc, #4]	; (801a690 <__sfp_lock_acquire+0x8>)
 801a68a:	f000 b961 	b.w	801a950 <__retarget_lock_acquire_recursive>
 801a68e:	bf00      	nop
 801a690:	2400764e 	.word	0x2400764e

0801a694 <__sfp_lock_release>:
 801a694:	4801      	ldr	r0, [pc, #4]	; (801a69c <__sfp_lock_release+0x8>)
 801a696:	f000 b95c 	b.w	801a952 <__retarget_lock_release_recursive>
 801a69a:	bf00      	nop
 801a69c:	2400764e 	.word	0x2400764e

0801a6a0 <__sinit>:
 801a6a0:	b510      	push	{r4, lr}
 801a6a2:	4604      	mov	r4, r0
 801a6a4:	f7ff fff0 	bl	801a688 <__sfp_lock_acquire>
 801a6a8:	6a23      	ldr	r3, [r4, #32]
 801a6aa:	b11b      	cbz	r3, 801a6b4 <__sinit+0x14>
 801a6ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a6b0:	f7ff bff0 	b.w	801a694 <__sfp_lock_release>
 801a6b4:	4b04      	ldr	r3, [pc, #16]	; (801a6c8 <__sinit+0x28>)
 801a6b6:	6223      	str	r3, [r4, #32]
 801a6b8:	4b04      	ldr	r3, [pc, #16]	; (801a6cc <__sinit+0x2c>)
 801a6ba:	681b      	ldr	r3, [r3, #0]
 801a6bc:	2b00      	cmp	r3, #0
 801a6be:	d1f5      	bne.n	801a6ac <__sinit+0xc>
 801a6c0:	f7ff ffc4 	bl	801a64c <global_stdio_init.part.0>
 801a6c4:	e7f2      	b.n	801a6ac <__sinit+0xc>
 801a6c6:	bf00      	nop
 801a6c8:	0801a60d 	.word	0x0801a60d
 801a6cc:	24007644 	.word	0x24007644

0801a6d0 <fiprintf>:
 801a6d0:	b40e      	push	{r1, r2, r3}
 801a6d2:	b503      	push	{r0, r1, lr}
 801a6d4:	4601      	mov	r1, r0
 801a6d6:	ab03      	add	r3, sp, #12
 801a6d8:	4805      	ldr	r0, [pc, #20]	; (801a6f0 <fiprintf+0x20>)
 801a6da:	f853 2b04 	ldr.w	r2, [r3], #4
 801a6de:	6800      	ldr	r0, [r0, #0]
 801a6e0:	9301      	str	r3, [sp, #4]
 801a6e2:	f000 fa19 	bl	801ab18 <_vfiprintf_r>
 801a6e6:	b002      	add	sp, #8
 801a6e8:	f85d eb04 	ldr.w	lr, [sp], #4
 801a6ec:	b003      	add	sp, #12
 801a6ee:	4770      	bx	lr
 801a6f0:	24000108 	.word	0x24000108

0801a6f4 <_fwalk_sglue>:
 801a6f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a6f8:	4607      	mov	r7, r0
 801a6fa:	4688      	mov	r8, r1
 801a6fc:	4614      	mov	r4, r2
 801a6fe:	2600      	movs	r6, #0
 801a700:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801a704:	f1b9 0901 	subs.w	r9, r9, #1
 801a708:	d505      	bpl.n	801a716 <_fwalk_sglue+0x22>
 801a70a:	6824      	ldr	r4, [r4, #0]
 801a70c:	2c00      	cmp	r4, #0
 801a70e:	d1f7      	bne.n	801a700 <_fwalk_sglue+0xc>
 801a710:	4630      	mov	r0, r6
 801a712:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a716:	89ab      	ldrh	r3, [r5, #12]
 801a718:	2b01      	cmp	r3, #1
 801a71a:	d907      	bls.n	801a72c <_fwalk_sglue+0x38>
 801a71c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801a720:	3301      	adds	r3, #1
 801a722:	d003      	beq.n	801a72c <_fwalk_sglue+0x38>
 801a724:	4629      	mov	r1, r5
 801a726:	4638      	mov	r0, r7
 801a728:	47c0      	blx	r8
 801a72a:	4306      	orrs	r6, r0
 801a72c:	3568      	adds	r5, #104	; 0x68
 801a72e:	e7e9      	b.n	801a704 <_fwalk_sglue+0x10>

0801a730 <__sread>:
 801a730:	b510      	push	{r4, lr}
 801a732:	460c      	mov	r4, r1
 801a734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a738:	f000 f898 	bl	801a86c <_read_r>
 801a73c:	2800      	cmp	r0, #0
 801a73e:	bfab      	itete	ge
 801a740:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801a742:	89a3      	ldrhlt	r3, [r4, #12]
 801a744:	181b      	addge	r3, r3, r0
 801a746:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801a74a:	bfac      	ite	ge
 801a74c:	6563      	strge	r3, [r4, #84]	; 0x54
 801a74e:	81a3      	strhlt	r3, [r4, #12]
 801a750:	bd10      	pop	{r4, pc}

0801a752 <__swrite>:
 801a752:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a756:	461f      	mov	r7, r3
 801a758:	898b      	ldrh	r3, [r1, #12]
 801a75a:	05db      	lsls	r3, r3, #23
 801a75c:	4605      	mov	r5, r0
 801a75e:	460c      	mov	r4, r1
 801a760:	4616      	mov	r6, r2
 801a762:	d505      	bpl.n	801a770 <__swrite+0x1e>
 801a764:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a768:	2302      	movs	r3, #2
 801a76a:	2200      	movs	r2, #0
 801a76c:	f000 f86c 	bl	801a848 <_lseek_r>
 801a770:	89a3      	ldrh	r3, [r4, #12]
 801a772:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a776:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801a77a:	81a3      	strh	r3, [r4, #12]
 801a77c:	4632      	mov	r2, r6
 801a77e:	463b      	mov	r3, r7
 801a780:	4628      	mov	r0, r5
 801a782:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801a786:	f000 b8a7 	b.w	801a8d8 <_write_r>

0801a78a <__sseek>:
 801a78a:	b510      	push	{r4, lr}
 801a78c:	460c      	mov	r4, r1
 801a78e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a792:	f000 f859 	bl	801a848 <_lseek_r>
 801a796:	1c43      	adds	r3, r0, #1
 801a798:	89a3      	ldrh	r3, [r4, #12]
 801a79a:	bf15      	itete	ne
 801a79c:	6560      	strne	r0, [r4, #84]	; 0x54
 801a79e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801a7a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801a7a6:	81a3      	strheq	r3, [r4, #12]
 801a7a8:	bf18      	it	ne
 801a7aa:	81a3      	strhne	r3, [r4, #12]
 801a7ac:	bd10      	pop	{r4, pc}

0801a7ae <__sclose>:
 801a7ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a7b2:	f000 b839 	b.w	801a828 <_close_r>

0801a7b6 <memset>:
 801a7b6:	4402      	add	r2, r0
 801a7b8:	4603      	mov	r3, r0
 801a7ba:	4293      	cmp	r3, r2
 801a7bc:	d100      	bne.n	801a7c0 <memset+0xa>
 801a7be:	4770      	bx	lr
 801a7c0:	f803 1b01 	strb.w	r1, [r3], #1
 801a7c4:	e7f9      	b.n	801a7ba <memset+0x4>

0801a7c6 <_raise_r>:
 801a7c6:	291f      	cmp	r1, #31
 801a7c8:	b538      	push	{r3, r4, r5, lr}
 801a7ca:	4604      	mov	r4, r0
 801a7cc:	460d      	mov	r5, r1
 801a7ce:	d904      	bls.n	801a7da <_raise_r+0x14>
 801a7d0:	2316      	movs	r3, #22
 801a7d2:	6003      	str	r3, [r0, #0]
 801a7d4:	f04f 30ff 	mov.w	r0, #4294967295
 801a7d8:	bd38      	pop	{r3, r4, r5, pc}
 801a7da:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 801a7dc:	b112      	cbz	r2, 801a7e4 <_raise_r+0x1e>
 801a7de:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801a7e2:	b94b      	cbnz	r3, 801a7f8 <_raise_r+0x32>
 801a7e4:	4620      	mov	r0, r4
 801a7e6:	f000 f865 	bl	801a8b4 <_getpid_r>
 801a7ea:	462a      	mov	r2, r5
 801a7ec:	4601      	mov	r1, r0
 801a7ee:	4620      	mov	r0, r4
 801a7f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a7f4:	f000 b84c 	b.w	801a890 <_kill_r>
 801a7f8:	2b01      	cmp	r3, #1
 801a7fa:	d00a      	beq.n	801a812 <_raise_r+0x4c>
 801a7fc:	1c59      	adds	r1, r3, #1
 801a7fe:	d103      	bne.n	801a808 <_raise_r+0x42>
 801a800:	2316      	movs	r3, #22
 801a802:	6003      	str	r3, [r0, #0]
 801a804:	2001      	movs	r0, #1
 801a806:	e7e7      	b.n	801a7d8 <_raise_r+0x12>
 801a808:	2400      	movs	r4, #0
 801a80a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801a80e:	4628      	mov	r0, r5
 801a810:	4798      	blx	r3
 801a812:	2000      	movs	r0, #0
 801a814:	e7e0      	b.n	801a7d8 <_raise_r+0x12>
	...

0801a818 <raise>:
 801a818:	4b02      	ldr	r3, [pc, #8]	; (801a824 <raise+0xc>)
 801a81a:	4601      	mov	r1, r0
 801a81c:	6818      	ldr	r0, [r3, #0]
 801a81e:	f7ff bfd2 	b.w	801a7c6 <_raise_r>
 801a822:	bf00      	nop
 801a824:	24000108 	.word	0x24000108

0801a828 <_close_r>:
 801a828:	b538      	push	{r3, r4, r5, lr}
 801a82a:	4d06      	ldr	r5, [pc, #24]	; (801a844 <_close_r+0x1c>)
 801a82c:	2300      	movs	r3, #0
 801a82e:	4604      	mov	r4, r0
 801a830:	4608      	mov	r0, r1
 801a832:	602b      	str	r3, [r5, #0]
 801a834:	f7e6 fc4c 	bl	80010d0 <_close>
 801a838:	1c43      	adds	r3, r0, #1
 801a83a:	d102      	bne.n	801a842 <_close_r+0x1a>
 801a83c:	682b      	ldr	r3, [r5, #0]
 801a83e:	b103      	cbz	r3, 801a842 <_close_r+0x1a>
 801a840:	6023      	str	r3, [r4, #0]
 801a842:	bd38      	pop	{r3, r4, r5, pc}
 801a844:	24007648 	.word	0x24007648

0801a848 <_lseek_r>:
 801a848:	b538      	push	{r3, r4, r5, lr}
 801a84a:	4d07      	ldr	r5, [pc, #28]	; (801a868 <_lseek_r+0x20>)
 801a84c:	4604      	mov	r4, r0
 801a84e:	4608      	mov	r0, r1
 801a850:	4611      	mov	r1, r2
 801a852:	2200      	movs	r2, #0
 801a854:	602a      	str	r2, [r5, #0]
 801a856:	461a      	mov	r2, r3
 801a858:	f7e6 fc44 	bl	80010e4 <_lseek>
 801a85c:	1c43      	adds	r3, r0, #1
 801a85e:	d102      	bne.n	801a866 <_lseek_r+0x1e>
 801a860:	682b      	ldr	r3, [r5, #0]
 801a862:	b103      	cbz	r3, 801a866 <_lseek_r+0x1e>
 801a864:	6023      	str	r3, [r4, #0]
 801a866:	bd38      	pop	{r3, r4, r5, pc}
 801a868:	24007648 	.word	0x24007648

0801a86c <_read_r>:
 801a86c:	b538      	push	{r3, r4, r5, lr}
 801a86e:	4d07      	ldr	r5, [pc, #28]	; (801a88c <_read_r+0x20>)
 801a870:	4604      	mov	r4, r0
 801a872:	4608      	mov	r0, r1
 801a874:	4611      	mov	r1, r2
 801a876:	2200      	movs	r2, #0
 801a878:	602a      	str	r2, [r5, #0]
 801a87a:	461a      	mov	r2, r3
 801a87c:	f7e6 fc0c 	bl	8001098 <_read>
 801a880:	1c43      	adds	r3, r0, #1
 801a882:	d102      	bne.n	801a88a <_read_r+0x1e>
 801a884:	682b      	ldr	r3, [r5, #0]
 801a886:	b103      	cbz	r3, 801a88a <_read_r+0x1e>
 801a888:	6023      	str	r3, [r4, #0]
 801a88a:	bd38      	pop	{r3, r4, r5, pc}
 801a88c:	24007648 	.word	0x24007648

0801a890 <_kill_r>:
 801a890:	b538      	push	{r3, r4, r5, lr}
 801a892:	4d07      	ldr	r5, [pc, #28]	; (801a8b0 <_kill_r+0x20>)
 801a894:	2300      	movs	r3, #0
 801a896:	4604      	mov	r4, r0
 801a898:	4608      	mov	r0, r1
 801a89a:	4611      	mov	r1, r2
 801a89c:	602b      	str	r3, [r5, #0]
 801a89e:	f7e6 fbed 	bl	800107c <_kill>
 801a8a2:	1c43      	adds	r3, r0, #1
 801a8a4:	d102      	bne.n	801a8ac <_kill_r+0x1c>
 801a8a6:	682b      	ldr	r3, [r5, #0]
 801a8a8:	b103      	cbz	r3, 801a8ac <_kill_r+0x1c>
 801a8aa:	6023      	str	r3, [r4, #0]
 801a8ac:	bd38      	pop	{r3, r4, r5, pc}
 801a8ae:	bf00      	nop
 801a8b0:	24007648 	.word	0x24007648

0801a8b4 <_getpid_r>:
 801a8b4:	f7e6 bbe0 	b.w	8001078 <_getpid>

0801a8b8 <_sbrk_r>:
 801a8b8:	b538      	push	{r3, r4, r5, lr}
 801a8ba:	4d06      	ldr	r5, [pc, #24]	; (801a8d4 <_sbrk_r+0x1c>)
 801a8bc:	2300      	movs	r3, #0
 801a8be:	4604      	mov	r4, r0
 801a8c0:	4608      	mov	r0, r1
 801a8c2:	602b      	str	r3, [r5, #0]
 801a8c4:	f7e6 fc10 	bl	80010e8 <_sbrk>
 801a8c8:	1c43      	adds	r3, r0, #1
 801a8ca:	d102      	bne.n	801a8d2 <_sbrk_r+0x1a>
 801a8cc:	682b      	ldr	r3, [r5, #0]
 801a8ce:	b103      	cbz	r3, 801a8d2 <_sbrk_r+0x1a>
 801a8d0:	6023      	str	r3, [r4, #0]
 801a8d2:	bd38      	pop	{r3, r4, r5, pc}
 801a8d4:	24007648 	.word	0x24007648

0801a8d8 <_write_r>:
 801a8d8:	b538      	push	{r3, r4, r5, lr}
 801a8da:	4d07      	ldr	r5, [pc, #28]	; (801a8f8 <_write_r+0x20>)
 801a8dc:	4604      	mov	r4, r0
 801a8de:	4608      	mov	r0, r1
 801a8e0:	4611      	mov	r1, r2
 801a8e2:	2200      	movs	r2, #0
 801a8e4:	602a      	str	r2, [r5, #0]
 801a8e6:	461a      	mov	r2, r3
 801a8e8:	f7e6 fbe4 	bl	80010b4 <_write>
 801a8ec:	1c43      	adds	r3, r0, #1
 801a8ee:	d102      	bne.n	801a8f6 <_write_r+0x1e>
 801a8f0:	682b      	ldr	r3, [r5, #0]
 801a8f2:	b103      	cbz	r3, 801a8f6 <_write_r+0x1e>
 801a8f4:	6023      	str	r3, [r4, #0]
 801a8f6:	bd38      	pop	{r3, r4, r5, pc}
 801a8f8:	24007648 	.word	0x24007648

0801a8fc <__errno>:
 801a8fc:	4b01      	ldr	r3, [pc, #4]	; (801a904 <__errno+0x8>)
 801a8fe:	6818      	ldr	r0, [r3, #0]
 801a900:	4770      	bx	lr
 801a902:	bf00      	nop
 801a904:	24000108 	.word	0x24000108

0801a908 <__libc_init_array>:
 801a908:	b570      	push	{r4, r5, r6, lr}
 801a90a:	4d0d      	ldr	r5, [pc, #52]	; (801a940 <__libc_init_array+0x38>)
 801a90c:	4c0d      	ldr	r4, [pc, #52]	; (801a944 <__libc_init_array+0x3c>)
 801a90e:	1b64      	subs	r4, r4, r5
 801a910:	10a4      	asrs	r4, r4, #2
 801a912:	2600      	movs	r6, #0
 801a914:	42a6      	cmp	r6, r4
 801a916:	d109      	bne.n	801a92c <__libc_init_array+0x24>
 801a918:	4d0b      	ldr	r5, [pc, #44]	; (801a948 <__libc_init_array+0x40>)
 801a91a:	4c0c      	ldr	r4, [pc, #48]	; (801a94c <__libc_init_array+0x44>)
 801a91c:	f000 fd6e 	bl	801b3fc <_init>
 801a920:	1b64      	subs	r4, r4, r5
 801a922:	10a4      	asrs	r4, r4, #2
 801a924:	2600      	movs	r6, #0
 801a926:	42a6      	cmp	r6, r4
 801a928:	d105      	bne.n	801a936 <__libc_init_array+0x2e>
 801a92a:	bd70      	pop	{r4, r5, r6, pc}
 801a92c:	f855 3b04 	ldr.w	r3, [r5], #4
 801a930:	4798      	blx	r3
 801a932:	3601      	adds	r6, #1
 801a934:	e7ee      	b.n	801a914 <__libc_init_array+0xc>
 801a936:	f855 3b04 	ldr.w	r3, [r5], #4
 801a93a:	4798      	blx	r3
 801a93c:	3601      	adds	r6, #1
 801a93e:	e7f2      	b.n	801a926 <__libc_init_array+0x1e>
 801a940:	0801d084 	.word	0x0801d084
 801a944:	0801d084 	.word	0x0801d084
 801a948:	0801d084 	.word	0x0801d084
 801a94c:	0801d098 	.word	0x0801d098

0801a950 <__retarget_lock_acquire_recursive>:
 801a950:	4770      	bx	lr

0801a952 <__retarget_lock_release_recursive>:
 801a952:	4770      	bx	lr

0801a954 <memcpy>:
 801a954:	440a      	add	r2, r1
 801a956:	4291      	cmp	r1, r2
 801a958:	f100 33ff 	add.w	r3, r0, #4294967295
 801a95c:	d100      	bne.n	801a960 <memcpy+0xc>
 801a95e:	4770      	bx	lr
 801a960:	b510      	push	{r4, lr}
 801a962:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a966:	f803 4f01 	strb.w	r4, [r3, #1]!
 801a96a:	4291      	cmp	r1, r2
 801a96c:	d1f9      	bne.n	801a962 <memcpy+0xe>
 801a96e:	bd10      	pop	{r4, pc}

0801a970 <__register_exitproc>:
 801a970:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a974:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801aa28 <__register_exitproc+0xb8>
 801a978:	4606      	mov	r6, r0
 801a97a:	f8d8 0000 	ldr.w	r0, [r8]
 801a97e:	461f      	mov	r7, r3
 801a980:	460d      	mov	r5, r1
 801a982:	4691      	mov	r9, r2
 801a984:	f7ff ffe4 	bl	801a950 <__retarget_lock_acquire_recursive>
 801a988:	4b23      	ldr	r3, [pc, #140]	; (801aa18 <__register_exitproc+0xa8>)
 801a98a:	681c      	ldr	r4, [r3, #0]
 801a98c:	b934      	cbnz	r4, 801a99c <__register_exitproc+0x2c>
 801a98e:	4c23      	ldr	r4, [pc, #140]	; (801aa1c <__register_exitproc+0xac>)
 801a990:	601c      	str	r4, [r3, #0]
 801a992:	4b23      	ldr	r3, [pc, #140]	; (801aa20 <__register_exitproc+0xb0>)
 801a994:	b113      	cbz	r3, 801a99c <__register_exitproc+0x2c>
 801a996:	681b      	ldr	r3, [r3, #0]
 801a998:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801a99c:	6863      	ldr	r3, [r4, #4]
 801a99e:	2b1f      	cmp	r3, #31
 801a9a0:	dd07      	ble.n	801a9b2 <__register_exitproc+0x42>
 801a9a2:	f8d8 0000 	ldr.w	r0, [r8]
 801a9a6:	f7ff ffd4 	bl	801a952 <__retarget_lock_release_recursive>
 801a9aa:	f04f 30ff 	mov.w	r0, #4294967295
 801a9ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a9b2:	b32e      	cbz	r6, 801aa00 <__register_exitproc+0x90>
 801a9b4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a9b8:	b968      	cbnz	r0, 801a9d6 <__register_exitproc+0x66>
 801a9ba:	4b1a      	ldr	r3, [pc, #104]	; (801aa24 <__register_exitproc+0xb4>)
 801a9bc:	2b00      	cmp	r3, #0
 801a9be:	d0f0      	beq.n	801a9a2 <__register_exitproc+0x32>
 801a9c0:	f44f 7084 	mov.w	r0, #264	; 0x108
 801a9c4:	f7ff fd28 	bl	801a418 <malloc>
 801a9c8:	2800      	cmp	r0, #0
 801a9ca:	d0ea      	beq.n	801a9a2 <__register_exitproc+0x32>
 801a9cc:	2300      	movs	r3, #0
 801a9ce:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801a9d2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a9d6:	6863      	ldr	r3, [r4, #4]
 801a9d8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801a9dc:	2201      	movs	r2, #1
 801a9de:	409a      	lsls	r2, r3
 801a9e0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801a9e4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801a9e8:	4313      	orrs	r3, r2
 801a9ea:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a9ee:	2e02      	cmp	r6, #2
 801a9f0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801a9f4:	bf02      	ittt	eq
 801a9f6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801a9fa:	4313      	orreq	r3, r2
 801a9fc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801aa00:	6863      	ldr	r3, [r4, #4]
 801aa02:	f8d8 0000 	ldr.w	r0, [r8]
 801aa06:	1c5a      	adds	r2, r3, #1
 801aa08:	3302      	adds	r3, #2
 801aa0a:	6062      	str	r2, [r4, #4]
 801aa0c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801aa10:	f7ff ff9f 	bl	801a952 <__retarget_lock_release_recursive>
 801aa14:	2000      	movs	r0, #0
 801aa16:	e7ca      	b.n	801a9ae <__register_exitproc+0x3e>
 801aa18:	240076dc 	.word	0x240076dc
 801aa1c:	24007650 	.word	0x24007650
 801aa20:	0801cb98 	.word	0x0801cb98
 801aa24:	0801a419 	.word	0x0801a419
 801aa28:	2400010c 	.word	0x2400010c

0801aa2c <_free_r>:
 801aa2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801aa2e:	2900      	cmp	r1, #0
 801aa30:	d044      	beq.n	801aabc <_free_r+0x90>
 801aa32:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801aa36:	9001      	str	r0, [sp, #4]
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	f1a1 0404 	sub.w	r4, r1, #4
 801aa3e:	bfb8      	it	lt
 801aa40:	18e4      	addlt	r4, r4, r3
 801aa42:	f7ff fd99 	bl	801a578 <__malloc_lock>
 801aa46:	4a1e      	ldr	r2, [pc, #120]	; (801aac0 <_free_r+0x94>)
 801aa48:	9801      	ldr	r0, [sp, #4]
 801aa4a:	6813      	ldr	r3, [r2, #0]
 801aa4c:	b933      	cbnz	r3, 801aa5c <_free_r+0x30>
 801aa4e:	6063      	str	r3, [r4, #4]
 801aa50:	6014      	str	r4, [r2, #0]
 801aa52:	b003      	add	sp, #12
 801aa54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801aa58:	f7ff bd94 	b.w	801a584 <__malloc_unlock>
 801aa5c:	42a3      	cmp	r3, r4
 801aa5e:	d908      	bls.n	801aa72 <_free_r+0x46>
 801aa60:	6825      	ldr	r5, [r4, #0]
 801aa62:	1961      	adds	r1, r4, r5
 801aa64:	428b      	cmp	r3, r1
 801aa66:	bf01      	itttt	eq
 801aa68:	6819      	ldreq	r1, [r3, #0]
 801aa6a:	685b      	ldreq	r3, [r3, #4]
 801aa6c:	1949      	addeq	r1, r1, r5
 801aa6e:	6021      	streq	r1, [r4, #0]
 801aa70:	e7ed      	b.n	801aa4e <_free_r+0x22>
 801aa72:	461a      	mov	r2, r3
 801aa74:	685b      	ldr	r3, [r3, #4]
 801aa76:	b10b      	cbz	r3, 801aa7c <_free_r+0x50>
 801aa78:	42a3      	cmp	r3, r4
 801aa7a:	d9fa      	bls.n	801aa72 <_free_r+0x46>
 801aa7c:	6811      	ldr	r1, [r2, #0]
 801aa7e:	1855      	adds	r5, r2, r1
 801aa80:	42a5      	cmp	r5, r4
 801aa82:	d10b      	bne.n	801aa9c <_free_r+0x70>
 801aa84:	6824      	ldr	r4, [r4, #0]
 801aa86:	4421      	add	r1, r4
 801aa88:	1854      	adds	r4, r2, r1
 801aa8a:	42a3      	cmp	r3, r4
 801aa8c:	6011      	str	r1, [r2, #0]
 801aa8e:	d1e0      	bne.n	801aa52 <_free_r+0x26>
 801aa90:	681c      	ldr	r4, [r3, #0]
 801aa92:	685b      	ldr	r3, [r3, #4]
 801aa94:	6053      	str	r3, [r2, #4]
 801aa96:	440c      	add	r4, r1
 801aa98:	6014      	str	r4, [r2, #0]
 801aa9a:	e7da      	b.n	801aa52 <_free_r+0x26>
 801aa9c:	d902      	bls.n	801aaa4 <_free_r+0x78>
 801aa9e:	230c      	movs	r3, #12
 801aaa0:	6003      	str	r3, [r0, #0]
 801aaa2:	e7d6      	b.n	801aa52 <_free_r+0x26>
 801aaa4:	6825      	ldr	r5, [r4, #0]
 801aaa6:	1961      	adds	r1, r4, r5
 801aaa8:	428b      	cmp	r3, r1
 801aaaa:	bf04      	itt	eq
 801aaac:	6819      	ldreq	r1, [r3, #0]
 801aaae:	685b      	ldreq	r3, [r3, #4]
 801aab0:	6063      	str	r3, [r4, #4]
 801aab2:	bf04      	itt	eq
 801aab4:	1949      	addeq	r1, r1, r5
 801aab6:	6021      	streq	r1, [r4, #0]
 801aab8:	6054      	str	r4, [r2, #4]
 801aaba:	e7ca      	b.n	801aa52 <_free_r+0x26>
 801aabc:	b003      	add	sp, #12
 801aabe:	bd30      	pop	{r4, r5, pc}
 801aac0:	24007504 	.word	0x24007504

0801aac4 <__sfputc_r>:
 801aac4:	6893      	ldr	r3, [r2, #8]
 801aac6:	3b01      	subs	r3, #1
 801aac8:	2b00      	cmp	r3, #0
 801aaca:	b410      	push	{r4}
 801aacc:	6093      	str	r3, [r2, #8]
 801aace:	da08      	bge.n	801aae2 <__sfputc_r+0x1e>
 801aad0:	6994      	ldr	r4, [r2, #24]
 801aad2:	42a3      	cmp	r3, r4
 801aad4:	db01      	blt.n	801aada <__sfputc_r+0x16>
 801aad6:	290a      	cmp	r1, #10
 801aad8:	d103      	bne.n	801aae2 <__sfputc_r+0x1e>
 801aada:	f85d 4b04 	ldr.w	r4, [sp], #4
 801aade:	f000 bb73 	b.w	801b1c8 <__swbuf_r>
 801aae2:	6813      	ldr	r3, [r2, #0]
 801aae4:	1c58      	adds	r0, r3, #1
 801aae6:	6010      	str	r0, [r2, #0]
 801aae8:	7019      	strb	r1, [r3, #0]
 801aaea:	4608      	mov	r0, r1
 801aaec:	f85d 4b04 	ldr.w	r4, [sp], #4
 801aaf0:	4770      	bx	lr

0801aaf2 <__sfputs_r>:
 801aaf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aaf4:	4606      	mov	r6, r0
 801aaf6:	460f      	mov	r7, r1
 801aaf8:	4614      	mov	r4, r2
 801aafa:	18d5      	adds	r5, r2, r3
 801aafc:	42ac      	cmp	r4, r5
 801aafe:	d101      	bne.n	801ab04 <__sfputs_r+0x12>
 801ab00:	2000      	movs	r0, #0
 801ab02:	e007      	b.n	801ab14 <__sfputs_r+0x22>
 801ab04:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ab08:	463a      	mov	r2, r7
 801ab0a:	4630      	mov	r0, r6
 801ab0c:	f7ff ffda 	bl	801aac4 <__sfputc_r>
 801ab10:	1c43      	adds	r3, r0, #1
 801ab12:	d1f3      	bne.n	801aafc <__sfputs_r+0xa>
 801ab14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801ab18 <_vfiprintf_r>:
 801ab18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab1c:	460d      	mov	r5, r1
 801ab1e:	b09d      	sub	sp, #116	; 0x74
 801ab20:	4614      	mov	r4, r2
 801ab22:	4698      	mov	r8, r3
 801ab24:	4606      	mov	r6, r0
 801ab26:	b118      	cbz	r0, 801ab30 <_vfiprintf_r+0x18>
 801ab28:	6a03      	ldr	r3, [r0, #32]
 801ab2a:	b90b      	cbnz	r3, 801ab30 <_vfiprintf_r+0x18>
 801ab2c:	f7ff fdb8 	bl	801a6a0 <__sinit>
 801ab30:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ab32:	07d9      	lsls	r1, r3, #31
 801ab34:	d405      	bmi.n	801ab42 <_vfiprintf_r+0x2a>
 801ab36:	89ab      	ldrh	r3, [r5, #12]
 801ab38:	059a      	lsls	r2, r3, #22
 801ab3a:	d402      	bmi.n	801ab42 <_vfiprintf_r+0x2a>
 801ab3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ab3e:	f7ff ff07 	bl	801a950 <__retarget_lock_acquire_recursive>
 801ab42:	89ab      	ldrh	r3, [r5, #12]
 801ab44:	071b      	lsls	r3, r3, #28
 801ab46:	d501      	bpl.n	801ab4c <_vfiprintf_r+0x34>
 801ab48:	692b      	ldr	r3, [r5, #16]
 801ab4a:	b99b      	cbnz	r3, 801ab74 <_vfiprintf_r+0x5c>
 801ab4c:	4629      	mov	r1, r5
 801ab4e:	4630      	mov	r0, r6
 801ab50:	f000 fb78 	bl	801b244 <__swsetup_r>
 801ab54:	b170      	cbz	r0, 801ab74 <_vfiprintf_r+0x5c>
 801ab56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ab58:	07dc      	lsls	r4, r3, #31
 801ab5a:	d504      	bpl.n	801ab66 <_vfiprintf_r+0x4e>
 801ab5c:	f04f 30ff 	mov.w	r0, #4294967295
 801ab60:	b01d      	add	sp, #116	; 0x74
 801ab62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab66:	89ab      	ldrh	r3, [r5, #12]
 801ab68:	0598      	lsls	r0, r3, #22
 801ab6a:	d4f7      	bmi.n	801ab5c <_vfiprintf_r+0x44>
 801ab6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ab6e:	f7ff fef0 	bl	801a952 <__retarget_lock_release_recursive>
 801ab72:	e7f3      	b.n	801ab5c <_vfiprintf_r+0x44>
 801ab74:	2300      	movs	r3, #0
 801ab76:	9309      	str	r3, [sp, #36]	; 0x24
 801ab78:	2320      	movs	r3, #32
 801ab7a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ab7e:	f8cd 800c 	str.w	r8, [sp, #12]
 801ab82:	2330      	movs	r3, #48	; 0x30
 801ab84:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 801ad38 <_vfiprintf_r+0x220>
 801ab88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ab8c:	f04f 0901 	mov.w	r9, #1
 801ab90:	4623      	mov	r3, r4
 801ab92:	469a      	mov	sl, r3
 801ab94:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ab98:	b10a      	cbz	r2, 801ab9e <_vfiprintf_r+0x86>
 801ab9a:	2a25      	cmp	r2, #37	; 0x25
 801ab9c:	d1f9      	bne.n	801ab92 <_vfiprintf_r+0x7a>
 801ab9e:	ebba 0b04 	subs.w	fp, sl, r4
 801aba2:	d00b      	beq.n	801abbc <_vfiprintf_r+0xa4>
 801aba4:	465b      	mov	r3, fp
 801aba6:	4622      	mov	r2, r4
 801aba8:	4629      	mov	r1, r5
 801abaa:	4630      	mov	r0, r6
 801abac:	f7ff ffa1 	bl	801aaf2 <__sfputs_r>
 801abb0:	3001      	adds	r0, #1
 801abb2:	f000 80a9 	beq.w	801ad08 <_vfiprintf_r+0x1f0>
 801abb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801abb8:	445a      	add	r2, fp
 801abba:	9209      	str	r2, [sp, #36]	; 0x24
 801abbc:	f89a 3000 	ldrb.w	r3, [sl]
 801abc0:	2b00      	cmp	r3, #0
 801abc2:	f000 80a1 	beq.w	801ad08 <_vfiprintf_r+0x1f0>
 801abc6:	2300      	movs	r3, #0
 801abc8:	f04f 32ff 	mov.w	r2, #4294967295
 801abcc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801abd0:	f10a 0a01 	add.w	sl, sl, #1
 801abd4:	9304      	str	r3, [sp, #16]
 801abd6:	9307      	str	r3, [sp, #28]
 801abd8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801abdc:	931a      	str	r3, [sp, #104]	; 0x68
 801abde:	4654      	mov	r4, sl
 801abe0:	2205      	movs	r2, #5
 801abe2:	f814 1b01 	ldrb.w	r1, [r4], #1
 801abe6:	4854      	ldr	r0, [pc, #336]	; (801ad38 <_vfiprintf_r+0x220>)
 801abe8:	f7e5 fb92 	bl	8000310 <memchr>
 801abec:	9a04      	ldr	r2, [sp, #16]
 801abee:	b9d8      	cbnz	r0, 801ac28 <_vfiprintf_r+0x110>
 801abf0:	06d1      	lsls	r1, r2, #27
 801abf2:	bf44      	itt	mi
 801abf4:	2320      	movmi	r3, #32
 801abf6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801abfa:	0713      	lsls	r3, r2, #28
 801abfc:	bf44      	itt	mi
 801abfe:	232b      	movmi	r3, #43	; 0x2b
 801ac00:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ac04:	f89a 3000 	ldrb.w	r3, [sl]
 801ac08:	2b2a      	cmp	r3, #42	; 0x2a
 801ac0a:	d015      	beq.n	801ac38 <_vfiprintf_r+0x120>
 801ac0c:	9a07      	ldr	r2, [sp, #28]
 801ac0e:	4654      	mov	r4, sl
 801ac10:	2000      	movs	r0, #0
 801ac12:	f04f 0c0a 	mov.w	ip, #10
 801ac16:	4621      	mov	r1, r4
 801ac18:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ac1c:	3b30      	subs	r3, #48	; 0x30
 801ac1e:	2b09      	cmp	r3, #9
 801ac20:	d94d      	bls.n	801acbe <_vfiprintf_r+0x1a6>
 801ac22:	b1b0      	cbz	r0, 801ac52 <_vfiprintf_r+0x13a>
 801ac24:	9207      	str	r2, [sp, #28]
 801ac26:	e014      	b.n	801ac52 <_vfiprintf_r+0x13a>
 801ac28:	eba0 0308 	sub.w	r3, r0, r8
 801ac2c:	fa09 f303 	lsl.w	r3, r9, r3
 801ac30:	4313      	orrs	r3, r2
 801ac32:	9304      	str	r3, [sp, #16]
 801ac34:	46a2      	mov	sl, r4
 801ac36:	e7d2      	b.n	801abde <_vfiprintf_r+0xc6>
 801ac38:	9b03      	ldr	r3, [sp, #12]
 801ac3a:	1d19      	adds	r1, r3, #4
 801ac3c:	681b      	ldr	r3, [r3, #0]
 801ac3e:	9103      	str	r1, [sp, #12]
 801ac40:	2b00      	cmp	r3, #0
 801ac42:	bfbb      	ittet	lt
 801ac44:	425b      	neglt	r3, r3
 801ac46:	f042 0202 	orrlt.w	r2, r2, #2
 801ac4a:	9307      	strge	r3, [sp, #28]
 801ac4c:	9307      	strlt	r3, [sp, #28]
 801ac4e:	bfb8      	it	lt
 801ac50:	9204      	strlt	r2, [sp, #16]
 801ac52:	7823      	ldrb	r3, [r4, #0]
 801ac54:	2b2e      	cmp	r3, #46	; 0x2e
 801ac56:	d10c      	bne.n	801ac72 <_vfiprintf_r+0x15a>
 801ac58:	7863      	ldrb	r3, [r4, #1]
 801ac5a:	2b2a      	cmp	r3, #42	; 0x2a
 801ac5c:	d134      	bne.n	801acc8 <_vfiprintf_r+0x1b0>
 801ac5e:	9b03      	ldr	r3, [sp, #12]
 801ac60:	1d1a      	adds	r2, r3, #4
 801ac62:	681b      	ldr	r3, [r3, #0]
 801ac64:	9203      	str	r2, [sp, #12]
 801ac66:	2b00      	cmp	r3, #0
 801ac68:	bfb8      	it	lt
 801ac6a:	f04f 33ff 	movlt.w	r3, #4294967295
 801ac6e:	3402      	adds	r4, #2
 801ac70:	9305      	str	r3, [sp, #20]
 801ac72:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 801ad48 <_vfiprintf_r+0x230>
 801ac76:	7821      	ldrb	r1, [r4, #0]
 801ac78:	2203      	movs	r2, #3
 801ac7a:	4650      	mov	r0, sl
 801ac7c:	f7e5 fb48 	bl	8000310 <memchr>
 801ac80:	b138      	cbz	r0, 801ac92 <_vfiprintf_r+0x17a>
 801ac82:	9b04      	ldr	r3, [sp, #16]
 801ac84:	eba0 000a 	sub.w	r0, r0, sl
 801ac88:	2240      	movs	r2, #64	; 0x40
 801ac8a:	4082      	lsls	r2, r0
 801ac8c:	4313      	orrs	r3, r2
 801ac8e:	3401      	adds	r4, #1
 801ac90:	9304      	str	r3, [sp, #16]
 801ac92:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ac96:	4829      	ldr	r0, [pc, #164]	; (801ad3c <_vfiprintf_r+0x224>)
 801ac98:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ac9c:	2206      	movs	r2, #6
 801ac9e:	f7e5 fb37 	bl	8000310 <memchr>
 801aca2:	2800      	cmp	r0, #0
 801aca4:	d03f      	beq.n	801ad26 <_vfiprintf_r+0x20e>
 801aca6:	4b26      	ldr	r3, [pc, #152]	; (801ad40 <_vfiprintf_r+0x228>)
 801aca8:	bb1b      	cbnz	r3, 801acf2 <_vfiprintf_r+0x1da>
 801acaa:	9b03      	ldr	r3, [sp, #12]
 801acac:	3307      	adds	r3, #7
 801acae:	f023 0307 	bic.w	r3, r3, #7
 801acb2:	3308      	adds	r3, #8
 801acb4:	9303      	str	r3, [sp, #12]
 801acb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acb8:	443b      	add	r3, r7
 801acba:	9309      	str	r3, [sp, #36]	; 0x24
 801acbc:	e768      	b.n	801ab90 <_vfiprintf_r+0x78>
 801acbe:	fb0c 3202 	mla	r2, ip, r2, r3
 801acc2:	460c      	mov	r4, r1
 801acc4:	2001      	movs	r0, #1
 801acc6:	e7a6      	b.n	801ac16 <_vfiprintf_r+0xfe>
 801acc8:	2300      	movs	r3, #0
 801acca:	3401      	adds	r4, #1
 801accc:	9305      	str	r3, [sp, #20]
 801acce:	4619      	mov	r1, r3
 801acd0:	f04f 0c0a 	mov.w	ip, #10
 801acd4:	4620      	mov	r0, r4
 801acd6:	f810 2b01 	ldrb.w	r2, [r0], #1
 801acda:	3a30      	subs	r2, #48	; 0x30
 801acdc:	2a09      	cmp	r2, #9
 801acde:	d903      	bls.n	801ace8 <_vfiprintf_r+0x1d0>
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	d0c6      	beq.n	801ac72 <_vfiprintf_r+0x15a>
 801ace4:	9105      	str	r1, [sp, #20]
 801ace6:	e7c4      	b.n	801ac72 <_vfiprintf_r+0x15a>
 801ace8:	fb0c 2101 	mla	r1, ip, r1, r2
 801acec:	4604      	mov	r4, r0
 801acee:	2301      	movs	r3, #1
 801acf0:	e7f0      	b.n	801acd4 <_vfiprintf_r+0x1bc>
 801acf2:	ab03      	add	r3, sp, #12
 801acf4:	9300      	str	r3, [sp, #0]
 801acf6:	462a      	mov	r2, r5
 801acf8:	4b12      	ldr	r3, [pc, #72]	; (801ad44 <_vfiprintf_r+0x22c>)
 801acfa:	a904      	add	r1, sp, #16
 801acfc:	4630      	mov	r0, r6
 801acfe:	f3af 8000 	nop.w
 801ad02:	4607      	mov	r7, r0
 801ad04:	1c78      	adds	r0, r7, #1
 801ad06:	d1d6      	bne.n	801acb6 <_vfiprintf_r+0x19e>
 801ad08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ad0a:	07d9      	lsls	r1, r3, #31
 801ad0c:	d405      	bmi.n	801ad1a <_vfiprintf_r+0x202>
 801ad0e:	89ab      	ldrh	r3, [r5, #12]
 801ad10:	059a      	lsls	r2, r3, #22
 801ad12:	d402      	bmi.n	801ad1a <_vfiprintf_r+0x202>
 801ad14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ad16:	f7ff fe1c 	bl	801a952 <__retarget_lock_release_recursive>
 801ad1a:	89ab      	ldrh	r3, [r5, #12]
 801ad1c:	065b      	lsls	r3, r3, #25
 801ad1e:	f53f af1d 	bmi.w	801ab5c <_vfiprintf_r+0x44>
 801ad22:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ad24:	e71c      	b.n	801ab60 <_vfiprintf_r+0x48>
 801ad26:	ab03      	add	r3, sp, #12
 801ad28:	9300      	str	r3, [sp, #0]
 801ad2a:	462a      	mov	r2, r5
 801ad2c:	4b05      	ldr	r3, [pc, #20]	; (801ad44 <_vfiprintf_r+0x22c>)
 801ad2e:	a904      	add	r1, sp, #16
 801ad30:	4630      	mov	r0, r6
 801ad32:	f000 f879 	bl	801ae28 <_printf_i>
 801ad36:	e7e4      	b.n	801ad02 <_vfiprintf_r+0x1ea>
 801ad38:	0801cb9c 	.word	0x0801cb9c
 801ad3c:	0801cba6 	.word	0x0801cba6
 801ad40:	00000000 	.word	0x00000000
 801ad44:	0801aaf3 	.word	0x0801aaf3
 801ad48:	0801cba2 	.word	0x0801cba2

0801ad4c <_printf_common>:
 801ad4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ad50:	4616      	mov	r6, r2
 801ad52:	4699      	mov	r9, r3
 801ad54:	688a      	ldr	r2, [r1, #8]
 801ad56:	690b      	ldr	r3, [r1, #16]
 801ad58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801ad5c:	4293      	cmp	r3, r2
 801ad5e:	bfb8      	it	lt
 801ad60:	4613      	movlt	r3, r2
 801ad62:	6033      	str	r3, [r6, #0]
 801ad64:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801ad68:	4607      	mov	r7, r0
 801ad6a:	460c      	mov	r4, r1
 801ad6c:	b10a      	cbz	r2, 801ad72 <_printf_common+0x26>
 801ad6e:	3301      	adds	r3, #1
 801ad70:	6033      	str	r3, [r6, #0]
 801ad72:	6823      	ldr	r3, [r4, #0]
 801ad74:	0699      	lsls	r1, r3, #26
 801ad76:	bf42      	ittt	mi
 801ad78:	6833      	ldrmi	r3, [r6, #0]
 801ad7a:	3302      	addmi	r3, #2
 801ad7c:	6033      	strmi	r3, [r6, #0]
 801ad7e:	6825      	ldr	r5, [r4, #0]
 801ad80:	f015 0506 	ands.w	r5, r5, #6
 801ad84:	d106      	bne.n	801ad94 <_printf_common+0x48>
 801ad86:	f104 0a19 	add.w	sl, r4, #25
 801ad8a:	68e3      	ldr	r3, [r4, #12]
 801ad8c:	6832      	ldr	r2, [r6, #0]
 801ad8e:	1a9b      	subs	r3, r3, r2
 801ad90:	42ab      	cmp	r3, r5
 801ad92:	dc26      	bgt.n	801ade2 <_printf_common+0x96>
 801ad94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801ad98:	1e13      	subs	r3, r2, #0
 801ad9a:	6822      	ldr	r2, [r4, #0]
 801ad9c:	bf18      	it	ne
 801ad9e:	2301      	movne	r3, #1
 801ada0:	0692      	lsls	r2, r2, #26
 801ada2:	d42b      	bmi.n	801adfc <_printf_common+0xb0>
 801ada4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801ada8:	4649      	mov	r1, r9
 801adaa:	4638      	mov	r0, r7
 801adac:	47c0      	blx	r8
 801adae:	3001      	adds	r0, #1
 801adb0:	d01e      	beq.n	801adf0 <_printf_common+0xa4>
 801adb2:	6823      	ldr	r3, [r4, #0]
 801adb4:	6922      	ldr	r2, [r4, #16]
 801adb6:	f003 0306 	and.w	r3, r3, #6
 801adba:	2b04      	cmp	r3, #4
 801adbc:	bf02      	ittt	eq
 801adbe:	68e5      	ldreq	r5, [r4, #12]
 801adc0:	6833      	ldreq	r3, [r6, #0]
 801adc2:	1aed      	subeq	r5, r5, r3
 801adc4:	68a3      	ldr	r3, [r4, #8]
 801adc6:	bf0c      	ite	eq
 801adc8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801adcc:	2500      	movne	r5, #0
 801adce:	4293      	cmp	r3, r2
 801add0:	bfc4      	itt	gt
 801add2:	1a9b      	subgt	r3, r3, r2
 801add4:	18ed      	addgt	r5, r5, r3
 801add6:	2600      	movs	r6, #0
 801add8:	341a      	adds	r4, #26
 801adda:	42b5      	cmp	r5, r6
 801addc:	d11a      	bne.n	801ae14 <_printf_common+0xc8>
 801adde:	2000      	movs	r0, #0
 801ade0:	e008      	b.n	801adf4 <_printf_common+0xa8>
 801ade2:	2301      	movs	r3, #1
 801ade4:	4652      	mov	r2, sl
 801ade6:	4649      	mov	r1, r9
 801ade8:	4638      	mov	r0, r7
 801adea:	47c0      	blx	r8
 801adec:	3001      	adds	r0, #1
 801adee:	d103      	bne.n	801adf8 <_printf_common+0xac>
 801adf0:	f04f 30ff 	mov.w	r0, #4294967295
 801adf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801adf8:	3501      	adds	r5, #1
 801adfa:	e7c6      	b.n	801ad8a <_printf_common+0x3e>
 801adfc:	18e1      	adds	r1, r4, r3
 801adfe:	1c5a      	adds	r2, r3, #1
 801ae00:	2030      	movs	r0, #48	; 0x30
 801ae02:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801ae06:	4422      	add	r2, r4
 801ae08:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801ae0c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801ae10:	3302      	adds	r3, #2
 801ae12:	e7c7      	b.n	801ada4 <_printf_common+0x58>
 801ae14:	2301      	movs	r3, #1
 801ae16:	4622      	mov	r2, r4
 801ae18:	4649      	mov	r1, r9
 801ae1a:	4638      	mov	r0, r7
 801ae1c:	47c0      	blx	r8
 801ae1e:	3001      	adds	r0, #1
 801ae20:	d0e6      	beq.n	801adf0 <_printf_common+0xa4>
 801ae22:	3601      	adds	r6, #1
 801ae24:	e7d9      	b.n	801adda <_printf_common+0x8e>
	...

0801ae28 <_printf_i>:
 801ae28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ae2c:	7e0f      	ldrb	r7, [r1, #24]
 801ae2e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ae30:	2f78      	cmp	r7, #120	; 0x78
 801ae32:	4691      	mov	r9, r2
 801ae34:	4680      	mov	r8, r0
 801ae36:	460c      	mov	r4, r1
 801ae38:	469a      	mov	sl, r3
 801ae3a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801ae3e:	d807      	bhi.n	801ae50 <_printf_i+0x28>
 801ae40:	2f62      	cmp	r7, #98	; 0x62
 801ae42:	d80a      	bhi.n	801ae5a <_printf_i+0x32>
 801ae44:	2f00      	cmp	r7, #0
 801ae46:	f000 80d4 	beq.w	801aff2 <_printf_i+0x1ca>
 801ae4a:	2f58      	cmp	r7, #88	; 0x58
 801ae4c:	f000 80c0 	beq.w	801afd0 <_printf_i+0x1a8>
 801ae50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801ae54:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801ae58:	e03a      	b.n	801aed0 <_printf_i+0xa8>
 801ae5a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801ae5e:	2b15      	cmp	r3, #21
 801ae60:	d8f6      	bhi.n	801ae50 <_printf_i+0x28>
 801ae62:	a101      	add	r1, pc, #4	; (adr r1, 801ae68 <_printf_i+0x40>)
 801ae64:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801ae68:	0801aec1 	.word	0x0801aec1
 801ae6c:	0801aed5 	.word	0x0801aed5
 801ae70:	0801ae51 	.word	0x0801ae51
 801ae74:	0801ae51 	.word	0x0801ae51
 801ae78:	0801ae51 	.word	0x0801ae51
 801ae7c:	0801ae51 	.word	0x0801ae51
 801ae80:	0801aed5 	.word	0x0801aed5
 801ae84:	0801ae51 	.word	0x0801ae51
 801ae88:	0801ae51 	.word	0x0801ae51
 801ae8c:	0801ae51 	.word	0x0801ae51
 801ae90:	0801ae51 	.word	0x0801ae51
 801ae94:	0801afd9 	.word	0x0801afd9
 801ae98:	0801af01 	.word	0x0801af01
 801ae9c:	0801af93 	.word	0x0801af93
 801aea0:	0801ae51 	.word	0x0801ae51
 801aea4:	0801ae51 	.word	0x0801ae51
 801aea8:	0801affb 	.word	0x0801affb
 801aeac:	0801ae51 	.word	0x0801ae51
 801aeb0:	0801af01 	.word	0x0801af01
 801aeb4:	0801ae51 	.word	0x0801ae51
 801aeb8:	0801ae51 	.word	0x0801ae51
 801aebc:	0801af9b 	.word	0x0801af9b
 801aec0:	682b      	ldr	r3, [r5, #0]
 801aec2:	1d1a      	adds	r2, r3, #4
 801aec4:	681b      	ldr	r3, [r3, #0]
 801aec6:	602a      	str	r2, [r5, #0]
 801aec8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801aecc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801aed0:	2301      	movs	r3, #1
 801aed2:	e09f      	b.n	801b014 <_printf_i+0x1ec>
 801aed4:	6820      	ldr	r0, [r4, #0]
 801aed6:	682b      	ldr	r3, [r5, #0]
 801aed8:	0607      	lsls	r7, r0, #24
 801aeda:	f103 0104 	add.w	r1, r3, #4
 801aede:	6029      	str	r1, [r5, #0]
 801aee0:	d501      	bpl.n	801aee6 <_printf_i+0xbe>
 801aee2:	681e      	ldr	r6, [r3, #0]
 801aee4:	e003      	b.n	801aeee <_printf_i+0xc6>
 801aee6:	0646      	lsls	r6, r0, #25
 801aee8:	d5fb      	bpl.n	801aee2 <_printf_i+0xba>
 801aeea:	f9b3 6000 	ldrsh.w	r6, [r3]
 801aeee:	2e00      	cmp	r6, #0
 801aef0:	da03      	bge.n	801aefa <_printf_i+0xd2>
 801aef2:	232d      	movs	r3, #45	; 0x2d
 801aef4:	4276      	negs	r6, r6
 801aef6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801aefa:	485a      	ldr	r0, [pc, #360]	; (801b064 <_printf_i+0x23c>)
 801aefc:	230a      	movs	r3, #10
 801aefe:	e012      	b.n	801af26 <_printf_i+0xfe>
 801af00:	682b      	ldr	r3, [r5, #0]
 801af02:	6820      	ldr	r0, [r4, #0]
 801af04:	1d19      	adds	r1, r3, #4
 801af06:	6029      	str	r1, [r5, #0]
 801af08:	0605      	lsls	r5, r0, #24
 801af0a:	d501      	bpl.n	801af10 <_printf_i+0xe8>
 801af0c:	681e      	ldr	r6, [r3, #0]
 801af0e:	e002      	b.n	801af16 <_printf_i+0xee>
 801af10:	0641      	lsls	r1, r0, #25
 801af12:	d5fb      	bpl.n	801af0c <_printf_i+0xe4>
 801af14:	881e      	ldrh	r6, [r3, #0]
 801af16:	4853      	ldr	r0, [pc, #332]	; (801b064 <_printf_i+0x23c>)
 801af18:	2f6f      	cmp	r7, #111	; 0x6f
 801af1a:	bf0c      	ite	eq
 801af1c:	2308      	moveq	r3, #8
 801af1e:	230a      	movne	r3, #10
 801af20:	2100      	movs	r1, #0
 801af22:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801af26:	6865      	ldr	r5, [r4, #4]
 801af28:	60a5      	str	r5, [r4, #8]
 801af2a:	2d00      	cmp	r5, #0
 801af2c:	bfa2      	ittt	ge
 801af2e:	6821      	ldrge	r1, [r4, #0]
 801af30:	f021 0104 	bicge.w	r1, r1, #4
 801af34:	6021      	strge	r1, [r4, #0]
 801af36:	b90e      	cbnz	r6, 801af3c <_printf_i+0x114>
 801af38:	2d00      	cmp	r5, #0
 801af3a:	d04b      	beq.n	801afd4 <_printf_i+0x1ac>
 801af3c:	4615      	mov	r5, r2
 801af3e:	fbb6 f1f3 	udiv	r1, r6, r3
 801af42:	fb03 6711 	mls	r7, r3, r1, r6
 801af46:	5dc7      	ldrb	r7, [r0, r7]
 801af48:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801af4c:	4637      	mov	r7, r6
 801af4e:	42bb      	cmp	r3, r7
 801af50:	460e      	mov	r6, r1
 801af52:	d9f4      	bls.n	801af3e <_printf_i+0x116>
 801af54:	2b08      	cmp	r3, #8
 801af56:	d10b      	bne.n	801af70 <_printf_i+0x148>
 801af58:	6823      	ldr	r3, [r4, #0]
 801af5a:	07de      	lsls	r6, r3, #31
 801af5c:	d508      	bpl.n	801af70 <_printf_i+0x148>
 801af5e:	6923      	ldr	r3, [r4, #16]
 801af60:	6861      	ldr	r1, [r4, #4]
 801af62:	4299      	cmp	r1, r3
 801af64:	bfde      	ittt	le
 801af66:	2330      	movle	r3, #48	; 0x30
 801af68:	f805 3c01 	strble.w	r3, [r5, #-1]
 801af6c:	f105 35ff 	addle.w	r5, r5, #4294967295
 801af70:	1b52      	subs	r2, r2, r5
 801af72:	6122      	str	r2, [r4, #16]
 801af74:	f8cd a000 	str.w	sl, [sp]
 801af78:	464b      	mov	r3, r9
 801af7a:	aa03      	add	r2, sp, #12
 801af7c:	4621      	mov	r1, r4
 801af7e:	4640      	mov	r0, r8
 801af80:	f7ff fee4 	bl	801ad4c <_printf_common>
 801af84:	3001      	adds	r0, #1
 801af86:	d14a      	bne.n	801b01e <_printf_i+0x1f6>
 801af88:	f04f 30ff 	mov.w	r0, #4294967295
 801af8c:	b004      	add	sp, #16
 801af8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801af92:	6823      	ldr	r3, [r4, #0]
 801af94:	f043 0320 	orr.w	r3, r3, #32
 801af98:	6023      	str	r3, [r4, #0]
 801af9a:	4833      	ldr	r0, [pc, #204]	; (801b068 <_printf_i+0x240>)
 801af9c:	2778      	movs	r7, #120	; 0x78
 801af9e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801afa2:	6823      	ldr	r3, [r4, #0]
 801afa4:	6829      	ldr	r1, [r5, #0]
 801afa6:	061f      	lsls	r7, r3, #24
 801afa8:	f851 6b04 	ldr.w	r6, [r1], #4
 801afac:	d402      	bmi.n	801afb4 <_printf_i+0x18c>
 801afae:	065f      	lsls	r7, r3, #25
 801afb0:	bf48      	it	mi
 801afb2:	b2b6      	uxthmi	r6, r6
 801afb4:	07df      	lsls	r7, r3, #31
 801afb6:	bf48      	it	mi
 801afb8:	f043 0320 	orrmi.w	r3, r3, #32
 801afbc:	6029      	str	r1, [r5, #0]
 801afbe:	bf48      	it	mi
 801afc0:	6023      	strmi	r3, [r4, #0]
 801afc2:	b91e      	cbnz	r6, 801afcc <_printf_i+0x1a4>
 801afc4:	6823      	ldr	r3, [r4, #0]
 801afc6:	f023 0320 	bic.w	r3, r3, #32
 801afca:	6023      	str	r3, [r4, #0]
 801afcc:	2310      	movs	r3, #16
 801afce:	e7a7      	b.n	801af20 <_printf_i+0xf8>
 801afd0:	4824      	ldr	r0, [pc, #144]	; (801b064 <_printf_i+0x23c>)
 801afd2:	e7e4      	b.n	801af9e <_printf_i+0x176>
 801afd4:	4615      	mov	r5, r2
 801afd6:	e7bd      	b.n	801af54 <_printf_i+0x12c>
 801afd8:	682b      	ldr	r3, [r5, #0]
 801afda:	6826      	ldr	r6, [r4, #0]
 801afdc:	6961      	ldr	r1, [r4, #20]
 801afde:	1d18      	adds	r0, r3, #4
 801afe0:	6028      	str	r0, [r5, #0]
 801afe2:	0635      	lsls	r5, r6, #24
 801afe4:	681b      	ldr	r3, [r3, #0]
 801afe6:	d501      	bpl.n	801afec <_printf_i+0x1c4>
 801afe8:	6019      	str	r1, [r3, #0]
 801afea:	e002      	b.n	801aff2 <_printf_i+0x1ca>
 801afec:	0670      	lsls	r0, r6, #25
 801afee:	d5fb      	bpl.n	801afe8 <_printf_i+0x1c0>
 801aff0:	8019      	strh	r1, [r3, #0]
 801aff2:	2300      	movs	r3, #0
 801aff4:	6123      	str	r3, [r4, #16]
 801aff6:	4615      	mov	r5, r2
 801aff8:	e7bc      	b.n	801af74 <_printf_i+0x14c>
 801affa:	682b      	ldr	r3, [r5, #0]
 801affc:	1d1a      	adds	r2, r3, #4
 801affe:	602a      	str	r2, [r5, #0]
 801b000:	681d      	ldr	r5, [r3, #0]
 801b002:	6862      	ldr	r2, [r4, #4]
 801b004:	2100      	movs	r1, #0
 801b006:	4628      	mov	r0, r5
 801b008:	f7e5 f982 	bl	8000310 <memchr>
 801b00c:	b108      	cbz	r0, 801b012 <_printf_i+0x1ea>
 801b00e:	1b40      	subs	r0, r0, r5
 801b010:	6060      	str	r0, [r4, #4]
 801b012:	6863      	ldr	r3, [r4, #4]
 801b014:	6123      	str	r3, [r4, #16]
 801b016:	2300      	movs	r3, #0
 801b018:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b01c:	e7aa      	b.n	801af74 <_printf_i+0x14c>
 801b01e:	6923      	ldr	r3, [r4, #16]
 801b020:	462a      	mov	r2, r5
 801b022:	4649      	mov	r1, r9
 801b024:	4640      	mov	r0, r8
 801b026:	47d0      	blx	sl
 801b028:	3001      	adds	r0, #1
 801b02a:	d0ad      	beq.n	801af88 <_printf_i+0x160>
 801b02c:	6823      	ldr	r3, [r4, #0]
 801b02e:	079b      	lsls	r3, r3, #30
 801b030:	d413      	bmi.n	801b05a <_printf_i+0x232>
 801b032:	68e0      	ldr	r0, [r4, #12]
 801b034:	9b03      	ldr	r3, [sp, #12]
 801b036:	4298      	cmp	r0, r3
 801b038:	bfb8      	it	lt
 801b03a:	4618      	movlt	r0, r3
 801b03c:	e7a6      	b.n	801af8c <_printf_i+0x164>
 801b03e:	2301      	movs	r3, #1
 801b040:	4632      	mov	r2, r6
 801b042:	4649      	mov	r1, r9
 801b044:	4640      	mov	r0, r8
 801b046:	47d0      	blx	sl
 801b048:	3001      	adds	r0, #1
 801b04a:	d09d      	beq.n	801af88 <_printf_i+0x160>
 801b04c:	3501      	adds	r5, #1
 801b04e:	68e3      	ldr	r3, [r4, #12]
 801b050:	9903      	ldr	r1, [sp, #12]
 801b052:	1a5b      	subs	r3, r3, r1
 801b054:	42ab      	cmp	r3, r5
 801b056:	dcf2      	bgt.n	801b03e <_printf_i+0x216>
 801b058:	e7eb      	b.n	801b032 <_printf_i+0x20a>
 801b05a:	2500      	movs	r5, #0
 801b05c:	f104 0619 	add.w	r6, r4, #25
 801b060:	e7f5      	b.n	801b04e <_printf_i+0x226>
 801b062:	bf00      	nop
 801b064:	0801cbad 	.word	0x0801cbad
 801b068:	0801cbbe 	.word	0x0801cbbe

0801b06c <__sflush_r>:
 801b06c:	898a      	ldrh	r2, [r1, #12]
 801b06e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b072:	4605      	mov	r5, r0
 801b074:	0710      	lsls	r0, r2, #28
 801b076:	460c      	mov	r4, r1
 801b078:	d458      	bmi.n	801b12c <__sflush_r+0xc0>
 801b07a:	684b      	ldr	r3, [r1, #4]
 801b07c:	2b00      	cmp	r3, #0
 801b07e:	dc05      	bgt.n	801b08c <__sflush_r+0x20>
 801b080:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801b082:	2b00      	cmp	r3, #0
 801b084:	dc02      	bgt.n	801b08c <__sflush_r+0x20>
 801b086:	2000      	movs	r0, #0
 801b088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b08c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b08e:	2e00      	cmp	r6, #0
 801b090:	d0f9      	beq.n	801b086 <__sflush_r+0x1a>
 801b092:	2300      	movs	r3, #0
 801b094:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801b098:	682f      	ldr	r7, [r5, #0]
 801b09a:	6a21      	ldr	r1, [r4, #32]
 801b09c:	602b      	str	r3, [r5, #0]
 801b09e:	d032      	beq.n	801b106 <__sflush_r+0x9a>
 801b0a0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801b0a2:	89a3      	ldrh	r3, [r4, #12]
 801b0a4:	075a      	lsls	r2, r3, #29
 801b0a6:	d505      	bpl.n	801b0b4 <__sflush_r+0x48>
 801b0a8:	6863      	ldr	r3, [r4, #4]
 801b0aa:	1ac0      	subs	r0, r0, r3
 801b0ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801b0ae:	b10b      	cbz	r3, 801b0b4 <__sflush_r+0x48>
 801b0b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801b0b2:	1ac0      	subs	r0, r0, r3
 801b0b4:	2300      	movs	r3, #0
 801b0b6:	4602      	mov	r2, r0
 801b0b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b0ba:	6a21      	ldr	r1, [r4, #32]
 801b0bc:	4628      	mov	r0, r5
 801b0be:	47b0      	blx	r6
 801b0c0:	1c43      	adds	r3, r0, #1
 801b0c2:	89a3      	ldrh	r3, [r4, #12]
 801b0c4:	d106      	bne.n	801b0d4 <__sflush_r+0x68>
 801b0c6:	6829      	ldr	r1, [r5, #0]
 801b0c8:	291d      	cmp	r1, #29
 801b0ca:	d82b      	bhi.n	801b124 <__sflush_r+0xb8>
 801b0cc:	4a29      	ldr	r2, [pc, #164]	; (801b174 <__sflush_r+0x108>)
 801b0ce:	410a      	asrs	r2, r1
 801b0d0:	07d6      	lsls	r6, r2, #31
 801b0d2:	d427      	bmi.n	801b124 <__sflush_r+0xb8>
 801b0d4:	2200      	movs	r2, #0
 801b0d6:	6062      	str	r2, [r4, #4]
 801b0d8:	04d9      	lsls	r1, r3, #19
 801b0da:	6922      	ldr	r2, [r4, #16]
 801b0dc:	6022      	str	r2, [r4, #0]
 801b0de:	d504      	bpl.n	801b0ea <__sflush_r+0x7e>
 801b0e0:	1c42      	adds	r2, r0, #1
 801b0e2:	d101      	bne.n	801b0e8 <__sflush_r+0x7c>
 801b0e4:	682b      	ldr	r3, [r5, #0]
 801b0e6:	b903      	cbnz	r3, 801b0ea <__sflush_r+0x7e>
 801b0e8:	6560      	str	r0, [r4, #84]	; 0x54
 801b0ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b0ec:	602f      	str	r7, [r5, #0]
 801b0ee:	2900      	cmp	r1, #0
 801b0f0:	d0c9      	beq.n	801b086 <__sflush_r+0x1a>
 801b0f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b0f6:	4299      	cmp	r1, r3
 801b0f8:	d002      	beq.n	801b100 <__sflush_r+0x94>
 801b0fa:	4628      	mov	r0, r5
 801b0fc:	f7ff fc96 	bl	801aa2c <_free_r>
 801b100:	2000      	movs	r0, #0
 801b102:	6360      	str	r0, [r4, #52]	; 0x34
 801b104:	e7c0      	b.n	801b088 <__sflush_r+0x1c>
 801b106:	2301      	movs	r3, #1
 801b108:	4628      	mov	r0, r5
 801b10a:	47b0      	blx	r6
 801b10c:	1c41      	adds	r1, r0, #1
 801b10e:	d1c8      	bne.n	801b0a2 <__sflush_r+0x36>
 801b110:	682b      	ldr	r3, [r5, #0]
 801b112:	2b00      	cmp	r3, #0
 801b114:	d0c5      	beq.n	801b0a2 <__sflush_r+0x36>
 801b116:	2b1d      	cmp	r3, #29
 801b118:	d001      	beq.n	801b11e <__sflush_r+0xb2>
 801b11a:	2b16      	cmp	r3, #22
 801b11c:	d101      	bne.n	801b122 <__sflush_r+0xb6>
 801b11e:	602f      	str	r7, [r5, #0]
 801b120:	e7b1      	b.n	801b086 <__sflush_r+0x1a>
 801b122:	89a3      	ldrh	r3, [r4, #12]
 801b124:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b128:	81a3      	strh	r3, [r4, #12]
 801b12a:	e7ad      	b.n	801b088 <__sflush_r+0x1c>
 801b12c:	690f      	ldr	r7, [r1, #16]
 801b12e:	2f00      	cmp	r7, #0
 801b130:	d0a9      	beq.n	801b086 <__sflush_r+0x1a>
 801b132:	0793      	lsls	r3, r2, #30
 801b134:	680e      	ldr	r6, [r1, #0]
 801b136:	bf08      	it	eq
 801b138:	694b      	ldreq	r3, [r1, #20]
 801b13a:	600f      	str	r7, [r1, #0]
 801b13c:	bf18      	it	ne
 801b13e:	2300      	movne	r3, #0
 801b140:	eba6 0807 	sub.w	r8, r6, r7
 801b144:	608b      	str	r3, [r1, #8]
 801b146:	f1b8 0f00 	cmp.w	r8, #0
 801b14a:	dd9c      	ble.n	801b086 <__sflush_r+0x1a>
 801b14c:	6a21      	ldr	r1, [r4, #32]
 801b14e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801b150:	4643      	mov	r3, r8
 801b152:	463a      	mov	r2, r7
 801b154:	4628      	mov	r0, r5
 801b156:	47b0      	blx	r6
 801b158:	2800      	cmp	r0, #0
 801b15a:	dc06      	bgt.n	801b16a <__sflush_r+0xfe>
 801b15c:	89a3      	ldrh	r3, [r4, #12]
 801b15e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b162:	81a3      	strh	r3, [r4, #12]
 801b164:	f04f 30ff 	mov.w	r0, #4294967295
 801b168:	e78e      	b.n	801b088 <__sflush_r+0x1c>
 801b16a:	4407      	add	r7, r0
 801b16c:	eba8 0800 	sub.w	r8, r8, r0
 801b170:	e7e9      	b.n	801b146 <__sflush_r+0xda>
 801b172:	bf00      	nop
 801b174:	dfbffffe 	.word	0xdfbffffe

0801b178 <_fflush_r>:
 801b178:	b538      	push	{r3, r4, r5, lr}
 801b17a:	690b      	ldr	r3, [r1, #16]
 801b17c:	4605      	mov	r5, r0
 801b17e:	460c      	mov	r4, r1
 801b180:	b913      	cbnz	r3, 801b188 <_fflush_r+0x10>
 801b182:	2500      	movs	r5, #0
 801b184:	4628      	mov	r0, r5
 801b186:	bd38      	pop	{r3, r4, r5, pc}
 801b188:	b118      	cbz	r0, 801b192 <_fflush_r+0x1a>
 801b18a:	6a03      	ldr	r3, [r0, #32]
 801b18c:	b90b      	cbnz	r3, 801b192 <_fflush_r+0x1a>
 801b18e:	f7ff fa87 	bl	801a6a0 <__sinit>
 801b192:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b196:	2b00      	cmp	r3, #0
 801b198:	d0f3      	beq.n	801b182 <_fflush_r+0xa>
 801b19a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b19c:	07d0      	lsls	r0, r2, #31
 801b19e:	d404      	bmi.n	801b1aa <_fflush_r+0x32>
 801b1a0:	0599      	lsls	r1, r3, #22
 801b1a2:	d402      	bmi.n	801b1aa <_fflush_r+0x32>
 801b1a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b1a6:	f7ff fbd3 	bl	801a950 <__retarget_lock_acquire_recursive>
 801b1aa:	4628      	mov	r0, r5
 801b1ac:	4621      	mov	r1, r4
 801b1ae:	f7ff ff5d 	bl	801b06c <__sflush_r>
 801b1b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b1b4:	07da      	lsls	r2, r3, #31
 801b1b6:	4605      	mov	r5, r0
 801b1b8:	d4e4      	bmi.n	801b184 <_fflush_r+0xc>
 801b1ba:	89a3      	ldrh	r3, [r4, #12]
 801b1bc:	059b      	lsls	r3, r3, #22
 801b1be:	d4e1      	bmi.n	801b184 <_fflush_r+0xc>
 801b1c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b1c2:	f7ff fbc6 	bl	801a952 <__retarget_lock_release_recursive>
 801b1c6:	e7dd      	b.n	801b184 <_fflush_r+0xc>

0801b1c8 <__swbuf_r>:
 801b1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b1ca:	460e      	mov	r6, r1
 801b1cc:	4614      	mov	r4, r2
 801b1ce:	4605      	mov	r5, r0
 801b1d0:	b118      	cbz	r0, 801b1da <__swbuf_r+0x12>
 801b1d2:	6a03      	ldr	r3, [r0, #32]
 801b1d4:	b90b      	cbnz	r3, 801b1da <__swbuf_r+0x12>
 801b1d6:	f7ff fa63 	bl	801a6a0 <__sinit>
 801b1da:	69a3      	ldr	r3, [r4, #24]
 801b1dc:	60a3      	str	r3, [r4, #8]
 801b1de:	89a3      	ldrh	r3, [r4, #12]
 801b1e0:	071a      	lsls	r2, r3, #28
 801b1e2:	d525      	bpl.n	801b230 <__swbuf_r+0x68>
 801b1e4:	6923      	ldr	r3, [r4, #16]
 801b1e6:	b31b      	cbz	r3, 801b230 <__swbuf_r+0x68>
 801b1e8:	6823      	ldr	r3, [r4, #0]
 801b1ea:	6922      	ldr	r2, [r4, #16]
 801b1ec:	1a98      	subs	r0, r3, r2
 801b1ee:	6963      	ldr	r3, [r4, #20]
 801b1f0:	b2f6      	uxtb	r6, r6
 801b1f2:	4283      	cmp	r3, r0
 801b1f4:	4637      	mov	r7, r6
 801b1f6:	dc04      	bgt.n	801b202 <__swbuf_r+0x3a>
 801b1f8:	4621      	mov	r1, r4
 801b1fa:	4628      	mov	r0, r5
 801b1fc:	f7ff ffbc 	bl	801b178 <_fflush_r>
 801b200:	b9e0      	cbnz	r0, 801b23c <__swbuf_r+0x74>
 801b202:	68a3      	ldr	r3, [r4, #8]
 801b204:	3b01      	subs	r3, #1
 801b206:	60a3      	str	r3, [r4, #8]
 801b208:	6823      	ldr	r3, [r4, #0]
 801b20a:	1c5a      	adds	r2, r3, #1
 801b20c:	6022      	str	r2, [r4, #0]
 801b20e:	701e      	strb	r6, [r3, #0]
 801b210:	6962      	ldr	r2, [r4, #20]
 801b212:	1c43      	adds	r3, r0, #1
 801b214:	429a      	cmp	r2, r3
 801b216:	d004      	beq.n	801b222 <__swbuf_r+0x5a>
 801b218:	89a3      	ldrh	r3, [r4, #12]
 801b21a:	07db      	lsls	r3, r3, #31
 801b21c:	d506      	bpl.n	801b22c <__swbuf_r+0x64>
 801b21e:	2e0a      	cmp	r6, #10
 801b220:	d104      	bne.n	801b22c <__swbuf_r+0x64>
 801b222:	4621      	mov	r1, r4
 801b224:	4628      	mov	r0, r5
 801b226:	f7ff ffa7 	bl	801b178 <_fflush_r>
 801b22a:	b938      	cbnz	r0, 801b23c <__swbuf_r+0x74>
 801b22c:	4638      	mov	r0, r7
 801b22e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b230:	4621      	mov	r1, r4
 801b232:	4628      	mov	r0, r5
 801b234:	f000 f806 	bl	801b244 <__swsetup_r>
 801b238:	2800      	cmp	r0, #0
 801b23a:	d0d5      	beq.n	801b1e8 <__swbuf_r+0x20>
 801b23c:	f04f 37ff 	mov.w	r7, #4294967295
 801b240:	e7f4      	b.n	801b22c <__swbuf_r+0x64>
	...

0801b244 <__swsetup_r>:
 801b244:	b538      	push	{r3, r4, r5, lr}
 801b246:	4b2a      	ldr	r3, [pc, #168]	; (801b2f0 <__swsetup_r+0xac>)
 801b248:	4605      	mov	r5, r0
 801b24a:	6818      	ldr	r0, [r3, #0]
 801b24c:	460c      	mov	r4, r1
 801b24e:	b118      	cbz	r0, 801b258 <__swsetup_r+0x14>
 801b250:	6a03      	ldr	r3, [r0, #32]
 801b252:	b90b      	cbnz	r3, 801b258 <__swsetup_r+0x14>
 801b254:	f7ff fa24 	bl	801a6a0 <__sinit>
 801b258:	89a3      	ldrh	r3, [r4, #12]
 801b25a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b25e:	0718      	lsls	r0, r3, #28
 801b260:	d422      	bmi.n	801b2a8 <__swsetup_r+0x64>
 801b262:	06d9      	lsls	r1, r3, #27
 801b264:	d407      	bmi.n	801b276 <__swsetup_r+0x32>
 801b266:	2309      	movs	r3, #9
 801b268:	602b      	str	r3, [r5, #0]
 801b26a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801b26e:	81a3      	strh	r3, [r4, #12]
 801b270:	f04f 30ff 	mov.w	r0, #4294967295
 801b274:	e034      	b.n	801b2e0 <__swsetup_r+0x9c>
 801b276:	0758      	lsls	r0, r3, #29
 801b278:	d512      	bpl.n	801b2a0 <__swsetup_r+0x5c>
 801b27a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b27c:	b141      	cbz	r1, 801b290 <__swsetup_r+0x4c>
 801b27e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b282:	4299      	cmp	r1, r3
 801b284:	d002      	beq.n	801b28c <__swsetup_r+0x48>
 801b286:	4628      	mov	r0, r5
 801b288:	f7ff fbd0 	bl	801aa2c <_free_r>
 801b28c:	2300      	movs	r3, #0
 801b28e:	6363      	str	r3, [r4, #52]	; 0x34
 801b290:	89a3      	ldrh	r3, [r4, #12]
 801b292:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801b296:	81a3      	strh	r3, [r4, #12]
 801b298:	2300      	movs	r3, #0
 801b29a:	6063      	str	r3, [r4, #4]
 801b29c:	6923      	ldr	r3, [r4, #16]
 801b29e:	6023      	str	r3, [r4, #0]
 801b2a0:	89a3      	ldrh	r3, [r4, #12]
 801b2a2:	f043 0308 	orr.w	r3, r3, #8
 801b2a6:	81a3      	strh	r3, [r4, #12]
 801b2a8:	6923      	ldr	r3, [r4, #16]
 801b2aa:	b94b      	cbnz	r3, 801b2c0 <__swsetup_r+0x7c>
 801b2ac:	89a3      	ldrh	r3, [r4, #12]
 801b2ae:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801b2b2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801b2b6:	d003      	beq.n	801b2c0 <__swsetup_r+0x7c>
 801b2b8:	4621      	mov	r1, r4
 801b2ba:	4628      	mov	r0, r5
 801b2bc:	f000 f840 	bl	801b340 <__smakebuf_r>
 801b2c0:	89a0      	ldrh	r0, [r4, #12]
 801b2c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b2c6:	f010 0301 	ands.w	r3, r0, #1
 801b2ca:	d00a      	beq.n	801b2e2 <__swsetup_r+0x9e>
 801b2cc:	2300      	movs	r3, #0
 801b2ce:	60a3      	str	r3, [r4, #8]
 801b2d0:	6963      	ldr	r3, [r4, #20]
 801b2d2:	425b      	negs	r3, r3
 801b2d4:	61a3      	str	r3, [r4, #24]
 801b2d6:	6923      	ldr	r3, [r4, #16]
 801b2d8:	b943      	cbnz	r3, 801b2ec <__swsetup_r+0xa8>
 801b2da:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801b2de:	d1c4      	bne.n	801b26a <__swsetup_r+0x26>
 801b2e0:	bd38      	pop	{r3, r4, r5, pc}
 801b2e2:	0781      	lsls	r1, r0, #30
 801b2e4:	bf58      	it	pl
 801b2e6:	6963      	ldrpl	r3, [r4, #20]
 801b2e8:	60a3      	str	r3, [r4, #8]
 801b2ea:	e7f4      	b.n	801b2d6 <__swsetup_r+0x92>
 801b2ec:	2000      	movs	r0, #0
 801b2ee:	e7f7      	b.n	801b2e0 <__swsetup_r+0x9c>
 801b2f0:	24000108 	.word	0x24000108

0801b2f4 <__swhatbuf_r>:
 801b2f4:	b570      	push	{r4, r5, r6, lr}
 801b2f6:	460c      	mov	r4, r1
 801b2f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b2fc:	2900      	cmp	r1, #0
 801b2fe:	b096      	sub	sp, #88	; 0x58
 801b300:	4615      	mov	r5, r2
 801b302:	461e      	mov	r6, r3
 801b304:	da0d      	bge.n	801b322 <__swhatbuf_r+0x2e>
 801b306:	89a3      	ldrh	r3, [r4, #12]
 801b308:	f013 0f80 	tst.w	r3, #128	; 0x80
 801b30c:	f04f 0100 	mov.w	r1, #0
 801b310:	bf0c      	ite	eq
 801b312:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 801b316:	2340      	movne	r3, #64	; 0x40
 801b318:	2000      	movs	r0, #0
 801b31a:	6031      	str	r1, [r6, #0]
 801b31c:	602b      	str	r3, [r5, #0]
 801b31e:	b016      	add	sp, #88	; 0x58
 801b320:	bd70      	pop	{r4, r5, r6, pc}
 801b322:	466a      	mov	r2, sp
 801b324:	f000 f848 	bl	801b3b8 <_fstat_r>
 801b328:	2800      	cmp	r0, #0
 801b32a:	dbec      	blt.n	801b306 <__swhatbuf_r+0x12>
 801b32c:	9901      	ldr	r1, [sp, #4]
 801b32e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 801b332:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 801b336:	4259      	negs	r1, r3
 801b338:	4159      	adcs	r1, r3
 801b33a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b33e:	e7eb      	b.n	801b318 <__swhatbuf_r+0x24>

0801b340 <__smakebuf_r>:
 801b340:	898b      	ldrh	r3, [r1, #12]
 801b342:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b344:	079d      	lsls	r5, r3, #30
 801b346:	4606      	mov	r6, r0
 801b348:	460c      	mov	r4, r1
 801b34a:	d507      	bpl.n	801b35c <__smakebuf_r+0x1c>
 801b34c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b350:	6023      	str	r3, [r4, #0]
 801b352:	6123      	str	r3, [r4, #16]
 801b354:	2301      	movs	r3, #1
 801b356:	6163      	str	r3, [r4, #20]
 801b358:	b002      	add	sp, #8
 801b35a:	bd70      	pop	{r4, r5, r6, pc}
 801b35c:	ab01      	add	r3, sp, #4
 801b35e:	466a      	mov	r2, sp
 801b360:	f7ff ffc8 	bl	801b2f4 <__swhatbuf_r>
 801b364:	9900      	ldr	r1, [sp, #0]
 801b366:	4605      	mov	r5, r0
 801b368:	4630      	mov	r0, r6
 801b36a:	f7ff f885 	bl	801a478 <_malloc_r>
 801b36e:	b948      	cbnz	r0, 801b384 <__smakebuf_r+0x44>
 801b370:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b374:	059a      	lsls	r2, r3, #22
 801b376:	d4ef      	bmi.n	801b358 <__smakebuf_r+0x18>
 801b378:	f023 0303 	bic.w	r3, r3, #3
 801b37c:	f043 0302 	orr.w	r3, r3, #2
 801b380:	81a3      	strh	r3, [r4, #12]
 801b382:	e7e3      	b.n	801b34c <__smakebuf_r+0xc>
 801b384:	89a3      	ldrh	r3, [r4, #12]
 801b386:	6020      	str	r0, [r4, #0]
 801b388:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b38c:	81a3      	strh	r3, [r4, #12]
 801b38e:	9b00      	ldr	r3, [sp, #0]
 801b390:	6163      	str	r3, [r4, #20]
 801b392:	9b01      	ldr	r3, [sp, #4]
 801b394:	6120      	str	r0, [r4, #16]
 801b396:	b15b      	cbz	r3, 801b3b0 <__smakebuf_r+0x70>
 801b398:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b39c:	4630      	mov	r0, r6
 801b39e:	f000 f81d 	bl	801b3dc <_isatty_r>
 801b3a2:	b128      	cbz	r0, 801b3b0 <__smakebuf_r+0x70>
 801b3a4:	89a3      	ldrh	r3, [r4, #12]
 801b3a6:	f023 0303 	bic.w	r3, r3, #3
 801b3aa:	f043 0301 	orr.w	r3, r3, #1
 801b3ae:	81a3      	strh	r3, [r4, #12]
 801b3b0:	89a3      	ldrh	r3, [r4, #12]
 801b3b2:	431d      	orrs	r5, r3
 801b3b4:	81a5      	strh	r5, [r4, #12]
 801b3b6:	e7cf      	b.n	801b358 <__smakebuf_r+0x18>

0801b3b8 <_fstat_r>:
 801b3b8:	b538      	push	{r3, r4, r5, lr}
 801b3ba:	4d07      	ldr	r5, [pc, #28]	; (801b3d8 <_fstat_r+0x20>)
 801b3bc:	2300      	movs	r3, #0
 801b3be:	4604      	mov	r4, r0
 801b3c0:	4608      	mov	r0, r1
 801b3c2:	4611      	mov	r1, r2
 801b3c4:	602b      	str	r3, [r5, #0]
 801b3c6:	f7e5 fe86 	bl	80010d6 <_fstat>
 801b3ca:	1c43      	adds	r3, r0, #1
 801b3cc:	d102      	bne.n	801b3d4 <_fstat_r+0x1c>
 801b3ce:	682b      	ldr	r3, [r5, #0]
 801b3d0:	b103      	cbz	r3, 801b3d4 <_fstat_r+0x1c>
 801b3d2:	6023      	str	r3, [r4, #0]
 801b3d4:	bd38      	pop	{r3, r4, r5, pc}
 801b3d6:	bf00      	nop
 801b3d8:	24007648 	.word	0x24007648

0801b3dc <_isatty_r>:
 801b3dc:	b538      	push	{r3, r4, r5, lr}
 801b3de:	4d06      	ldr	r5, [pc, #24]	; (801b3f8 <_isatty_r+0x1c>)
 801b3e0:	2300      	movs	r3, #0
 801b3e2:	4604      	mov	r4, r0
 801b3e4:	4608      	mov	r0, r1
 801b3e6:	602b      	str	r3, [r5, #0]
 801b3e8:	f7e5 fe7a 	bl	80010e0 <_isatty>
 801b3ec:	1c43      	adds	r3, r0, #1
 801b3ee:	d102      	bne.n	801b3f6 <_isatty_r+0x1a>
 801b3f0:	682b      	ldr	r3, [r5, #0]
 801b3f2:	b103      	cbz	r3, 801b3f6 <_isatty_r+0x1a>
 801b3f4:	6023      	str	r3, [r4, #0]
 801b3f6:	bd38      	pop	{r3, r4, r5, pc}
 801b3f8:	24007648 	.word	0x24007648

0801b3fc <_init>:
 801b3fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b3fe:	bf00      	nop
 801b400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b402:	bc08      	pop	{r3}
 801b404:	469e      	mov	lr, r3
 801b406:	4770      	bx	lr

0801b408 <_fini>:
 801b408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b40a:	bf00      	nop
 801b40c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b40e:	bc08      	pop	{r3}
 801b410:	469e      	mov	lr, r3
 801b412:	4770      	bx	lr
