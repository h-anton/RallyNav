/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdint.h>
#include <touchgfx/Unicode.hpp>

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGbr[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Remap all strings
TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGbr[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    6332, // T_DEMO_VIEW_MCU_LOAD_TEXT: "MCU load: "
    6365, // T_DEMO_VIEW_MCU_LOAD_VALUE: "<> %"
    6332, // T_DEMO_VIEW_MCU_LOAD_TEXT_SMALL: "MCU load: "
    6365, // T_DEMO_VIEW_MCU_LOAD_VALUE_SMALL: "<> %"
    6167, // T_POSTER_HEADLINE_00: "About TouchGFX"
    1298, // T_POSTER_TEXT_00: "A unique software framework that \nunlocks the graphical user interface \nperformance of your low-cost \nhardware (e.g. Cortex M).\n\nThe revolutionizing technology breaks \nexisting restraints, as it lets you create\nsophisticated GUIs that fully live up to \ntoday?s smartphone standards at a \nfraction of the cost.\n\nBy using TouchGFX, your embedded \nproduct gets outstanding graphics and \nsmooth animations with minimal resource\nand power consumption. You get a high-\nend product with a low cost per unit.\n"
    6182, // T_POSTER_HEADLINE_01: "Alpha Blending"
    4947, // T_POSTER_TEXT_01: "Alpha blending is the process of \ncombining an image with a background \nto create the appearance of partial or \nfull transparency.\n\nTouchGFX supports per pixel alpha \nblending of images with a minimum \nstrain on the MCU. This feature enables \nsmooth looking graphics and animations \nin your TouchGFX applications.\n"
    6147, // T_POSTER_HEADLINE_02: "Fonts and Languages"
    4248, // T_POSTER_TEXT_02: "TouchGFX supports multiple languages \nand scripts, such as Latin, Cyrillic, Chinese, \nand Japanese. Translations are easily \nmanaged in a separate text spreadsheet. \n\nAn integrated font converter creates \ninternal representation of any TrueType \nfont at compile time. TouchGFX uses the \nfont-specific kerning information to \nadjust character positions.\n"
    6365, // T_THREE_WAY_PROGRESS_BAR_PERCENTAGE: "<> %"
    6256, // T_THREE_WAY_PROGRESS_BAR_SCAN: "Press to Scan"
    6379, // T_THREE_WAY_PROGRESS_BAR_SCANNING: "Scanning?"
    6101, // T_THREE_WAY_PROGRESS_BAR_STATUS: "Scan completed\nno errors"
    6449, // T_PERCENTAGE_BAR_READOUT: "<>%"
    6212, // T_PERCENTAGE_BAR_HEADLINE: "Percentage Bar"
    5927, // T_DATEPICKER_MONTHS: "January\n\nFebruary\n\nMarch\n\nApril\n\nMay\n\nJune\n\nJuly\n\nAugust\n\nSeptember\n\nOctober\n\nNovember\n\nDecember"
    6024, // T_DATEPICKER_YEARS: "2012\n\n2013\n\n2014\n\n2015\n\n2016\n\n2017\n\n2018\n\n2019\n\n2020\n\n2021\n\n2022\n\n2023\n\n2024"
    5825, // T_DATEPICKER_DAY_28: "1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28"
    6579, // T_DATEPICKER_DAY_29: "\n29"
    6583, // T_DATEPICKER_DAY_30: "\n30"
    6587, // T_DATEPICKER_DAY_31: "\n31"
    6520, // T_EASING_EQUATION_LINEAR: "Linear"
    6559, // T_EASING_EQUATION_BACK: "Back"
    6513, // T_EASING_EQUATION_BOUNCE: "Bounce"
    6452, // T_EASING_EQUATION_CIRCULAR: "Circular"
    6547, // T_EASING_EQUATION_CUBIC: "Cubic"
    6489, // T_EASING_EQUATION_ELASTIC: "Elastic"
    6308, // T_EASING_EQUATION_EXPONENTIAL: "Exponential"
    6369, // T_EASING_EQUATION_QUADRATIC: "Quadratic"
    6497, // T_EASING_EQUATION_QUARTIC: "Quartic"
    6505, // T_EASING_EQUATION_QUINTIC: "Quintic"
    6343, // T_EASING_EQUATION_SINUSOIDAL: "Sinusoidal"
    6569, // T_EASING_EQUATION_LINEAR_SHORT: "Lin."
    6559, // T_EASING_EQUATION_BACK_SHORT: "Back"
    6513, // T_EASING_EQUATION_BOUNCE_SHORT: "Bounce"
    6541, // T_EASING_EQUATION_CIRCULAR_SHORT: "Circ."
    6547, // T_EASING_EQUATION_CUBIC_SHORT: "Cubic"
    6489, // T_EASING_EQUATION_ELASTIC_SHORT: "Elastic"
    6564, // T_EASING_EQUATION_EXPONENTIAL_SHORT: "Exp."
    6553, // T_EASING_EQUATION_QUADRATIC_SHORT: "Quad."
    6527, // T_EASING_EQUATION_QUARTIC_SHORT: "Quart."
    6534, // T_EASING_EQUATION_QUINTIC_SHORT: "Quint."
    6574, // T_EASING_EQUATION_SINUSOIDAL_SHORT: "Sin."
    6481, // T_EASING_EQUATION_EASE_IN: "Ease In"
    6461, // T_EASING_EQUATION_EASE_OUT: "Ease Out"
    6296, // T_EASING_EQUATION_EASE_INOUT: "Ease In/Out"
    6479, // T_GRAPH_Y_VALUE: "<>"
    6389, // T_GRAPH_LEGEND_TEXT_00: "Series 1:"
    6399, // T_GRAPH_LEGEND_TEXT_01: "Series 2:"
    6409, // T_GRAPH_LEGEND_TEXT_02: "Series 3:"
    6419, // T_GRAPH_LEGEND_TEXT_03: "Series 4:"
    6429, // T_GRAPH_LEGEND_TEXT_04: "Series 5:"
    6439, // T_GRAPH_LEGEND_TEXT_05: "Series 6:"
    6449  // T_GRAPH_LEGEND_VALUE_TEXT: "<>%"
};
